Setting abstraction level: 9
Setting abstraction level for subterms: 18
Reading specification file
Spec. file is: linux_spec_file
Parsed two: tests/linux/hfc_usb.c, tests/linux/new-hfc_usb.c
Parsed two: tests/linux/idt77252.c, tests/linux/new-idt77252.c
Parsed two: tests/linux/eth1394.c, tests/linux/new-eth1394.c
Reading file pairs
Reading file pair tests/linux/eth1394.c tests/linux/new-eth1394.c
Reading file pair tests/linux/idt77252.c tests/linux/new-idt77252.c
Reading file pair tests/linux/hfc_usb.c tests/linux/new-hfc_usb.c
There are 3 itemsets
With sizes:
[232][368][245]
Finding frequent subterms...done.
frequent items selected:
simple_assi(=)
ident(skb_copy_from_linear_data)
ident(memcpy)
ident(len)
ident(data)
ident(NULL)
funtype(N/H)
expr(N/H)
estmt(NONE)
const_i(0)
aop(N/H)
aop(-)
statem(N/H)
Making changesets
@@ counting : 1
,
,
.
returning singular:
call[ident(memcpy),&expr[ident(hdr_buf)],->expr[ident(skb),ident(data)],sizeof_expr[ident(hdr_buf)]] ==> call[ident(skb_copy_from_linear_data),ident(skb),&expr[ident(hdr_buf)],sizeof_expr[ident(hdr_buf)]]
returning singular:
estmt[call[ident(memcpy),&expr[ident(hdr_buf)],->expr[ident(skb),ident(data)],sizeof_expr[ident(hdr_buf)]]] ==> estmt[call[ident(skb_copy_from_linear_data),ident(skb),&expr[ident(hdr_buf)],sizeof_expr[ident(hdr_buf)]]]
returning singular:
{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(ptask),call[ident(kmem_cache_alloc),ident(packet_task_cache),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(skb),call[ident(skb_share_check),ident(skb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[call[ident(memcpy),&expr[ident(hdr_buf)],->expr[ident(skb),ident(data)],sizeof_expr[ident(hdr_buf)]]],estmt[call[ident(skb_pull),ident(skb),ident(ETH1394_HLEN)]],estmt[assign[simple_assi(=),ident(proto),.expr[ident(hdr_buf),ident(h_proto)]]],estmt[assign[simple_assi(=),ident(dg_size),->expr[ident(skb),ident(len)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(tx_type),ident(ETH1394_GASP)]],estmt[assign[simple_assi(=),ident(dest_node),binary[aop(N/H),ident(LOCAL_BUS),ident(ALL_NODES)]]],estmt[assign[simple_assi(=),ident(max_payload),binary[aop(-),->expr[ident(priv),ident(bc_maxpayload)],ident(ETHER1394_GASP_OVERHEAD)]]],estmt[call[ident(BUG_ON),expr(N/H)]],estmt[assign[simple_assi(=),ident(dgl),->expr[ident(priv),ident(bc_dgl)]]],sel_if[expr(N/H),estmt[expr(N/H)],estmt(NONE)]],{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(node),call[ident(eth1394_find_node_guid),&expr[->expr[ident(priv),ident(ip_node_list)]],call[ident(be64_to_cpu),ident(guid)]]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(node_info),expr(N/H)]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(dest_node),->expr[->expr[->expr[ident(node),ident(ud)],ident(ne)],ident(nodeid)]]],estmt[assign[simple_assi(=),ident(max_payload),->expr[ident(node_info),ident(maxpayload)]]],estmt[call[ident(BUG_ON),expr(N/H)]],estmt[assign[simple_assi(=),ident(dgl),->expr[ident(node_info),ident(dgl)]]],sel_if[expr(N/H),estmt[expr(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(tx_type),ident(ETH1394_WRREQ)]]]],sel_if[expr(N/H),estmt[call[ident(ether1394_arp_to_1394arp),ident(skb),ident(dev)]],estmt(NONE)],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word1)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word2)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word3)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word4)],const_i(0)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(skb)],ident(skb)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(priv)],ident(priv)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(tx_type)],ident(tx_type)]],sel_if[expr(N/H),{}stmt[statem(N/H),estmt[call[ident(spin_lock_irqsave),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[assign[simple_assi(=),ident(addr),->expr[ident(node_info),ident(fifo)]]],estmt[call[ident(spin_unlock_irqrestore),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(addr)],ident(addr)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(dest_node)],ident(dest_node)]]],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(tx_type)],ident(tx_type)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(max_payload)],ident(max_payload)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(outstanding_pkts)],call[ident(ether1394_encapsulate_prep),ident(max_payload),ident(proto),&expr[->expr[ident(ptask),ident(hdr)]],ident(dg_size),ident(dgl)]]],estmt[assign[simple_assi(=),ident(tx_len),call[ident(ether1394_encapsulate),ident(skb),ident(max_payload),&expr[->expr[ident(ptask),ident(hdr)]]]]],estmt[assign[simple_assi(=),->expr[ident(dev),ident(trans_start)],ident(jiffies)]],sel_if[call[ident(ether1394_send_packet),ident(ptask),ident(tx_len)],{}stmt[sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[call[ident(skb_pull),ident(skb),const_i(4)]],estmt[call[ident(ether1394_header),ident(skb),ident(dev),call[ident(ntohs),.expr[ident(hdr_buf),ident(h_proto)]],.expr[ident(hdr_buf),ident(h_dest)],ident(NULL),const_i(0)]],estmt[call[ident(netif_stop_queue),ident(dev)]],estmt[assign[simple_assi(=),->expr[ident(priv),ident(wake_node)],ident(dest_node)]],estmt[call[ident(schedule_work),&expr[->expr[ident(priv),ident(wake)]]]],estmt[call[ident(kmem_cache_free),ident(packet_task_cache),ident(ptask)]],st_return[ident(NETDEV_TX_BUSY)]],estmt(NONE)],st_return[ident(NETDEV_TX_OK)],statem(N/H),sel_if[expr(N/H),estmt[call[ident(dev_kfree_skb),ident(skb)]],estmt(NONE)],estmt[call[ident(spin_lock_irqsave),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[expr(N/H)],estmt[expr(N/H)],estmt[call[ident(spin_unlock_irqrestore),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],st_return[ident(NETDEV_TX_OK)]] ==> {}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(ptask),call[ident(kmem_cache_alloc),ident(packet_task_cache),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(skb),call[ident(skb_share_check),ident(skb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[call[ident(skb_copy_from_linear_data),ident(skb),&expr[ident(hdr_buf)],sizeof_expr[ident(hdr_buf)]]],estmt[call[ident(skb_pull),ident(skb),ident(ETH1394_HLEN)]],estmt[assign[simple_assi(=),ident(proto),.expr[ident(hdr_buf),ident(h_proto)]]],estmt[assign[simple_assi(=),ident(dg_size),->expr[ident(skb),ident(len)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(tx_type),ident(ETH1394_GASP)]],estmt[assign[simple_assi(=),ident(dest_node),binary[aop(N/H),ident(LOCAL_BUS),ident(ALL_NODES)]]],estmt[assign[simple_assi(=),ident(max_payload),binary[aop(-),->expr[ident(priv),ident(bc_maxpayload)],ident(ETHER1394_GASP_OVERHEAD)]]],estmt[call[ident(BUG_ON),expr(N/H)]],estmt[assign[simple_assi(=),ident(dgl),->expr[ident(priv),ident(bc_dgl)]]],sel_if[expr(N/H),estmt[expr(N/H)],estmt(NONE)]],{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(node),call[ident(eth1394_find_node_guid),&expr[->expr[ident(priv),ident(ip_node_list)]],call[ident(be64_to_cpu),ident(guid)]]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(node_info),expr(N/H)]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(dest_node),->expr[->expr[->expr[ident(node),ident(ud)],ident(ne)],ident(nodeid)]]],estmt[assign[simple_assi(=),ident(max_payload),->expr[ident(node_info),ident(maxpayload)]]],estmt[call[ident(BUG_ON),expr(N/H)]],estmt[assign[simple_assi(=),ident(dgl),->expr[ident(node_info),ident(dgl)]]],sel_if[expr(N/H),estmt[expr(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(tx_type),ident(ETH1394_WRREQ)]]]],sel_if[expr(N/H),estmt[call[ident(ether1394_arp_to_1394arp),ident(skb),ident(dev)]],estmt(NONE)],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word1)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word2)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word3)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word4)],const_i(0)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(skb)],ident(skb)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(priv)],ident(priv)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(tx_type)],ident(tx_type)]],sel_if[expr(N/H),{}stmt[statem(N/H),estmt[call[ident(spin_lock_irqsave),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[assign[simple_assi(=),ident(addr),->expr[ident(node_info),ident(fifo)]]],estmt[call[ident(spin_unlock_irqrestore),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(addr)],ident(addr)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(dest_node)],ident(dest_node)]]],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(tx_type)],ident(tx_type)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(max_payload)],ident(max_payload)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(outstanding_pkts)],call[ident(ether1394_encapsulate_prep),ident(max_payload),ident(proto),&expr[->expr[ident(ptask),ident(hdr)]],ident(dg_size),ident(dgl)]]],estmt[assign[simple_assi(=),ident(tx_len),call[ident(ether1394_encapsulate),ident(skb),ident(max_payload),&expr[->expr[ident(ptask),ident(hdr)]]]]],estmt[assign[simple_assi(=),->expr[ident(dev),ident(trans_start)],ident(jiffies)]],sel_if[call[ident(ether1394_send_packet),ident(ptask),ident(tx_len)],{}stmt[sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[call[ident(skb_pull),ident(skb),const_i(4)]],estmt[call[ident(ether1394_header),ident(skb),ident(dev),call[ident(ntohs),.expr[ident(hdr_buf),ident(h_proto)]],.expr[ident(hdr_buf),ident(h_dest)],ident(NULL),const_i(0)]],estmt[call[ident(netif_stop_queue),ident(dev)]],estmt[assign[simple_assi(=),->expr[ident(priv),ident(wake_node)],ident(dest_node)]],estmt[call[ident(schedule_work),&expr[->expr[ident(priv),ident(wake)]]]],estmt[call[ident(kmem_cache_free),ident(packet_task_cache),ident(ptask)]],st_return[ident(NETDEV_TX_BUSY)]],estmt(NONE)],st_return[ident(NETDEV_TX_OK)],statem(N/H),sel_if[expr(N/H),estmt[call[ident(dev_kfree_skb),ident(skb)]],estmt(NONE)],estmt[call[ident(spin_lock_irqsave),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[expr(N/H)],estmt[expr(N/H)],estmt[call[ident(spin_unlock_irqrestore),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],st_return[ident(NETDEV_TX_OK)]]
returning singular:
def[fname(ether1394_tx),funtype(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(ptask),call[ident(kmem_cache_alloc),ident(packet_task_cache),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(skb),call[ident(skb_share_check),ident(skb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[call[ident(memcpy),&expr[ident(hdr_buf)],->expr[ident(skb),ident(data)],sizeof_expr[ident(hdr_buf)]]],estmt[call[ident(skb_pull),ident(skb),ident(ETH1394_HLEN)]],estmt[assign[simple_assi(=),ident(proto),.expr[ident(hdr_buf),ident(h_proto)]]],estmt[assign[simple_assi(=),ident(dg_size),->expr[ident(skb),ident(len)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(tx_type),ident(ETH1394_GASP)]],estmt[assign[simple_assi(=),ident(dest_node),binary[aop(N/H),ident(LOCAL_BUS),ident(ALL_NODES)]]],estmt[assign[simple_assi(=),ident(max_payload),binary[aop(-),->expr[ident(priv),ident(bc_maxpayload)],ident(ETHER1394_GASP_OVERHEAD)]]],estmt[call[ident(BUG_ON),expr(N/H)]],estmt[assign[simple_assi(=),ident(dgl),->expr[ident(priv),ident(bc_dgl)]]],sel_if[expr(N/H),estmt[expr(N/H)],estmt(NONE)]],{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(node),call[ident(eth1394_find_node_guid),&expr[->expr[ident(priv),ident(ip_node_list)]],call[ident(be64_to_cpu),ident(guid)]]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(node_info),expr(N/H)]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(dest_node),->expr[->expr[->expr[ident(node),ident(ud)],ident(ne)],ident(nodeid)]]],estmt[assign[simple_assi(=),ident(max_payload),->expr[ident(node_info),ident(maxpayload)]]],estmt[call[ident(BUG_ON),expr(N/H)]],estmt[assign[simple_assi(=),ident(dgl),->expr[ident(node_info),ident(dgl)]]],sel_if[expr(N/H),estmt[expr(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(tx_type),ident(ETH1394_WRREQ)]]]],sel_if[expr(N/H),estmt[call[ident(ether1394_arp_to_1394arp),ident(skb),ident(dev)]],estmt(NONE)],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word1)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word2)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word3)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word4)],const_i(0)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(skb)],ident(skb)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(priv)],ident(priv)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(tx_type)],ident(tx_type)]],sel_if[expr(N/H),{}stmt[statem(N/H),estmt[call[ident(spin_lock_irqsave),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[assign[simple_assi(=),ident(addr),->expr[ident(node_info),ident(fifo)]]],estmt[call[ident(spin_unlock_irqrestore),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(addr)],ident(addr)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(dest_node)],ident(dest_node)]]],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(tx_type)],ident(tx_type)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(max_payload)],ident(max_payload)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(outstanding_pkts)],call[ident(ether1394_encapsulate_prep),ident(max_payload),ident(proto),&expr[->expr[ident(ptask),ident(hdr)]],ident(dg_size),ident(dgl)]]],estmt[assign[simple_assi(=),ident(tx_len),call[ident(ether1394_encapsulate),ident(skb),ident(max_payload),&expr[->expr[ident(ptask),ident(hdr)]]]]],estmt[assign[simple_assi(=),->expr[ident(dev),ident(trans_start)],ident(jiffies)]],sel_if[call[ident(ether1394_send_packet),ident(ptask),ident(tx_len)],{}stmt[sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[call[ident(skb_pull),ident(skb),const_i(4)]],estmt[call[ident(ether1394_header),ident(skb),ident(dev),call[ident(ntohs),.expr[ident(hdr_buf),ident(h_proto)]],.expr[ident(hdr_buf),ident(h_dest)],ident(NULL),const_i(0)]],estmt[call[ident(netif_stop_queue),ident(dev)]],estmt[assign[simple_assi(=),->expr[ident(priv),ident(wake_node)],ident(dest_node)]],estmt[call[ident(schedule_work),&expr[->expr[ident(priv),ident(wake)]]]],estmt[call[ident(kmem_cache_free),ident(packet_task_cache),ident(ptask)]],st_return[ident(NETDEV_TX_BUSY)]],estmt(NONE)],st_return[ident(NETDEV_TX_OK)],statem(N/H),sel_if[expr(N/H),estmt[call[ident(dev_kfree_skb),ident(skb)]],estmt(NONE)],estmt[call[ident(spin_lock_irqsave),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[expr(N/H)],estmt[expr(N/H)],estmt[call[ident(spin_unlock_irqrestore),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],st_return[ident(NETDEV_TX_OK)]]] ==> def[fname(ether1394_tx),funtype(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(ptask),call[ident(kmem_cache_alloc),ident(packet_task_cache),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(skb),call[ident(skb_share_check),ident(skb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[call[ident(skb_copy_from_linear_data),ident(skb),&expr[ident(hdr_buf)],sizeof_expr[ident(hdr_buf)]]],estmt[call[ident(skb_pull),ident(skb),ident(ETH1394_HLEN)]],estmt[assign[simple_assi(=),ident(proto),.expr[ident(hdr_buf),ident(h_proto)]]],estmt[assign[simple_assi(=),ident(dg_size),->expr[ident(skb),ident(len)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(tx_type),ident(ETH1394_GASP)]],estmt[assign[simple_assi(=),ident(dest_node),binary[aop(N/H),ident(LOCAL_BUS),ident(ALL_NODES)]]],estmt[assign[simple_assi(=),ident(max_payload),binary[aop(-),->expr[ident(priv),ident(bc_maxpayload)],ident(ETHER1394_GASP_OVERHEAD)]]],estmt[call[ident(BUG_ON),expr(N/H)]],estmt[assign[simple_assi(=),ident(dgl),->expr[ident(priv),ident(bc_dgl)]]],sel_if[expr(N/H),estmt[expr(N/H)],estmt(NONE)]],{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(node),call[ident(eth1394_find_node_guid),&expr[->expr[ident(priv),ident(ip_node_list)]],call[ident(be64_to_cpu),ident(guid)]]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(node_info),expr(N/H)]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(dest_node),->expr[->expr[->expr[ident(node),ident(ud)],ident(ne)],ident(nodeid)]]],estmt[assign[simple_assi(=),ident(max_payload),->expr[ident(node_info),ident(maxpayload)]]],estmt[call[ident(BUG_ON),expr(N/H)]],estmt[assign[simple_assi(=),ident(dgl),->expr[ident(node_info),ident(dgl)]]],sel_if[expr(N/H),estmt[expr(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(tx_type),ident(ETH1394_WRREQ)]]]],sel_if[expr(N/H),estmt[call[ident(ether1394_arp_to_1394arp),ident(skb),ident(dev)]],estmt(NONE)],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word1)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word2)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word3)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word4)],const_i(0)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(skb)],ident(skb)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(priv)],ident(priv)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(tx_type)],ident(tx_type)]],sel_if[expr(N/H),{}stmt[statem(N/H),estmt[call[ident(spin_lock_irqsave),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[assign[simple_assi(=),ident(addr),->expr[ident(node_info),ident(fifo)]]],estmt[call[ident(spin_unlock_irqrestore),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(addr)],ident(addr)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(dest_node)],ident(dest_node)]]],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(tx_type)],ident(tx_type)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(max_payload)],ident(max_payload)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(outstanding_pkts)],call[ident(ether1394_encapsulate_prep),ident(max_payload),ident(proto),&expr[->expr[ident(ptask),ident(hdr)]],ident(dg_size),ident(dgl)]]],estmt[assign[simple_assi(=),ident(tx_len),call[ident(ether1394_encapsulate),ident(skb),ident(max_payload),&expr[->expr[ident(ptask),ident(hdr)]]]]],estmt[assign[simple_assi(=),->expr[ident(dev),ident(trans_start)],ident(jiffies)]],sel_if[call[ident(ether1394_send_packet),ident(ptask),ident(tx_len)],{}stmt[sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[call[ident(skb_pull),ident(skb),const_i(4)]],estmt[call[ident(ether1394_header),ident(skb),ident(dev),call[ident(ntohs),.expr[ident(hdr_buf),ident(h_proto)]],.expr[ident(hdr_buf),ident(h_dest)],ident(NULL),const_i(0)]],estmt[call[ident(netif_stop_queue),ident(dev)]],estmt[assign[simple_assi(=),->expr[ident(priv),ident(wake_node)],ident(dest_node)]],estmt[call[ident(schedule_work),&expr[->expr[ident(priv),ident(wake)]]]],estmt[call[ident(kmem_cache_free),ident(packet_task_cache),ident(ptask)]],st_return[ident(NETDEV_TX_BUSY)]],estmt(NONE)],st_return[ident(NETDEV_TX_OK)],statem(N/H),sel_if[expr(N/H),estmt[call[ident(dev_kfree_skb),ident(skb)]],estmt(NONE)],estmt[call[ident(spin_lock_irqsave),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[expr(N/H)],estmt[expr(N/H)],estmt[call[ident(spin_unlock_irqrestore),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],st_return[ident(NETDEV_TX_OK)]]]
returning singular:
prg2[def[fname(ether1394_tx),funtype(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(ptask),call[ident(kmem_cache_alloc),ident(packet_task_cache),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(skb),call[ident(skb_share_check),ident(skb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[call[ident(memcpy),&expr[ident(hdr_buf)],->expr[ident(skb),ident(data)],sizeof_expr[ident(hdr_buf)]]],estmt[call[ident(skb_pull),ident(skb),ident(ETH1394_HLEN)]],estmt[assign[simple_assi(=),ident(proto),.expr[ident(hdr_buf),ident(h_proto)]]],estmt[assign[simple_assi(=),ident(dg_size),->expr[ident(skb),ident(len)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(tx_type),ident(ETH1394_GASP)]],estmt[assign[simple_assi(=),ident(dest_node),binary[aop(N/H),ident(LOCAL_BUS),ident(ALL_NODES)]]],estmt[assign[simple_assi(=),ident(max_payload),binary[aop(-),->expr[ident(priv),ident(bc_maxpayload)],ident(ETHER1394_GASP_OVERHEAD)]]],estmt[call[ident(BUG_ON),expr(N/H)]],estmt[assign[simple_assi(=),ident(dgl),->expr[ident(priv),ident(bc_dgl)]]],sel_if[expr(N/H),estmt[expr(N/H)],estmt(NONE)]],{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(node),call[ident(eth1394_find_node_guid),&expr[->expr[ident(priv),ident(ip_node_list)]],call[ident(be64_to_cpu),ident(guid)]]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(node_info),expr(N/H)]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(dest_node),->expr[->expr[->expr[ident(node),ident(ud)],ident(ne)],ident(nodeid)]]],estmt[assign[simple_assi(=),ident(max_payload),->expr[ident(node_info),ident(maxpayload)]]],estmt[call[ident(BUG_ON),expr(N/H)]],estmt[assign[simple_assi(=),ident(dgl),->expr[ident(node_info),ident(dgl)]]],sel_if[expr(N/H),estmt[expr(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(tx_type),ident(ETH1394_WRREQ)]]]],sel_if[expr(N/H),estmt[call[ident(ether1394_arp_to_1394arp),ident(skb),ident(dev)]],estmt(NONE)],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word1)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word2)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word3)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word4)],const_i(0)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(skb)],ident(skb)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(priv)],ident(priv)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(tx_type)],ident(tx_type)]],sel_if[expr(N/H),{}stmt[statem(N/H),estmt[call[ident(spin_lock_irqsave),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[assign[simple_assi(=),ident(addr),->expr[ident(node_info),ident(fifo)]]],estmt[call[ident(spin_unlock_irqrestore),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(addr)],ident(addr)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(dest_node)],ident(dest_node)]]],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(tx_type)],ident(tx_type)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(max_payload)],ident(max_payload)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(outstanding_pkts)],call[ident(ether1394_encapsulate_prep),ident(max_payload),ident(proto),&expr[->expr[ident(ptask),ident(hdr)]],ident(dg_size),ident(dgl)]]],estmt[assign[simple_assi(=),ident(tx_len),call[ident(ether1394_encapsulate),ident(skb),ident(max_payload),&expr[->expr[ident(ptask),ident(hdr)]]]]],estmt[assign[simple_assi(=),->expr[ident(dev),ident(trans_start)],ident(jiffies)]],sel_if[call[ident(ether1394_send_packet),ident(ptask),ident(tx_len)],{}stmt[sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[call[ident(skb_pull),ident(skb),const_i(4)]],estmt[call[ident(ether1394_header),ident(skb),ident(dev),call[ident(ntohs),.expr[ident(hdr_buf),ident(h_proto)]],.expr[ident(hdr_buf),ident(h_dest)],ident(NULL),const_i(0)]],estmt[call[ident(netif_stop_queue),ident(dev)]],estmt[assign[simple_assi(=),->expr[ident(priv),ident(wake_node)],ident(dest_node)]],estmt[call[ident(schedule_work),&expr[->expr[ident(priv),ident(wake)]]]],estmt[call[ident(kmem_cache_free),ident(packet_task_cache),ident(ptask)]],st_return[ident(NETDEV_TX_BUSY)]],estmt(NONE)],st_return[ident(NETDEV_TX_OK)],statem(N/H),sel_if[expr(N/H),estmt[call[ident(dev_kfree_skb),ident(skb)]],estmt(NONE)],estmt[call[ident(spin_lock_irqsave),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[expr(N/H)],estmt[expr(N/H)],estmt[call[ident(spin_unlock_irqrestore),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],st_return[ident(NETDEV_TX_OK)]]]] ==> prg2[def[fname(ether1394_tx),funtype(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(ptask),call[ident(kmem_cache_alloc),ident(packet_task_cache),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(skb),call[ident(skb_share_check),ident(skb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[call[ident(skb_copy_from_linear_data),ident(skb),&expr[ident(hdr_buf)],sizeof_expr[ident(hdr_buf)]]],estmt[call[ident(skb_pull),ident(skb),ident(ETH1394_HLEN)]],estmt[assign[simple_assi(=),ident(proto),.expr[ident(hdr_buf),ident(h_proto)]]],estmt[assign[simple_assi(=),ident(dg_size),->expr[ident(skb),ident(len)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(tx_type),ident(ETH1394_GASP)]],estmt[assign[simple_assi(=),ident(dest_node),binary[aop(N/H),ident(LOCAL_BUS),ident(ALL_NODES)]]],estmt[assign[simple_assi(=),ident(max_payload),binary[aop(-),->expr[ident(priv),ident(bc_maxpayload)],ident(ETHER1394_GASP_OVERHEAD)]]],estmt[call[ident(BUG_ON),expr(N/H)]],estmt[assign[simple_assi(=),ident(dgl),->expr[ident(priv),ident(bc_dgl)]]],sel_if[expr(N/H),estmt[expr(N/H)],estmt(NONE)]],{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(node),call[ident(eth1394_find_node_guid),&expr[->expr[ident(priv),ident(ip_node_list)]],call[ident(be64_to_cpu),ident(guid)]]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(node_info),expr(N/H)]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(dest_node),->expr[->expr[->expr[ident(node),ident(ud)],ident(ne)],ident(nodeid)]]],estmt[assign[simple_assi(=),ident(max_payload),->expr[ident(node_info),ident(maxpayload)]]],estmt[call[ident(BUG_ON),expr(N/H)]],estmt[assign[simple_assi(=),ident(dgl),->expr[ident(node_info),ident(dgl)]]],sel_if[expr(N/H),estmt[expr(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(tx_type),ident(ETH1394_WRREQ)]]]],sel_if[expr(N/H),estmt[call[ident(ether1394_arp_to_1394arp),ident(skb),ident(dev)]],estmt(NONE)],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word1)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word2)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word3)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word4)],const_i(0)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(skb)],ident(skb)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(priv)],ident(priv)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(tx_type)],ident(tx_type)]],sel_if[expr(N/H),{}stmt[statem(N/H),estmt[call[ident(spin_lock_irqsave),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[assign[simple_assi(=),ident(addr),->expr[ident(node_info),ident(fifo)]]],estmt[call[ident(spin_unlock_irqrestore),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(addr)],ident(addr)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(dest_node)],ident(dest_node)]]],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(tx_type)],ident(tx_type)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(max_payload)],ident(max_payload)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(outstanding_pkts)],call[ident(ether1394_encapsulate_prep),ident(max_payload),ident(proto),&expr[->expr[ident(ptask),ident(hdr)]],ident(dg_size),ident(dgl)]]],estmt[assign[simple_assi(=),ident(tx_len),call[ident(ether1394_encapsulate),ident(skb),ident(max_payload),&expr[->expr[ident(ptask),ident(hdr)]]]]],estmt[assign[simple_assi(=),->expr[ident(dev),ident(trans_start)],ident(jiffies)]],sel_if[call[ident(ether1394_send_packet),ident(ptask),ident(tx_len)],{}stmt[sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[call[ident(skb_pull),ident(skb),const_i(4)]],estmt[call[ident(ether1394_header),ident(skb),ident(dev),call[ident(ntohs),.expr[ident(hdr_buf),ident(h_proto)]],.expr[ident(hdr_buf),ident(h_dest)],ident(NULL),const_i(0)]],estmt[call[ident(netif_stop_queue),ident(dev)]],estmt[assign[simple_assi(=),->expr[ident(priv),ident(wake_node)],ident(dest_node)]],estmt[call[ident(schedule_work),&expr[->expr[ident(priv),ident(wake)]]]],estmt[call[ident(kmem_cache_free),ident(packet_task_cache),ident(ptask)]],st_return[ident(NETDEV_TX_BUSY)]],estmt(NONE)],st_return[ident(NETDEV_TX_OK)],statem(N/H),sel_if[expr(N/H),estmt[call[ident(dev_kfree_skb),ident(skb)]],estmt(NONE)],estmt[call[ident(spin_lock_irqsave),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[expr(N/H)],estmt[expr(N/H)],estmt[call[ident(spin_unlock_irqrestore),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],st_return[ident(NETDEV_TX_OK)]]]]
unabs solutions
[[
call[ident(memcpy),&expr[ident(hdr_buf)],->expr[ident(skb),ident(data)],sizeof_expr[ident(hdr_buf)]] ==> call[ident(skb_copy_from_linear_data),ident(skb),&expr[ident(hdr_buf)],sizeof_expr[ident(hdr_buf)]]
	¶
]]
[[
estmt[call[ident(memcpy),&expr[ident(hdr_buf)],->expr[ident(skb),ident(data)],sizeof_expr[ident(hdr_buf)]]] ==> estmt[call[ident(skb_copy_from_linear_data),ident(skb),&expr[ident(hdr_buf)],sizeof_expr[ident(hdr_buf)]]]
	¶
]]
[[
{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(ptask),call[ident(kmem_cache_alloc),ident(packet_task_cache),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(skb),call[ident(skb_share_check),ident(skb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[call[ident(memcpy),&expr[ident(hdr_buf)],->expr[ident(skb),ident(data)],sizeof_expr[ident(hdr_buf)]]],estmt[call[ident(skb_pull),ident(skb),ident(ETH1394_HLEN)]],estmt[assign[simple_assi(=),ident(proto),.expr[ident(hdr_buf),ident(h_proto)]]],estmt[assign[simple_assi(=),ident(dg_size),->expr[ident(skb),ident(len)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(tx_type),ident(ETH1394_GASP)]],estmt[assign[simple_assi(=),ident(dest_node),binary[aop(N/H),ident(LOCAL_BUS),ident(ALL_NODES)]]],estmt[assign[simple_assi(=),ident(max_payload),binary[aop(-),->expr[ident(priv),ident(bc_maxpayload)],ident(ETHER1394_GASP_OVERHEAD)]]],estmt[call[ident(BUG_ON),expr(N/H)]],estmt[assign[simple_assi(=),ident(dgl),->expr[ident(priv),ident(bc_dgl)]]],sel_if[expr(N/H),estmt[expr(N/H)],estmt(NONE)]],{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(node),call[ident(eth1394_find_node_guid),&expr[->expr[ident(priv),ident(ip_node_list)]],call[ident(be64_to_cpu),ident(guid)]]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(node_info),expr(N/H)]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(dest_node),->expr[->expr[->expr[ident(node),ident(ud)],ident(ne)],ident(nodeid)]]],estmt[assign[simple_assi(=),ident(max_payload),->expr[ident(node_info),ident(maxpayload)]]],estmt[call[ident(BUG_ON),expr(N/H)]],estmt[assign[simple_assi(=),ident(dgl),->expr[ident(node_info),ident(dgl)]]],sel_if[expr(N/H),estmt[expr(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(tx_type),ident(ETH1394_WRREQ)]]]],sel_if[expr(N/H),estmt[call[ident(ether1394_arp_to_1394arp),ident(skb),ident(dev)]],estmt(NONE)],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word1)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word2)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word3)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word4)],const_i(0)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(skb)],ident(skb)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(priv)],ident(priv)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(tx_type)],ident(tx_type)]],sel_if[expr(N/H),{}stmt[statem(N/H),estmt[call[ident(spin_lock_irqsave),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[assign[simple_assi(=),ident(addr),->expr[ident(node_info),ident(fifo)]]],estmt[call[ident(spin_unlock_irqrestore),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(addr)],ident(addr)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(dest_node)],ident(dest_node)]]],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(tx_type)],ident(tx_type)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(max_payload)],ident(max_payload)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(outstanding_pkts)],call[ident(ether1394_encapsulate_prep),ident(max_payload),ident(proto),&expr[->expr[ident(ptask),ident(hdr)]],ident(dg_size),ident(dgl)]]],estmt[assign[simple_assi(=),ident(tx_len),call[ident(ether1394_encapsulate),ident(skb),ident(max_payload),&expr[->expr[ident(ptask),ident(hdr)]]]]],estmt[assign[simple_assi(=),->expr[ident(dev),ident(trans_start)],ident(jiffies)]],sel_if[call[ident(ether1394_send_packet),ident(ptask),ident(tx_len)],{}stmt[sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[call[ident(skb_pull),ident(skb),const_i(4)]],estmt[call[ident(ether1394_header),ident(skb),ident(dev),call[ident(ntohs),.expr[ident(hdr_buf),ident(h_proto)]],.expr[ident(hdr_buf),ident(h_dest)],ident(NULL),const_i(0)]],estmt[call[ident(netif_stop_queue),ident(dev)]],estmt[assign[simple_assi(=),->expr[ident(priv),ident(wake_node)],ident(dest_node)]],estmt[call[ident(schedule_work),&expr[->expr[ident(priv),ident(wake)]]]],estmt[call[ident(kmem_cache_free),ident(packet_task_cache),ident(ptask)]],st_return[ident(NETDEV_TX_BUSY)]],estmt(NONE)],st_return[ident(NETDEV_TX_OK)],statem(N/H),sel_if[expr(N/H),estmt[call[ident(dev_kfree_skb),ident(skb)]],estmt(NONE)],estmt[call[ident(spin_lock_irqsave),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[expr(N/H)],estmt[expr(N/H)],estmt[call[ident(spin_unlock_irqrestore),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],st_return[ident(NETDEV_TX_OK)]] ==> {}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(ptask),call[ident(kmem_cache_alloc),ident(packet_task_cache),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(skb),call[ident(skb_share_check),ident(skb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[call[ident(skb_copy_from_linear_data),ident(skb),&expr[ident(hdr_buf)],sizeof_expr[ident(hdr_buf)]]],estmt[call[ident(skb_pull),ident(skb),ident(ETH1394_HLEN)]],estmt[assign[simple_assi(=),ident(proto),.expr[ident(hdr_buf),ident(h_proto)]]],estmt[assign[simple_assi(=),ident(dg_size),->expr[ident(skb),ident(len)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(tx_type),ident(ETH1394_GASP)]],estmt[assign[simple_assi(=),ident(dest_node),binary[aop(N/H),ident(LOCAL_BUS),ident(ALL_NODES)]]],estmt[assign[simple_assi(=),ident(max_payload),binary[aop(-),->expr[ident(priv),ident(bc_maxpayload)],ident(ETHER1394_GASP_OVERHEAD)]]],estmt[call[ident(BUG_ON),expr(N/H)]],estmt[assign[simple_assi(=),ident(dgl),->expr[ident(priv),ident(bc_dgl)]]],sel_if[expr(N/H),estmt[expr(N/H)],estmt(NONE)]],{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(node),call[ident(eth1394_find_node_guid),&expr[->expr[ident(priv),ident(ip_node_list)]],call[ident(be64_to_cpu),ident(guid)]]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(node_info),expr(N/H)]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(dest_node),->expr[->expr[->expr[ident(node),ident(ud)],ident(ne)],ident(nodeid)]]],estmt[assign[simple_assi(=),ident(max_payload),->expr[ident(node_info),ident(maxpayload)]]],estmt[call[ident(BUG_ON),expr(N/H)]],estmt[assign[simple_assi(=),ident(dgl),->expr[ident(node_info),ident(dgl)]]],sel_if[expr(N/H),estmt[expr(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(tx_type),ident(ETH1394_WRREQ)]]]],sel_if[expr(N/H),estmt[call[ident(ether1394_arp_to_1394arp),ident(skb),ident(dev)]],estmt(NONE)],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word1)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word2)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word3)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word4)],const_i(0)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(skb)],ident(skb)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(priv)],ident(priv)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(tx_type)],ident(tx_type)]],sel_if[expr(N/H),{}stmt[statem(N/H),estmt[call[ident(spin_lock_irqsave),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[assign[simple_assi(=),ident(addr),->expr[ident(node_info),ident(fifo)]]],estmt[call[ident(spin_unlock_irqrestore),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(addr)],ident(addr)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(dest_node)],ident(dest_node)]]],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(tx_type)],ident(tx_type)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(max_payload)],ident(max_payload)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(outstanding_pkts)],call[ident(ether1394_encapsulate_prep),ident(max_payload),ident(proto),&expr[->expr[ident(ptask),ident(hdr)]],ident(dg_size),ident(dgl)]]],estmt[assign[simple_assi(=),ident(tx_len),call[ident(ether1394_encapsulate),ident(skb),ident(max_payload),&expr[->expr[ident(ptask),ident(hdr)]]]]],estmt[assign[simple_assi(=),->expr[ident(dev),ident(trans_start)],ident(jiffies)]],sel_if[call[ident(ether1394_send_packet),ident(ptask),ident(tx_len)],{}stmt[sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[call[ident(skb_pull),ident(skb),const_i(4)]],estmt[call[ident(ether1394_header),ident(skb),ident(dev),call[ident(ntohs),.expr[ident(hdr_buf),ident(h_proto)]],.expr[ident(hdr_buf),ident(h_dest)],ident(NULL),const_i(0)]],estmt[call[ident(netif_stop_queue),ident(dev)]],estmt[assign[simple_assi(=),->expr[ident(priv),ident(wake_node)],ident(dest_node)]],estmt[call[ident(schedule_work),&expr[->expr[ident(priv),ident(wake)]]]],estmt[call[ident(kmem_cache_free),ident(packet_task_cache),ident(ptask)]],st_return[ident(NETDEV_TX_BUSY)]],estmt(NONE)],st_return[ident(NETDEV_TX_OK)],statem(N/H),sel_if[expr(N/H),estmt[call[ident(dev_kfree_skb),ident(skb)]],estmt(NONE)],estmt[call[ident(spin_lock_irqsave),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[expr(N/H)],estmt[expr(N/H)],estmt[call[ident(spin_unlock_irqrestore),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],st_return[ident(NETDEV_TX_OK)]]
	¶
]]
[[
def[fname(ether1394_tx),funtype(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(ptask),call[ident(kmem_cache_alloc),ident(packet_task_cache),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(skb),call[ident(skb_share_check),ident(skb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[call[ident(memcpy),&expr[ident(hdr_buf)],->expr[ident(skb),ident(data)],sizeof_expr[ident(hdr_buf)]]],estmt[call[ident(skb_pull),ident(skb),ident(ETH1394_HLEN)]],estmt[assign[simple_assi(=),ident(proto),.expr[ident(hdr_buf),ident(h_proto)]]],estmt[assign[simple_assi(=),ident(dg_size),->expr[ident(skb),ident(len)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(tx_type),ident(ETH1394_GASP)]],estmt[assign[simple_assi(=),ident(dest_node),binary[aop(N/H),ident(LOCAL_BUS),ident(ALL_NODES)]]],estmt[assign[simple_assi(=),ident(max_payload),binary[aop(-),->expr[ident(priv),ident(bc_maxpayload)],ident(ETHER1394_GASP_OVERHEAD)]]],estmt[call[ident(BUG_ON),expr(N/H)]],estmt[assign[simple_assi(=),ident(dgl),->expr[ident(priv),ident(bc_dgl)]]],sel_if[expr(N/H),estmt[expr(N/H)],estmt(NONE)]],{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(node),call[ident(eth1394_find_node_guid),&expr[->expr[ident(priv),ident(ip_node_list)]],call[ident(be64_to_cpu),ident(guid)]]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(node_info),expr(N/H)]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(dest_node),->expr[->expr[->expr[ident(node),ident(ud)],ident(ne)],ident(nodeid)]]],estmt[assign[simple_assi(=),ident(max_payload),->expr[ident(node_info),ident(maxpayload)]]],estmt[call[ident(BUG_ON),expr(N/H)]],estmt[assign[simple_assi(=),ident(dgl),->expr[ident(node_info),ident(dgl)]]],sel_if[expr(N/H),estmt[expr(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(tx_type),ident(ETH1394_WRREQ)]]]],sel_if[expr(N/H),estmt[call[ident(ether1394_arp_to_1394arp),ident(skb),ident(dev)]],estmt(NONE)],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word1)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word2)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word3)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word4)],const_i(0)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(skb)],ident(skb)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(priv)],ident(priv)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(tx_type)],ident(tx_type)]],sel_if[expr(N/H),{}stmt[statem(N/H),estmt[call[ident(spin_lock_irqsave),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[assign[simple_assi(=),ident(addr),->expr[ident(node_info),ident(fifo)]]],estmt[call[ident(spin_unlock_irqrestore),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(addr)],ident(addr)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(dest_node)],ident(dest_node)]]],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(tx_type)],ident(tx_type)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(max_payload)],ident(max_payload)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(outstanding_pkts)],call[ident(ether1394_encapsulate_prep),ident(max_payload),ident(proto),&expr[->expr[ident(ptask),ident(hdr)]],ident(dg_size),ident(dgl)]]],estmt[assign[simple_assi(=),ident(tx_len),call[ident(ether1394_encapsulate),ident(skb),ident(max_payload),&expr[->expr[ident(ptask),ident(hdr)]]]]],estmt[assign[simple_assi(=),->expr[ident(dev),ident(trans_start)],ident(jiffies)]],sel_if[call[ident(ether1394_send_packet),ident(ptask),ident(tx_len)],{}stmt[sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[call[ident(skb_pull),ident(skb),const_i(4)]],estmt[call[ident(ether1394_header),ident(skb),ident(dev),call[ident(ntohs),.expr[ident(hdr_buf),ident(h_proto)]],.expr[ident(hdr_buf),ident(h_dest)],ident(NULL),const_i(0)]],estmt[call[ident(netif_stop_queue),ident(dev)]],estmt[assign[simple_assi(=),->expr[ident(priv),ident(wake_node)],ident(dest_node)]],estmt[call[ident(schedule_work),&expr[->expr[ident(priv),ident(wake)]]]],estmt[call[ident(kmem_cache_free),ident(packet_task_cache),ident(ptask)]],st_return[ident(NETDEV_TX_BUSY)]],estmt(NONE)],st_return[ident(NETDEV_TX_OK)],statem(N/H),sel_if[expr(N/H),estmt[call[ident(dev_kfree_skb),ident(skb)]],estmt(NONE)],estmt[call[ident(spin_lock_irqsave),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[expr(N/H)],estmt[expr(N/H)],estmt[call[ident(spin_unlock_irqrestore),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],st_return[ident(NETDEV_TX_OK)]]] ==> def[fname(ether1394_tx),funtype(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(ptask),call[ident(kmem_cache_alloc),ident(packet_task_cache),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(skb),call[ident(skb_share_check),ident(skb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[call[ident(skb_copy_from_linear_data),ident(skb),&expr[ident(hdr_buf)],sizeof_expr[ident(hdr_buf)]]],estmt[call[ident(skb_pull),ident(skb),ident(ETH1394_HLEN)]],estmt[assign[simple_assi(=),ident(proto),.expr[ident(hdr_buf),ident(h_proto)]]],estmt[assign[simple_assi(=),ident(dg_size),->expr[ident(skb),ident(len)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(tx_type),ident(ETH1394_GASP)]],estmt[assign[simple_assi(=),ident(dest_node),binary[aop(N/H),ident(LOCAL_BUS),ident(ALL_NODES)]]],estmt[assign[simple_assi(=),ident(max_payload),binary[aop(-),->expr[ident(priv),ident(bc_maxpayload)],ident(ETHER1394_GASP_OVERHEAD)]]],estmt[call[ident(BUG_ON),expr(N/H)]],estmt[assign[simple_assi(=),ident(dgl),->expr[ident(priv),ident(bc_dgl)]]],sel_if[expr(N/H),estmt[expr(N/H)],estmt(NONE)]],{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(node),call[ident(eth1394_find_node_guid),&expr[->expr[ident(priv),ident(ip_node_list)]],call[ident(be64_to_cpu),ident(guid)]]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(node_info),expr(N/H)]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(dest_node),->expr[->expr[->expr[ident(node),ident(ud)],ident(ne)],ident(nodeid)]]],estmt[assign[simple_assi(=),ident(max_payload),->expr[ident(node_info),ident(maxpayload)]]],estmt[call[ident(BUG_ON),expr(N/H)]],estmt[assign[simple_assi(=),ident(dgl),->expr[ident(node_info),ident(dgl)]]],sel_if[expr(N/H),estmt[expr(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(tx_type),ident(ETH1394_WRREQ)]]]],sel_if[expr(N/H),estmt[call[ident(ether1394_arp_to_1394arp),ident(skb),ident(dev)]],estmt(NONE)],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word1)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word2)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word3)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word4)],const_i(0)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(skb)],ident(skb)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(priv)],ident(priv)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(tx_type)],ident(tx_type)]],sel_if[expr(N/H),{}stmt[statem(N/H),estmt[call[ident(spin_lock_irqsave),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[assign[simple_assi(=),ident(addr),->expr[ident(node_info),ident(fifo)]]],estmt[call[ident(spin_unlock_irqrestore),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(addr)],ident(addr)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(dest_node)],ident(dest_node)]]],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(tx_type)],ident(tx_type)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(max_payload)],ident(max_payload)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(outstanding_pkts)],call[ident(ether1394_encapsulate_prep),ident(max_payload),ident(proto),&expr[->expr[ident(ptask),ident(hdr)]],ident(dg_size),ident(dgl)]]],estmt[assign[simple_assi(=),ident(tx_len),call[ident(ether1394_encapsulate),ident(skb),ident(max_payload),&expr[->expr[ident(ptask),ident(hdr)]]]]],estmt[assign[simple_assi(=),->expr[ident(dev),ident(trans_start)],ident(jiffies)]],sel_if[call[ident(ether1394_send_packet),ident(ptask),ident(tx_len)],{}stmt[sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[call[ident(skb_pull),ident(skb),const_i(4)]],estmt[call[ident(ether1394_header),ident(skb),ident(dev),call[ident(ntohs),.expr[ident(hdr_buf),ident(h_proto)]],.expr[ident(hdr_buf),ident(h_dest)],ident(NULL),const_i(0)]],estmt[call[ident(netif_stop_queue),ident(dev)]],estmt[assign[simple_assi(=),->expr[ident(priv),ident(wake_node)],ident(dest_node)]],estmt[call[ident(schedule_work),&expr[->expr[ident(priv),ident(wake)]]]],estmt[call[ident(kmem_cache_free),ident(packet_task_cache),ident(ptask)]],st_return[ident(NETDEV_TX_BUSY)]],estmt(NONE)],st_return[ident(NETDEV_TX_OK)],statem(N/H),sel_if[expr(N/H),estmt[call[ident(dev_kfree_skb),ident(skb)]],estmt(NONE)],estmt[call[ident(spin_lock_irqsave),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[expr(N/H)],estmt[expr(N/H)],estmt[call[ident(spin_unlock_irqrestore),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],st_return[ident(NETDEV_TX_OK)]]]
	¶
]]
[[
prg2[def[fname(ether1394_tx),funtype(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(ptask),call[ident(kmem_cache_alloc),ident(packet_task_cache),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(skb),call[ident(skb_share_check),ident(skb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[call[ident(memcpy),&expr[ident(hdr_buf)],->expr[ident(skb),ident(data)],sizeof_expr[ident(hdr_buf)]]],estmt[call[ident(skb_pull),ident(skb),ident(ETH1394_HLEN)]],estmt[assign[simple_assi(=),ident(proto),.expr[ident(hdr_buf),ident(h_proto)]]],estmt[assign[simple_assi(=),ident(dg_size),->expr[ident(skb),ident(len)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(tx_type),ident(ETH1394_GASP)]],estmt[assign[simple_assi(=),ident(dest_node),binary[aop(N/H),ident(LOCAL_BUS),ident(ALL_NODES)]]],estmt[assign[simple_assi(=),ident(max_payload),binary[aop(-),->expr[ident(priv),ident(bc_maxpayload)],ident(ETHER1394_GASP_OVERHEAD)]]],estmt[call[ident(BUG_ON),expr(N/H)]],estmt[assign[simple_assi(=),ident(dgl),->expr[ident(priv),ident(bc_dgl)]]],sel_if[expr(N/H),estmt[expr(N/H)],estmt(NONE)]],{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(node),call[ident(eth1394_find_node_guid),&expr[->expr[ident(priv),ident(ip_node_list)]],call[ident(be64_to_cpu),ident(guid)]]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(node_info),expr(N/H)]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(dest_node),->expr[->expr[->expr[ident(node),ident(ud)],ident(ne)],ident(nodeid)]]],estmt[assign[simple_assi(=),ident(max_payload),->expr[ident(node_info),ident(maxpayload)]]],estmt[call[ident(BUG_ON),expr(N/H)]],estmt[assign[simple_assi(=),ident(dgl),->expr[ident(node_info),ident(dgl)]]],sel_if[expr(N/H),estmt[expr(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(tx_type),ident(ETH1394_WRREQ)]]]],sel_if[expr(N/H),estmt[call[ident(ether1394_arp_to_1394arp),ident(skb),ident(dev)]],estmt(NONE)],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word1)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word2)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word3)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word4)],const_i(0)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(skb)],ident(skb)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(priv)],ident(priv)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(tx_type)],ident(tx_type)]],sel_if[expr(N/H),{}stmt[statem(N/H),estmt[call[ident(spin_lock_irqsave),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[assign[simple_assi(=),ident(addr),->expr[ident(node_info),ident(fifo)]]],estmt[call[ident(spin_unlock_irqrestore),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(addr)],ident(addr)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(dest_node)],ident(dest_node)]]],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(tx_type)],ident(tx_type)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(max_payload)],ident(max_payload)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(outstanding_pkts)],call[ident(ether1394_encapsulate_prep),ident(max_payload),ident(proto),&expr[->expr[ident(ptask),ident(hdr)]],ident(dg_size),ident(dgl)]]],estmt[assign[simple_assi(=),ident(tx_len),call[ident(ether1394_encapsulate),ident(skb),ident(max_payload),&expr[->expr[ident(ptask),ident(hdr)]]]]],estmt[assign[simple_assi(=),->expr[ident(dev),ident(trans_start)],ident(jiffies)]],sel_if[call[ident(ether1394_send_packet),ident(ptask),ident(tx_len)],{}stmt[sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[call[ident(skb_pull),ident(skb),const_i(4)]],estmt[call[ident(ether1394_header),ident(skb),ident(dev),call[ident(ntohs),.expr[ident(hdr_buf),ident(h_proto)]],.expr[ident(hdr_buf),ident(h_dest)],ident(NULL),const_i(0)]],estmt[call[ident(netif_stop_queue),ident(dev)]],estmt[assign[simple_assi(=),->expr[ident(priv),ident(wake_node)],ident(dest_node)]],estmt[call[ident(schedule_work),&expr[->expr[ident(priv),ident(wake)]]]],estmt[call[ident(kmem_cache_free),ident(packet_task_cache),ident(ptask)]],st_return[ident(NETDEV_TX_BUSY)]],estmt(NONE)],st_return[ident(NETDEV_TX_OK)],statem(N/H),sel_if[expr(N/H),estmt[call[ident(dev_kfree_skb),ident(skb)]],estmt(NONE)],estmt[call[ident(spin_lock_irqsave),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[expr(N/H)],estmt[expr(N/H)],estmt[call[ident(spin_unlock_irqrestore),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],st_return[ident(NETDEV_TX_OK)]]]] ==> prg2[def[fname(ether1394_tx),funtype(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(ptask),call[ident(kmem_cache_alloc),ident(packet_task_cache),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(skb),call[ident(skb_share_check),ident(skb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[call[ident(skb_copy_from_linear_data),ident(skb),&expr[ident(hdr_buf)],sizeof_expr[ident(hdr_buf)]]],estmt[call[ident(skb_pull),ident(skb),ident(ETH1394_HLEN)]],estmt[assign[simple_assi(=),ident(proto),.expr[ident(hdr_buf),ident(h_proto)]]],estmt[assign[simple_assi(=),ident(dg_size),->expr[ident(skb),ident(len)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(tx_type),ident(ETH1394_GASP)]],estmt[assign[simple_assi(=),ident(dest_node),binary[aop(N/H),ident(LOCAL_BUS),ident(ALL_NODES)]]],estmt[assign[simple_assi(=),ident(max_payload),binary[aop(-),->expr[ident(priv),ident(bc_maxpayload)],ident(ETHER1394_GASP_OVERHEAD)]]],estmt[call[ident(BUG_ON),expr(N/H)]],estmt[assign[simple_assi(=),ident(dgl),->expr[ident(priv),ident(bc_dgl)]]],sel_if[expr(N/H),estmt[expr(N/H)],estmt(NONE)]],{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(node),call[ident(eth1394_find_node_guid),&expr[->expr[ident(priv),ident(ip_node_list)]],call[ident(be64_to_cpu),ident(guid)]]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(node_info),expr(N/H)]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(dest_node),->expr[->expr[->expr[ident(node),ident(ud)],ident(ne)],ident(nodeid)]]],estmt[assign[simple_assi(=),ident(max_payload),->expr[ident(node_info),ident(maxpayload)]]],estmt[call[ident(BUG_ON),expr(N/H)]],estmt[assign[simple_assi(=),ident(dgl),->expr[ident(node_info),ident(dgl)]]],sel_if[expr(N/H),estmt[expr(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(tx_type),ident(ETH1394_WRREQ)]]]],sel_if[expr(N/H),estmt[call[ident(ether1394_arp_to_1394arp),ident(skb),ident(dev)]],estmt(NONE)],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word1)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word2)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word3)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word4)],const_i(0)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(skb)],ident(skb)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(priv)],ident(priv)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(tx_type)],ident(tx_type)]],sel_if[expr(N/H),{}stmt[statem(N/H),estmt[call[ident(spin_lock_irqsave),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[assign[simple_assi(=),ident(addr),->expr[ident(node_info),ident(fifo)]]],estmt[call[ident(spin_unlock_irqrestore),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(addr)],ident(addr)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(dest_node)],ident(dest_node)]]],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(tx_type)],ident(tx_type)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(max_payload)],ident(max_payload)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(outstanding_pkts)],call[ident(ether1394_encapsulate_prep),ident(max_payload),ident(proto),&expr[->expr[ident(ptask),ident(hdr)]],ident(dg_size),ident(dgl)]]],estmt[assign[simple_assi(=),ident(tx_len),call[ident(ether1394_encapsulate),ident(skb),ident(max_payload),&expr[->expr[ident(ptask),ident(hdr)]]]]],estmt[assign[simple_assi(=),->expr[ident(dev),ident(trans_start)],ident(jiffies)]],sel_if[call[ident(ether1394_send_packet),ident(ptask),ident(tx_len)],{}stmt[sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[call[ident(skb_pull),ident(skb),const_i(4)]],estmt[call[ident(ether1394_header),ident(skb),ident(dev),call[ident(ntohs),.expr[ident(hdr_buf),ident(h_proto)]],.expr[ident(hdr_buf),ident(h_dest)],ident(NULL),const_i(0)]],estmt[call[ident(netif_stop_queue),ident(dev)]],estmt[assign[simple_assi(=),->expr[ident(priv),ident(wake_node)],ident(dest_node)]],estmt[call[ident(schedule_work),&expr[->expr[ident(priv),ident(wake)]]]],estmt[call[ident(kmem_cache_free),ident(packet_task_cache),ident(ptask)]],st_return[ident(NETDEV_TX_BUSY)]],estmt(NONE)],st_return[ident(NETDEV_TX_OK)],statem(N/H),sel_if[expr(N/H),estmt[call[ident(dev_kfree_skb),ident(skb)]],estmt(NONE)],estmt[call[ident(spin_lock_irqsave),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[expr(N/H)],estmt[expr(N/H)],estmt[call[ident(spin_unlock_irqrestore),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],st_return[ident(NETDEV_TX_OK)]]]]
	¶
]]
starting abstraction
minimal term size: 9
renumbering metas
abstracting the following solution now
[[
call[ident(memcpy),&expr[ident(hdr_buf)],->expr[ident(skb),ident(data)],sizeof_expr[ident(hdr_buf)]] ==> call[ident(skb_copy_from_linear_data),ident(skb),&expr[ident(hdr_buf)],sizeof_expr[ident(hdr_buf)]]
	¶
]]
of size  :::: 9
@@@,
.
@@,
,
.
@@,
.
,
,
,
,
.
@,
.
@,
.
@,
,
,
,
.

with result :::::
call[ident(memcpy),&expr[meta(X2)],->expr[meta(X4),ident(data)],sizeof_expr[meta(X2)]] ==> call[ident(skb_copy_from_linear_data),meta(X4),&expr[meta(X2)],sizeof_expr[meta(X2)]]
call[ident(memcpy),&expr[meta(X2)],->expr[meta(X4),ident(data)],meta(X1)] ==> call[ident(skb_copy_from_linear_data),meta(X4),&expr[meta(X2)],meta(X1)]
call[ident(memcpy),meta(X5),->expr[meta(X4),ident(data)],sizeof_expr[meta(X2)]] ==> call[ident(skb_copy_from_linear_data),meta(X4),meta(X5),sizeof_expr[meta(X2)]]
call[ident(memcpy),meta(X5),->expr[meta(X4),ident(data)],meta(X1)] ==> call[ident(skb_copy_from_linear_data),meta(X4),meta(X5),meta(X1)]
	#no of abstracted update: 4
,
.
abstracting the following solution now
[[
estmt[call[ident(memcpy),&expr[ident(hdr_buf)],->expr[ident(skb),ident(data)],sizeof_expr[ident(hdr_buf)]]] ==> estmt[call[ident(skb_copy_from_linear_data),ident(skb),&expr[ident(hdr_buf)],sizeof_expr[ident(hdr_buf)]]]
	¶
]]
of size  :::: 10
@@@,
.
@@,
,
.
@@,
.
,
,
,
,
.
,
.
@,
.
@,
.
@,
,
,
,
.
,
.

with result :::::
estmt[call[ident(memcpy),&expr[meta(X2)],->expr[meta(X4),ident(data)],sizeof_expr[meta(X2)]]] ==> estmt[call[ident(skb_copy_from_linear_data),meta(X4),&expr[meta(X2)],sizeof_expr[meta(X2)]]]
estmt[call[ident(memcpy),&expr[meta(X2)],->expr[meta(X4),ident(data)],meta(X1)]] ==> estmt[call[ident(skb_copy_from_linear_data),meta(X4),&expr[meta(X2)],meta(X1)]]
estmt[call[ident(memcpy),meta(X5),->expr[meta(X4),ident(data)],sizeof_expr[meta(X2)]]] ==> estmt[call[ident(skb_copy_from_linear_data),meta(X4),meta(X5),sizeof_expr[meta(X2)]]]
estmt[call[ident(memcpy),meta(X5),->expr[meta(X4),ident(data)],meta(X1)]] ==> estmt[call[ident(skb_copy_from_linear_data),meta(X4),meta(X5),meta(X1)]]
	#no of abstracted update: 4
,
.
abstracting the following solution now
[[
{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(ptask),call[ident(kmem_cache_alloc),ident(packet_task_cache),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(skb),call[ident(skb_share_check),ident(skb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[call[ident(memcpy),&expr[ident(hdr_buf)],->expr[ident(skb),ident(data)],sizeof_expr[ident(hdr_buf)]]],estmt[call[ident(skb_pull),ident(skb),ident(ETH1394_HLEN)]],estmt[assign[simple_assi(=),ident(proto),.expr[ident(hdr_buf),ident(h_proto)]]],estmt[assign[simple_assi(=),ident(dg_size),->expr[ident(skb),ident(len)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(tx_type),ident(ETH1394_GASP)]],estmt[assign[simple_assi(=),ident(dest_node),binary[aop(N/H),ident(LOCAL_BUS),ident(ALL_NODES)]]],estmt[assign[simple_assi(=),ident(max_payload),binary[aop(-),->expr[ident(priv),ident(bc_maxpayload)],ident(ETHER1394_GASP_OVERHEAD)]]],estmt[call[ident(BUG_ON),expr(N/H)]],estmt[assign[simple_assi(=),ident(dgl),->expr[ident(priv),ident(bc_dgl)]]],sel_if[expr(N/H),estmt[expr(N/H)],estmt(NONE)]],{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(node),call[ident(eth1394_find_node_guid),&expr[->expr[ident(priv),ident(ip_node_list)]],call[ident(be64_to_cpu),ident(guid)]]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(node_info),expr(N/H)]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(dest_node),->expr[->expr[->expr[ident(node),ident(ud)],ident(ne)],ident(nodeid)]]],estmt[assign[simple_assi(=),ident(max_payload),->expr[ident(node_info),ident(maxpayload)]]],estmt[call[ident(BUG_ON),expr(N/H)]],estmt[assign[simple_assi(=),ident(dgl),->expr[ident(node_info),ident(dgl)]]],sel_if[expr(N/H),estmt[expr(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(tx_type),ident(ETH1394_WRREQ)]]]],sel_if[expr(N/H),estmt[call[ident(ether1394_arp_to_1394arp),ident(skb),ident(dev)]],estmt(NONE)],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word1)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word2)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word3)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word4)],const_i(0)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(skb)],ident(skb)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(priv)],ident(priv)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(tx_type)],ident(tx_type)]],sel_if[expr(N/H),{}stmt[statem(N/H),estmt[call[ident(spin_lock_irqsave),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[assign[simple_assi(=),ident(addr),->expr[ident(node_info),ident(fifo)]]],estmt[call[ident(spin_unlock_irqrestore),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(addr)],ident(addr)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(dest_node)],ident(dest_node)]]],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(tx_type)],ident(tx_type)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(max_payload)],ident(max_payload)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(outstanding_pkts)],call[ident(ether1394_encapsulate_prep),ident(max_payload),ident(proto),&expr[->expr[ident(ptask),ident(hdr)]],ident(dg_size),ident(dgl)]]],estmt[assign[simple_assi(=),ident(tx_len),call[ident(ether1394_encapsulate),ident(skb),ident(max_payload),&expr[->expr[ident(ptask),ident(hdr)]]]]],estmt[assign[simple_assi(=),->expr[ident(dev),ident(trans_start)],ident(jiffies)]],sel_if[call[ident(ether1394_send_packet),ident(ptask),ident(tx_len)],{}stmt[sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[call[ident(skb_pull),ident(skb),const_i(4)]],estmt[call[ident(ether1394_header),ident(skb),ident(dev),call[ident(ntohs),.expr[ident(hdr_buf),ident(h_proto)]],.expr[ident(hdr_buf),ident(h_dest)],ident(NULL),const_i(0)]],estmt[call[ident(netif_stop_queue),ident(dev)]],estmt[assign[simple_assi(=),->expr[ident(priv),ident(wake_node)],ident(dest_node)]],estmt[call[ident(schedule_work),&expr[->expr[ident(priv),ident(wake)]]]],estmt[call[ident(kmem_cache_free),ident(packet_task_cache),ident(ptask)]],st_return[ident(NETDEV_TX_BUSY)]],estmt(NONE)],st_return[ident(NETDEV_TX_OK)],statem(N/H),sel_if[expr(N/H),estmt[call[ident(dev_kfree_skb),ident(skb)]],estmt(NONE)],estmt[call[ident(spin_lock_irqsave),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[expr(N/H)],estmt[expr(N/H)],estmt[call[ident(spin_unlock_irqrestore),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],st_return[ident(NETDEV_TX_OK)]] ==> {}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(ptask),call[ident(kmem_cache_alloc),ident(packet_task_cache),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(skb),call[ident(skb_share_check),ident(skb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[call[ident(skb_copy_from_linear_data),ident(skb),&expr[ident(hdr_buf)],sizeof_expr[ident(hdr_buf)]]],estmt[call[ident(skb_pull),ident(skb),ident(ETH1394_HLEN)]],estmt[assign[simple_assi(=),ident(proto),.expr[ident(hdr_buf),ident(h_proto)]]],estmt[assign[simple_assi(=),ident(dg_size),->expr[ident(skb),ident(len)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(tx_type),ident(ETH1394_GASP)]],estmt[assign[simple_assi(=),ident(dest_node),binary[aop(N/H),ident(LOCAL_BUS),ident(ALL_NODES)]]],estmt[assign[simple_assi(=),ident(max_payload),binary[aop(-),->expr[ident(priv),ident(bc_maxpayload)],ident(ETHER1394_GASP_OVERHEAD)]]],estmt[call[ident(BUG_ON),expr(N/H)]],estmt[assign[simple_assi(=),ident(dgl),->expr[ident(priv),ident(bc_dgl)]]],sel_if[expr(N/H),estmt[expr(N/H)],estmt(NONE)]],{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(node),call[ident(eth1394_find_node_guid),&expr[->expr[ident(priv),ident(ip_node_list)]],call[ident(be64_to_cpu),ident(guid)]]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(node_info),expr(N/H)]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(dest_node),->expr[->expr[->expr[ident(node),ident(ud)],ident(ne)],ident(nodeid)]]],estmt[assign[simple_assi(=),ident(max_payload),->expr[ident(node_info),ident(maxpayload)]]],estmt[call[ident(BUG_ON),expr(N/H)]],estmt[assign[simple_assi(=),ident(dgl),->expr[ident(node_info),ident(dgl)]]],sel_if[expr(N/H),estmt[expr(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(tx_type),ident(ETH1394_WRREQ)]]]],sel_if[expr(N/H),estmt[call[ident(ether1394_arp_to_1394arp),ident(skb),ident(dev)]],estmt(NONE)],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word1)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word2)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word3)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word4)],const_i(0)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(skb)],ident(skb)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(priv)],ident(priv)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(tx_type)],ident(tx_type)]],sel_if[expr(N/H),{}stmt[statem(N/H),estmt[call[ident(spin_lock_irqsave),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[assign[simple_assi(=),ident(addr),->expr[ident(node_info),ident(fifo)]]],estmt[call[ident(spin_unlock_irqrestore),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(addr)],ident(addr)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(dest_node)],ident(dest_node)]]],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(tx_type)],ident(tx_type)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(max_payload)],ident(max_payload)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(outstanding_pkts)],call[ident(ether1394_encapsulate_prep),ident(max_payload),ident(proto),&expr[->expr[ident(ptask),ident(hdr)]],ident(dg_size),ident(dgl)]]],estmt[assign[simple_assi(=),ident(tx_len),call[ident(ether1394_encapsulate),ident(skb),ident(max_payload),&expr[->expr[ident(ptask),ident(hdr)]]]]],estmt[assign[simple_assi(=),->expr[ident(dev),ident(trans_start)],ident(jiffies)]],sel_if[call[ident(ether1394_send_packet),ident(ptask),ident(tx_len)],{}stmt[sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[call[ident(skb_pull),ident(skb),const_i(4)]],estmt[call[ident(ether1394_header),ident(skb),ident(dev),call[ident(ntohs),.expr[ident(hdr_buf),ident(h_proto)]],.expr[ident(hdr_buf),ident(h_dest)],ident(NULL),const_i(0)]],estmt[call[ident(netif_stop_queue),ident(dev)]],estmt[assign[simple_assi(=),->expr[ident(priv),ident(wake_node)],ident(dest_node)]],estmt[call[ident(schedule_work),&expr[->expr[ident(priv),ident(wake)]]]],estmt[call[ident(kmem_cache_free),ident(packet_task_cache),ident(ptask)]],st_return[ident(NETDEV_TX_BUSY)]],estmt(NONE)],st_return[ident(NETDEV_TX_OK)],statem(N/H),sel_if[expr(N/H),estmt[call[ident(dev_kfree_skb),ident(skb)]],estmt(NONE)],estmt[call[ident(spin_lock_irqsave),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[expr(N/H)],estmt[expr(N/H)],estmt[call[ident(spin_unlock_irqrestore),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],st_return[ident(NETDEV_TX_OK)]]
	¶
]]
of size  :::: 428

with result :::::
{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(ptask),call[ident(kmem_cache_alloc),ident(packet_task_cache),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(skb),call[ident(skb_share_check),ident(skb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[call[ident(memcpy),&expr[ident(hdr_buf)],->expr[ident(skb),ident(data)],sizeof_expr[ident(hdr_buf)]]],estmt[call[ident(skb_pull),ident(skb),ident(ETH1394_HLEN)]],estmt[assign[simple_assi(=),ident(proto),.expr[ident(hdr_buf),ident(h_proto)]]],estmt[assign[simple_assi(=),ident(dg_size),->expr[ident(skb),ident(len)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(tx_type),ident(ETH1394_GASP)]],estmt[assign[simple_assi(=),ident(dest_node),binary[aop(N/H),ident(LOCAL_BUS),ident(ALL_NODES)]]],estmt[assign[simple_assi(=),ident(max_payload),binary[aop(-),->expr[ident(priv),ident(bc_maxpayload)],ident(ETHER1394_GASP_OVERHEAD)]]],estmt[call[ident(BUG_ON),expr(N/H)]],estmt[assign[simple_assi(=),ident(dgl),->expr[ident(priv),ident(bc_dgl)]]],sel_if[expr(N/H),estmt[expr(N/H)],estmt(NONE)]],{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(node),call[ident(eth1394_find_node_guid),&expr[->expr[ident(priv),ident(ip_node_list)]],call[ident(be64_to_cpu),ident(guid)]]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(node_info),expr(N/H)]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(dest_node),->expr[->expr[->expr[ident(node),ident(ud)],ident(ne)],ident(nodeid)]]],estmt[assign[simple_assi(=),ident(max_payload),->expr[ident(node_info),ident(maxpayload)]]],estmt[call[ident(BUG_ON),expr(N/H)]],estmt[assign[simple_assi(=),ident(dgl),->expr[ident(node_info),ident(dgl)]]],sel_if[expr(N/H),estmt[expr(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(tx_type),ident(ETH1394_WRREQ)]]]],sel_if[expr(N/H),estmt[call[ident(ether1394_arp_to_1394arp),ident(skb),ident(dev)]],estmt(NONE)],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word1)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word2)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word3)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word4)],const_i(0)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(skb)],ident(skb)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(priv)],ident(priv)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(tx_type)],ident(tx_type)]],sel_if[expr(N/H),{}stmt[statem(N/H),estmt[call[ident(spin_lock_irqsave),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[assign[simple_assi(=),ident(addr),->expr[ident(node_info),ident(fifo)]]],estmt[call[ident(spin_unlock_irqrestore),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(addr)],ident(addr)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(dest_node)],ident(dest_node)]]],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(tx_type)],ident(tx_type)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(max_payload)],ident(max_payload)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(outstanding_pkts)],call[ident(ether1394_encapsulate_prep),ident(max_payload),ident(proto),&expr[->expr[ident(ptask),ident(hdr)]],ident(dg_size),ident(dgl)]]],estmt[assign[simple_assi(=),ident(tx_len),call[ident(ether1394_encapsulate),ident(skb),ident(max_payload),&expr[->expr[ident(ptask),ident(hdr)]]]]],estmt[assign[simple_assi(=),->expr[ident(dev),ident(trans_start)],ident(jiffies)]],sel_if[call[ident(ether1394_send_packet),ident(ptask),ident(tx_len)],{}stmt[sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[call[ident(skb_pull),ident(skb),const_i(4)]],estmt[call[ident(ether1394_header),ident(skb),ident(dev),call[ident(ntohs),.expr[ident(hdr_buf),ident(h_proto)]],.expr[ident(hdr_buf),ident(h_dest)],ident(NULL),const_i(0)]],estmt[call[ident(netif_stop_queue),ident(dev)]],estmt[assign[simple_assi(=),->expr[ident(priv),ident(wake_node)],ident(dest_node)]],estmt[call[ident(schedule_work),&expr[->expr[ident(priv),ident(wake)]]]],estmt[call[ident(kmem_cache_free),ident(packet_task_cache),ident(ptask)]],st_return[ident(NETDEV_TX_BUSY)]],estmt(NONE)],st_return[ident(NETDEV_TX_OK)],statem(N/H),sel_if[expr(N/H),estmt[call[ident(dev_kfree_skb),ident(skb)]],estmt(NONE)],estmt[call[ident(spin_lock_irqsave),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[expr(N/H)],estmt[expr(N/H)],estmt[call[ident(spin_unlock_irqrestore),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],st_return[ident(NETDEV_TX_OK)]] ==> {}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(ptask),call[ident(kmem_cache_alloc),ident(packet_task_cache),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(skb),call[ident(skb_share_check),ident(skb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[call[ident(skb_copy_from_linear_data),ident(skb),&expr[ident(hdr_buf)],sizeof_expr[ident(hdr_buf)]]],estmt[call[ident(skb_pull),ident(skb),ident(ETH1394_HLEN)]],estmt[assign[simple_assi(=),ident(proto),.expr[ident(hdr_buf),ident(h_proto)]]],estmt[assign[simple_assi(=),ident(dg_size),->expr[ident(skb),ident(len)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(tx_type),ident(ETH1394_GASP)]],estmt[assign[simple_assi(=),ident(dest_node),binary[aop(N/H),ident(LOCAL_BUS),ident(ALL_NODES)]]],estmt[assign[simple_assi(=),ident(max_payload),binary[aop(-),->expr[ident(priv),ident(bc_maxpayload)],ident(ETHER1394_GASP_OVERHEAD)]]],estmt[call[ident(BUG_ON),expr(N/H)]],estmt[assign[simple_assi(=),ident(dgl),->expr[ident(priv),ident(bc_dgl)]]],sel_if[expr(N/H),estmt[expr(N/H)],estmt(NONE)]],{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(node),call[ident(eth1394_find_node_guid),&expr[->expr[ident(priv),ident(ip_node_list)]],call[ident(be64_to_cpu),ident(guid)]]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(node_info),expr(N/H)]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(dest_node),->expr[->expr[->expr[ident(node),ident(ud)],ident(ne)],ident(nodeid)]]],estmt[assign[simple_assi(=),ident(max_payload),->expr[ident(node_info),ident(maxpayload)]]],estmt[call[ident(BUG_ON),expr(N/H)]],estmt[assign[simple_assi(=),ident(dgl),->expr[ident(node_info),ident(dgl)]]],sel_if[expr(N/H),estmt[expr(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(tx_type),ident(ETH1394_WRREQ)]]]],sel_if[expr(N/H),estmt[call[ident(ether1394_arp_to_1394arp),ident(skb),ident(dev)]],estmt(NONE)],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word1)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word2)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word3)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word4)],const_i(0)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(skb)],ident(skb)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(priv)],ident(priv)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(tx_type)],ident(tx_type)]],sel_if[expr(N/H),{}stmt[statem(N/H),estmt[call[ident(spin_lock_irqsave),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[assign[simple_assi(=),ident(addr),->expr[ident(node_info),ident(fifo)]]],estmt[call[ident(spin_unlock_irqrestore),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(addr)],ident(addr)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(dest_node)],ident(dest_node)]]],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(tx_type)],ident(tx_type)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(max_payload)],ident(max_payload)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(outstanding_pkts)],call[ident(ether1394_encapsulate_prep),ident(max_payload),ident(proto),&expr[->expr[ident(ptask),ident(hdr)]],ident(dg_size),ident(dgl)]]],estmt[assign[simple_assi(=),ident(tx_len),call[ident(ether1394_encapsulate),ident(skb),ident(max_payload),&expr[->expr[ident(ptask),ident(hdr)]]]]],estmt[assign[simple_assi(=),->expr[ident(dev),ident(trans_start)],ident(jiffies)]],sel_if[call[ident(ether1394_send_packet),ident(ptask),ident(tx_len)],{}stmt[sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[call[ident(skb_pull),ident(skb),const_i(4)]],estmt[call[ident(ether1394_header),ident(skb),ident(dev),call[ident(ntohs),.expr[ident(hdr_buf),ident(h_proto)]],.expr[ident(hdr_buf),ident(h_dest)],ident(NULL),const_i(0)]],estmt[call[ident(netif_stop_queue),ident(dev)]],estmt[assign[simple_assi(=),->expr[ident(priv),ident(wake_node)],ident(dest_node)]],estmt[call[ident(schedule_work),&expr[->expr[ident(priv),ident(wake)]]]],estmt[call[ident(kmem_cache_free),ident(packet_task_cache),ident(ptask)]],st_return[ident(NETDEV_TX_BUSY)]],estmt(NONE)],st_return[ident(NETDEV_TX_OK)],statem(N/H),sel_if[expr(N/H),estmt[call[ident(dev_kfree_skb),ident(skb)]],estmt(NONE)],estmt[call[ident(spin_lock_irqsave),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[expr(N/H)],estmt[expr(N/H)],estmt[call[ident(spin_unlock_irqrestore),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],st_return[ident(NETDEV_TX_OK)]]
	#no of abstracted update: 1
,
.
abstracting the following solution now
[[
def[fname(ether1394_tx),funtype(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(ptask),call[ident(kmem_cache_alloc),ident(packet_task_cache),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(skb),call[ident(skb_share_check),ident(skb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[call[ident(memcpy),&expr[ident(hdr_buf)],->expr[ident(skb),ident(data)],sizeof_expr[ident(hdr_buf)]]],estmt[call[ident(skb_pull),ident(skb),ident(ETH1394_HLEN)]],estmt[assign[simple_assi(=),ident(proto),.expr[ident(hdr_buf),ident(h_proto)]]],estmt[assign[simple_assi(=),ident(dg_size),->expr[ident(skb),ident(len)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(tx_type),ident(ETH1394_GASP)]],estmt[assign[simple_assi(=),ident(dest_node),binary[aop(N/H),ident(LOCAL_BUS),ident(ALL_NODES)]]],estmt[assign[simple_assi(=),ident(max_payload),binary[aop(-),->expr[ident(priv),ident(bc_maxpayload)],ident(ETHER1394_GASP_OVERHEAD)]]],estmt[call[ident(BUG_ON),expr(N/H)]],estmt[assign[simple_assi(=),ident(dgl),->expr[ident(priv),ident(bc_dgl)]]],sel_if[expr(N/H),estmt[expr(N/H)],estmt(NONE)]],{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(node),call[ident(eth1394_find_node_guid),&expr[->expr[ident(priv),ident(ip_node_list)]],call[ident(be64_to_cpu),ident(guid)]]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(node_info),expr(N/H)]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(dest_node),->expr[->expr[->expr[ident(node),ident(ud)],ident(ne)],ident(nodeid)]]],estmt[assign[simple_assi(=),ident(max_payload),->expr[ident(node_info),ident(maxpayload)]]],estmt[call[ident(BUG_ON),expr(N/H)]],estmt[assign[simple_assi(=),ident(dgl),->expr[ident(node_info),ident(dgl)]]],sel_if[expr(N/H),estmt[expr(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(tx_type),ident(ETH1394_WRREQ)]]]],sel_if[expr(N/H),estmt[call[ident(ether1394_arp_to_1394arp),ident(skb),ident(dev)]],estmt(NONE)],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word1)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word2)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word3)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word4)],const_i(0)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(skb)],ident(skb)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(priv)],ident(priv)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(tx_type)],ident(tx_type)]],sel_if[expr(N/H),{}stmt[statem(N/H),estmt[call[ident(spin_lock_irqsave),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[assign[simple_assi(=),ident(addr),->expr[ident(node_info),ident(fifo)]]],estmt[call[ident(spin_unlock_irqrestore),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(addr)],ident(addr)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(dest_node)],ident(dest_node)]]],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(tx_type)],ident(tx_type)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(max_payload)],ident(max_payload)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(outstanding_pkts)],call[ident(ether1394_encapsulate_prep),ident(max_payload),ident(proto),&expr[->expr[ident(ptask),ident(hdr)]],ident(dg_size),ident(dgl)]]],estmt[assign[simple_assi(=),ident(tx_len),call[ident(ether1394_encapsulate),ident(skb),ident(max_payload),&expr[->expr[ident(ptask),ident(hdr)]]]]],estmt[assign[simple_assi(=),->expr[ident(dev),ident(trans_start)],ident(jiffies)]],sel_if[call[ident(ether1394_send_packet),ident(ptask),ident(tx_len)],{}stmt[sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[call[ident(skb_pull),ident(skb),const_i(4)]],estmt[call[ident(ether1394_header),ident(skb),ident(dev),call[ident(ntohs),.expr[ident(hdr_buf),ident(h_proto)]],.expr[ident(hdr_buf),ident(h_dest)],ident(NULL),const_i(0)]],estmt[call[ident(netif_stop_queue),ident(dev)]],estmt[assign[simple_assi(=),->expr[ident(priv),ident(wake_node)],ident(dest_node)]],estmt[call[ident(schedule_work),&expr[->expr[ident(priv),ident(wake)]]]],estmt[call[ident(kmem_cache_free),ident(packet_task_cache),ident(ptask)]],st_return[ident(NETDEV_TX_BUSY)]],estmt(NONE)],st_return[ident(NETDEV_TX_OK)],statem(N/H),sel_if[expr(N/H),estmt[call[ident(dev_kfree_skb),ident(skb)]],estmt(NONE)],estmt[call[ident(spin_lock_irqsave),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[expr(N/H)],estmt[expr(N/H)],estmt[call[ident(spin_unlock_irqrestore),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],st_return[ident(NETDEV_TX_OK)]]] ==> def[fname(ether1394_tx),funtype(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(ptask),call[ident(kmem_cache_alloc),ident(packet_task_cache),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(skb),call[ident(skb_share_check),ident(skb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[call[ident(skb_copy_from_linear_data),ident(skb),&expr[ident(hdr_buf)],sizeof_expr[ident(hdr_buf)]]],estmt[call[ident(skb_pull),ident(skb),ident(ETH1394_HLEN)]],estmt[assign[simple_assi(=),ident(proto),.expr[ident(hdr_buf),ident(h_proto)]]],estmt[assign[simple_assi(=),ident(dg_size),->expr[ident(skb),ident(len)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(tx_type),ident(ETH1394_GASP)]],estmt[assign[simple_assi(=),ident(dest_node),binary[aop(N/H),ident(LOCAL_BUS),ident(ALL_NODES)]]],estmt[assign[simple_assi(=),ident(max_payload),binary[aop(-),->expr[ident(priv),ident(bc_maxpayload)],ident(ETHER1394_GASP_OVERHEAD)]]],estmt[call[ident(BUG_ON),expr(N/H)]],estmt[assign[simple_assi(=),ident(dgl),->expr[ident(priv),ident(bc_dgl)]]],sel_if[expr(N/H),estmt[expr(N/H)],estmt(NONE)]],{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(node),call[ident(eth1394_find_node_guid),&expr[->expr[ident(priv),ident(ip_node_list)]],call[ident(be64_to_cpu),ident(guid)]]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(node_info),expr(N/H)]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(dest_node),->expr[->expr[->expr[ident(node),ident(ud)],ident(ne)],ident(nodeid)]]],estmt[assign[simple_assi(=),ident(max_payload),->expr[ident(node_info),ident(maxpayload)]]],estmt[call[ident(BUG_ON),expr(N/H)]],estmt[assign[simple_assi(=),ident(dgl),->expr[ident(node_info),ident(dgl)]]],sel_if[expr(N/H),estmt[expr(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(tx_type),ident(ETH1394_WRREQ)]]]],sel_if[expr(N/H),estmt[call[ident(ether1394_arp_to_1394arp),ident(skb),ident(dev)]],estmt(NONE)],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word1)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word2)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word3)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word4)],const_i(0)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(skb)],ident(skb)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(priv)],ident(priv)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(tx_type)],ident(tx_type)]],sel_if[expr(N/H),{}stmt[statem(N/H),estmt[call[ident(spin_lock_irqsave),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[assign[simple_assi(=),ident(addr),->expr[ident(node_info),ident(fifo)]]],estmt[call[ident(spin_unlock_irqrestore),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(addr)],ident(addr)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(dest_node)],ident(dest_node)]]],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(tx_type)],ident(tx_type)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(max_payload)],ident(max_payload)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(outstanding_pkts)],call[ident(ether1394_encapsulate_prep),ident(max_payload),ident(proto),&expr[->expr[ident(ptask),ident(hdr)]],ident(dg_size),ident(dgl)]]],estmt[assign[simple_assi(=),ident(tx_len),call[ident(ether1394_encapsulate),ident(skb),ident(max_payload),&expr[->expr[ident(ptask),ident(hdr)]]]]],estmt[assign[simple_assi(=),->expr[ident(dev),ident(trans_start)],ident(jiffies)]],sel_if[call[ident(ether1394_send_packet),ident(ptask),ident(tx_len)],{}stmt[sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[call[ident(skb_pull),ident(skb),const_i(4)]],estmt[call[ident(ether1394_header),ident(skb),ident(dev),call[ident(ntohs),.expr[ident(hdr_buf),ident(h_proto)]],.expr[ident(hdr_buf),ident(h_dest)],ident(NULL),const_i(0)]],estmt[call[ident(netif_stop_queue),ident(dev)]],estmt[assign[simple_assi(=),->expr[ident(priv),ident(wake_node)],ident(dest_node)]],estmt[call[ident(schedule_work),&expr[->expr[ident(priv),ident(wake)]]]],estmt[call[ident(kmem_cache_free),ident(packet_task_cache),ident(ptask)]],st_return[ident(NETDEV_TX_BUSY)]],estmt(NONE)],st_return[ident(NETDEV_TX_OK)],statem(N/H),sel_if[expr(N/H),estmt[call[ident(dev_kfree_skb),ident(skb)]],estmt(NONE)],estmt[call[ident(spin_lock_irqsave),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[expr(N/H)],estmt[expr(N/H)],estmt[call[ident(spin_unlock_irqrestore),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],st_return[ident(NETDEV_TX_OK)]]]
	¶
]]
of size  :::: 431

with result :::::
def[fname(ether1394_tx),funtype(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(ptask),call[ident(kmem_cache_alloc),ident(packet_task_cache),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(skb),call[ident(skb_share_check),ident(skb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[call[ident(memcpy),&expr[ident(hdr_buf)],->expr[ident(skb),ident(data)],sizeof_expr[ident(hdr_buf)]]],estmt[call[ident(skb_pull),ident(skb),ident(ETH1394_HLEN)]],estmt[assign[simple_assi(=),ident(proto),.expr[ident(hdr_buf),ident(h_proto)]]],estmt[assign[simple_assi(=),ident(dg_size),->expr[ident(skb),ident(len)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(tx_type),ident(ETH1394_GASP)]],estmt[assign[simple_assi(=),ident(dest_node),binary[aop(N/H),ident(LOCAL_BUS),ident(ALL_NODES)]]],estmt[assign[simple_assi(=),ident(max_payload),binary[aop(-),->expr[ident(priv),ident(bc_maxpayload)],ident(ETHER1394_GASP_OVERHEAD)]]],estmt[call[ident(BUG_ON),expr(N/H)]],estmt[assign[simple_assi(=),ident(dgl),->expr[ident(priv),ident(bc_dgl)]]],sel_if[expr(N/H),estmt[expr(N/H)],estmt(NONE)]],{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(node),call[ident(eth1394_find_node_guid),&expr[->expr[ident(priv),ident(ip_node_list)]],call[ident(be64_to_cpu),ident(guid)]]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(node_info),expr(N/H)]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(dest_node),->expr[->expr[->expr[ident(node),ident(ud)],ident(ne)],ident(nodeid)]]],estmt[assign[simple_assi(=),ident(max_payload),->expr[ident(node_info),ident(maxpayload)]]],estmt[call[ident(BUG_ON),expr(N/H)]],estmt[assign[simple_assi(=),ident(dgl),->expr[ident(node_info),ident(dgl)]]],sel_if[expr(N/H),estmt[expr(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(tx_type),ident(ETH1394_WRREQ)]]]],sel_if[expr(N/H),estmt[call[ident(ether1394_arp_to_1394arp),ident(skb),ident(dev)]],estmt(NONE)],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word1)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word2)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word3)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word4)],const_i(0)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(skb)],ident(skb)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(priv)],ident(priv)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(tx_type)],ident(tx_type)]],sel_if[expr(N/H),{}stmt[statem(N/H),estmt[call[ident(spin_lock_irqsave),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[assign[simple_assi(=),ident(addr),->expr[ident(node_info),ident(fifo)]]],estmt[call[ident(spin_unlock_irqrestore),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(addr)],ident(addr)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(dest_node)],ident(dest_node)]]],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(tx_type)],ident(tx_type)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(max_payload)],ident(max_payload)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(outstanding_pkts)],call[ident(ether1394_encapsulate_prep),ident(max_payload),ident(proto),&expr[->expr[ident(ptask),ident(hdr)]],ident(dg_size),ident(dgl)]]],estmt[assign[simple_assi(=),ident(tx_len),call[ident(ether1394_encapsulate),ident(skb),ident(max_payload),&expr[->expr[ident(ptask),ident(hdr)]]]]],estmt[assign[simple_assi(=),->expr[ident(dev),ident(trans_start)],ident(jiffies)]],sel_if[call[ident(ether1394_send_packet),ident(ptask),ident(tx_len)],{}stmt[sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[call[ident(skb_pull),ident(skb),const_i(4)]],estmt[call[ident(ether1394_header),ident(skb),ident(dev),call[ident(ntohs),.expr[ident(hdr_buf),ident(h_proto)]],.expr[ident(hdr_buf),ident(h_dest)],ident(NULL),const_i(0)]],estmt[call[ident(netif_stop_queue),ident(dev)]],estmt[assign[simple_assi(=),->expr[ident(priv),ident(wake_node)],ident(dest_node)]],estmt[call[ident(schedule_work),&expr[->expr[ident(priv),ident(wake)]]]],estmt[call[ident(kmem_cache_free),ident(packet_task_cache),ident(ptask)]],st_return[ident(NETDEV_TX_BUSY)]],estmt(NONE)],st_return[ident(NETDEV_TX_OK)],statem(N/H),sel_if[expr(N/H),estmt[call[ident(dev_kfree_skb),ident(skb)]],estmt(NONE)],estmt[call[ident(spin_lock_irqsave),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[expr(N/H)],estmt[expr(N/H)],estmt[call[ident(spin_unlock_irqrestore),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],st_return[ident(NETDEV_TX_OK)]]] ==> def[fname(ether1394_tx),funtype(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(ptask),call[ident(kmem_cache_alloc),ident(packet_task_cache),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(skb),call[ident(skb_share_check),ident(skb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[call[ident(skb_copy_from_linear_data),ident(skb),&expr[ident(hdr_buf)],sizeof_expr[ident(hdr_buf)]]],estmt[call[ident(skb_pull),ident(skb),ident(ETH1394_HLEN)]],estmt[assign[simple_assi(=),ident(proto),.expr[ident(hdr_buf),ident(h_proto)]]],estmt[assign[simple_assi(=),ident(dg_size),->expr[ident(skb),ident(len)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(tx_type),ident(ETH1394_GASP)]],estmt[assign[simple_assi(=),ident(dest_node),binary[aop(N/H),ident(LOCAL_BUS),ident(ALL_NODES)]]],estmt[assign[simple_assi(=),ident(max_payload),binary[aop(-),->expr[ident(priv),ident(bc_maxpayload)],ident(ETHER1394_GASP_OVERHEAD)]]],estmt[call[ident(BUG_ON),expr(N/H)]],estmt[assign[simple_assi(=),ident(dgl),->expr[ident(priv),ident(bc_dgl)]]],sel_if[expr(N/H),estmt[expr(N/H)],estmt(NONE)]],{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(node),call[ident(eth1394_find_node_guid),&expr[->expr[ident(priv),ident(ip_node_list)]],call[ident(be64_to_cpu),ident(guid)]]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(node_info),expr(N/H)]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(dest_node),->expr[->expr[->expr[ident(node),ident(ud)],ident(ne)],ident(nodeid)]]],estmt[assign[simple_assi(=),ident(max_payload),->expr[ident(node_info),ident(maxpayload)]]],estmt[call[ident(BUG_ON),expr(N/H)]],estmt[assign[simple_assi(=),ident(dgl),->expr[ident(node_info),ident(dgl)]]],sel_if[expr(N/H),estmt[expr(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(tx_type),ident(ETH1394_WRREQ)]]]],sel_if[expr(N/H),estmt[call[ident(ether1394_arp_to_1394arp),ident(skb),ident(dev)]],estmt(NONE)],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word1)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word2)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word3)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word4)],const_i(0)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(skb)],ident(skb)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(priv)],ident(priv)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(tx_type)],ident(tx_type)]],sel_if[expr(N/H),{}stmt[statem(N/H),estmt[call[ident(spin_lock_irqsave),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[assign[simple_assi(=),ident(addr),->expr[ident(node_info),ident(fifo)]]],estmt[call[ident(spin_unlock_irqrestore),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(addr)],ident(addr)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(dest_node)],ident(dest_node)]]],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(tx_type)],ident(tx_type)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(max_payload)],ident(max_payload)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(outstanding_pkts)],call[ident(ether1394_encapsulate_prep),ident(max_payload),ident(proto),&expr[->expr[ident(ptask),ident(hdr)]],ident(dg_size),ident(dgl)]]],estmt[assign[simple_assi(=),ident(tx_len),call[ident(ether1394_encapsulate),ident(skb),ident(max_payload),&expr[->expr[ident(ptask),ident(hdr)]]]]],estmt[assign[simple_assi(=),->expr[ident(dev),ident(trans_start)],ident(jiffies)]],sel_if[call[ident(ether1394_send_packet),ident(ptask),ident(tx_len)],{}stmt[sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[call[ident(skb_pull),ident(skb),const_i(4)]],estmt[call[ident(ether1394_header),ident(skb),ident(dev),call[ident(ntohs),.expr[ident(hdr_buf),ident(h_proto)]],.expr[ident(hdr_buf),ident(h_dest)],ident(NULL),const_i(0)]],estmt[call[ident(netif_stop_queue),ident(dev)]],estmt[assign[simple_assi(=),->expr[ident(priv),ident(wake_node)],ident(dest_node)]],estmt[call[ident(schedule_work),&expr[->expr[ident(priv),ident(wake)]]]],estmt[call[ident(kmem_cache_free),ident(packet_task_cache),ident(ptask)]],st_return[ident(NETDEV_TX_BUSY)]],estmt(NONE)],st_return[ident(NETDEV_TX_OK)],statem(N/H),sel_if[expr(N/H),estmt[call[ident(dev_kfree_skb),ident(skb)]],estmt(NONE)],estmt[call[ident(spin_lock_irqsave),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[expr(N/H)],estmt[expr(N/H)],estmt[call[ident(spin_unlock_irqrestore),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],st_return[ident(NETDEV_TX_OK)]]]
	#no of abstracted update: 1
,
.
abstracting the following solution now
[[
prg2[def[fname(ether1394_tx),funtype(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(ptask),call[ident(kmem_cache_alloc),ident(packet_task_cache),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(skb),call[ident(skb_share_check),ident(skb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[call[ident(memcpy),&expr[ident(hdr_buf)],->expr[ident(skb),ident(data)],sizeof_expr[ident(hdr_buf)]]],estmt[call[ident(skb_pull),ident(skb),ident(ETH1394_HLEN)]],estmt[assign[simple_assi(=),ident(proto),.expr[ident(hdr_buf),ident(h_proto)]]],estmt[assign[simple_assi(=),ident(dg_size),->expr[ident(skb),ident(len)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(tx_type),ident(ETH1394_GASP)]],estmt[assign[simple_assi(=),ident(dest_node),binary[aop(N/H),ident(LOCAL_BUS),ident(ALL_NODES)]]],estmt[assign[simple_assi(=),ident(max_payload),binary[aop(-),->expr[ident(priv),ident(bc_maxpayload)],ident(ETHER1394_GASP_OVERHEAD)]]],estmt[call[ident(BUG_ON),expr(N/H)]],estmt[assign[simple_assi(=),ident(dgl),->expr[ident(priv),ident(bc_dgl)]]],sel_if[expr(N/H),estmt[expr(N/H)],estmt(NONE)]],{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(node),call[ident(eth1394_find_node_guid),&expr[->expr[ident(priv),ident(ip_node_list)]],call[ident(be64_to_cpu),ident(guid)]]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(node_info),expr(N/H)]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(dest_node),->expr[->expr[->expr[ident(node),ident(ud)],ident(ne)],ident(nodeid)]]],estmt[assign[simple_assi(=),ident(max_payload),->expr[ident(node_info),ident(maxpayload)]]],estmt[call[ident(BUG_ON),expr(N/H)]],estmt[assign[simple_assi(=),ident(dgl),->expr[ident(node_info),ident(dgl)]]],sel_if[expr(N/H),estmt[expr(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(tx_type),ident(ETH1394_WRREQ)]]]],sel_if[expr(N/H),estmt[call[ident(ether1394_arp_to_1394arp),ident(skb),ident(dev)]],estmt(NONE)],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word1)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word2)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word3)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word4)],const_i(0)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(skb)],ident(skb)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(priv)],ident(priv)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(tx_type)],ident(tx_type)]],sel_if[expr(N/H),{}stmt[statem(N/H),estmt[call[ident(spin_lock_irqsave),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[assign[simple_assi(=),ident(addr),->expr[ident(node_info),ident(fifo)]]],estmt[call[ident(spin_unlock_irqrestore),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(addr)],ident(addr)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(dest_node)],ident(dest_node)]]],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(tx_type)],ident(tx_type)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(max_payload)],ident(max_payload)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(outstanding_pkts)],call[ident(ether1394_encapsulate_prep),ident(max_payload),ident(proto),&expr[->expr[ident(ptask),ident(hdr)]],ident(dg_size),ident(dgl)]]],estmt[assign[simple_assi(=),ident(tx_len),call[ident(ether1394_encapsulate),ident(skb),ident(max_payload),&expr[->expr[ident(ptask),ident(hdr)]]]]],estmt[assign[simple_assi(=),->expr[ident(dev),ident(trans_start)],ident(jiffies)]],sel_if[call[ident(ether1394_send_packet),ident(ptask),ident(tx_len)],{}stmt[sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[call[ident(skb_pull),ident(skb),const_i(4)]],estmt[call[ident(ether1394_header),ident(skb),ident(dev),call[ident(ntohs),.expr[ident(hdr_buf),ident(h_proto)]],.expr[ident(hdr_buf),ident(h_dest)],ident(NULL),const_i(0)]],estmt[call[ident(netif_stop_queue),ident(dev)]],estmt[assign[simple_assi(=),->expr[ident(priv),ident(wake_node)],ident(dest_node)]],estmt[call[ident(schedule_work),&expr[->expr[ident(priv),ident(wake)]]]],estmt[call[ident(kmem_cache_free),ident(packet_task_cache),ident(ptask)]],st_return[ident(NETDEV_TX_BUSY)]],estmt(NONE)],st_return[ident(NETDEV_TX_OK)],statem(N/H),sel_if[expr(N/H),estmt[call[ident(dev_kfree_skb),ident(skb)]],estmt(NONE)],estmt[call[ident(spin_lock_irqsave),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[expr(N/H)],estmt[expr(N/H)],estmt[call[ident(spin_unlock_irqrestore),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],st_return[ident(NETDEV_TX_OK)]]]] ==> prg2[def[fname(ether1394_tx),funtype(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(ptask),call[ident(kmem_cache_alloc),ident(packet_task_cache),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(skb),call[ident(skb_share_check),ident(skb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[call[ident(skb_copy_from_linear_data),ident(skb),&expr[ident(hdr_buf)],sizeof_expr[ident(hdr_buf)]]],estmt[call[ident(skb_pull),ident(skb),ident(ETH1394_HLEN)]],estmt[assign[simple_assi(=),ident(proto),.expr[ident(hdr_buf),ident(h_proto)]]],estmt[assign[simple_assi(=),ident(dg_size),->expr[ident(skb),ident(len)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(tx_type),ident(ETH1394_GASP)]],estmt[assign[simple_assi(=),ident(dest_node),binary[aop(N/H),ident(LOCAL_BUS),ident(ALL_NODES)]]],estmt[assign[simple_assi(=),ident(max_payload),binary[aop(-),->expr[ident(priv),ident(bc_maxpayload)],ident(ETHER1394_GASP_OVERHEAD)]]],estmt[call[ident(BUG_ON),expr(N/H)]],estmt[assign[simple_assi(=),ident(dgl),->expr[ident(priv),ident(bc_dgl)]]],sel_if[expr(N/H),estmt[expr(N/H)],estmt(NONE)]],{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(node),call[ident(eth1394_find_node_guid),&expr[->expr[ident(priv),ident(ip_node_list)]],call[ident(be64_to_cpu),ident(guid)]]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(node_info),expr(N/H)]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(dest_node),->expr[->expr[->expr[ident(node),ident(ud)],ident(ne)],ident(nodeid)]]],estmt[assign[simple_assi(=),ident(max_payload),->expr[ident(node_info),ident(maxpayload)]]],estmt[call[ident(BUG_ON),expr(N/H)]],estmt[assign[simple_assi(=),ident(dgl),->expr[ident(node_info),ident(dgl)]]],sel_if[expr(N/H),estmt[expr(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(tx_type),ident(ETH1394_WRREQ)]]]],sel_if[expr(N/H),estmt[call[ident(ether1394_arp_to_1394arp),ident(skb),ident(dev)]],estmt(NONE)],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word1)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word2)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word3)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word4)],const_i(0)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(skb)],ident(skb)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(priv)],ident(priv)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(tx_type)],ident(tx_type)]],sel_if[expr(N/H),{}stmt[statem(N/H),estmt[call[ident(spin_lock_irqsave),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[assign[simple_assi(=),ident(addr),->expr[ident(node_info),ident(fifo)]]],estmt[call[ident(spin_unlock_irqrestore),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(addr)],ident(addr)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(dest_node)],ident(dest_node)]]],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(tx_type)],ident(tx_type)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(max_payload)],ident(max_payload)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(outstanding_pkts)],call[ident(ether1394_encapsulate_prep),ident(max_payload),ident(proto),&expr[->expr[ident(ptask),ident(hdr)]],ident(dg_size),ident(dgl)]]],estmt[assign[simple_assi(=),ident(tx_len),call[ident(ether1394_encapsulate),ident(skb),ident(max_payload),&expr[->expr[ident(ptask),ident(hdr)]]]]],estmt[assign[simple_assi(=),->expr[ident(dev),ident(trans_start)],ident(jiffies)]],sel_if[call[ident(ether1394_send_packet),ident(ptask),ident(tx_len)],{}stmt[sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[call[ident(skb_pull),ident(skb),const_i(4)]],estmt[call[ident(ether1394_header),ident(skb),ident(dev),call[ident(ntohs),.expr[ident(hdr_buf),ident(h_proto)]],.expr[ident(hdr_buf),ident(h_dest)],ident(NULL),const_i(0)]],estmt[call[ident(netif_stop_queue),ident(dev)]],estmt[assign[simple_assi(=),->expr[ident(priv),ident(wake_node)],ident(dest_node)]],estmt[call[ident(schedule_work),&expr[->expr[ident(priv),ident(wake)]]]],estmt[call[ident(kmem_cache_free),ident(packet_task_cache),ident(ptask)]],st_return[ident(NETDEV_TX_BUSY)]],estmt(NONE)],st_return[ident(NETDEV_TX_OK)],statem(N/H),sel_if[expr(N/H),estmt[call[ident(dev_kfree_skb),ident(skb)]],estmt(NONE)],estmt[call[ident(spin_lock_irqsave),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[expr(N/H)],estmt[expr(N/H)],estmt[call[ident(spin_unlock_irqrestore),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],st_return[ident(NETDEV_TX_OK)]]]]
	¶
]]
of size  :::: 432

with result :::::
prg2[def[fname(ether1394_tx),funtype(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(ptask),call[ident(kmem_cache_alloc),ident(packet_task_cache),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(skb),call[ident(skb_share_check),ident(skb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[call[ident(memcpy),&expr[ident(hdr_buf)],->expr[ident(skb),ident(data)],sizeof_expr[ident(hdr_buf)]]],estmt[call[ident(skb_pull),ident(skb),ident(ETH1394_HLEN)]],estmt[assign[simple_assi(=),ident(proto),.expr[ident(hdr_buf),ident(h_proto)]]],estmt[assign[simple_assi(=),ident(dg_size),->expr[ident(skb),ident(len)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(tx_type),ident(ETH1394_GASP)]],estmt[assign[simple_assi(=),ident(dest_node),binary[aop(N/H),ident(LOCAL_BUS),ident(ALL_NODES)]]],estmt[assign[simple_assi(=),ident(max_payload),binary[aop(-),->expr[ident(priv),ident(bc_maxpayload)],ident(ETHER1394_GASP_OVERHEAD)]]],estmt[call[ident(BUG_ON),expr(N/H)]],estmt[assign[simple_assi(=),ident(dgl),->expr[ident(priv),ident(bc_dgl)]]],sel_if[expr(N/H),estmt[expr(N/H)],estmt(NONE)]],{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(node),call[ident(eth1394_find_node_guid),&expr[->expr[ident(priv),ident(ip_node_list)]],call[ident(be64_to_cpu),ident(guid)]]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(node_info),expr(N/H)]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(dest_node),->expr[->expr[->expr[ident(node),ident(ud)],ident(ne)],ident(nodeid)]]],estmt[assign[simple_assi(=),ident(max_payload),->expr[ident(node_info),ident(maxpayload)]]],estmt[call[ident(BUG_ON),expr(N/H)]],estmt[assign[simple_assi(=),ident(dgl),->expr[ident(node_info),ident(dgl)]]],sel_if[expr(N/H),estmt[expr(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(tx_type),ident(ETH1394_WRREQ)]]]],sel_if[expr(N/H),estmt[call[ident(ether1394_arp_to_1394arp),ident(skb),ident(dev)]],estmt(NONE)],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word1)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word2)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word3)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word4)],const_i(0)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(skb)],ident(skb)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(priv)],ident(priv)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(tx_type)],ident(tx_type)]],sel_if[expr(N/H),{}stmt[statem(N/H),estmt[call[ident(spin_lock_irqsave),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[assign[simple_assi(=),ident(addr),->expr[ident(node_info),ident(fifo)]]],estmt[call[ident(spin_unlock_irqrestore),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(addr)],ident(addr)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(dest_node)],ident(dest_node)]]],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(tx_type)],ident(tx_type)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(max_payload)],ident(max_payload)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(outstanding_pkts)],call[ident(ether1394_encapsulate_prep),ident(max_payload),ident(proto),&expr[->expr[ident(ptask),ident(hdr)]],ident(dg_size),ident(dgl)]]],estmt[assign[simple_assi(=),ident(tx_len),call[ident(ether1394_encapsulate),ident(skb),ident(max_payload),&expr[->expr[ident(ptask),ident(hdr)]]]]],estmt[assign[simple_assi(=),->expr[ident(dev),ident(trans_start)],ident(jiffies)]],sel_if[call[ident(ether1394_send_packet),ident(ptask),ident(tx_len)],{}stmt[sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[call[ident(skb_pull),ident(skb),const_i(4)]],estmt[call[ident(ether1394_header),ident(skb),ident(dev),call[ident(ntohs),.expr[ident(hdr_buf),ident(h_proto)]],.expr[ident(hdr_buf),ident(h_dest)],ident(NULL),const_i(0)]],estmt[call[ident(netif_stop_queue),ident(dev)]],estmt[assign[simple_assi(=),->expr[ident(priv),ident(wake_node)],ident(dest_node)]],estmt[call[ident(schedule_work),&expr[->expr[ident(priv),ident(wake)]]]],estmt[call[ident(kmem_cache_free),ident(packet_task_cache),ident(ptask)]],st_return[ident(NETDEV_TX_BUSY)]],estmt(NONE)],st_return[ident(NETDEV_TX_OK)],statem(N/H),sel_if[expr(N/H),estmt[call[ident(dev_kfree_skb),ident(skb)]],estmt(NONE)],estmt[call[ident(spin_lock_irqsave),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[expr(N/H)],estmt[expr(N/H)],estmt[call[ident(spin_unlock_irqrestore),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],st_return[ident(NETDEV_TX_OK)]]]] ==> prg2[def[fname(ether1394_tx),funtype(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(ptask),call[ident(kmem_cache_alloc),ident(packet_task_cache),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(skb),call[ident(skb_share_check),ident(skb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[call[ident(skb_copy_from_linear_data),ident(skb),&expr[ident(hdr_buf)],sizeof_expr[ident(hdr_buf)]]],estmt[call[ident(skb_pull),ident(skb),ident(ETH1394_HLEN)]],estmt[assign[simple_assi(=),ident(proto),.expr[ident(hdr_buf),ident(h_proto)]]],estmt[assign[simple_assi(=),ident(dg_size),->expr[ident(skb),ident(len)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(tx_type),ident(ETH1394_GASP)]],estmt[assign[simple_assi(=),ident(dest_node),binary[aop(N/H),ident(LOCAL_BUS),ident(ALL_NODES)]]],estmt[assign[simple_assi(=),ident(max_payload),binary[aop(-),->expr[ident(priv),ident(bc_maxpayload)],ident(ETHER1394_GASP_OVERHEAD)]]],estmt[call[ident(BUG_ON),expr(N/H)]],estmt[assign[simple_assi(=),ident(dgl),->expr[ident(priv),ident(bc_dgl)]]],sel_if[expr(N/H),estmt[expr(N/H)],estmt(NONE)]],{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(node),call[ident(eth1394_find_node_guid),&expr[->expr[ident(priv),ident(ip_node_list)]],call[ident(be64_to_cpu),ident(guid)]]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(node_info),expr(N/H)]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(dest_node),->expr[->expr[->expr[ident(node),ident(ud)],ident(ne)],ident(nodeid)]]],estmt[assign[simple_assi(=),ident(max_payload),->expr[ident(node_info),ident(maxpayload)]]],estmt[call[ident(BUG_ON),expr(N/H)]],estmt[assign[simple_assi(=),ident(dgl),->expr[ident(node_info),ident(dgl)]]],sel_if[expr(N/H),estmt[expr(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(tx_type),ident(ETH1394_WRREQ)]]]],sel_if[expr(N/H),estmt[call[ident(ether1394_arp_to_1394arp),ident(skb),ident(dev)]],estmt(NONE)],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word1)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word2)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word3)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word4)],const_i(0)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(skb)],ident(skb)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(priv)],ident(priv)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(tx_type)],ident(tx_type)]],sel_if[expr(N/H),{}stmt[statem(N/H),estmt[call[ident(spin_lock_irqsave),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[assign[simple_assi(=),ident(addr),->expr[ident(node_info),ident(fifo)]]],estmt[call[ident(spin_unlock_irqrestore),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(addr)],ident(addr)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(dest_node)],ident(dest_node)]]],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(tx_type)],ident(tx_type)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(max_payload)],ident(max_payload)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(outstanding_pkts)],call[ident(ether1394_encapsulate_prep),ident(max_payload),ident(proto),&expr[->expr[ident(ptask),ident(hdr)]],ident(dg_size),ident(dgl)]]],estmt[assign[simple_assi(=),ident(tx_len),call[ident(ether1394_encapsulate),ident(skb),ident(max_payload),&expr[->expr[ident(ptask),ident(hdr)]]]]],estmt[assign[simple_assi(=),->expr[ident(dev),ident(trans_start)],ident(jiffies)]],sel_if[call[ident(ether1394_send_packet),ident(ptask),ident(tx_len)],{}stmt[sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[call[ident(skb_pull),ident(skb),const_i(4)]],estmt[call[ident(ether1394_header),ident(skb),ident(dev),call[ident(ntohs),.expr[ident(hdr_buf),ident(h_proto)]],.expr[ident(hdr_buf),ident(h_dest)],ident(NULL),const_i(0)]],estmt[call[ident(netif_stop_queue),ident(dev)]],estmt[assign[simple_assi(=),->expr[ident(priv),ident(wake_node)],ident(dest_node)]],estmt[call[ident(schedule_work),&expr[->expr[ident(priv),ident(wake)]]]],estmt[call[ident(kmem_cache_free),ident(packet_task_cache),ident(ptask)]],st_return[ident(NETDEV_TX_BUSY)]],estmt(NONE)],st_return[ident(NETDEV_TX_OK)],statem(N/H),sel_if[expr(N/H),estmt[call[ident(dev_kfree_skb),ident(skb)]],estmt(NONE)],estmt[call[ident(spin_lock_irqsave),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[expr(N/H)],estmt[expr(N/H)],estmt[call[ident(spin_unlock_irqrestore),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],st_return[ident(NETDEV_TX_OK)]]]]
	#no of abstracted update: 1
,
.
flattening lists
filtering
@@ counting : 2
,
.
unabs solutions
[[
call[ident(memcpy),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(data)],->expr[ident(sb),ident(len)]] ==> call[ident(skb_copy_from_linear_data),ident(sb),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(len)]]
	¶
]]
[[
estmt[call[ident(memcpy),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(data)],->expr[ident(sb),ident(len)]]] ==> estmt[call[ident(skb_copy_from_linear_data),ident(sb),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(len)]]]
	¶
]]
[[
{}stmt[estmt[call[ident(memcpy),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(data)],->expr[ident(sb),ident(len)]]],estmt[assign[simple_assi(=),ident(sb),->expr[ident(sb),ident(next)]]]] ==> {}stmt[estmt[call[ident(skb_copy_from_linear_data),ident(sb),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(len)]]],estmt[assign[simple_assi(=),ident(sb),->expr[ident(sb),ident(next)]]]]
	¶
]]
[[
for[assign[simple_assi(=),ident(i),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[call[ident(memcpy),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(data)],->expr[ident(sb),ident(len)]]],estmt[assign[simple_assi(=),ident(sb),->expr[ident(sb),ident(next)]]]]] ==> for[assign[simple_assi(=),ident(i),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[call[ident(skb_copy_from_linear_data),ident(sb),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(len)]]],estmt[assign[simple_assi(=),ident(sb),->expr[ident(sb),ident(next)]]]]]
	¶
]]
[[
{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(skb),call[ident(dev_alloc_skb),->expr[ident(rpp),ident(len)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: Can't alloc RX skb.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(dev_kfree_skb),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(sb),->expr[ident(rpp),ident(first)]]],for[assign[simple_assi(=),ident(i),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[call[ident(memcpy),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(data)],->expr[ident(sb),ident(len)]]],estmt[assign[simple_assi(=),ident(sb),->expr[ident(sb),ident(next)]]]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],statem(N/H)] ==> {}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(skb),call[ident(dev_alloc_skb),->expr[ident(rpp),ident(len)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: Can't alloc RX skb.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(dev_kfree_skb),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(sb),->expr[ident(rpp),ident(first)]]],for[assign[simple_assi(=),ident(i),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[call[ident(skb_copy_from_linear_data),ident(sb),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(len)]]],estmt[assign[simple_assi(=),ident(sb),->expr[ident(sb),ident(next)]]]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],statem(N/H)]
	¶
]]
[[
sel_if[expr(N/H),{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(skb),call[ident(dev_alloc_skb),->expr[ident(rpp),ident(len)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: Can't alloc RX skb.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(dev_kfree_skb),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(sb),->expr[ident(rpp),ident(first)]]],for[assign[simple_assi(=),ident(i),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[call[ident(memcpy),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(data)],->expr[ident(sb),ident(len)]]],estmt[assign[simple_assi(=),ident(sb),->expr[ident(sb),ident(next)]]]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],statem(N/H)],estmt(NONE)] ==> sel_if[expr(N/H),{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(skb),call[ident(dev_alloc_skb),->expr[ident(rpp),ident(len)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: Can't alloc RX skb.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(dev_kfree_skb),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(sb),->expr[ident(rpp),ident(first)]]],for[assign[simple_assi(=),ident(i),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[call[ident(skb_copy_from_linear_data),ident(sb),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(len)]]],estmt[assign[simple_assi(=),ident(sb),->expr[ident(sb),ident(next)]]]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],statem(N/H)],estmt(NONE)]
	¶
]]
[[
{}stmt[statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(l1l2),expr(N/H)]],estmt[assign[simple_assi(=),ident(len),binary[aop(N/H),binary[aop(N/H),array_a[ident(l1l2),const_i(0)],const_i(8)],array_a[ident(l1l2),const_i(1)]]]],estmt[assign[simple_assi(=),ident(len),condexpr3[ident(len),ident(len),const_i(0x10000)]]],estmt[call[ident(RXPRINTK),const_s(%s: PDU has %d bytes.\n),->expr[ident(card),ident(name)],ident(len)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const(N/H),->expr[ident(card),ident(name)],ident(len),->expr[ident(rpp),ident(len)],call[ident(readl),ident(SAR_REG_CDC)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_CRC)],{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: AAL5 CRC error.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(skb),call[ident(dev_alloc_skb),->expr[ident(rpp),ident(len)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: Can't alloc RX skb.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(dev_kfree_skb),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(sb),->expr[ident(rpp),ident(first)]]],for[assign[simple_assi(=),ident(i),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[call[ident(memcpy),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(data)],->expr[ident(sb),ident(len)]]],estmt[assign[simple_assi(=),ident(sb),->expr[ident(sb),ident(next)]]]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(skb),ident(next)],ident(NULL)]],estmt[call[ident(flush_rx_pool),ident(card),ident(rpp)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[call[ident(pci_unmap_single),->expr[ident(card),ident(pcidev)],call[ident(IDT77252_PRV_PADDR),ident(skb)],binary[aop(-),call[ident(skb_end_pointer),ident(skb)],->expr[ident(skb),ident(data)]],ident(PCI_DMA_FROMDEVICE)]],estmt[call[ident(sb_pool_remove),ident(card),ident(skb)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(3),ident(SAR_FB_SIZE_3),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(2),ident(SAR_FB_SIZE_2),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(1),ident(SAR_FB_SIZE_1),const_i(1)]],estmt[call[ident(add_rx_skb),ident(card),const_i(0),ident(SAR_FB_SIZE_0),const_i(1)]]]]],statem(N/H)] ==> {}stmt[statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(l1l2),expr(N/H)]],estmt[assign[simple_assi(=),ident(len),binary[aop(N/H),binary[aop(N/H),array_a[ident(l1l2),const_i(0)],const_i(8)],array_a[ident(l1l2),const_i(1)]]]],estmt[assign[simple_assi(=),ident(len),condexpr3[ident(len),ident(len),const_i(0x10000)]]],estmt[call[ident(RXPRINTK),const_s(%s: PDU has %d bytes.\n),->expr[ident(card),ident(name)],ident(len)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const(N/H),->expr[ident(card),ident(name)],ident(len),->expr[ident(rpp),ident(len)],call[ident(readl),ident(SAR_REG_CDC)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_CRC)],{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: AAL5 CRC error.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(skb),call[ident(dev_alloc_skb),->expr[ident(rpp),ident(len)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: Can't alloc RX skb.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(dev_kfree_skb),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(sb),->expr[ident(rpp),ident(first)]]],for[assign[simple_assi(=),ident(i),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[call[ident(skb_copy_from_linear_data),ident(sb),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(len)]]],estmt[assign[simple_assi(=),ident(sb),->expr[ident(sb),ident(next)]]]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(skb),ident(next)],ident(NULL)]],estmt[call[ident(flush_rx_pool),ident(card),ident(rpp)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[call[ident(pci_unmap_single),->expr[ident(card),ident(pcidev)],call[ident(IDT77252_PRV_PADDR),ident(skb)],binary[aop(-),call[ident(skb_end_pointer),ident(skb)],->expr[ident(skb),ident(data)]],ident(PCI_DMA_FROMDEVICE)]],estmt[call[ident(sb_pool_remove),ident(card),ident(skb)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(3),ident(SAR_FB_SIZE_3),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(2),ident(SAR_FB_SIZE_2),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(1),ident(SAR_FB_SIZE_1),const_i(1)]],estmt[call[ident(add_rx_skb),ident(card),const_i(0),ident(SAR_FB_SIZE_0),const_i(1)]]]]],statem(N/H)]
	¶
]]
[[
sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_EPDU)],{}stmt[statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(l1l2),expr(N/H)]],estmt[assign[simple_assi(=),ident(len),binary[aop(N/H),binary[aop(N/H),array_a[ident(l1l2),const_i(0)],const_i(8)],array_a[ident(l1l2),const_i(1)]]]],estmt[assign[simple_assi(=),ident(len),condexpr3[ident(len),ident(len),const_i(0x10000)]]],estmt[call[ident(RXPRINTK),const_s(%s: PDU has %d bytes.\n),->expr[ident(card),ident(name)],ident(len)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const(N/H),->expr[ident(card),ident(name)],ident(len),->expr[ident(rpp),ident(len)],call[ident(readl),ident(SAR_REG_CDC)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_CRC)],{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: AAL5 CRC error.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(skb),call[ident(dev_alloc_skb),->expr[ident(rpp),ident(len)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: Can't alloc RX skb.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(dev_kfree_skb),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(sb),->expr[ident(rpp),ident(first)]]],for[assign[simple_assi(=),ident(i),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[call[ident(memcpy),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(data)],->expr[ident(sb),ident(len)]]],estmt[assign[simple_assi(=),ident(sb),->expr[ident(sb),ident(next)]]]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(skb),ident(next)],ident(NULL)]],estmt[call[ident(flush_rx_pool),ident(card),ident(rpp)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[call[ident(pci_unmap_single),->expr[ident(card),ident(pcidev)],call[ident(IDT77252_PRV_PADDR),ident(skb)],binary[aop(-),call[ident(skb_end_pointer),ident(skb)],->expr[ident(skb),ident(data)]],ident(PCI_DMA_FROMDEVICE)]],estmt[call[ident(sb_pool_remove),ident(card),ident(skb)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(3),ident(SAR_FB_SIZE_3),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(2),ident(SAR_FB_SIZE_2),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(1),ident(SAR_FB_SIZE_1),const_i(1)]],estmt[call[ident(add_rx_skb),ident(card),const_i(0),ident(SAR_FB_SIZE_0),const_i(1)]]]]],statem(N/H)],estmt(NONE)] ==> sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_EPDU)],{}stmt[statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(l1l2),expr(N/H)]],estmt[assign[simple_assi(=),ident(len),binary[aop(N/H),binary[aop(N/H),array_a[ident(l1l2),const_i(0)],const_i(8)],array_a[ident(l1l2),const_i(1)]]]],estmt[assign[simple_assi(=),ident(len),condexpr3[ident(len),ident(len),const_i(0x10000)]]],estmt[call[ident(RXPRINTK),const_s(%s: PDU has %d bytes.\n),->expr[ident(card),ident(name)],ident(len)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const(N/H),->expr[ident(card),ident(name)],ident(len),->expr[ident(rpp),ident(len)],call[ident(readl),ident(SAR_REG_CDC)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_CRC)],{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: AAL5 CRC error.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(skb),call[ident(dev_alloc_skb),->expr[ident(rpp),ident(len)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: Can't alloc RX skb.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(dev_kfree_skb),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(sb),->expr[ident(rpp),ident(first)]]],for[assign[simple_assi(=),ident(i),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[call[ident(skb_copy_from_linear_data),ident(sb),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(len)]]],estmt[assign[simple_assi(=),ident(sb),->expr[ident(sb),ident(next)]]]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(skb),ident(next)],ident(NULL)]],estmt[call[ident(flush_rx_pool),ident(card),ident(rpp)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[call[ident(pci_unmap_single),->expr[ident(card),ident(pcidev)],call[ident(IDT77252_PRV_PADDR),ident(skb)],binary[aop(-),call[ident(skb_end_pointer),ident(skb)],->expr[ident(skb),ident(data)]],ident(PCI_DMA_FROMDEVICE)]],estmt[call[ident(sb_pool_remove),ident(card),ident(skb)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(3),ident(SAR_FB_SIZE_3),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(2),ident(SAR_FB_SIZE_2),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(1),ident(SAR_FB_SIZE_1),const_i(1)]],estmt[call[ident(add_rx_skb),ident(card),const_i(0),ident(SAR_FB_SIZE_0),const_i(1)]]]]],statem(N/H)],estmt(NONE)]
	¶
]]
[[
{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(stat),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_4)]]]],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_IDLE)],{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: message about inactive connection.\n),->expr[ident(card),ident(name)]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(skb),call[ident(sb_pool_skb),ident(card),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_2)]]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: NULL skb in %s, rsqe: %08x %08x %08x %08x\n),->expr[ident(card),ident(name)],ident(__FUNCTION__),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_1)]],call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_2)]],call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_3)]],call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_4)]]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(header),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_1)]]]],estmt[assign[simple_assi(=),ident(vpi),binary[aop(N/H),binary[aop(N/H),ident(header),const_i(16)],const_i(0x00ff)]]],estmt[assign[simple_assi(=),ident(vci),binary[aop(N/H),binary[aop(N/H),ident(header),const_i(0)],const_i(0xffff)]]],estmt[call[ident(RXPRINTK),const_s(%s: SDU for %d.%d received in buffer 0x%p (data 0x%p).\n),->expr[ident(card),ident(name)],ident(vpi),ident(vci),ident(skb),->expr[ident(skb),ident(data)]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: SDU received for out-of-range vc %u.%u\n),->expr[ident(card),ident(name)],ident(vpi),ident(vci)]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(vc),array_a[->expr[ident(card),ident(vcs)],call[ident(VPCI2VC),ident(card),ident(vpi),ident(vci)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: SDU received on non RX vc %u.%u\n),->expr[ident(card),ident(name)],ident(vpi),ident(vci)]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(vcc),->expr[ident(vc),ident(rx_vcc)]]],estmt[call[ident(pci_dma_sync_single_for_cpu),->expr[ident(card),ident(pcidev)],call[ident(IDT77252_PRV_PADDR),ident(skb)],binary[aop(-),call[ident(skb_end_pointer),ident(skb)],->expr[ident(skb),ident(data)]],ident(PCI_DMA_FROMDEVICE)]],sel_if[expr(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(cell),->expr[ident(skb),ident(data)]]],for[assign[simple_assi(=),ident(i),binary[aop(N/H),ident(stat),ident(SAR_RSQE_CELLCNT)]],ident(i),expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: Can't allocate buffers for aal0.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(atomic_add),ident(i),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_drop)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: atm_charge() dropped aal0 packets.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(atomic_add),binary[aop(-),ident(i),const_i(1)],&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_drop)]]]],estmt[call[ident(dev_kfree_skb),ident(sb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(aal0),binary[aop(N/H),binary[aop(N/H),ident(vpi),ident(ATM_HDR_VPI_SHIFT)],binary[aop(N/H),ident(vci),ident(ATM_HDR_VCI_SHIFT)]]]],estmt[assign[op_assi(|=),ident(aal0),condexpr3[binary[aop(N/H),ident(stat),ident(SAR_RSQE_EPDU)],const_i(0x00000002),const_i(0)]]],estmt[assign[op_assi(|=),ident(aal0),condexpr3[binary[aop(N/H),ident(stat),ident(SAR_RSQE_CLP)],const_i(0x00000001),const_i(0)]]],estmt[assign[simple_assi(=),*expr[expr(N/H)],ident(aal0)]],estmt[call[ident(skb_put),ident(sb),sizeoftype_expr[type(N/H)]]],estmt[call[ident(memcpy),call[ident(skb_put),ident(sb),ident(ATM_CELL_PAYLOAD)],ident(cell),ident(ATM_CELL_PAYLOAD)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(sb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(sb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(sb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],estmt[assign[op_assi(+=),ident(cell),ident(ATM_CELL_PAYLOAD)]]]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: Unexpected AAL type in dequeue_rx(): %d.\n),->expr[ident(card),ident(name)],.expr[->expr[ident(vcc),ident(qos)],ident(aal)]]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(skb),ident(len)],binary[aop(*),binary[aop(N/H),ident(stat),ident(SAR_RSQE_CELLCNT)],ident(ATM_CELL_PAYLOAD)]]],estmt[assign[simple_assi(=),ident(rpp),&expr[.expr[->expr[ident(vc),ident(rcv)],ident(rx_pool)]]]],estmt[assign[op_assi(+=),->expr[ident(rpp),ident(len)],->expr[ident(skb),ident(len)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),->expr[ident(rpp),ident(first)],ident(skb)]],estmt(NONE)],estmt[assign[simple_assi(=),*expr[->expr[ident(rpp),ident(last)]],ident(skb)]],estmt[assign[simple_assi(=),->expr[ident(rpp),ident(last)],&expr[->expr[ident(skb),ident(next)]]]],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_EPDU)],{}stmt[statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(l1l2),expr(N/H)]],estmt[assign[simple_assi(=),ident(len),binary[aop(N/H),binary[aop(N/H),array_a[ident(l1l2),const_i(0)],const_i(8)],array_a[ident(l1l2),const_i(1)]]]],estmt[assign[simple_assi(=),ident(len),condexpr3[ident(len),ident(len),const_i(0x10000)]]],estmt[call[ident(RXPRINTK),const_s(%s: PDU has %d bytes.\n),->expr[ident(card),ident(name)],ident(len)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const(N/H),->expr[ident(card),ident(name)],ident(len),->expr[ident(rpp),ident(len)],call[ident(readl),ident(SAR_REG_CDC)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_CRC)],{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: AAL5 CRC error.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(skb),call[ident(dev_alloc_skb),->expr[ident(rpp),ident(len)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: Can't alloc RX skb.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(dev_kfree_skb),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(sb),->expr[ident(rpp),ident(first)]]],for[assign[simple_assi(=),ident(i),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[call[ident(memcpy),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(data)],->expr[ident(sb),ident(len)]]],estmt[assign[simple_assi(=),ident(sb),->expr[ident(sb),ident(next)]]]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(skb),ident(next)],ident(NULL)]],estmt[call[ident(flush_rx_pool),ident(card),ident(rpp)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[call[ident(pci_unmap_single),->expr[ident(card),ident(pcidev)],call[ident(IDT77252_PRV_PADDR),ident(skb)],binary[aop(-),call[ident(skb_end_pointer),ident(skb)],->expr[ident(skb),ident(data)]],ident(PCI_DMA_FROMDEVICE)]],estmt[call[ident(sb_pool_remove),ident(card),ident(skb)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(3),ident(SAR_FB_SIZE_3),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(2),ident(SAR_FB_SIZE_2),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(1),ident(SAR_FB_SIZE_1),const_i(1)]],estmt[call[ident(add_rx_skb),ident(card),const_i(0),ident(SAR_FB_SIZE_0),const_i(1)]]]]],statem(N/H)],estmt(NONE)]] ==> {}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(stat),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_4)]]]],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_IDLE)],{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: message about inactive connection.\n),->expr[ident(card),ident(name)]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(skb),call[ident(sb_pool_skb),ident(card),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_2)]]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: NULL skb in %s, rsqe: %08x %08x %08x %08x\n),->expr[ident(card),ident(name)],ident(__FUNCTION__),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_1)]],call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_2)]],call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_3)]],call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_4)]]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(header),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_1)]]]],estmt[assign[simple_assi(=),ident(vpi),binary[aop(N/H),binary[aop(N/H),ident(header),const_i(16)],const_i(0x00ff)]]],estmt[assign[simple_assi(=),ident(vci),binary[aop(N/H),binary[aop(N/H),ident(header),const_i(0)],const_i(0xffff)]]],estmt[call[ident(RXPRINTK),const_s(%s: SDU for %d.%d received in buffer 0x%p (data 0x%p).\n),->expr[ident(card),ident(name)],ident(vpi),ident(vci),ident(skb),->expr[ident(skb),ident(data)]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: SDU received for out-of-range vc %u.%u\n),->expr[ident(card),ident(name)],ident(vpi),ident(vci)]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(vc),array_a[->expr[ident(card),ident(vcs)],call[ident(VPCI2VC),ident(card),ident(vpi),ident(vci)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: SDU received on non RX vc %u.%u\n),->expr[ident(card),ident(name)],ident(vpi),ident(vci)]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(vcc),->expr[ident(vc),ident(rx_vcc)]]],estmt[call[ident(pci_dma_sync_single_for_cpu),->expr[ident(card),ident(pcidev)],call[ident(IDT77252_PRV_PADDR),ident(skb)],binary[aop(-),call[ident(skb_end_pointer),ident(skb)],->expr[ident(skb),ident(data)]],ident(PCI_DMA_FROMDEVICE)]],sel_if[expr(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(cell),->expr[ident(skb),ident(data)]]],for[assign[simple_assi(=),ident(i),binary[aop(N/H),ident(stat),ident(SAR_RSQE_CELLCNT)]],ident(i),expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: Can't allocate buffers for aal0.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(atomic_add),ident(i),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_drop)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: atm_charge() dropped aal0 packets.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(atomic_add),binary[aop(-),ident(i),const_i(1)],&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_drop)]]]],estmt[call[ident(dev_kfree_skb),ident(sb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(aal0),binary[aop(N/H),binary[aop(N/H),ident(vpi),ident(ATM_HDR_VPI_SHIFT)],binary[aop(N/H),ident(vci),ident(ATM_HDR_VCI_SHIFT)]]]],estmt[assign[op_assi(|=),ident(aal0),condexpr3[binary[aop(N/H),ident(stat),ident(SAR_RSQE_EPDU)],const_i(0x00000002),const_i(0)]]],estmt[assign[op_assi(|=),ident(aal0),condexpr3[binary[aop(N/H),ident(stat),ident(SAR_RSQE_CLP)],const_i(0x00000001),const_i(0)]]],estmt[assign[simple_assi(=),*expr[expr(N/H)],ident(aal0)]],estmt[call[ident(skb_put),ident(sb),sizeoftype_expr[type(N/H)]]],estmt[call[ident(memcpy),call[ident(skb_put),ident(sb),ident(ATM_CELL_PAYLOAD)],ident(cell),ident(ATM_CELL_PAYLOAD)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(sb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(sb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(sb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],estmt[assign[op_assi(+=),ident(cell),ident(ATM_CELL_PAYLOAD)]]]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: Unexpected AAL type in dequeue_rx(): %d.\n),->expr[ident(card),ident(name)],.expr[->expr[ident(vcc),ident(qos)],ident(aal)]]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(skb),ident(len)],binary[aop(*),binary[aop(N/H),ident(stat),ident(SAR_RSQE_CELLCNT)],ident(ATM_CELL_PAYLOAD)]]],estmt[assign[simple_assi(=),ident(rpp),&expr[.expr[->expr[ident(vc),ident(rcv)],ident(rx_pool)]]]],estmt[assign[op_assi(+=),->expr[ident(rpp),ident(len)],->expr[ident(skb),ident(len)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),->expr[ident(rpp),ident(first)],ident(skb)]],estmt(NONE)],estmt[assign[simple_assi(=),*expr[->expr[ident(rpp),ident(last)]],ident(skb)]],estmt[assign[simple_assi(=),->expr[ident(rpp),ident(last)],&expr[->expr[ident(skb),ident(next)]]]],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_EPDU)],{}stmt[statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(l1l2),expr(N/H)]],estmt[assign[simple_assi(=),ident(len),binary[aop(N/H),binary[aop(N/H),array_a[ident(l1l2),const_i(0)],const_i(8)],array_a[ident(l1l2),const_i(1)]]]],estmt[assign[simple_assi(=),ident(len),condexpr3[ident(len),ident(len),const_i(0x10000)]]],estmt[call[ident(RXPRINTK),const_s(%s: PDU has %d bytes.\n),->expr[ident(card),ident(name)],ident(len)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const(N/H),->expr[ident(card),ident(name)],ident(len),->expr[ident(rpp),ident(len)],call[ident(readl),ident(SAR_REG_CDC)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_CRC)],{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: AAL5 CRC error.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(skb),call[ident(dev_alloc_skb),->expr[ident(rpp),ident(len)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: Can't alloc RX skb.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(dev_kfree_skb),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(sb),->expr[ident(rpp),ident(first)]]],for[assign[simple_assi(=),ident(i),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[call[ident(skb_copy_from_linear_data),ident(sb),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(len)]]],estmt[assign[simple_assi(=),ident(sb),->expr[ident(sb),ident(next)]]]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(skb),ident(next)],ident(NULL)]],estmt[call[ident(flush_rx_pool),ident(card),ident(rpp)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[call[ident(pci_unmap_single),->expr[ident(card),ident(pcidev)],call[ident(IDT77252_PRV_PADDR),ident(skb)],binary[aop(-),call[ident(skb_end_pointer),ident(skb)],->expr[ident(skb),ident(data)]],ident(PCI_DMA_FROMDEVICE)]],estmt[call[ident(sb_pool_remove),ident(card),ident(skb)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(3),ident(SAR_FB_SIZE_3),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(2),ident(SAR_FB_SIZE_2),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(1),ident(SAR_FB_SIZE_1),const_i(1)]],estmt[call[ident(add_rx_skb),ident(card),const_i(0),ident(SAR_FB_SIZE_0),const_i(1)]]]]],statem(N/H)],estmt(NONE)]]
	¶
]]
[[
def[fname(dequeue_rx),funtype(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(stat),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_4)]]]],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_IDLE)],{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: message about inactive connection.\n),->expr[ident(card),ident(name)]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(skb),call[ident(sb_pool_skb),ident(card),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_2)]]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: NULL skb in %s, rsqe: %08x %08x %08x %08x\n),->expr[ident(card),ident(name)],ident(__FUNCTION__),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_1)]],call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_2)]],call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_3)]],call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_4)]]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(header),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_1)]]]],estmt[assign[simple_assi(=),ident(vpi),binary[aop(N/H),binary[aop(N/H),ident(header),const_i(16)],const_i(0x00ff)]]],estmt[assign[simple_assi(=),ident(vci),binary[aop(N/H),binary[aop(N/H),ident(header),const_i(0)],const_i(0xffff)]]],estmt[call[ident(RXPRINTK),const_s(%s: SDU for %d.%d received in buffer 0x%p (data 0x%p).\n),->expr[ident(card),ident(name)],ident(vpi),ident(vci),ident(skb),->expr[ident(skb),ident(data)]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: SDU received for out-of-range vc %u.%u\n),->expr[ident(card),ident(name)],ident(vpi),ident(vci)]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(vc),array_a[->expr[ident(card),ident(vcs)],call[ident(VPCI2VC),ident(card),ident(vpi),ident(vci)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: SDU received on non RX vc %u.%u\n),->expr[ident(card),ident(name)],ident(vpi),ident(vci)]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(vcc),->expr[ident(vc),ident(rx_vcc)]]],estmt[call[ident(pci_dma_sync_single_for_cpu),->expr[ident(card),ident(pcidev)],call[ident(IDT77252_PRV_PADDR),ident(skb)],binary[aop(-),call[ident(skb_end_pointer),ident(skb)],->expr[ident(skb),ident(data)]],ident(PCI_DMA_FROMDEVICE)]],sel_if[expr(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(cell),->expr[ident(skb),ident(data)]]],for[assign[simple_assi(=),ident(i),binary[aop(N/H),ident(stat),ident(SAR_RSQE_CELLCNT)]],ident(i),expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: Can't allocate buffers for aal0.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(atomic_add),ident(i),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_drop)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: atm_charge() dropped aal0 packets.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(atomic_add),binary[aop(-),ident(i),const_i(1)],&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_drop)]]]],estmt[call[ident(dev_kfree_skb),ident(sb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(aal0),binary[aop(N/H),binary[aop(N/H),ident(vpi),ident(ATM_HDR_VPI_SHIFT)],binary[aop(N/H),ident(vci),ident(ATM_HDR_VCI_SHIFT)]]]],estmt[assign[op_assi(|=),ident(aal0),condexpr3[binary[aop(N/H),ident(stat),ident(SAR_RSQE_EPDU)],const_i(0x00000002),const_i(0)]]],estmt[assign[op_assi(|=),ident(aal0),condexpr3[binary[aop(N/H),ident(stat),ident(SAR_RSQE_CLP)],const_i(0x00000001),const_i(0)]]],estmt[assign[simple_assi(=),*expr[expr(N/H)],ident(aal0)]],estmt[call[ident(skb_put),ident(sb),sizeoftype_expr[type(N/H)]]],estmt[call[ident(memcpy),call[ident(skb_put),ident(sb),ident(ATM_CELL_PAYLOAD)],ident(cell),ident(ATM_CELL_PAYLOAD)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(sb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(sb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(sb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],estmt[assign[op_assi(+=),ident(cell),ident(ATM_CELL_PAYLOAD)]]]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: Unexpected AAL type in dequeue_rx(): %d.\n),->expr[ident(card),ident(name)],.expr[->expr[ident(vcc),ident(qos)],ident(aal)]]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(skb),ident(len)],binary[aop(*),binary[aop(N/H),ident(stat),ident(SAR_RSQE_CELLCNT)],ident(ATM_CELL_PAYLOAD)]]],estmt[assign[simple_assi(=),ident(rpp),&expr[.expr[->expr[ident(vc),ident(rcv)],ident(rx_pool)]]]],estmt[assign[op_assi(+=),->expr[ident(rpp),ident(len)],->expr[ident(skb),ident(len)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),->expr[ident(rpp),ident(first)],ident(skb)]],estmt(NONE)],estmt[assign[simple_assi(=),*expr[->expr[ident(rpp),ident(last)]],ident(skb)]],estmt[assign[simple_assi(=),->expr[ident(rpp),ident(last)],&expr[->expr[ident(skb),ident(next)]]]],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_EPDU)],{}stmt[statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(l1l2),expr(N/H)]],estmt[assign[simple_assi(=),ident(len),binary[aop(N/H),binary[aop(N/H),array_a[ident(l1l2),const_i(0)],const_i(8)],array_a[ident(l1l2),const_i(1)]]]],estmt[assign[simple_assi(=),ident(len),condexpr3[ident(len),ident(len),const_i(0x10000)]]],estmt[call[ident(RXPRINTK),const_s(%s: PDU has %d bytes.\n),->expr[ident(card),ident(name)],ident(len)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const(N/H),->expr[ident(card),ident(name)],ident(len),->expr[ident(rpp),ident(len)],call[ident(readl),ident(SAR_REG_CDC)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_CRC)],{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: AAL5 CRC error.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(skb),call[ident(dev_alloc_skb),->expr[ident(rpp),ident(len)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: Can't alloc RX skb.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(dev_kfree_skb),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(sb),->expr[ident(rpp),ident(first)]]],for[assign[simple_assi(=),ident(i),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[call[ident(memcpy),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(data)],->expr[ident(sb),ident(len)]]],estmt[assign[simple_assi(=),ident(sb),->expr[ident(sb),ident(next)]]]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(skb),ident(next)],ident(NULL)]],estmt[call[ident(flush_rx_pool),ident(card),ident(rpp)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[call[ident(pci_unmap_single),->expr[ident(card),ident(pcidev)],call[ident(IDT77252_PRV_PADDR),ident(skb)],binary[aop(-),call[ident(skb_end_pointer),ident(skb)],->expr[ident(skb),ident(data)]],ident(PCI_DMA_FROMDEVICE)]],estmt[call[ident(sb_pool_remove),ident(card),ident(skb)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(3),ident(SAR_FB_SIZE_3),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(2),ident(SAR_FB_SIZE_2),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(1),ident(SAR_FB_SIZE_1),const_i(1)]],estmt[call[ident(add_rx_skb),ident(card),const_i(0),ident(SAR_FB_SIZE_0),const_i(1)]]]]],statem(N/H)],estmt(NONE)]]] ==> def[fname(dequeue_rx),funtype(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(stat),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_4)]]]],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_IDLE)],{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: message about inactive connection.\n),->expr[ident(card),ident(name)]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(skb),call[ident(sb_pool_skb),ident(card),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_2)]]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: NULL skb in %s, rsqe: %08x %08x %08x %08x\n),->expr[ident(card),ident(name)],ident(__FUNCTION__),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_1)]],call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_2)]],call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_3)]],call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_4)]]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(header),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_1)]]]],estmt[assign[simple_assi(=),ident(vpi),binary[aop(N/H),binary[aop(N/H),ident(header),const_i(16)],const_i(0x00ff)]]],estmt[assign[simple_assi(=),ident(vci),binary[aop(N/H),binary[aop(N/H),ident(header),const_i(0)],const_i(0xffff)]]],estmt[call[ident(RXPRINTK),const_s(%s: SDU for %d.%d received in buffer 0x%p (data 0x%p).\n),->expr[ident(card),ident(name)],ident(vpi),ident(vci),ident(skb),->expr[ident(skb),ident(data)]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: SDU received for out-of-range vc %u.%u\n),->expr[ident(card),ident(name)],ident(vpi),ident(vci)]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(vc),array_a[->expr[ident(card),ident(vcs)],call[ident(VPCI2VC),ident(card),ident(vpi),ident(vci)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: SDU received on non RX vc %u.%u\n),->expr[ident(card),ident(name)],ident(vpi),ident(vci)]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(vcc),->expr[ident(vc),ident(rx_vcc)]]],estmt[call[ident(pci_dma_sync_single_for_cpu),->expr[ident(card),ident(pcidev)],call[ident(IDT77252_PRV_PADDR),ident(skb)],binary[aop(-),call[ident(skb_end_pointer),ident(skb)],->expr[ident(skb),ident(data)]],ident(PCI_DMA_FROMDEVICE)]],sel_if[expr(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(cell),->expr[ident(skb),ident(data)]]],for[assign[simple_assi(=),ident(i),binary[aop(N/H),ident(stat),ident(SAR_RSQE_CELLCNT)]],ident(i),expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: Can't allocate buffers for aal0.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(atomic_add),ident(i),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_drop)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: atm_charge() dropped aal0 packets.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(atomic_add),binary[aop(-),ident(i),const_i(1)],&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_drop)]]]],estmt[call[ident(dev_kfree_skb),ident(sb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(aal0),binary[aop(N/H),binary[aop(N/H),ident(vpi),ident(ATM_HDR_VPI_SHIFT)],binary[aop(N/H),ident(vci),ident(ATM_HDR_VCI_SHIFT)]]]],estmt[assign[op_assi(|=),ident(aal0),condexpr3[binary[aop(N/H),ident(stat),ident(SAR_RSQE_EPDU)],const_i(0x00000002),const_i(0)]]],estmt[assign[op_assi(|=),ident(aal0),condexpr3[binary[aop(N/H),ident(stat),ident(SAR_RSQE_CLP)],const_i(0x00000001),const_i(0)]]],estmt[assign[simple_assi(=),*expr[expr(N/H)],ident(aal0)]],estmt[call[ident(skb_put),ident(sb),sizeoftype_expr[type(N/H)]]],estmt[call[ident(memcpy),call[ident(skb_put),ident(sb),ident(ATM_CELL_PAYLOAD)],ident(cell),ident(ATM_CELL_PAYLOAD)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(sb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(sb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(sb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],estmt[assign[op_assi(+=),ident(cell),ident(ATM_CELL_PAYLOAD)]]]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: Unexpected AAL type in dequeue_rx(): %d.\n),->expr[ident(card),ident(name)],.expr[->expr[ident(vcc),ident(qos)],ident(aal)]]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(skb),ident(len)],binary[aop(*),binary[aop(N/H),ident(stat),ident(SAR_RSQE_CELLCNT)],ident(ATM_CELL_PAYLOAD)]]],estmt[assign[simple_assi(=),ident(rpp),&expr[.expr[->expr[ident(vc),ident(rcv)],ident(rx_pool)]]]],estmt[assign[op_assi(+=),->expr[ident(rpp),ident(len)],->expr[ident(skb),ident(len)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),->expr[ident(rpp),ident(first)],ident(skb)]],estmt(NONE)],estmt[assign[simple_assi(=),*expr[->expr[ident(rpp),ident(last)]],ident(skb)]],estmt[assign[simple_assi(=),->expr[ident(rpp),ident(last)],&expr[->expr[ident(skb),ident(next)]]]],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_EPDU)],{}stmt[statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(l1l2),expr(N/H)]],estmt[assign[simple_assi(=),ident(len),binary[aop(N/H),binary[aop(N/H),array_a[ident(l1l2),const_i(0)],const_i(8)],array_a[ident(l1l2),const_i(1)]]]],estmt[assign[simple_assi(=),ident(len),condexpr3[ident(len),ident(len),const_i(0x10000)]]],estmt[call[ident(RXPRINTK),const_s(%s: PDU has %d bytes.\n),->expr[ident(card),ident(name)],ident(len)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const(N/H),->expr[ident(card),ident(name)],ident(len),->expr[ident(rpp),ident(len)],call[ident(readl),ident(SAR_REG_CDC)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_CRC)],{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: AAL5 CRC error.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(skb),call[ident(dev_alloc_skb),->expr[ident(rpp),ident(len)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: Can't alloc RX skb.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(dev_kfree_skb),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(sb),->expr[ident(rpp),ident(first)]]],for[assign[simple_assi(=),ident(i),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[call[ident(skb_copy_from_linear_data),ident(sb),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(len)]]],estmt[assign[simple_assi(=),ident(sb),->expr[ident(sb),ident(next)]]]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(skb),ident(next)],ident(NULL)]],estmt[call[ident(flush_rx_pool),ident(card),ident(rpp)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[call[ident(pci_unmap_single),->expr[ident(card),ident(pcidev)],call[ident(IDT77252_PRV_PADDR),ident(skb)],binary[aop(-),call[ident(skb_end_pointer),ident(skb)],->expr[ident(skb),ident(data)]],ident(PCI_DMA_FROMDEVICE)]],estmt[call[ident(sb_pool_remove),ident(card),ident(skb)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(3),ident(SAR_FB_SIZE_3),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(2),ident(SAR_FB_SIZE_2),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(1),ident(SAR_FB_SIZE_1),const_i(1)]],estmt[call[ident(add_rx_skb),ident(card),const_i(0),ident(SAR_FB_SIZE_0),const_i(1)]]]]],statem(N/H)],estmt(NONE)]]]
	¶
]]
[[
prg2[def[fname(dequeue_rx),funtype(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(stat),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_4)]]]],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_IDLE)],{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: message about inactive connection.\n),->expr[ident(card),ident(name)]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(skb),call[ident(sb_pool_skb),ident(card),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_2)]]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: NULL skb in %s, rsqe: %08x %08x %08x %08x\n),->expr[ident(card),ident(name)],ident(__FUNCTION__),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_1)]],call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_2)]],call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_3)]],call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_4)]]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(header),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_1)]]]],estmt[assign[simple_assi(=),ident(vpi),binary[aop(N/H),binary[aop(N/H),ident(header),const_i(16)],const_i(0x00ff)]]],estmt[assign[simple_assi(=),ident(vci),binary[aop(N/H),binary[aop(N/H),ident(header),const_i(0)],const_i(0xffff)]]],estmt[call[ident(RXPRINTK),const_s(%s: SDU for %d.%d received in buffer 0x%p (data 0x%p).\n),->expr[ident(card),ident(name)],ident(vpi),ident(vci),ident(skb),->expr[ident(skb),ident(data)]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: SDU received for out-of-range vc %u.%u\n),->expr[ident(card),ident(name)],ident(vpi),ident(vci)]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(vc),array_a[->expr[ident(card),ident(vcs)],call[ident(VPCI2VC),ident(card),ident(vpi),ident(vci)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: SDU received on non RX vc %u.%u\n),->expr[ident(card),ident(name)],ident(vpi),ident(vci)]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(vcc),->expr[ident(vc),ident(rx_vcc)]]],estmt[call[ident(pci_dma_sync_single_for_cpu),->expr[ident(card),ident(pcidev)],call[ident(IDT77252_PRV_PADDR),ident(skb)],binary[aop(-),call[ident(skb_end_pointer),ident(skb)],->expr[ident(skb),ident(data)]],ident(PCI_DMA_FROMDEVICE)]],sel_if[expr(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(cell),->expr[ident(skb),ident(data)]]],for[assign[simple_assi(=),ident(i),binary[aop(N/H),ident(stat),ident(SAR_RSQE_CELLCNT)]],ident(i),expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: Can't allocate buffers for aal0.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(atomic_add),ident(i),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_drop)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: atm_charge() dropped aal0 packets.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(atomic_add),binary[aop(-),ident(i),const_i(1)],&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_drop)]]]],estmt[call[ident(dev_kfree_skb),ident(sb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(aal0),binary[aop(N/H),binary[aop(N/H),ident(vpi),ident(ATM_HDR_VPI_SHIFT)],binary[aop(N/H),ident(vci),ident(ATM_HDR_VCI_SHIFT)]]]],estmt[assign[op_assi(|=),ident(aal0),condexpr3[binary[aop(N/H),ident(stat),ident(SAR_RSQE_EPDU)],const_i(0x00000002),const_i(0)]]],estmt[assign[op_assi(|=),ident(aal0),condexpr3[binary[aop(N/H),ident(stat),ident(SAR_RSQE_CLP)],const_i(0x00000001),const_i(0)]]],estmt[assign[simple_assi(=),*expr[expr(N/H)],ident(aal0)]],estmt[call[ident(skb_put),ident(sb),sizeoftype_expr[type(N/H)]]],estmt[call[ident(memcpy),call[ident(skb_put),ident(sb),ident(ATM_CELL_PAYLOAD)],ident(cell),ident(ATM_CELL_PAYLOAD)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(sb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(sb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(sb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],estmt[assign[op_assi(+=),ident(cell),ident(ATM_CELL_PAYLOAD)]]]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: Unexpected AAL type in dequeue_rx(): %d.\n),->expr[ident(card),ident(name)],.expr[->expr[ident(vcc),ident(qos)],ident(aal)]]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(skb),ident(len)],binary[aop(*),binary[aop(N/H),ident(stat),ident(SAR_RSQE_CELLCNT)],ident(ATM_CELL_PAYLOAD)]]],estmt[assign[simple_assi(=),ident(rpp),&expr[.expr[->expr[ident(vc),ident(rcv)],ident(rx_pool)]]]],estmt[assign[op_assi(+=),->expr[ident(rpp),ident(len)],->expr[ident(skb),ident(len)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),->expr[ident(rpp),ident(first)],ident(skb)]],estmt(NONE)],estmt[assign[simple_assi(=),*expr[->expr[ident(rpp),ident(last)]],ident(skb)]],estmt[assign[simple_assi(=),->expr[ident(rpp),ident(last)],&expr[->expr[ident(skb),ident(next)]]]],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_EPDU)],{}stmt[statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(l1l2),expr(N/H)]],estmt[assign[simple_assi(=),ident(len),binary[aop(N/H),binary[aop(N/H),array_a[ident(l1l2),const_i(0)],const_i(8)],array_a[ident(l1l2),const_i(1)]]]],estmt[assign[simple_assi(=),ident(len),condexpr3[ident(len),ident(len),const_i(0x10000)]]],estmt[call[ident(RXPRINTK),const_s(%s: PDU has %d bytes.\n),->expr[ident(card),ident(name)],ident(len)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const(N/H),->expr[ident(card),ident(name)],ident(len),->expr[ident(rpp),ident(len)],call[ident(readl),ident(SAR_REG_CDC)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_CRC)],{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: AAL5 CRC error.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(skb),call[ident(dev_alloc_skb),->expr[ident(rpp),ident(len)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: Can't alloc RX skb.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(dev_kfree_skb),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(sb),->expr[ident(rpp),ident(first)]]],for[assign[simple_assi(=),ident(i),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[call[ident(memcpy),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(data)],->expr[ident(sb),ident(len)]]],estmt[assign[simple_assi(=),ident(sb),->expr[ident(sb),ident(next)]]]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(skb),ident(next)],ident(NULL)]],estmt[call[ident(flush_rx_pool),ident(card),ident(rpp)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[call[ident(pci_unmap_single),->expr[ident(card),ident(pcidev)],call[ident(IDT77252_PRV_PADDR),ident(skb)],binary[aop(-),call[ident(skb_end_pointer),ident(skb)],->expr[ident(skb),ident(data)]],ident(PCI_DMA_FROMDEVICE)]],estmt[call[ident(sb_pool_remove),ident(card),ident(skb)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(3),ident(SAR_FB_SIZE_3),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(2),ident(SAR_FB_SIZE_2),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(1),ident(SAR_FB_SIZE_1),const_i(1)]],estmt[call[ident(add_rx_skb),ident(card),const_i(0),ident(SAR_FB_SIZE_0),const_i(1)]]]]],statem(N/H)],estmt(NONE)]]]] ==> prg2[def[fname(dequeue_rx),funtype(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(stat),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_4)]]]],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_IDLE)],{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: message about inactive connection.\n),->expr[ident(card),ident(name)]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(skb),call[ident(sb_pool_skb),ident(card),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_2)]]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: NULL skb in %s, rsqe: %08x %08x %08x %08x\n),->expr[ident(card),ident(name)],ident(__FUNCTION__),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_1)]],call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_2)]],call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_3)]],call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_4)]]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(header),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_1)]]]],estmt[assign[simple_assi(=),ident(vpi),binary[aop(N/H),binary[aop(N/H),ident(header),const_i(16)],const_i(0x00ff)]]],estmt[assign[simple_assi(=),ident(vci),binary[aop(N/H),binary[aop(N/H),ident(header),const_i(0)],const_i(0xffff)]]],estmt[call[ident(RXPRINTK),const_s(%s: SDU for %d.%d received in buffer 0x%p (data 0x%p).\n),->expr[ident(card),ident(name)],ident(vpi),ident(vci),ident(skb),->expr[ident(skb),ident(data)]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: SDU received for out-of-range vc %u.%u\n),->expr[ident(card),ident(name)],ident(vpi),ident(vci)]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(vc),array_a[->expr[ident(card),ident(vcs)],call[ident(VPCI2VC),ident(card),ident(vpi),ident(vci)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: SDU received on non RX vc %u.%u\n),->expr[ident(card),ident(name)],ident(vpi),ident(vci)]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(vcc),->expr[ident(vc),ident(rx_vcc)]]],estmt[call[ident(pci_dma_sync_single_for_cpu),->expr[ident(card),ident(pcidev)],call[ident(IDT77252_PRV_PADDR),ident(skb)],binary[aop(-),call[ident(skb_end_pointer),ident(skb)],->expr[ident(skb),ident(data)]],ident(PCI_DMA_FROMDEVICE)]],sel_if[expr(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(cell),->expr[ident(skb),ident(data)]]],for[assign[simple_assi(=),ident(i),binary[aop(N/H),ident(stat),ident(SAR_RSQE_CELLCNT)]],ident(i),expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: Can't allocate buffers for aal0.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(atomic_add),ident(i),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_drop)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: atm_charge() dropped aal0 packets.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(atomic_add),binary[aop(-),ident(i),const_i(1)],&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_drop)]]]],estmt[call[ident(dev_kfree_skb),ident(sb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(aal0),binary[aop(N/H),binary[aop(N/H),ident(vpi),ident(ATM_HDR_VPI_SHIFT)],binary[aop(N/H),ident(vci),ident(ATM_HDR_VCI_SHIFT)]]]],estmt[assign[op_assi(|=),ident(aal0),condexpr3[binary[aop(N/H),ident(stat),ident(SAR_RSQE_EPDU)],const_i(0x00000002),const_i(0)]]],estmt[assign[op_assi(|=),ident(aal0),condexpr3[binary[aop(N/H),ident(stat),ident(SAR_RSQE_CLP)],const_i(0x00000001),const_i(0)]]],estmt[assign[simple_assi(=),*expr[expr(N/H)],ident(aal0)]],estmt[call[ident(skb_put),ident(sb),sizeoftype_expr[type(N/H)]]],estmt[call[ident(memcpy),call[ident(skb_put),ident(sb),ident(ATM_CELL_PAYLOAD)],ident(cell),ident(ATM_CELL_PAYLOAD)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(sb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(sb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(sb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],estmt[assign[op_assi(+=),ident(cell),ident(ATM_CELL_PAYLOAD)]]]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: Unexpected AAL type in dequeue_rx(): %d.\n),->expr[ident(card),ident(name)],.expr[->expr[ident(vcc),ident(qos)],ident(aal)]]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(skb),ident(len)],binary[aop(*),binary[aop(N/H),ident(stat),ident(SAR_RSQE_CELLCNT)],ident(ATM_CELL_PAYLOAD)]]],estmt[assign[simple_assi(=),ident(rpp),&expr[.expr[->expr[ident(vc),ident(rcv)],ident(rx_pool)]]]],estmt[assign[op_assi(+=),->expr[ident(rpp),ident(len)],->expr[ident(skb),ident(len)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),->expr[ident(rpp),ident(first)],ident(skb)]],estmt(NONE)],estmt[assign[simple_assi(=),*expr[->expr[ident(rpp),ident(last)]],ident(skb)]],estmt[assign[simple_assi(=),->expr[ident(rpp),ident(last)],&expr[->expr[ident(skb),ident(next)]]]],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_EPDU)],{}stmt[statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(l1l2),expr(N/H)]],estmt[assign[simple_assi(=),ident(len),binary[aop(N/H),binary[aop(N/H),array_a[ident(l1l2),const_i(0)],const_i(8)],array_a[ident(l1l2),const_i(1)]]]],estmt[assign[simple_assi(=),ident(len),condexpr3[ident(len),ident(len),const_i(0x10000)]]],estmt[call[ident(RXPRINTK),const_s(%s: PDU has %d bytes.\n),->expr[ident(card),ident(name)],ident(len)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const(N/H),->expr[ident(card),ident(name)],ident(len),->expr[ident(rpp),ident(len)],call[ident(readl),ident(SAR_REG_CDC)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_CRC)],{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: AAL5 CRC error.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(skb),call[ident(dev_alloc_skb),->expr[ident(rpp),ident(len)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: Can't alloc RX skb.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(dev_kfree_skb),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(sb),->expr[ident(rpp),ident(first)]]],for[assign[simple_assi(=),ident(i),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[call[ident(skb_copy_from_linear_data),ident(sb),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(len)]]],estmt[assign[simple_assi(=),ident(sb),->expr[ident(sb),ident(next)]]]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(skb),ident(next)],ident(NULL)]],estmt[call[ident(flush_rx_pool),ident(card),ident(rpp)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[call[ident(pci_unmap_single),->expr[ident(card),ident(pcidev)],call[ident(IDT77252_PRV_PADDR),ident(skb)],binary[aop(-),call[ident(skb_end_pointer),ident(skb)],->expr[ident(skb),ident(data)]],ident(PCI_DMA_FROMDEVICE)]],estmt[call[ident(sb_pool_remove),ident(card),ident(skb)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(3),ident(SAR_FB_SIZE_3),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(2),ident(SAR_FB_SIZE_2),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(1),ident(SAR_FB_SIZE_1),const_i(1)]],estmt[call[ident(add_rx_skb),ident(card),const_i(0),ident(SAR_FB_SIZE_0),const_i(1)]]]]],statem(N/H)],estmt(NONE)]]]]
	¶
]]
starting abstraction
minimal term size: 14
renumbering metas
abstracting the following solution now
[[
call[ident(memcpy),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(data)],->expr[ident(sb),ident(len)]] ==> call[ident(skb_copy_from_linear_data),ident(sb),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(len)]]
	¶
]]
of size  :::: 14
@@,
,
.
@@,
,
.
@@@,
,
.
@@,
,
,
.
,
,
,
,
.
@,
,
.
@,
,
.
@@,
,
,
.
@,
,
,
,
.

with result :::::
call[ident(memcpy),call[meta(X5),meta(X4),->expr[meta(X1),ident(len)]],->expr[meta(X1),ident(data)],->expr[meta(X1),ident(len)]] ==> call[ident(skb_copy_from_linear_data),meta(X1),call[meta(X5),meta(X4),->expr[meta(X1),ident(len)]],->expr[meta(X1),ident(len)]]
call[ident(memcpy),call[meta(X5),meta(X4),->expr[meta(X1),ident(len)]],->expr[meta(X1),ident(data)],meta(X0)] ==> call[ident(skb_copy_from_linear_data),meta(X1),call[meta(X5),meta(X4),->expr[meta(X1),ident(len)]],meta(X0)]
call[ident(memcpy),call[meta(X5),meta(X4),->expr[meta(X1),ident(len)]],->expr[meta(X1),ident(data)],meta(X0)] ==> call[ident(skb_copy_from_linear_data),meta(X1),call[meta(X5),meta(X4),meta(X0)],->expr[meta(X1),ident(len)]]
call[ident(memcpy),call[meta(X5),meta(X4),->expr[meta(X1),ident(len)]],->expr[meta(X1),ident(data)],meta(X0)] ==> call[ident(skb_copy_from_linear_data),meta(X1),call[meta(X5),meta(X4),meta(X0)],meta(X0)]
call[ident(memcpy),call[meta(X5),meta(X4),meta(X0)],->expr[meta(X1),ident(data)],->expr[meta(X1),ident(len)]] ==> call[ident(skb_copy_from_linear_data),meta(X1),call[meta(X5),meta(X4),->expr[meta(X1),ident(len)]],meta(X0)]
call[ident(memcpy),call[meta(X5),meta(X4),meta(X0)],->expr[meta(X1),ident(data)],->expr[meta(X1),ident(len)]] ==> call[ident(skb_copy_from_linear_data),meta(X1),call[meta(X5),meta(X4),meta(X0)],->expr[meta(X1),ident(len)]]
call[ident(memcpy),call[meta(X5),meta(X4),meta(X0)],->expr[meta(X1),ident(data)],->expr[meta(X1),ident(len)]] ==> call[ident(skb_copy_from_linear_data),meta(X1),call[meta(X5),meta(X4),meta(X0)],meta(X0)]
call[ident(memcpy),call[meta(X5),meta(X4),meta(X0)],->expr[meta(X1),ident(data)],meta(X0)] ==> call[ident(skb_copy_from_linear_data),meta(X1),call[meta(X5),meta(X4),->expr[meta(X1),ident(len)]],meta(X0)]
call[ident(memcpy),call[meta(X5),meta(X4),meta(X0)],->expr[meta(X1),ident(data)],meta(X0)] ==> call[ident(skb_copy_from_linear_data),meta(X1),call[meta(X5),meta(X4),meta(X0)],->expr[meta(X1),ident(len)]]
call[ident(memcpy),call[meta(X5),meta(X4),meta(X0)],->expr[meta(X1),ident(data)],meta(X0)] ==> call[ident(skb_copy_from_linear_data),meta(X1),call[meta(X5),meta(X4),meta(X0)],meta(X0)]
call[ident(memcpy),meta(X3),->expr[meta(X1),ident(data)],->expr[meta(X1),ident(len)]] ==> call[ident(skb_copy_from_linear_data),meta(X1),meta(X3),->expr[meta(X1),ident(len)]]
call[ident(memcpy),meta(X3),->expr[meta(X1),ident(data)],meta(X0)] ==> call[ident(skb_copy_from_linear_data),meta(X1),meta(X3),meta(X0)]
	#no of abstracted update: 12
,
.
abstracting the following solution now
[[
estmt[call[ident(memcpy),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(data)],->expr[ident(sb),ident(len)]]] ==> estmt[call[ident(skb_copy_from_linear_data),ident(sb),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(len)]]]
	¶
]]
of size  :::: 15
@@,
,
.
@@,
,
.
@@@,
,
.
@@,
,
,
.
,
,
,
,
.
,
.
@,
,
.
@,
,
.
@@,
,
,
.
@,
,
,
,
.
,
.

with result :::::
estmt[call[ident(memcpy),call[meta(X5),meta(X4),->expr[meta(X1),ident(len)]],->expr[meta(X1),ident(data)],->expr[meta(X1),ident(len)]]] ==> estmt[call[ident(skb_copy_from_linear_data),meta(X1),call[meta(X5),meta(X4),->expr[meta(X1),ident(len)]],->expr[meta(X1),ident(len)]]]
estmt[call[ident(memcpy),call[meta(X5),meta(X4),->expr[meta(X1),ident(len)]],->expr[meta(X1),ident(data)],meta(X0)]] ==> estmt[call[ident(skb_copy_from_linear_data),meta(X1),call[meta(X5),meta(X4),->expr[meta(X1),ident(len)]],meta(X0)]]
estmt[call[ident(memcpy),call[meta(X5),meta(X4),->expr[meta(X1),ident(len)]],->expr[meta(X1),ident(data)],meta(X0)]] ==> estmt[call[ident(skb_copy_from_linear_data),meta(X1),call[meta(X5),meta(X4),meta(X0)],->expr[meta(X1),ident(len)]]]
estmt[call[ident(memcpy),call[meta(X5),meta(X4),->expr[meta(X1),ident(len)]],->expr[meta(X1),ident(data)],meta(X0)]] ==> estmt[call[ident(skb_copy_from_linear_data),meta(X1),call[meta(X5),meta(X4),meta(X0)],meta(X0)]]
estmt[call[ident(memcpy),call[meta(X5),meta(X4),meta(X0)],->expr[meta(X1),ident(data)],->expr[meta(X1),ident(len)]]] ==> estmt[call[ident(skb_copy_from_linear_data),meta(X1),call[meta(X5),meta(X4),->expr[meta(X1),ident(len)]],meta(X0)]]
estmt[call[ident(memcpy),call[meta(X5),meta(X4),meta(X0)],->expr[meta(X1),ident(data)],->expr[meta(X1),ident(len)]]] ==> estmt[call[ident(skb_copy_from_linear_data),meta(X1),call[meta(X5),meta(X4),meta(X0)],->expr[meta(X1),ident(len)]]]
estmt[call[ident(memcpy),call[meta(X5),meta(X4),meta(X0)],->expr[meta(X1),ident(data)],->expr[meta(X1),ident(len)]]] ==> estmt[call[ident(skb_copy_from_linear_data),meta(X1),call[meta(X5),meta(X4),meta(X0)],meta(X0)]]
estmt[call[ident(memcpy),call[meta(X5),meta(X4),meta(X0)],->expr[meta(X1),ident(data)],meta(X0)]] ==> estmt[call[ident(skb_copy_from_linear_data),meta(X1),call[meta(X5),meta(X4),->expr[meta(X1),ident(len)]],meta(X0)]]
estmt[call[ident(memcpy),call[meta(X5),meta(X4),meta(X0)],->expr[meta(X1),ident(data)],meta(X0)]] ==> estmt[call[ident(skb_copy_from_linear_data),meta(X1),call[meta(X5),meta(X4),meta(X0)],->expr[meta(X1),ident(len)]]]
estmt[call[ident(memcpy),call[meta(X5),meta(X4),meta(X0)],->expr[meta(X1),ident(data)],meta(X0)]] ==> estmt[call[ident(skb_copy_from_linear_data),meta(X1),call[meta(X5),meta(X4),meta(X0)],meta(X0)]]
estmt[call[ident(memcpy),meta(X3),->expr[meta(X1),ident(data)],->expr[meta(X1),ident(len)]]] ==> estmt[call[ident(skb_copy_from_linear_data),meta(X1),meta(X3),->expr[meta(X1),ident(len)]]]
estmt[call[ident(memcpy),meta(X3),->expr[meta(X1),ident(data)],meta(X0)]] ==> estmt[call[ident(skb_copy_from_linear_data),meta(X1),meta(X3),meta(X0)]]
	#no of abstracted update: 12
,
.
abstracting the following solution now
[[
{}stmt[estmt[call[ident(memcpy),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(data)],->expr[ident(sb),ident(len)]]],estmt[assign[simple_assi(=),ident(sb),->expr[ident(sb),ident(next)]]]] ==> {}stmt[estmt[call[ident(skb_copy_from_linear_data),ident(sb),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(len)]]],estmt[assign[simple_assi(=),ident(sb),->expr[ident(sb),ident(next)]]]]
	¶
]]
of size  :::: 23

with result :::::
{}stmt[estmt[call[ident(memcpy),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(data)],->expr[ident(sb),ident(len)]]],estmt[assign[simple_assi(=),ident(sb),->expr[ident(sb),ident(next)]]]] ==> {}stmt[estmt[call[ident(skb_copy_from_linear_data),ident(sb),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(len)]]],estmt[assign[simple_assi(=),ident(sb),->expr[ident(sb),ident(next)]]]]
	#no of abstracted update: 1
,
.
abstracting the following solution now
[[
for[assign[simple_assi(=),ident(i),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[call[ident(memcpy),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(data)],->expr[ident(sb),ident(len)]]],estmt[assign[simple_assi(=),ident(sb),->expr[ident(sb),ident(next)]]]]] ==> for[assign[simple_assi(=),ident(i),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[call[ident(skb_copy_from_linear_data),ident(sb),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(len)]]],estmt[assign[simple_assi(=),ident(sb),->expr[ident(sb),ident(next)]]]]]
	¶
]]
of size  :::: 30

with result :::::
for[assign[simple_assi(=),ident(i),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[call[ident(memcpy),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(data)],->expr[ident(sb),ident(len)]]],estmt[assign[simple_assi(=),ident(sb),->expr[ident(sb),ident(next)]]]]] ==> for[assign[simple_assi(=),ident(i),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[call[ident(skb_copy_from_linear_data),ident(sb),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(len)]]],estmt[assign[simple_assi(=),ident(sb),->expr[ident(sb),ident(next)]]]]]
	#no of abstracted update: 1
,
.
abstracting the following solution now
[[
{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(skb),call[ident(dev_alloc_skb),->expr[ident(rpp),ident(len)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: Can't alloc RX skb.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(dev_kfree_skb),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(sb),->expr[ident(rpp),ident(first)]]],for[assign[simple_assi(=),ident(i),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[call[ident(memcpy),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(data)],->expr[ident(sb),ident(len)]]],estmt[assign[simple_assi(=),ident(sb),->expr[ident(sb),ident(next)]]]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],statem(N/H)] ==> {}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(skb),call[ident(dev_alloc_skb),->expr[ident(rpp),ident(len)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: Can't alloc RX skb.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(dev_kfree_skb),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(sb),->expr[ident(rpp),ident(first)]]],for[assign[simple_assi(=),ident(i),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[call[ident(skb_copy_from_linear_data),ident(sb),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(len)]]],estmt[assign[simple_assi(=),ident(sb),->expr[ident(sb),ident(next)]]]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],statem(N/H)]
	¶
]]
of size  :::: 128

with result :::::
{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(skb),call[ident(dev_alloc_skb),->expr[ident(rpp),ident(len)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: Can't alloc RX skb.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(dev_kfree_skb),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(sb),->expr[ident(rpp),ident(first)]]],for[assign[simple_assi(=),ident(i),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[call[ident(memcpy),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(data)],->expr[ident(sb),ident(len)]]],estmt[assign[simple_assi(=),ident(sb),->expr[ident(sb),ident(next)]]]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],statem(N/H)] ==> {}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(skb),call[ident(dev_alloc_skb),->expr[ident(rpp),ident(len)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: Can't alloc RX skb.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(dev_kfree_skb),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(sb),->expr[ident(rpp),ident(first)]]],for[assign[simple_assi(=),ident(i),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[call[ident(skb_copy_from_linear_data),ident(sb),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(len)]]],estmt[assign[simple_assi(=),ident(sb),->expr[ident(sb),ident(next)]]]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],statem(N/H)]
	#no of abstracted update: 1
,
.
abstracting the following solution now
[[
sel_if[expr(N/H),{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(skb),call[ident(dev_alloc_skb),->expr[ident(rpp),ident(len)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: Can't alloc RX skb.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(dev_kfree_skb),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(sb),->expr[ident(rpp),ident(first)]]],for[assign[simple_assi(=),ident(i),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[call[ident(memcpy),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(data)],->expr[ident(sb),ident(len)]]],estmt[assign[simple_assi(=),ident(sb),->expr[ident(sb),ident(next)]]]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],statem(N/H)],estmt(NONE)] ==> sel_if[expr(N/H),{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(skb),call[ident(dev_alloc_skb),->expr[ident(rpp),ident(len)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: Can't alloc RX skb.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(dev_kfree_skb),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(sb),->expr[ident(rpp),ident(first)]]],for[assign[simple_assi(=),ident(i),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[call[ident(skb_copy_from_linear_data),ident(sb),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(len)]]],estmt[assign[simple_assi(=),ident(sb),->expr[ident(sb),ident(next)]]]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],statem(N/H)],estmt(NONE)]
	¶
]]
of size  :::: 131

with result :::::
sel_if[expr(N/H),{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(skb),call[ident(dev_alloc_skb),->expr[ident(rpp),ident(len)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: Can't alloc RX skb.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(dev_kfree_skb),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(sb),->expr[ident(rpp),ident(first)]]],for[assign[simple_assi(=),ident(i),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[call[ident(memcpy),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(data)],->expr[ident(sb),ident(len)]]],estmt[assign[simple_assi(=),ident(sb),->expr[ident(sb),ident(next)]]]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],statem(N/H)],estmt(NONE)] ==> sel_if[expr(N/H),{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(skb),call[ident(dev_alloc_skb),->expr[ident(rpp),ident(len)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: Can't alloc RX skb.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(dev_kfree_skb),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(sb),->expr[ident(rpp),ident(first)]]],for[assign[simple_assi(=),ident(i),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[call[ident(skb_copy_from_linear_data),ident(sb),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(len)]]],estmt[assign[simple_assi(=),ident(sb),->expr[ident(sb),ident(next)]]]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],statem(N/H)],estmt(NONE)]
	#no of abstracted update: 1
,
.
abstracting the following solution now
[[
{}stmt[statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(l1l2),expr(N/H)]],estmt[assign[simple_assi(=),ident(len),binary[aop(N/H),binary[aop(N/H),array_a[ident(l1l2),const_i(0)],const_i(8)],array_a[ident(l1l2),const_i(1)]]]],estmt[assign[simple_assi(=),ident(len),condexpr3[ident(len),ident(len),const_i(0x10000)]]],estmt[call[ident(RXPRINTK),const_s(%s: PDU has %d bytes.\n),->expr[ident(card),ident(name)],ident(len)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const(N/H),->expr[ident(card),ident(name)],ident(len),->expr[ident(rpp),ident(len)],call[ident(readl),ident(SAR_REG_CDC)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_CRC)],{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: AAL5 CRC error.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(skb),call[ident(dev_alloc_skb),->expr[ident(rpp),ident(len)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: Can't alloc RX skb.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(dev_kfree_skb),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(sb),->expr[ident(rpp),ident(first)]]],for[assign[simple_assi(=),ident(i),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[call[ident(memcpy),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(data)],->expr[ident(sb),ident(len)]]],estmt[assign[simple_assi(=),ident(sb),->expr[ident(sb),ident(next)]]]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(skb),ident(next)],ident(NULL)]],estmt[call[ident(flush_rx_pool),ident(card),ident(rpp)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[call[ident(pci_unmap_single),->expr[ident(card),ident(pcidev)],call[ident(IDT77252_PRV_PADDR),ident(skb)],binary[aop(-),call[ident(skb_end_pointer),ident(skb)],->expr[ident(skb),ident(data)]],ident(PCI_DMA_FROMDEVICE)]],estmt[call[ident(sb_pool_remove),ident(card),ident(skb)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(3),ident(SAR_FB_SIZE_3),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(2),ident(SAR_FB_SIZE_2),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(1),ident(SAR_FB_SIZE_1),const_i(1)]],estmt[call[ident(add_rx_skb),ident(card),const_i(0),ident(SAR_FB_SIZE_0),const_i(1)]]]]],statem(N/H)] ==> {}stmt[statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(l1l2),expr(N/H)]],estmt[assign[simple_assi(=),ident(len),binary[aop(N/H),binary[aop(N/H),array_a[ident(l1l2),const_i(0)],const_i(8)],array_a[ident(l1l2),const_i(1)]]]],estmt[assign[simple_assi(=),ident(len),condexpr3[ident(len),ident(len),const_i(0x10000)]]],estmt[call[ident(RXPRINTK),const_s(%s: PDU has %d bytes.\n),->expr[ident(card),ident(name)],ident(len)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const(N/H),->expr[ident(card),ident(name)],ident(len),->expr[ident(rpp),ident(len)],call[ident(readl),ident(SAR_REG_CDC)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_CRC)],{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: AAL5 CRC error.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(skb),call[ident(dev_alloc_skb),->expr[ident(rpp),ident(len)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: Can't alloc RX skb.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(dev_kfree_skb),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(sb),->expr[ident(rpp),ident(first)]]],for[assign[simple_assi(=),ident(i),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[call[ident(skb_copy_from_linear_data),ident(sb),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(len)]]],estmt[assign[simple_assi(=),ident(sb),->expr[ident(sb),ident(next)]]]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(skb),ident(next)],ident(NULL)]],estmt[call[ident(flush_rx_pool),ident(card),ident(rpp)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[call[ident(pci_unmap_single),->expr[ident(card),ident(pcidev)],call[ident(IDT77252_PRV_PADDR),ident(skb)],binary[aop(-),call[ident(skb_end_pointer),ident(skb)],->expr[ident(skb),ident(data)]],ident(PCI_DMA_FROMDEVICE)]],estmt[call[ident(sb_pool_remove),ident(card),ident(skb)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(3),ident(SAR_FB_SIZE_3),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(2),ident(SAR_FB_SIZE_2),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(1),ident(SAR_FB_SIZE_1),const_i(1)]],estmt[call[ident(add_rx_skb),ident(card),const_i(0),ident(SAR_FB_SIZE_0),const_i(1)]]]]],statem(N/H)]
	¶
]]
of size  :::: 346

with result :::::
{}stmt[statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(l1l2),expr(N/H)]],estmt[assign[simple_assi(=),ident(len),binary[aop(N/H),binary[aop(N/H),array_a[ident(l1l2),const_i(0)],const_i(8)],array_a[ident(l1l2),const_i(1)]]]],estmt[assign[simple_assi(=),ident(len),condexpr3[ident(len),ident(len),const_i(0x10000)]]],estmt[call[ident(RXPRINTK),const_s(%s: PDU has %d bytes.\n),->expr[ident(card),ident(name)],ident(len)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const(N/H),->expr[ident(card),ident(name)],ident(len),->expr[ident(rpp),ident(len)],call[ident(readl),ident(SAR_REG_CDC)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_CRC)],{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: AAL5 CRC error.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(skb),call[ident(dev_alloc_skb),->expr[ident(rpp),ident(len)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: Can't alloc RX skb.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(dev_kfree_skb),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(sb),->expr[ident(rpp),ident(first)]]],for[assign[simple_assi(=),ident(i),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[call[ident(memcpy),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(data)],->expr[ident(sb),ident(len)]]],estmt[assign[simple_assi(=),ident(sb),->expr[ident(sb),ident(next)]]]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(skb),ident(next)],ident(NULL)]],estmt[call[ident(flush_rx_pool),ident(card),ident(rpp)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[call[ident(pci_unmap_single),->expr[ident(card),ident(pcidev)],call[ident(IDT77252_PRV_PADDR),ident(skb)],binary[aop(-),call[ident(skb_end_pointer),ident(skb)],->expr[ident(skb),ident(data)]],ident(PCI_DMA_FROMDEVICE)]],estmt[call[ident(sb_pool_remove),ident(card),ident(skb)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(3),ident(SAR_FB_SIZE_3),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(2),ident(SAR_FB_SIZE_2),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(1),ident(SAR_FB_SIZE_1),const_i(1)]],estmt[call[ident(add_rx_skb),ident(card),const_i(0),ident(SAR_FB_SIZE_0),const_i(1)]]]]],statem(N/H)] ==> {}stmt[statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(l1l2),expr(N/H)]],estmt[assign[simple_assi(=),ident(len),binary[aop(N/H),binary[aop(N/H),array_a[ident(l1l2),const_i(0)],const_i(8)],array_a[ident(l1l2),const_i(1)]]]],estmt[assign[simple_assi(=),ident(len),condexpr3[ident(len),ident(len),const_i(0x10000)]]],estmt[call[ident(RXPRINTK),const_s(%s: PDU has %d bytes.\n),->expr[ident(card),ident(name)],ident(len)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const(N/H),->expr[ident(card),ident(name)],ident(len),->expr[ident(rpp),ident(len)],call[ident(readl),ident(SAR_REG_CDC)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_CRC)],{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: AAL5 CRC error.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(skb),call[ident(dev_alloc_skb),->expr[ident(rpp),ident(len)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: Can't alloc RX skb.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(dev_kfree_skb),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(sb),->expr[ident(rpp),ident(first)]]],for[assign[simple_assi(=),ident(i),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[call[ident(skb_copy_from_linear_data),ident(sb),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(len)]]],estmt[assign[simple_assi(=),ident(sb),->expr[ident(sb),ident(next)]]]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(skb),ident(next)],ident(NULL)]],estmt[call[ident(flush_rx_pool),ident(card),ident(rpp)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[call[ident(pci_unmap_single),->expr[ident(card),ident(pcidev)],call[ident(IDT77252_PRV_PADDR),ident(skb)],binary[aop(-),call[ident(skb_end_pointer),ident(skb)],->expr[ident(skb),ident(data)]],ident(PCI_DMA_FROMDEVICE)]],estmt[call[ident(sb_pool_remove),ident(card),ident(skb)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(3),ident(SAR_FB_SIZE_3),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(2),ident(SAR_FB_SIZE_2),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(1),ident(SAR_FB_SIZE_1),const_i(1)]],estmt[call[ident(add_rx_skb),ident(card),const_i(0),ident(SAR_FB_SIZE_0),const_i(1)]]]]],statem(N/H)]
	#no of abstracted update: 1
,
.
abstracting the following solution now
[[
sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_EPDU)],{}stmt[statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(l1l2),expr(N/H)]],estmt[assign[simple_assi(=),ident(len),binary[aop(N/H),binary[aop(N/H),array_a[ident(l1l2),const_i(0)],const_i(8)],array_a[ident(l1l2),const_i(1)]]]],estmt[assign[simple_assi(=),ident(len),condexpr3[ident(len),ident(len),const_i(0x10000)]]],estmt[call[ident(RXPRINTK),const_s(%s: PDU has %d bytes.\n),->expr[ident(card),ident(name)],ident(len)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const(N/H),->expr[ident(card),ident(name)],ident(len),->expr[ident(rpp),ident(len)],call[ident(readl),ident(SAR_REG_CDC)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_CRC)],{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: AAL5 CRC error.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(skb),call[ident(dev_alloc_skb),->expr[ident(rpp),ident(len)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: Can't alloc RX skb.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(dev_kfree_skb),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(sb),->expr[ident(rpp),ident(first)]]],for[assign[simple_assi(=),ident(i),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[call[ident(memcpy),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(data)],->expr[ident(sb),ident(len)]]],estmt[assign[simple_assi(=),ident(sb),->expr[ident(sb),ident(next)]]]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(skb),ident(next)],ident(NULL)]],estmt[call[ident(flush_rx_pool),ident(card),ident(rpp)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[call[ident(pci_unmap_single),->expr[ident(card),ident(pcidev)],call[ident(IDT77252_PRV_PADDR),ident(skb)],binary[aop(-),call[ident(skb_end_pointer),ident(skb)],->expr[ident(skb),ident(data)]],ident(PCI_DMA_FROMDEVICE)]],estmt[call[ident(sb_pool_remove),ident(card),ident(skb)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(3),ident(SAR_FB_SIZE_3),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(2),ident(SAR_FB_SIZE_2),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(1),ident(SAR_FB_SIZE_1),const_i(1)]],estmt[call[ident(add_rx_skb),ident(card),const_i(0),ident(SAR_FB_SIZE_0),const_i(1)]]]]],statem(N/H)],estmt(NONE)] ==> sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_EPDU)],{}stmt[statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(l1l2),expr(N/H)]],estmt[assign[simple_assi(=),ident(len),binary[aop(N/H),binary[aop(N/H),array_a[ident(l1l2),const_i(0)],const_i(8)],array_a[ident(l1l2),const_i(1)]]]],estmt[assign[simple_assi(=),ident(len),condexpr3[ident(len),ident(len),const_i(0x10000)]]],estmt[call[ident(RXPRINTK),const_s(%s: PDU has %d bytes.\n),->expr[ident(card),ident(name)],ident(len)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const(N/H),->expr[ident(card),ident(name)],ident(len),->expr[ident(rpp),ident(len)],call[ident(readl),ident(SAR_REG_CDC)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_CRC)],{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: AAL5 CRC error.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(skb),call[ident(dev_alloc_skb),->expr[ident(rpp),ident(len)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: Can't alloc RX skb.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(dev_kfree_skb),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(sb),->expr[ident(rpp),ident(first)]]],for[assign[simple_assi(=),ident(i),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[call[ident(skb_copy_from_linear_data),ident(sb),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(len)]]],estmt[assign[simple_assi(=),ident(sb),->expr[ident(sb),ident(next)]]]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(skb),ident(next)],ident(NULL)]],estmt[call[ident(flush_rx_pool),ident(card),ident(rpp)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[call[ident(pci_unmap_single),->expr[ident(card),ident(pcidev)],call[ident(IDT77252_PRV_PADDR),ident(skb)],binary[aop(-),call[ident(skb_end_pointer),ident(skb)],->expr[ident(skb),ident(data)]],ident(PCI_DMA_FROMDEVICE)]],estmt[call[ident(sb_pool_remove),ident(card),ident(skb)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(3),ident(SAR_FB_SIZE_3),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(2),ident(SAR_FB_SIZE_2),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(1),ident(SAR_FB_SIZE_1),const_i(1)]],estmt[call[ident(add_rx_skb),ident(card),const_i(0),ident(SAR_FB_SIZE_0),const_i(1)]]]]],statem(N/H)],estmt(NONE)]
	¶
]]
of size  :::: 352

with result :::::
sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_EPDU)],{}stmt[statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(l1l2),expr(N/H)]],estmt[assign[simple_assi(=),ident(len),binary[aop(N/H),binary[aop(N/H),array_a[ident(l1l2),const_i(0)],const_i(8)],array_a[ident(l1l2),const_i(1)]]]],estmt[assign[simple_assi(=),ident(len),condexpr3[ident(len),ident(len),const_i(0x10000)]]],estmt[call[ident(RXPRINTK),const_s(%s: PDU has %d bytes.\n),->expr[ident(card),ident(name)],ident(len)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const(N/H),->expr[ident(card),ident(name)],ident(len),->expr[ident(rpp),ident(len)],call[ident(readl),ident(SAR_REG_CDC)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_CRC)],{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: AAL5 CRC error.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(skb),call[ident(dev_alloc_skb),->expr[ident(rpp),ident(len)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: Can't alloc RX skb.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(dev_kfree_skb),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(sb),->expr[ident(rpp),ident(first)]]],for[assign[simple_assi(=),ident(i),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[call[ident(memcpy),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(data)],->expr[ident(sb),ident(len)]]],estmt[assign[simple_assi(=),ident(sb),->expr[ident(sb),ident(next)]]]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(skb),ident(next)],ident(NULL)]],estmt[call[ident(flush_rx_pool),ident(card),ident(rpp)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[call[ident(pci_unmap_single),->expr[ident(card),ident(pcidev)],call[ident(IDT77252_PRV_PADDR),ident(skb)],binary[aop(-),call[ident(skb_end_pointer),ident(skb)],->expr[ident(skb),ident(data)]],ident(PCI_DMA_FROMDEVICE)]],estmt[call[ident(sb_pool_remove),ident(card),ident(skb)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(3),ident(SAR_FB_SIZE_3),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(2),ident(SAR_FB_SIZE_2),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(1),ident(SAR_FB_SIZE_1),const_i(1)]],estmt[call[ident(add_rx_skb),ident(card),const_i(0),ident(SAR_FB_SIZE_0),const_i(1)]]]]],statem(N/H)],estmt(NONE)] ==> sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_EPDU)],{}stmt[statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(l1l2),expr(N/H)]],estmt[assign[simple_assi(=),ident(len),binary[aop(N/H),binary[aop(N/H),array_a[ident(l1l2),const_i(0)],const_i(8)],array_a[ident(l1l2),const_i(1)]]]],estmt[assign[simple_assi(=),ident(len),condexpr3[ident(len),ident(len),const_i(0x10000)]]],estmt[call[ident(RXPRINTK),const_s(%s: PDU has %d bytes.\n),->expr[ident(card),ident(name)],ident(len)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const(N/H),->expr[ident(card),ident(name)],ident(len),->expr[ident(rpp),ident(len)],call[ident(readl),ident(SAR_REG_CDC)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_CRC)],{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: AAL5 CRC error.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(skb),call[ident(dev_alloc_skb),->expr[ident(rpp),ident(len)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: Can't alloc RX skb.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(dev_kfree_skb),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(sb),->expr[ident(rpp),ident(first)]]],for[assign[simple_assi(=),ident(i),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[call[ident(skb_copy_from_linear_data),ident(sb),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(len)]]],estmt[assign[simple_assi(=),ident(sb),->expr[ident(sb),ident(next)]]]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(skb),ident(next)],ident(NULL)]],estmt[call[ident(flush_rx_pool),ident(card),ident(rpp)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[call[ident(pci_unmap_single),->expr[ident(card),ident(pcidev)],call[ident(IDT77252_PRV_PADDR),ident(skb)],binary[aop(-),call[ident(skb_end_pointer),ident(skb)],->expr[ident(skb),ident(data)]],ident(PCI_DMA_FROMDEVICE)]],estmt[call[ident(sb_pool_remove),ident(card),ident(skb)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(3),ident(SAR_FB_SIZE_3),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(2),ident(SAR_FB_SIZE_2),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(1),ident(SAR_FB_SIZE_1),const_i(1)]],estmt[call[ident(add_rx_skb),ident(card),const_i(0),ident(SAR_FB_SIZE_0),const_i(1)]]]]],statem(N/H)],estmt(NONE)]
	#no of abstracted update: 1
,
.
abstracting the following solution now
[[
{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(stat),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_4)]]]],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_IDLE)],{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: message about inactive connection.\n),->expr[ident(card),ident(name)]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(skb),call[ident(sb_pool_skb),ident(card),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_2)]]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: NULL skb in %s, rsqe: %08x %08x %08x %08x\n),->expr[ident(card),ident(name)],ident(__FUNCTION__),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_1)]],call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_2)]],call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_3)]],call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_4)]]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(header),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_1)]]]],estmt[assign[simple_assi(=),ident(vpi),binary[aop(N/H),binary[aop(N/H),ident(header),const_i(16)],const_i(0x00ff)]]],estmt[assign[simple_assi(=),ident(vci),binary[aop(N/H),binary[aop(N/H),ident(header),const_i(0)],const_i(0xffff)]]],estmt[call[ident(RXPRINTK),const_s(%s: SDU for %d.%d received in buffer 0x%p (data 0x%p).\n),->expr[ident(card),ident(name)],ident(vpi),ident(vci),ident(skb),->expr[ident(skb),ident(data)]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: SDU received for out-of-range vc %u.%u\n),->expr[ident(card),ident(name)],ident(vpi),ident(vci)]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(vc),array_a[->expr[ident(card),ident(vcs)],call[ident(VPCI2VC),ident(card),ident(vpi),ident(vci)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: SDU received on non RX vc %u.%u\n),->expr[ident(card),ident(name)],ident(vpi),ident(vci)]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(vcc),->expr[ident(vc),ident(rx_vcc)]]],estmt[call[ident(pci_dma_sync_single_for_cpu),->expr[ident(card),ident(pcidev)],call[ident(IDT77252_PRV_PADDR),ident(skb)],binary[aop(-),call[ident(skb_end_pointer),ident(skb)],->expr[ident(skb),ident(data)]],ident(PCI_DMA_FROMDEVICE)]],sel_if[expr(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(cell),->expr[ident(skb),ident(data)]]],for[assign[simple_assi(=),ident(i),binary[aop(N/H),ident(stat),ident(SAR_RSQE_CELLCNT)]],ident(i),expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: Can't allocate buffers for aal0.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(atomic_add),ident(i),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_drop)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: atm_charge() dropped aal0 packets.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(atomic_add),binary[aop(-),ident(i),const_i(1)],&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_drop)]]]],estmt[call[ident(dev_kfree_skb),ident(sb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(aal0),binary[aop(N/H),binary[aop(N/H),ident(vpi),ident(ATM_HDR_VPI_SHIFT)],binary[aop(N/H),ident(vci),ident(ATM_HDR_VCI_SHIFT)]]]],estmt[assign[op_assi(|=),ident(aal0),condexpr3[binary[aop(N/H),ident(stat),ident(SAR_RSQE_EPDU)],const_i(0x00000002),const_i(0)]]],estmt[assign[op_assi(|=),ident(aal0),condexpr3[binary[aop(N/H),ident(stat),ident(SAR_RSQE_CLP)],const_i(0x00000001),const_i(0)]]],estmt[assign[simple_assi(=),*expr[expr(N/H)],ident(aal0)]],estmt[call[ident(skb_put),ident(sb),sizeoftype_expr[type(N/H)]]],estmt[call[ident(memcpy),call[ident(skb_put),ident(sb),ident(ATM_CELL_PAYLOAD)],ident(cell),ident(ATM_CELL_PAYLOAD)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(sb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(sb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(sb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],estmt[assign[op_assi(+=),ident(cell),ident(ATM_CELL_PAYLOAD)]]]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: Unexpected AAL type in dequeue_rx(): %d.\n),->expr[ident(card),ident(name)],.expr[->expr[ident(vcc),ident(qos)],ident(aal)]]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(skb),ident(len)],binary[aop(*),binary[aop(N/H),ident(stat),ident(SAR_RSQE_CELLCNT)],ident(ATM_CELL_PAYLOAD)]]],estmt[assign[simple_assi(=),ident(rpp),&expr[.expr[->expr[ident(vc),ident(rcv)],ident(rx_pool)]]]],estmt[assign[op_assi(+=),->expr[ident(rpp),ident(len)],->expr[ident(skb),ident(len)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),->expr[ident(rpp),ident(first)],ident(skb)]],estmt(NONE)],estmt[assign[simple_assi(=),*expr[->expr[ident(rpp),ident(last)]],ident(skb)]],estmt[assign[simple_assi(=),->expr[ident(rpp),ident(last)],&expr[->expr[ident(skb),ident(next)]]]],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_EPDU)],{}stmt[statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(l1l2),expr(N/H)]],estmt[assign[simple_assi(=),ident(len),binary[aop(N/H),binary[aop(N/H),array_a[ident(l1l2),const_i(0)],const_i(8)],array_a[ident(l1l2),const_i(1)]]]],estmt[assign[simple_assi(=),ident(len),condexpr3[ident(len),ident(len),const_i(0x10000)]]],estmt[call[ident(RXPRINTK),const_s(%s: PDU has %d bytes.\n),->expr[ident(card),ident(name)],ident(len)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const(N/H),->expr[ident(card),ident(name)],ident(len),->expr[ident(rpp),ident(len)],call[ident(readl),ident(SAR_REG_CDC)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_CRC)],{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: AAL5 CRC error.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(skb),call[ident(dev_alloc_skb),->expr[ident(rpp),ident(len)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: Can't alloc RX skb.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(dev_kfree_skb),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(sb),->expr[ident(rpp),ident(first)]]],for[assign[simple_assi(=),ident(i),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[call[ident(memcpy),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(data)],->expr[ident(sb),ident(len)]]],estmt[assign[simple_assi(=),ident(sb),->expr[ident(sb),ident(next)]]]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(skb),ident(next)],ident(NULL)]],estmt[call[ident(flush_rx_pool),ident(card),ident(rpp)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[call[ident(pci_unmap_single),->expr[ident(card),ident(pcidev)],call[ident(IDT77252_PRV_PADDR),ident(skb)],binary[aop(-),call[ident(skb_end_pointer),ident(skb)],->expr[ident(skb),ident(data)]],ident(PCI_DMA_FROMDEVICE)]],estmt[call[ident(sb_pool_remove),ident(card),ident(skb)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(3),ident(SAR_FB_SIZE_3),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(2),ident(SAR_FB_SIZE_2),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(1),ident(SAR_FB_SIZE_1),const_i(1)]],estmt[call[ident(add_rx_skb),ident(card),const_i(0),ident(SAR_FB_SIZE_0),const_i(1)]]]]],statem(N/H)],estmt(NONE)]] ==> {}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(stat),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_4)]]]],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_IDLE)],{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: message about inactive connection.\n),->expr[ident(card),ident(name)]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(skb),call[ident(sb_pool_skb),ident(card),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_2)]]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: NULL skb in %s, rsqe: %08x %08x %08x %08x\n),->expr[ident(card),ident(name)],ident(__FUNCTION__),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_1)]],call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_2)]],call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_3)]],call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_4)]]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(header),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_1)]]]],estmt[assign[simple_assi(=),ident(vpi),binary[aop(N/H),binary[aop(N/H),ident(header),const_i(16)],const_i(0x00ff)]]],estmt[assign[simple_assi(=),ident(vci),binary[aop(N/H),binary[aop(N/H),ident(header),const_i(0)],const_i(0xffff)]]],estmt[call[ident(RXPRINTK),const_s(%s: SDU for %d.%d received in buffer 0x%p (data 0x%p).\n),->expr[ident(card),ident(name)],ident(vpi),ident(vci),ident(skb),->expr[ident(skb),ident(data)]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: SDU received for out-of-range vc %u.%u\n),->expr[ident(card),ident(name)],ident(vpi),ident(vci)]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(vc),array_a[->expr[ident(card),ident(vcs)],call[ident(VPCI2VC),ident(card),ident(vpi),ident(vci)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: SDU received on non RX vc %u.%u\n),->expr[ident(card),ident(name)],ident(vpi),ident(vci)]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(vcc),->expr[ident(vc),ident(rx_vcc)]]],estmt[call[ident(pci_dma_sync_single_for_cpu),->expr[ident(card),ident(pcidev)],call[ident(IDT77252_PRV_PADDR),ident(skb)],binary[aop(-),call[ident(skb_end_pointer),ident(skb)],->expr[ident(skb),ident(data)]],ident(PCI_DMA_FROMDEVICE)]],sel_if[expr(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(cell),->expr[ident(skb),ident(data)]]],for[assign[simple_assi(=),ident(i),binary[aop(N/H),ident(stat),ident(SAR_RSQE_CELLCNT)]],ident(i),expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: Can't allocate buffers for aal0.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(atomic_add),ident(i),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_drop)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: atm_charge() dropped aal0 packets.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(atomic_add),binary[aop(-),ident(i),const_i(1)],&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_drop)]]]],estmt[call[ident(dev_kfree_skb),ident(sb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(aal0),binary[aop(N/H),binary[aop(N/H),ident(vpi),ident(ATM_HDR_VPI_SHIFT)],binary[aop(N/H),ident(vci),ident(ATM_HDR_VCI_SHIFT)]]]],estmt[assign[op_assi(|=),ident(aal0),condexpr3[binary[aop(N/H),ident(stat),ident(SAR_RSQE_EPDU)],const_i(0x00000002),const_i(0)]]],estmt[assign[op_assi(|=),ident(aal0),condexpr3[binary[aop(N/H),ident(stat),ident(SAR_RSQE_CLP)],const_i(0x00000001),const_i(0)]]],estmt[assign[simple_assi(=),*expr[expr(N/H)],ident(aal0)]],estmt[call[ident(skb_put),ident(sb),sizeoftype_expr[type(N/H)]]],estmt[call[ident(memcpy),call[ident(skb_put),ident(sb),ident(ATM_CELL_PAYLOAD)],ident(cell),ident(ATM_CELL_PAYLOAD)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(sb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(sb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(sb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],estmt[assign[op_assi(+=),ident(cell),ident(ATM_CELL_PAYLOAD)]]]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: Unexpected AAL type in dequeue_rx(): %d.\n),->expr[ident(card),ident(name)],.expr[->expr[ident(vcc),ident(qos)],ident(aal)]]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(skb),ident(len)],binary[aop(*),binary[aop(N/H),ident(stat),ident(SAR_RSQE_CELLCNT)],ident(ATM_CELL_PAYLOAD)]]],estmt[assign[simple_assi(=),ident(rpp),&expr[.expr[->expr[ident(vc),ident(rcv)],ident(rx_pool)]]]],estmt[assign[op_assi(+=),->expr[ident(rpp),ident(len)],->expr[ident(skb),ident(len)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),->expr[ident(rpp),ident(first)],ident(skb)]],estmt(NONE)],estmt[assign[simple_assi(=),*expr[->expr[ident(rpp),ident(last)]],ident(skb)]],estmt[assign[simple_assi(=),->expr[ident(rpp),ident(last)],&expr[->expr[ident(skb),ident(next)]]]],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_EPDU)],{}stmt[statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(l1l2),expr(N/H)]],estmt[assign[simple_assi(=),ident(len),binary[aop(N/H),binary[aop(N/H),array_a[ident(l1l2),const_i(0)],const_i(8)],array_a[ident(l1l2),const_i(1)]]]],estmt[assign[simple_assi(=),ident(len),condexpr3[ident(len),ident(len),const_i(0x10000)]]],estmt[call[ident(RXPRINTK),const_s(%s: PDU has %d bytes.\n),->expr[ident(card),ident(name)],ident(len)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const(N/H),->expr[ident(card),ident(name)],ident(len),->expr[ident(rpp),ident(len)],call[ident(readl),ident(SAR_REG_CDC)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_CRC)],{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: AAL5 CRC error.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(skb),call[ident(dev_alloc_skb),->expr[ident(rpp),ident(len)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: Can't alloc RX skb.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(dev_kfree_skb),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(sb),->expr[ident(rpp),ident(first)]]],for[assign[simple_assi(=),ident(i),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[call[ident(skb_copy_from_linear_data),ident(sb),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(len)]]],estmt[assign[simple_assi(=),ident(sb),->expr[ident(sb),ident(next)]]]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(skb),ident(next)],ident(NULL)]],estmt[call[ident(flush_rx_pool),ident(card),ident(rpp)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[call[ident(pci_unmap_single),->expr[ident(card),ident(pcidev)],call[ident(IDT77252_PRV_PADDR),ident(skb)],binary[aop(-),call[ident(skb_end_pointer),ident(skb)],->expr[ident(skb),ident(data)]],ident(PCI_DMA_FROMDEVICE)]],estmt[call[ident(sb_pool_remove),ident(card),ident(skb)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(3),ident(SAR_FB_SIZE_3),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(2),ident(SAR_FB_SIZE_2),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(1),ident(SAR_FB_SIZE_1),const_i(1)]],estmt[call[ident(add_rx_skb),ident(card),const_i(0),ident(SAR_FB_SIZE_0),const_i(1)]]]]],statem(N/H)],estmt(NONE)]]
	¶
]]
of size  :::: 804

with result :::::
{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(stat),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_4)]]]],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_IDLE)],{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: message about inactive connection.\n),->expr[ident(card),ident(name)]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(skb),call[ident(sb_pool_skb),ident(card),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_2)]]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: NULL skb in %s, rsqe: %08x %08x %08x %08x\n),->expr[ident(card),ident(name)],ident(__FUNCTION__),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_1)]],call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_2)]],call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_3)]],call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_4)]]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(header),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_1)]]]],estmt[assign[simple_assi(=),ident(vpi),binary[aop(N/H),binary[aop(N/H),ident(header),const_i(16)],const_i(0x00ff)]]],estmt[assign[simple_assi(=),ident(vci),binary[aop(N/H),binary[aop(N/H),ident(header),const_i(0)],const_i(0xffff)]]],estmt[call[ident(RXPRINTK),const_s(%s: SDU for %d.%d received in buffer 0x%p (data 0x%p).\n),->expr[ident(card),ident(name)],ident(vpi),ident(vci),ident(skb),->expr[ident(skb),ident(data)]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: SDU received for out-of-range vc %u.%u\n),->expr[ident(card),ident(name)],ident(vpi),ident(vci)]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(vc),array_a[->expr[ident(card),ident(vcs)],call[ident(VPCI2VC),ident(card),ident(vpi),ident(vci)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: SDU received on non RX vc %u.%u\n),->expr[ident(card),ident(name)],ident(vpi),ident(vci)]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(vcc),->expr[ident(vc),ident(rx_vcc)]]],estmt[call[ident(pci_dma_sync_single_for_cpu),->expr[ident(card),ident(pcidev)],call[ident(IDT77252_PRV_PADDR),ident(skb)],binary[aop(-),call[ident(skb_end_pointer),ident(skb)],->expr[ident(skb),ident(data)]],ident(PCI_DMA_FROMDEVICE)]],sel_if[expr(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(cell),->expr[ident(skb),ident(data)]]],for[assign[simple_assi(=),ident(i),binary[aop(N/H),ident(stat),ident(SAR_RSQE_CELLCNT)]],ident(i),expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: Can't allocate buffers for aal0.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(atomic_add),ident(i),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_drop)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: atm_charge() dropped aal0 packets.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(atomic_add),binary[aop(-),ident(i),const_i(1)],&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_drop)]]]],estmt[call[ident(dev_kfree_skb),ident(sb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(aal0),binary[aop(N/H),binary[aop(N/H),ident(vpi),ident(ATM_HDR_VPI_SHIFT)],binary[aop(N/H),ident(vci),ident(ATM_HDR_VCI_SHIFT)]]]],estmt[assign[op_assi(|=),ident(aal0),condexpr3[binary[aop(N/H),ident(stat),ident(SAR_RSQE_EPDU)],const_i(0x00000002),const_i(0)]]],estmt[assign[op_assi(|=),ident(aal0),condexpr3[binary[aop(N/H),ident(stat),ident(SAR_RSQE_CLP)],const_i(0x00000001),const_i(0)]]],estmt[assign[simple_assi(=),*expr[expr(N/H)],ident(aal0)]],estmt[call[ident(skb_put),ident(sb),sizeoftype_expr[type(N/H)]]],estmt[call[ident(memcpy),call[ident(skb_put),ident(sb),ident(ATM_CELL_PAYLOAD)],ident(cell),ident(ATM_CELL_PAYLOAD)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(sb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(sb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(sb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],estmt[assign[op_assi(+=),ident(cell),ident(ATM_CELL_PAYLOAD)]]]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: Unexpected AAL type in dequeue_rx(): %d.\n),->expr[ident(card),ident(name)],.expr[->expr[ident(vcc),ident(qos)],ident(aal)]]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(skb),ident(len)],binary[aop(*),binary[aop(N/H),ident(stat),ident(SAR_RSQE_CELLCNT)],ident(ATM_CELL_PAYLOAD)]]],estmt[assign[simple_assi(=),ident(rpp),&expr[.expr[->expr[ident(vc),ident(rcv)],ident(rx_pool)]]]],estmt[assign[op_assi(+=),->expr[ident(rpp),ident(len)],->expr[ident(skb),ident(len)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),->expr[ident(rpp),ident(first)],ident(skb)]],estmt(NONE)],estmt[assign[simple_assi(=),*expr[->expr[ident(rpp),ident(last)]],ident(skb)]],estmt[assign[simple_assi(=),->expr[ident(rpp),ident(last)],&expr[->expr[ident(skb),ident(next)]]]],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_EPDU)],{}stmt[statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(l1l2),expr(N/H)]],estmt[assign[simple_assi(=),ident(len),binary[aop(N/H),binary[aop(N/H),array_a[ident(l1l2),const_i(0)],const_i(8)],array_a[ident(l1l2),const_i(1)]]]],estmt[assign[simple_assi(=),ident(len),condexpr3[ident(len),ident(len),const_i(0x10000)]]],estmt[call[ident(RXPRINTK),const_s(%s: PDU has %d bytes.\n),->expr[ident(card),ident(name)],ident(len)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const(N/H),->expr[ident(card),ident(name)],ident(len),->expr[ident(rpp),ident(len)],call[ident(readl),ident(SAR_REG_CDC)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_CRC)],{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: AAL5 CRC error.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(skb),call[ident(dev_alloc_skb),->expr[ident(rpp),ident(len)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: Can't alloc RX skb.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(dev_kfree_skb),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(sb),->expr[ident(rpp),ident(first)]]],for[assign[simple_assi(=),ident(i),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[call[ident(memcpy),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(data)],->expr[ident(sb),ident(len)]]],estmt[assign[simple_assi(=),ident(sb),->expr[ident(sb),ident(next)]]]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(skb),ident(next)],ident(NULL)]],estmt[call[ident(flush_rx_pool),ident(card),ident(rpp)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[call[ident(pci_unmap_single),->expr[ident(card),ident(pcidev)],call[ident(IDT77252_PRV_PADDR),ident(skb)],binary[aop(-),call[ident(skb_end_pointer),ident(skb)],->expr[ident(skb),ident(data)]],ident(PCI_DMA_FROMDEVICE)]],estmt[call[ident(sb_pool_remove),ident(card),ident(skb)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(3),ident(SAR_FB_SIZE_3),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(2),ident(SAR_FB_SIZE_2),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(1),ident(SAR_FB_SIZE_1),const_i(1)]],estmt[call[ident(add_rx_skb),ident(card),const_i(0),ident(SAR_FB_SIZE_0),const_i(1)]]]]],statem(N/H)],estmt(NONE)]] ==> {}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(stat),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_4)]]]],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_IDLE)],{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: message about inactive connection.\n),->expr[ident(card),ident(name)]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(skb),call[ident(sb_pool_skb),ident(card),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_2)]]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: NULL skb in %s, rsqe: %08x %08x %08x %08x\n),->expr[ident(card),ident(name)],ident(__FUNCTION__),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_1)]],call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_2)]],call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_3)]],call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_4)]]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(header),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_1)]]]],estmt[assign[simple_assi(=),ident(vpi),binary[aop(N/H),binary[aop(N/H),ident(header),const_i(16)],const_i(0x00ff)]]],estmt[assign[simple_assi(=),ident(vci),binary[aop(N/H),binary[aop(N/H),ident(header),const_i(0)],const_i(0xffff)]]],estmt[call[ident(RXPRINTK),const_s(%s: SDU for %d.%d received in buffer 0x%p (data 0x%p).\n),->expr[ident(card),ident(name)],ident(vpi),ident(vci),ident(skb),->expr[ident(skb),ident(data)]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: SDU received for out-of-range vc %u.%u\n),->expr[ident(card),ident(name)],ident(vpi),ident(vci)]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(vc),array_a[->expr[ident(card),ident(vcs)],call[ident(VPCI2VC),ident(card),ident(vpi),ident(vci)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: SDU received on non RX vc %u.%u\n),->expr[ident(card),ident(name)],ident(vpi),ident(vci)]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(vcc),->expr[ident(vc),ident(rx_vcc)]]],estmt[call[ident(pci_dma_sync_single_for_cpu),->expr[ident(card),ident(pcidev)],call[ident(IDT77252_PRV_PADDR),ident(skb)],binary[aop(-),call[ident(skb_end_pointer),ident(skb)],->expr[ident(skb),ident(data)]],ident(PCI_DMA_FROMDEVICE)]],sel_if[expr(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(cell),->expr[ident(skb),ident(data)]]],for[assign[simple_assi(=),ident(i),binary[aop(N/H),ident(stat),ident(SAR_RSQE_CELLCNT)]],ident(i),expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: Can't allocate buffers for aal0.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(atomic_add),ident(i),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_drop)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: atm_charge() dropped aal0 packets.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(atomic_add),binary[aop(-),ident(i),const_i(1)],&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_drop)]]]],estmt[call[ident(dev_kfree_skb),ident(sb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(aal0),binary[aop(N/H),binary[aop(N/H),ident(vpi),ident(ATM_HDR_VPI_SHIFT)],binary[aop(N/H),ident(vci),ident(ATM_HDR_VCI_SHIFT)]]]],estmt[assign[op_assi(|=),ident(aal0),condexpr3[binary[aop(N/H),ident(stat),ident(SAR_RSQE_EPDU)],const_i(0x00000002),const_i(0)]]],estmt[assign[op_assi(|=),ident(aal0),condexpr3[binary[aop(N/H),ident(stat),ident(SAR_RSQE_CLP)],const_i(0x00000001),const_i(0)]]],estmt[assign[simple_assi(=),*expr[expr(N/H)],ident(aal0)]],estmt[call[ident(skb_put),ident(sb),sizeoftype_expr[type(N/H)]]],estmt[call[ident(memcpy),call[ident(skb_put),ident(sb),ident(ATM_CELL_PAYLOAD)],ident(cell),ident(ATM_CELL_PAYLOAD)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(sb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(sb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(sb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],estmt[assign[op_assi(+=),ident(cell),ident(ATM_CELL_PAYLOAD)]]]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: Unexpected AAL type in dequeue_rx(): %d.\n),->expr[ident(card),ident(name)],.expr[->expr[ident(vcc),ident(qos)],ident(aal)]]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(skb),ident(len)],binary[aop(*),binary[aop(N/H),ident(stat),ident(SAR_RSQE_CELLCNT)],ident(ATM_CELL_PAYLOAD)]]],estmt[assign[simple_assi(=),ident(rpp),&expr[.expr[->expr[ident(vc),ident(rcv)],ident(rx_pool)]]]],estmt[assign[op_assi(+=),->expr[ident(rpp),ident(len)],->expr[ident(skb),ident(len)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),->expr[ident(rpp),ident(first)],ident(skb)]],estmt(NONE)],estmt[assign[simple_assi(=),*expr[->expr[ident(rpp),ident(last)]],ident(skb)]],estmt[assign[simple_assi(=),->expr[ident(rpp),ident(last)],&expr[->expr[ident(skb),ident(next)]]]],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_EPDU)],{}stmt[statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(l1l2),expr(N/H)]],estmt[assign[simple_assi(=),ident(len),binary[aop(N/H),binary[aop(N/H),array_a[ident(l1l2),const_i(0)],const_i(8)],array_a[ident(l1l2),const_i(1)]]]],estmt[assign[simple_assi(=),ident(len),condexpr3[ident(len),ident(len),const_i(0x10000)]]],estmt[call[ident(RXPRINTK),const_s(%s: PDU has %d bytes.\n),->expr[ident(card),ident(name)],ident(len)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const(N/H),->expr[ident(card),ident(name)],ident(len),->expr[ident(rpp),ident(len)],call[ident(readl),ident(SAR_REG_CDC)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_CRC)],{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: AAL5 CRC error.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(skb),call[ident(dev_alloc_skb),->expr[ident(rpp),ident(len)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: Can't alloc RX skb.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(dev_kfree_skb),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(sb),->expr[ident(rpp),ident(first)]]],for[assign[simple_assi(=),ident(i),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[call[ident(skb_copy_from_linear_data),ident(sb),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(len)]]],estmt[assign[simple_assi(=),ident(sb),->expr[ident(sb),ident(next)]]]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(skb),ident(next)],ident(NULL)]],estmt[call[ident(flush_rx_pool),ident(card),ident(rpp)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[call[ident(pci_unmap_single),->expr[ident(card),ident(pcidev)],call[ident(IDT77252_PRV_PADDR),ident(skb)],binary[aop(-),call[ident(skb_end_pointer),ident(skb)],->expr[ident(skb),ident(data)]],ident(PCI_DMA_FROMDEVICE)]],estmt[call[ident(sb_pool_remove),ident(card),ident(skb)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(3),ident(SAR_FB_SIZE_3),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(2),ident(SAR_FB_SIZE_2),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(1),ident(SAR_FB_SIZE_1),const_i(1)]],estmt[call[ident(add_rx_skb),ident(card),const_i(0),ident(SAR_FB_SIZE_0),const_i(1)]]]]],statem(N/H)],estmt(NONE)]]
	#no of abstracted update: 1
,
.
abstracting the following solution now
[[
def[fname(dequeue_rx),funtype(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(stat),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_4)]]]],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_IDLE)],{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: message about inactive connection.\n),->expr[ident(card),ident(name)]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(skb),call[ident(sb_pool_skb),ident(card),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_2)]]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: NULL skb in %s, rsqe: %08x %08x %08x %08x\n),->expr[ident(card),ident(name)],ident(__FUNCTION__),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_1)]],call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_2)]],call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_3)]],call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_4)]]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(header),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_1)]]]],estmt[assign[simple_assi(=),ident(vpi),binary[aop(N/H),binary[aop(N/H),ident(header),const_i(16)],const_i(0x00ff)]]],estmt[assign[simple_assi(=),ident(vci),binary[aop(N/H),binary[aop(N/H),ident(header),const_i(0)],const_i(0xffff)]]],estmt[call[ident(RXPRINTK),const_s(%s: SDU for %d.%d received in buffer 0x%p (data 0x%p).\n),->expr[ident(card),ident(name)],ident(vpi),ident(vci),ident(skb),->expr[ident(skb),ident(data)]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: SDU received for out-of-range vc %u.%u\n),->expr[ident(card),ident(name)],ident(vpi),ident(vci)]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(vc),array_a[->expr[ident(card),ident(vcs)],call[ident(VPCI2VC),ident(card),ident(vpi),ident(vci)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: SDU received on non RX vc %u.%u\n),->expr[ident(card),ident(name)],ident(vpi),ident(vci)]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(vcc),->expr[ident(vc),ident(rx_vcc)]]],estmt[call[ident(pci_dma_sync_single_for_cpu),->expr[ident(card),ident(pcidev)],call[ident(IDT77252_PRV_PADDR),ident(skb)],binary[aop(-),call[ident(skb_end_pointer),ident(skb)],->expr[ident(skb),ident(data)]],ident(PCI_DMA_FROMDEVICE)]],sel_if[expr(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(cell),->expr[ident(skb),ident(data)]]],for[assign[simple_assi(=),ident(i),binary[aop(N/H),ident(stat),ident(SAR_RSQE_CELLCNT)]],ident(i),expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: Can't allocate buffers for aal0.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(atomic_add),ident(i),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_drop)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: atm_charge() dropped aal0 packets.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(atomic_add),binary[aop(-),ident(i),const_i(1)],&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_drop)]]]],estmt[call[ident(dev_kfree_skb),ident(sb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(aal0),binary[aop(N/H),binary[aop(N/H),ident(vpi),ident(ATM_HDR_VPI_SHIFT)],binary[aop(N/H),ident(vci),ident(ATM_HDR_VCI_SHIFT)]]]],estmt[assign[op_assi(|=),ident(aal0),condexpr3[binary[aop(N/H),ident(stat),ident(SAR_RSQE_EPDU)],const_i(0x00000002),const_i(0)]]],estmt[assign[op_assi(|=),ident(aal0),condexpr3[binary[aop(N/H),ident(stat),ident(SAR_RSQE_CLP)],const_i(0x00000001),const_i(0)]]],estmt[assign[simple_assi(=),*expr[expr(N/H)],ident(aal0)]],estmt[call[ident(skb_put),ident(sb),sizeoftype_expr[type(N/H)]]],estmt[call[ident(memcpy),call[ident(skb_put),ident(sb),ident(ATM_CELL_PAYLOAD)],ident(cell),ident(ATM_CELL_PAYLOAD)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(sb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(sb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(sb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],estmt[assign[op_assi(+=),ident(cell),ident(ATM_CELL_PAYLOAD)]]]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: Unexpected AAL type in dequeue_rx(): %d.\n),->expr[ident(card),ident(name)],.expr[->expr[ident(vcc),ident(qos)],ident(aal)]]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(skb),ident(len)],binary[aop(*),binary[aop(N/H),ident(stat),ident(SAR_RSQE_CELLCNT)],ident(ATM_CELL_PAYLOAD)]]],estmt[assign[simple_assi(=),ident(rpp),&expr[.expr[->expr[ident(vc),ident(rcv)],ident(rx_pool)]]]],estmt[assign[op_assi(+=),->expr[ident(rpp),ident(len)],->expr[ident(skb),ident(len)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),->expr[ident(rpp),ident(first)],ident(skb)]],estmt(NONE)],estmt[assign[simple_assi(=),*expr[->expr[ident(rpp),ident(last)]],ident(skb)]],estmt[assign[simple_assi(=),->expr[ident(rpp),ident(last)],&expr[->expr[ident(skb),ident(next)]]]],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_EPDU)],{}stmt[statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(l1l2),expr(N/H)]],estmt[assign[simple_assi(=),ident(len),binary[aop(N/H),binary[aop(N/H),array_a[ident(l1l2),const_i(0)],const_i(8)],array_a[ident(l1l2),const_i(1)]]]],estmt[assign[simple_assi(=),ident(len),condexpr3[ident(len),ident(len),const_i(0x10000)]]],estmt[call[ident(RXPRINTK),const_s(%s: PDU has %d bytes.\n),->expr[ident(card),ident(name)],ident(len)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const(N/H),->expr[ident(card),ident(name)],ident(len),->expr[ident(rpp),ident(len)],call[ident(readl),ident(SAR_REG_CDC)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_CRC)],{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: AAL5 CRC error.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(skb),call[ident(dev_alloc_skb),->expr[ident(rpp),ident(len)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: Can't alloc RX skb.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(dev_kfree_skb),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(sb),->expr[ident(rpp),ident(first)]]],for[assign[simple_assi(=),ident(i),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[call[ident(memcpy),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(data)],->expr[ident(sb),ident(len)]]],estmt[assign[simple_assi(=),ident(sb),->expr[ident(sb),ident(next)]]]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(skb),ident(next)],ident(NULL)]],estmt[call[ident(flush_rx_pool),ident(card),ident(rpp)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[call[ident(pci_unmap_single),->expr[ident(card),ident(pcidev)],call[ident(IDT77252_PRV_PADDR),ident(skb)],binary[aop(-),call[ident(skb_end_pointer),ident(skb)],->expr[ident(skb),ident(data)]],ident(PCI_DMA_FROMDEVICE)]],estmt[call[ident(sb_pool_remove),ident(card),ident(skb)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(3),ident(SAR_FB_SIZE_3),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(2),ident(SAR_FB_SIZE_2),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(1),ident(SAR_FB_SIZE_1),const_i(1)]],estmt[call[ident(add_rx_skb),ident(card),const_i(0),ident(SAR_FB_SIZE_0),const_i(1)]]]]],statem(N/H)],estmt(NONE)]]] ==> def[fname(dequeue_rx),funtype(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(stat),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_4)]]]],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_IDLE)],{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: message about inactive connection.\n),->expr[ident(card),ident(name)]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(skb),call[ident(sb_pool_skb),ident(card),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_2)]]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: NULL skb in %s, rsqe: %08x %08x %08x %08x\n),->expr[ident(card),ident(name)],ident(__FUNCTION__),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_1)]],call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_2)]],call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_3)]],call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_4)]]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(header),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_1)]]]],estmt[assign[simple_assi(=),ident(vpi),binary[aop(N/H),binary[aop(N/H),ident(header),const_i(16)],const_i(0x00ff)]]],estmt[assign[simple_assi(=),ident(vci),binary[aop(N/H),binary[aop(N/H),ident(header),const_i(0)],const_i(0xffff)]]],estmt[call[ident(RXPRINTK),const_s(%s: SDU for %d.%d received in buffer 0x%p (data 0x%p).\n),->expr[ident(card),ident(name)],ident(vpi),ident(vci),ident(skb),->expr[ident(skb),ident(data)]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: SDU received for out-of-range vc %u.%u\n),->expr[ident(card),ident(name)],ident(vpi),ident(vci)]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(vc),array_a[->expr[ident(card),ident(vcs)],call[ident(VPCI2VC),ident(card),ident(vpi),ident(vci)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: SDU received on non RX vc %u.%u\n),->expr[ident(card),ident(name)],ident(vpi),ident(vci)]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(vcc),->expr[ident(vc),ident(rx_vcc)]]],estmt[call[ident(pci_dma_sync_single_for_cpu),->expr[ident(card),ident(pcidev)],call[ident(IDT77252_PRV_PADDR),ident(skb)],binary[aop(-),call[ident(skb_end_pointer),ident(skb)],->expr[ident(skb),ident(data)]],ident(PCI_DMA_FROMDEVICE)]],sel_if[expr(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(cell),->expr[ident(skb),ident(data)]]],for[assign[simple_assi(=),ident(i),binary[aop(N/H),ident(stat),ident(SAR_RSQE_CELLCNT)]],ident(i),expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: Can't allocate buffers for aal0.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(atomic_add),ident(i),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_drop)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: atm_charge() dropped aal0 packets.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(atomic_add),binary[aop(-),ident(i),const_i(1)],&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_drop)]]]],estmt[call[ident(dev_kfree_skb),ident(sb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(aal0),binary[aop(N/H),binary[aop(N/H),ident(vpi),ident(ATM_HDR_VPI_SHIFT)],binary[aop(N/H),ident(vci),ident(ATM_HDR_VCI_SHIFT)]]]],estmt[assign[op_assi(|=),ident(aal0),condexpr3[binary[aop(N/H),ident(stat),ident(SAR_RSQE_EPDU)],const_i(0x00000002),const_i(0)]]],estmt[assign[op_assi(|=),ident(aal0),condexpr3[binary[aop(N/H),ident(stat),ident(SAR_RSQE_CLP)],const_i(0x00000001),const_i(0)]]],estmt[assign[simple_assi(=),*expr[expr(N/H)],ident(aal0)]],estmt[call[ident(skb_put),ident(sb),sizeoftype_expr[type(N/H)]]],estmt[call[ident(memcpy),call[ident(skb_put),ident(sb),ident(ATM_CELL_PAYLOAD)],ident(cell),ident(ATM_CELL_PAYLOAD)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(sb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(sb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(sb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],estmt[assign[op_assi(+=),ident(cell),ident(ATM_CELL_PAYLOAD)]]]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: Unexpected AAL type in dequeue_rx(): %d.\n),->expr[ident(card),ident(name)],.expr[->expr[ident(vcc),ident(qos)],ident(aal)]]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(skb),ident(len)],binary[aop(*),binary[aop(N/H),ident(stat),ident(SAR_RSQE_CELLCNT)],ident(ATM_CELL_PAYLOAD)]]],estmt[assign[simple_assi(=),ident(rpp),&expr[.expr[->expr[ident(vc),ident(rcv)],ident(rx_pool)]]]],estmt[assign[op_assi(+=),->expr[ident(rpp),ident(len)],->expr[ident(skb),ident(len)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),->expr[ident(rpp),ident(first)],ident(skb)]],estmt(NONE)],estmt[assign[simple_assi(=),*expr[->expr[ident(rpp),ident(last)]],ident(skb)]],estmt[assign[simple_assi(=),->expr[ident(rpp),ident(last)],&expr[->expr[ident(skb),ident(next)]]]],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_EPDU)],{}stmt[statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(l1l2),expr(N/H)]],estmt[assign[simple_assi(=),ident(len),binary[aop(N/H),binary[aop(N/H),array_a[ident(l1l2),const_i(0)],const_i(8)],array_a[ident(l1l2),const_i(1)]]]],estmt[assign[simple_assi(=),ident(len),condexpr3[ident(len),ident(len),const_i(0x10000)]]],estmt[call[ident(RXPRINTK),const_s(%s: PDU has %d bytes.\n),->expr[ident(card),ident(name)],ident(len)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const(N/H),->expr[ident(card),ident(name)],ident(len),->expr[ident(rpp),ident(len)],call[ident(readl),ident(SAR_REG_CDC)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_CRC)],{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: AAL5 CRC error.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(skb),call[ident(dev_alloc_skb),->expr[ident(rpp),ident(len)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: Can't alloc RX skb.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(dev_kfree_skb),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(sb),->expr[ident(rpp),ident(first)]]],for[assign[simple_assi(=),ident(i),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[call[ident(skb_copy_from_linear_data),ident(sb),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(len)]]],estmt[assign[simple_assi(=),ident(sb),->expr[ident(sb),ident(next)]]]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(skb),ident(next)],ident(NULL)]],estmt[call[ident(flush_rx_pool),ident(card),ident(rpp)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[call[ident(pci_unmap_single),->expr[ident(card),ident(pcidev)],call[ident(IDT77252_PRV_PADDR),ident(skb)],binary[aop(-),call[ident(skb_end_pointer),ident(skb)],->expr[ident(skb),ident(data)]],ident(PCI_DMA_FROMDEVICE)]],estmt[call[ident(sb_pool_remove),ident(card),ident(skb)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(3),ident(SAR_FB_SIZE_3),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(2),ident(SAR_FB_SIZE_2),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(1),ident(SAR_FB_SIZE_1),const_i(1)]],estmt[call[ident(add_rx_skb),ident(card),const_i(0),ident(SAR_FB_SIZE_0),const_i(1)]]]]],statem(N/H)],estmt(NONE)]]]
	¶
]]
of size  :::: 807

with result :::::
def[fname(dequeue_rx),funtype(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(stat),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_4)]]]],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_IDLE)],{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: message about inactive connection.\n),->expr[ident(card),ident(name)]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(skb),call[ident(sb_pool_skb),ident(card),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_2)]]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: NULL skb in %s, rsqe: %08x %08x %08x %08x\n),->expr[ident(card),ident(name)],ident(__FUNCTION__),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_1)]],call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_2)]],call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_3)]],call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_4)]]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(header),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_1)]]]],estmt[assign[simple_assi(=),ident(vpi),binary[aop(N/H),binary[aop(N/H),ident(header),const_i(16)],const_i(0x00ff)]]],estmt[assign[simple_assi(=),ident(vci),binary[aop(N/H),binary[aop(N/H),ident(header),const_i(0)],const_i(0xffff)]]],estmt[call[ident(RXPRINTK),const_s(%s: SDU for %d.%d received in buffer 0x%p (data 0x%p).\n),->expr[ident(card),ident(name)],ident(vpi),ident(vci),ident(skb),->expr[ident(skb),ident(data)]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: SDU received for out-of-range vc %u.%u\n),->expr[ident(card),ident(name)],ident(vpi),ident(vci)]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(vc),array_a[->expr[ident(card),ident(vcs)],call[ident(VPCI2VC),ident(card),ident(vpi),ident(vci)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: SDU received on non RX vc %u.%u\n),->expr[ident(card),ident(name)],ident(vpi),ident(vci)]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(vcc),->expr[ident(vc),ident(rx_vcc)]]],estmt[call[ident(pci_dma_sync_single_for_cpu),->expr[ident(card),ident(pcidev)],call[ident(IDT77252_PRV_PADDR),ident(skb)],binary[aop(-),call[ident(skb_end_pointer),ident(skb)],->expr[ident(skb),ident(data)]],ident(PCI_DMA_FROMDEVICE)]],sel_if[expr(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(cell),->expr[ident(skb),ident(data)]]],for[assign[simple_assi(=),ident(i),binary[aop(N/H),ident(stat),ident(SAR_RSQE_CELLCNT)]],ident(i),expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: Can't allocate buffers for aal0.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(atomic_add),ident(i),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_drop)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: atm_charge() dropped aal0 packets.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(atomic_add),binary[aop(-),ident(i),const_i(1)],&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_drop)]]]],estmt[call[ident(dev_kfree_skb),ident(sb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(aal0),binary[aop(N/H),binary[aop(N/H),ident(vpi),ident(ATM_HDR_VPI_SHIFT)],binary[aop(N/H),ident(vci),ident(ATM_HDR_VCI_SHIFT)]]]],estmt[assign[op_assi(|=),ident(aal0),condexpr3[binary[aop(N/H),ident(stat),ident(SAR_RSQE_EPDU)],const_i(0x00000002),const_i(0)]]],estmt[assign[op_assi(|=),ident(aal0),condexpr3[binary[aop(N/H),ident(stat),ident(SAR_RSQE_CLP)],const_i(0x00000001),const_i(0)]]],estmt[assign[simple_assi(=),*expr[expr(N/H)],ident(aal0)]],estmt[call[ident(skb_put),ident(sb),sizeoftype_expr[type(N/H)]]],estmt[call[ident(memcpy),call[ident(skb_put),ident(sb),ident(ATM_CELL_PAYLOAD)],ident(cell),ident(ATM_CELL_PAYLOAD)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(sb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(sb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(sb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],estmt[assign[op_assi(+=),ident(cell),ident(ATM_CELL_PAYLOAD)]]]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: Unexpected AAL type in dequeue_rx(): %d.\n),->expr[ident(card),ident(name)],.expr[->expr[ident(vcc),ident(qos)],ident(aal)]]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(skb),ident(len)],binary[aop(*),binary[aop(N/H),ident(stat),ident(SAR_RSQE_CELLCNT)],ident(ATM_CELL_PAYLOAD)]]],estmt[assign[simple_assi(=),ident(rpp),&expr[.expr[->expr[ident(vc),ident(rcv)],ident(rx_pool)]]]],estmt[assign[op_assi(+=),->expr[ident(rpp),ident(len)],->expr[ident(skb),ident(len)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),->expr[ident(rpp),ident(first)],ident(skb)]],estmt(NONE)],estmt[assign[simple_assi(=),*expr[->expr[ident(rpp),ident(last)]],ident(skb)]],estmt[assign[simple_assi(=),->expr[ident(rpp),ident(last)],&expr[->expr[ident(skb),ident(next)]]]],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_EPDU)],{}stmt[statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(l1l2),expr(N/H)]],estmt[assign[simple_assi(=),ident(len),binary[aop(N/H),binary[aop(N/H),array_a[ident(l1l2),const_i(0)],const_i(8)],array_a[ident(l1l2),const_i(1)]]]],estmt[assign[simple_assi(=),ident(len),condexpr3[ident(len),ident(len),const_i(0x10000)]]],estmt[call[ident(RXPRINTK),const_s(%s: PDU has %d bytes.\n),->expr[ident(card),ident(name)],ident(len)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const(N/H),->expr[ident(card),ident(name)],ident(len),->expr[ident(rpp),ident(len)],call[ident(readl),ident(SAR_REG_CDC)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_CRC)],{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: AAL5 CRC error.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(skb),call[ident(dev_alloc_skb),->expr[ident(rpp),ident(len)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: Can't alloc RX skb.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(dev_kfree_skb),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(sb),->expr[ident(rpp),ident(first)]]],for[assign[simple_assi(=),ident(i),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[call[ident(memcpy),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(data)],->expr[ident(sb),ident(len)]]],estmt[assign[simple_assi(=),ident(sb),->expr[ident(sb),ident(next)]]]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(skb),ident(next)],ident(NULL)]],estmt[call[ident(flush_rx_pool),ident(card),ident(rpp)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[call[ident(pci_unmap_single),->expr[ident(card),ident(pcidev)],call[ident(IDT77252_PRV_PADDR),ident(skb)],binary[aop(-),call[ident(skb_end_pointer),ident(skb)],->expr[ident(skb),ident(data)]],ident(PCI_DMA_FROMDEVICE)]],estmt[call[ident(sb_pool_remove),ident(card),ident(skb)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(3),ident(SAR_FB_SIZE_3),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(2),ident(SAR_FB_SIZE_2),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(1),ident(SAR_FB_SIZE_1),const_i(1)]],estmt[call[ident(add_rx_skb),ident(card),const_i(0),ident(SAR_FB_SIZE_0),const_i(1)]]]]],statem(N/H)],estmt(NONE)]]] ==> def[fname(dequeue_rx),funtype(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(stat),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_4)]]]],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_IDLE)],{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: message about inactive connection.\n),->expr[ident(card),ident(name)]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(skb),call[ident(sb_pool_skb),ident(card),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_2)]]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: NULL skb in %s, rsqe: %08x %08x %08x %08x\n),->expr[ident(card),ident(name)],ident(__FUNCTION__),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_1)]],call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_2)]],call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_3)]],call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_4)]]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(header),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_1)]]]],estmt[assign[simple_assi(=),ident(vpi),binary[aop(N/H),binary[aop(N/H),ident(header),const_i(16)],const_i(0x00ff)]]],estmt[assign[simple_assi(=),ident(vci),binary[aop(N/H),binary[aop(N/H),ident(header),const_i(0)],const_i(0xffff)]]],estmt[call[ident(RXPRINTK),const_s(%s: SDU for %d.%d received in buffer 0x%p (data 0x%p).\n),->expr[ident(card),ident(name)],ident(vpi),ident(vci),ident(skb),->expr[ident(skb),ident(data)]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: SDU received for out-of-range vc %u.%u\n),->expr[ident(card),ident(name)],ident(vpi),ident(vci)]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(vc),array_a[->expr[ident(card),ident(vcs)],call[ident(VPCI2VC),ident(card),ident(vpi),ident(vci)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: SDU received on non RX vc %u.%u\n),->expr[ident(card),ident(name)],ident(vpi),ident(vci)]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(vcc),->expr[ident(vc),ident(rx_vcc)]]],estmt[call[ident(pci_dma_sync_single_for_cpu),->expr[ident(card),ident(pcidev)],call[ident(IDT77252_PRV_PADDR),ident(skb)],binary[aop(-),call[ident(skb_end_pointer),ident(skb)],->expr[ident(skb),ident(data)]],ident(PCI_DMA_FROMDEVICE)]],sel_if[expr(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(cell),->expr[ident(skb),ident(data)]]],for[assign[simple_assi(=),ident(i),binary[aop(N/H),ident(stat),ident(SAR_RSQE_CELLCNT)]],ident(i),expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: Can't allocate buffers for aal0.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(atomic_add),ident(i),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_drop)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: atm_charge() dropped aal0 packets.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(atomic_add),binary[aop(-),ident(i),const_i(1)],&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_drop)]]]],estmt[call[ident(dev_kfree_skb),ident(sb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(aal0),binary[aop(N/H),binary[aop(N/H),ident(vpi),ident(ATM_HDR_VPI_SHIFT)],binary[aop(N/H),ident(vci),ident(ATM_HDR_VCI_SHIFT)]]]],estmt[assign[op_assi(|=),ident(aal0),condexpr3[binary[aop(N/H),ident(stat),ident(SAR_RSQE_EPDU)],const_i(0x00000002),const_i(0)]]],estmt[assign[op_assi(|=),ident(aal0),condexpr3[binary[aop(N/H),ident(stat),ident(SAR_RSQE_CLP)],const_i(0x00000001),const_i(0)]]],estmt[assign[simple_assi(=),*expr[expr(N/H)],ident(aal0)]],estmt[call[ident(skb_put),ident(sb),sizeoftype_expr[type(N/H)]]],estmt[call[ident(memcpy),call[ident(skb_put),ident(sb),ident(ATM_CELL_PAYLOAD)],ident(cell),ident(ATM_CELL_PAYLOAD)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(sb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(sb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(sb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],estmt[assign[op_assi(+=),ident(cell),ident(ATM_CELL_PAYLOAD)]]]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: Unexpected AAL type in dequeue_rx(): %d.\n),->expr[ident(card),ident(name)],.expr[->expr[ident(vcc),ident(qos)],ident(aal)]]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(skb),ident(len)],binary[aop(*),binary[aop(N/H),ident(stat),ident(SAR_RSQE_CELLCNT)],ident(ATM_CELL_PAYLOAD)]]],estmt[assign[simple_assi(=),ident(rpp),&expr[.expr[->expr[ident(vc),ident(rcv)],ident(rx_pool)]]]],estmt[assign[op_assi(+=),->expr[ident(rpp),ident(len)],->expr[ident(skb),ident(len)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),->expr[ident(rpp),ident(first)],ident(skb)]],estmt(NONE)],estmt[assign[simple_assi(=),*expr[->expr[ident(rpp),ident(last)]],ident(skb)]],estmt[assign[simple_assi(=),->expr[ident(rpp),ident(last)],&expr[->expr[ident(skb),ident(next)]]]],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_EPDU)],{}stmt[statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(l1l2),expr(N/H)]],estmt[assign[simple_assi(=),ident(len),binary[aop(N/H),binary[aop(N/H),array_a[ident(l1l2),const_i(0)],const_i(8)],array_a[ident(l1l2),const_i(1)]]]],estmt[assign[simple_assi(=),ident(len),condexpr3[ident(len),ident(len),const_i(0x10000)]]],estmt[call[ident(RXPRINTK),const_s(%s: PDU has %d bytes.\n),->expr[ident(card),ident(name)],ident(len)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const(N/H),->expr[ident(card),ident(name)],ident(len),->expr[ident(rpp),ident(len)],call[ident(readl),ident(SAR_REG_CDC)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_CRC)],{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: AAL5 CRC error.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(skb),call[ident(dev_alloc_skb),->expr[ident(rpp),ident(len)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: Can't alloc RX skb.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(dev_kfree_skb),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(sb),->expr[ident(rpp),ident(first)]]],for[assign[simple_assi(=),ident(i),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[call[ident(skb_copy_from_linear_data),ident(sb),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(len)]]],estmt[assign[simple_assi(=),ident(sb),->expr[ident(sb),ident(next)]]]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(skb),ident(next)],ident(NULL)]],estmt[call[ident(flush_rx_pool),ident(card),ident(rpp)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[call[ident(pci_unmap_single),->expr[ident(card),ident(pcidev)],call[ident(IDT77252_PRV_PADDR),ident(skb)],binary[aop(-),call[ident(skb_end_pointer),ident(skb)],->expr[ident(skb),ident(data)]],ident(PCI_DMA_FROMDEVICE)]],estmt[call[ident(sb_pool_remove),ident(card),ident(skb)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(3),ident(SAR_FB_SIZE_3),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(2),ident(SAR_FB_SIZE_2),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(1),ident(SAR_FB_SIZE_1),const_i(1)]],estmt[call[ident(add_rx_skb),ident(card),const_i(0),ident(SAR_FB_SIZE_0),const_i(1)]]]]],statem(N/H)],estmt(NONE)]]]
	#no of abstracted update: 1
,
.
abstracting the following solution now
[[
prg2[def[fname(dequeue_rx),funtype(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(stat),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_4)]]]],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_IDLE)],{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: message about inactive connection.\n),->expr[ident(card),ident(name)]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(skb),call[ident(sb_pool_skb),ident(card),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_2)]]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: NULL skb in %s, rsqe: %08x %08x %08x %08x\n),->expr[ident(card),ident(name)],ident(__FUNCTION__),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_1)]],call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_2)]],call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_3)]],call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_4)]]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(header),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_1)]]]],estmt[assign[simple_assi(=),ident(vpi),binary[aop(N/H),binary[aop(N/H),ident(header),const_i(16)],const_i(0x00ff)]]],estmt[assign[simple_assi(=),ident(vci),binary[aop(N/H),binary[aop(N/H),ident(header),const_i(0)],const_i(0xffff)]]],estmt[call[ident(RXPRINTK),const_s(%s: SDU for %d.%d received in buffer 0x%p (data 0x%p).\n),->expr[ident(card),ident(name)],ident(vpi),ident(vci),ident(skb),->expr[ident(skb),ident(data)]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: SDU received for out-of-range vc %u.%u\n),->expr[ident(card),ident(name)],ident(vpi),ident(vci)]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(vc),array_a[->expr[ident(card),ident(vcs)],call[ident(VPCI2VC),ident(card),ident(vpi),ident(vci)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: SDU received on non RX vc %u.%u\n),->expr[ident(card),ident(name)],ident(vpi),ident(vci)]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(vcc),->expr[ident(vc),ident(rx_vcc)]]],estmt[call[ident(pci_dma_sync_single_for_cpu),->expr[ident(card),ident(pcidev)],call[ident(IDT77252_PRV_PADDR),ident(skb)],binary[aop(-),call[ident(skb_end_pointer),ident(skb)],->expr[ident(skb),ident(data)]],ident(PCI_DMA_FROMDEVICE)]],sel_if[expr(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(cell),->expr[ident(skb),ident(data)]]],for[assign[simple_assi(=),ident(i),binary[aop(N/H),ident(stat),ident(SAR_RSQE_CELLCNT)]],ident(i),expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: Can't allocate buffers for aal0.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(atomic_add),ident(i),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_drop)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: atm_charge() dropped aal0 packets.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(atomic_add),binary[aop(-),ident(i),const_i(1)],&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_drop)]]]],estmt[call[ident(dev_kfree_skb),ident(sb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(aal0),binary[aop(N/H),binary[aop(N/H),ident(vpi),ident(ATM_HDR_VPI_SHIFT)],binary[aop(N/H),ident(vci),ident(ATM_HDR_VCI_SHIFT)]]]],estmt[assign[op_assi(|=),ident(aal0),condexpr3[binary[aop(N/H),ident(stat),ident(SAR_RSQE_EPDU)],const_i(0x00000002),const_i(0)]]],estmt[assign[op_assi(|=),ident(aal0),condexpr3[binary[aop(N/H),ident(stat),ident(SAR_RSQE_CLP)],const_i(0x00000001),const_i(0)]]],estmt[assign[simple_assi(=),*expr[expr(N/H)],ident(aal0)]],estmt[call[ident(skb_put),ident(sb),sizeoftype_expr[type(N/H)]]],estmt[call[ident(memcpy),call[ident(skb_put),ident(sb),ident(ATM_CELL_PAYLOAD)],ident(cell),ident(ATM_CELL_PAYLOAD)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(sb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(sb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(sb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],estmt[assign[op_assi(+=),ident(cell),ident(ATM_CELL_PAYLOAD)]]]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: Unexpected AAL type in dequeue_rx(): %d.\n),->expr[ident(card),ident(name)],.expr[->expr[ident(vcc),ident(qos)],ident(aal)]]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(skb),ident(len)],binary[aop(*),binary[aop(N/H),ident(stat),ident(SAR_RSQE_CELLCNT)],ident(ATM_CELL_PAYLOAD)]]],estmt[assign[simple_assi(=),ident(rpp),&expr[.expr[->expr[ident(vc),ident(rcv)],ident(rx_pool)]]]],estmt[assign[op_assi(+=),->expr[ident(rpp),ident(len)],->expr[ident(skb),ident(len)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),->expr[ident(rpp),ident(first)],ident(skb)]],estmt(NONE)],estmt[assign[simple_assi(=),*expr[->expr[ident(rpp),ident(last)]],ident(skb)]],estmt[assign[simple_assi(=),->expr[ident(rpp),ident(last)],&expr[->expr[ident(skb),ident(next)]]]],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_EPDU)],{}stmt[statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(l1l2),expr(N/H)]],estmt[assign[simple_assi(=),ident(len),binary[aop(N/H),binary[aop(N/H),array_a[ident(l1l2),const_i(0)],const_i(8)],array_a[ident(l1l2),const_i(1)]]]],estmt[assign[simple_assi(=),ident(len),condexpr3[ident(len),ident(len),const_i(0x10000)]]],estmt[call[ident(RXPRINTK),const_s(%s: PDU has %d bytes.\n),->expr[ident(card),ident(name)],ident(len)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const(N/H),->expr[ident(card),ident(name)],ident(len),->expr[ident(rpp),ident(len)],call[ident(readl),ident(SAR_REG_CDC)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_CRC)],{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: AAL5 CRC error.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(skb),call[ident(dev_alloc_skb),->expr[ident(rpp),ident(len)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: Can't alloc RX skb.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(dev_kfree_skb),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(sb),->expr[ident(rpp),ident(first)]]],for[assign[simple_assi(=),ident(i),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[call[ident(memcpy),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(data)],->expr[ident(sb),ident(len)]]],estmt[assign[simple_assi(=),ident(sb),->expr[ident(sb),ident(next)]]]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(skb),ident(next)],ident(NULL)]],estmt[call[ident(flush_rx_pool),ident(card),ident(rpp)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[call[ident(pci_unmap_single),->expr[ident(card),ident(pcidev)],call[ident(IDT77252_PRV_PADDR),ident(skb)],binary[aop(-),call[ident(skb_end_pointer),ident(skb)],->expr[ident(skb),ident(data)]],ident(PCI_DMA_FROMDEVICE)]],estmt[call[ident(sb_pool_remove),ident(card),ident(skb)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(3),ident(SAR_FB_SIZE_3),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(2),ident(SAR_FB_SIZE_2),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(1),ident(SAR_FB_SIZE_1),const_i(1)]],estmt[call[ident(add_rx_skb),ident(card),const_i(0),ident(SAR_FB_SIZE_0),const_i(1)]]]]],statem(N/H)],estmt(NONE)]]]] ==> prg2[def[fname(dequeue_rx),funtype(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(stat),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_4)]]]],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_IDLE)],{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: message about inactive connection.\n),->expr[ident(card),ident(name)]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(skb),call[ident(sb_pool_skb),ident(card),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_2)]]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: NULL skb in %s, rsqe: %08x %08x %08x %08x\n),->expr[ident(card),ident(name)],ident(__FUNCTION__),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_1)]],call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_2)]],call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_3)]],call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_4)]]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(header),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_1)]]]],estmt[assign[simple_assi(=),ident(vpi),binary[aop(N/H),binary[aop(N/H),ident(header),const_i(16)],const_i(0x00ff)]]],estmt[assign[simple_assi(=),ident(vci),binary[aop(N/H),binary[aop(N/H),ident(header),const_i(0)],const_i(0xffff)]]],estmt[call[ident(RXPRINTK),const_s(%s: SDU for %d.%d received in buffer 0x%p (data 0x%p).\n),->expr[ident(card),ident(name)],ident(vpi),ident(vci),ident(skb),->expr[ident(skb),ident(data)]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: SDU received for out-of-range vc %u.%u\n),->expr[ident(card),ident(name)],ident(vpi),ident(vci)]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(vc),array_a[->expr[ident(card),ident(vcs)],call[ident(VPCI2VC),ident(card),ident(vpi),ident(vci)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: SDU received on non RX vc %u.%u\n),->expr[ident(card),ident(name)],ident(vpi),ident(vci)]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(vcc),->expr[ident(vc),ident(rx_vcc)]]],estmt[call[ident(pci_dma_sync_single_for_cpu),->expr[ident(card),ident(pcidev)],call[ident(IDT77252_PRV_PADDR),ident(skb)],binary[aop(-),call[ident(skb_end_pointer),ident(skb)],->expr[ident(skb),ident(data)]],ident(PCI_DMA_FROMDEVICE)]],sel_if[expr(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(cell),->expr[ident(skb),ident(data)]]],for[assign[simple_assi(=),ident(i),binary[aop(N/H),ident(stat),ident(SAR_RSQE_CELLCNT)]],ident(i),expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: Can't allocate buffers for aal0.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(atomic_add),ident(i),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_drop)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: atm_charge() dropped aal0 packets.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(atomic_add),binary[aop(-),ident(i),const_i(1)],&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_drop)]]]],estmt[call[ident(dev_kfree_skb),ident(sb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(aal0),binary[aop(N/H),binary[aop(N/H),ident(vpi),ident(ATM_HDR_VPI_SHIFT)],binary[aop(N/H),ident(vci),ident(ATM_HDR_VCI_SHIFT)]]]],estmt[assign[op_assi(|=),ident(aal0),condexpr3[binary[aop(N/H),ident(stat),ident(SAR_RSQE_EPDU)],const_i(0x00000002),const_i(0)]]],estmt[assign[op_assi(|=),ident(aal0),condexpr3[binary[aop(N/H),ident(stat),ident(SAR_RSQE_CLP)],const_i(0x00000001),const_i(0)]]],estmt[assign[simple_assi(=),*expr[expr(N/H)],ident(aal0)]],estmt[call[ident(skb_put),ident(sb),sizeoftype_expr[type(N/H)]]],estmt[call[ident(memcpy),call[ident(skb_put),ident(sb),ident(ATM_CELL_PAYLOAD)],ident(cell),ident(ATM_CELL_PAYLOAD)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(sb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(sb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(sb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],estmt[assign[op_assi(+=),ident(cell),ident(ATM_CELL_PAYLOAD)]]]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: Unexpected AAL type in dequeue_rx(): %d.\n),->expr[ident(card),ident(name)],.expr[->expr[ident(vcc),ident(qos)],ident(aal)]]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(skb),ident(len)],binary[aop(*),binary[aop(N/H),ident(stat),ident(SAR_RSQE_CELLCNT)],ident(ATM_CELL_PAYLOAD)]]],estmt[assign[simple_assi(=),ident(rpp),&expr[.expr[->expr[ident(vc),ident(rcv)],ident(rx_pool)]]]],estmt[assign[op_assi(+=),->expr[ident(rpp),ident(len)],->expr[ident(skb),ident(len)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),->expr[ident(rpp),ident(first)],ident(skb)]],estmt(NONE)],estmt[assign[simple_assi(=),*expr[->expr[ident(rpp),ident(last)]],ident(skb)]],estmt[assign[simple_assi(=),->expr[ident(rpp),ident(last)],&expr[->expr[ident(skb),ident(next)]]]],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_EPDU)],{}stmt[statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(l1l2),expr(N/H)]],estmt[assign[simple_assi(=),ident(len),binary[aop(N/H),binary[aop(N/H),array_a[ident(l1l2),const_i(0)],const_i(8)],array_a[ident(l1l2),const_i(1)]]]],estmt[assign[simple_assi(=),ident(len),condexpr3[ident(len),ident(len),const_i(0x10000)]]],estmt[call[ident(RXPRINTK),const_s(%s: PDU has %d bytes.\n),->expr[ident(card),ident(name)],ident(len)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const(N/H),->expr[ident(card),ident(name)],ident(len),->expr[ident(rpp),ident(len)],call[ident(readl),ident(SAR_REG_CDC)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_CRC)],{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: AAL5 CRC error.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(skb),call[ident(dev_alloc_skb),->expr[ident(rpp),ident(len)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: Can't alloc RX skb.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(dev_kfree_skb),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(sb),->expr[ident(rpp),ident(first)]]],for[assign[simple_assi(=),ident(i),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[call[ident(skb_copy_from_linear_data),ident(sb),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(len)]]],estmt[assign[simple_assi(=),ident(sb),->expr[ident(sb),ident(next)]]]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(skb),ident(next)],ident(NULL)]],estmt[call[ident(flush_rx_pool),ident(card),ident(rpp)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[call[ident(pci_unmap_single),->expr[ident(card),ident(pcidev)],call[ident(IDT77252_PRV_PADDR),ident(skb)],binary[aop(-),call[ident(skb_end_pointer),ident(skb)],->expr[ident(skb),ident(data)]],ident(PCI_DMA_FROMDEVICE)]],estmt[call[ident(sb_pool_remove),ident(card),ident(skb)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(3),ident(SAR_FB_SIZE_3),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(2),ident(SAR_FB_SIZE_2),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(1),ident(SAR_FB_SIZE_1),const_i(1)]],estmt[call[ident(add_rx_skb),ident(card),const_i(0),ident(SAR_FB_SIZE_0),const_i(1)]]]]],statem(N/H)],estmt(NONE)]]]]
	¶
]]
of size  :::: 808

with result :::::
prg2[def[fname(dequeue_rx),funtype(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(stat),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_4)]]]],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_IDLE)],{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: message about inactive connection.\n),->expr[ident(card),ident(name)]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(skb),call[ident(sb_pool_skb),ident(card),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_2)]]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: NULL skb in %s, rsqe: %08x %08x %08x %08x\n),->expr[ident(card),ident(name)],ident(__FUNCTION__),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_1)]],call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_2)]],call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_3)]],call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_4)]]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(header),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_1)]]]],estmt[assign[simple_assi(=),ident(vpi),binary[aop(N/H),binary[aop(N/H),ident(header),const_i(16)],const_i(0x00ff)]]],estmt[assign[simple_assi(=),ident(vci),binary[aop(N/H),binary[aop(N/H),ident(header),const_i(0)],const_i(0xffff)]]],estmt[call[ident(RXPRINTK),const_s(%s: SDU for %d.%d received in buffer 0x%p (data 0x%p).\n),->expr[ident(card),ident(name)],ident(vpi),ident(vci),ident(skb),->expr[ident(skb),ident(data)]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: SDU received for out-of-range vc %u.%u\n),->expr[ident(card),ident(name)],ident(vpi),ident(vci)]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(vc),array_a[->expr[ident(card),ident(vcs)],call[ident(VPCI2VC),ident(card),ident(vpi),ident(vci)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: SDU received on non RX vc %u.%u\n),->expr[ident(card),ident(name)],ident(vpi),ident(vci)]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(vcc),->expr[ident(vc),ident(rx_vcc)]]],estmt[call[ident(pci_dma_sync_single_for_cpu),->expr[ident(card),ident(pcidev)],call[ident(IDT77252_PRV_PADDR),ident(skb)],binary[aop(-),call[ident(skb_end_pointer),ident(skb)],->expr[ident(skb),ident(data)]],ident(PCI_DMA_FROMDEVICE)]],sel_if[expr(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(cell),->expr[ident(skb),ident(data)]]],for[assign[simple_assi(=),ident(i),binary[aop(N/H),ident(stat),ident(SAR_RSQE_CELLCNT)]],ident(i),expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: Can't allocate buffers for aal0.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(atomic_add),ident(i),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_drop)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: atm_charge() dropped aal0 packets.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(atomic_add),binary[aop(-),ident(i),const_i(1)],&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_drop)]]]],estmt[call[ident(dev_kfree_skb),ident(sb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(aal0),binary[aop(N/H),binary[aop(N/H),ident(vpi),ident(ATM_HDR_VPI_SHIFT)],binary[aop(N/H),ident(vci),ident(ATM_HDR_VCI_SHIFT)]]]],estmt[assign[op_assi(|=),ident(aal0),condexpr3[binary[aop(N/H),ident(stat),ident(SAR_RSQE_EPDU)],const_i(0x00000002),const_i(0)]]],estmt[assign[op_assi(|=),ident(aal0),condexpr3[binary[aop(N/H),ident(stat),ident(SAR_RSQE_CLP)],const_i(0x00000001),const_i(0)]]],estmt[assign[simple_assi(=),*expr[expr(N/H)],ident(aal0)]],estmt[call[ident(skb_put),ident(sb),sizeoftype_expr[type(N/H)]]],estmt[call[ident(memcpy),call[ident(skb_put),ident(sb),ident(ATM_CELL_PAYLOAD)],ident(cell),ident(ATM_CELL_PAYLOAD)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(sb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(sb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(sb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],estmt[assign[op_assi(+=),ident(cell),ident(ATM_CELL_PAYLOAD)]]]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: Unexpected AAL type in dequeue_rx(): %d.\n),->expr[ident(card),ident(name)],.expr[->expr[ident(vcc),ident(qos)],ident(aal)]]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(skb),ident(len)],binary[aop(*),binary[aop(N/H),ident(stat),ident(SAR_RSQE_CELLCNT)],ident(ATM_CELL_PAYLOAD)]]],estmt[assign[simple_assi(=),ident(rpp),&expr[.expr[->expr[ident(vc),ident(rcv)],ident(rx_pool)]]]],estmt[assign[op_assi(+=),->expr[ident(rpp),ident(len)],->expr[ident(skb),ident(len)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),->expr[ident(rpp),ident(first)],ident(skb)]],estmt(NONE)],estmt[assign[simple_assi(=),*expr[->expr[ident(rpp),ident(last)]],ident(skb)]],estmt[assign[simple_assi(=),->expr[ident(rpp),ident(last)],&expr[->expr[ident(skb),ident(next)]]]],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_EPDU)],{}stmt[statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(l1l2),expr(N/H)]],estmt[assign[simple_assi(=),ident(len),binary[aop(N/H),binary[aop(N/H),array_a[ident(l1l2),const_i(0)],const_i(8)],array_a[ident(l1l2),const_i(1)]]]],estmt[assign[simple_assi(=),ident(len),condexpr3[ident(len),ident(len),const_i(0x10000)]]],estmt[call[ident(RXPRINTK),const_s(%s: PDU has %d bytes.\n),->expr[ident(card),ident(name)],ident(len)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const(N/H),->expr[ident(card),ident(name)],ident(len),->expr[ident(rpp),ident(len)],call[ident(readl),ident(SAR_REG_CDC)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_CRC)],{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: AAL5 CRC error.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(skb),call[ident(dev_alloc_skb),->expr[ident(rpp),ident(len)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: Can't alloc RX skb.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(dev_kfree_skb),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(sb),->expr[ident(rpp),ident(first)]]],for[assign[simple_assi(=),ident(i),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[call[ident(memcpy),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(data)],->expr[ident(sb),ident(len)]]],estmt[assign[simple_assi(=),ident(sb),->expr[ident(sb),ident(next)]]]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(skb),ident(next)],ident(NULL)]],estmt[call[ident(flush_rx_pool),ident(card),ident(rpp)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[call[ident(pci_unmap_single),->expr[ident(card),ident(pcidev)],call[ident(IDT77252_PRV_PADDR),ident(skb)],binary[aop(-),call[ident(skb_end_pointer),ident(skb)],->expr[ident(skb),ident(data)]],ident(PCI_DMA_FROMDEVICE)]],estmt[call[ident(sb_pool_remove),ident(card),ident(skb)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(3),ident(SAR_FB_SIZE_3),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(2),ident(SAR_FB_SIZE_2),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(1),ident(SAR_FB_SIZE_1),const_i(1)]],estmt[call[ident(add_rx_skb),ident(card),const_i(0),ident(SAR_FB_SIZE_0),const_i(1)]]]]],statem(N/H)],estmt(NONE)]]]] ==> prg2[def[fname(dequeue_rx),funtype(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(stat),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_4)]]]],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_IDLE)],{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: message about inactive connection.\n),->expr[ident(card),ident(name)]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(skb),call[ident(sb_pool_skb),ident(card),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_2)]]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: NULL skb in %s, rsqe: %08x %08x %08x %08x\n),->expr[ident(card),ident(name)],ident(__FUNCTION__),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_1)]],call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_2)]],call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_3)]],call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_4)]]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(header),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_1)]]]],estmt[assign[simple_assi(=),ident(vpi),binary[aop(N/H),binary[aop(N/H),ident(header),const_i(16)],const_i(0x00ff)]]],estmt[assign[simple_assi(=),ident(vci),binary[aop(N/H),binary[aop(N/H),ident(header),const_i(0)],const_i(0xffff)]]],estmt[call[ident(RXPRINTK),const_s(%s: SDU for %d.%d received in buffer 0x%p (data 0x%p).\n),->expr[ident(card),ident(name)],ident(vpi),ident(vci),ident(skb),->expr[ident(skb),ident(data)]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: SDU received for out-of-range vc %u.%u\n),->expr[ident(card),ident(name)],ident(vpi),ident(vci)]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(vc),array_a[->expr[ident(card),ident(vcs)],call[ident(VPCI2VC),ident(card),ident(vpi),ident(vci)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: SDU received on non RX vc %u.%u\n),->expr[ident(card),ident(name)],ident(vpi),ident(vci)]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(vcc),->expr[ident(vc),ident(rx_vcc)]]],estmt[call[ident(pci_dma_sync_single_for_cpu),->expr[ident(card),ident(pcidev)],call[ident(IDT77252_PRV_PADDR),ident(skb)],binary[aop(-),call[ident(skb_end_pointer),ident(skb)],->expr[ident(skb),ident(data)]],ident(PCI_DMA_FROMDEVICE)]],sel_if[expr(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(cell),->expr[ident(skb),ident(data)]]],for[assign[simple_assi(=),ident(i),binary[aop(N/H),ident(stat),ident(SAR_RSQE_CELLCNT)]],ident(i),expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: Can't allocate buffers for aal0.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(atomic_add),ident(i),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_drop)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: atm_charge() dropped aal0 packets.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(atomic_add),binary[aop(-),ident(i),const_i(1)],&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_drop)]]]],estmt[call[ident(dev_kfree_skb),ident(sb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(aal0),binary[aop(N/H),binary[aop(N/H),ident(vpi),ident(ATM_HDR_VPI_SHIFT)],binary[aop(N/H),ident(vci),ident(ATM_HDR_VCI_SHIFT)]]]],estmt[assign[op_assi(|=),ident(aal0),condexpr3[binary[aop(N/H),ident(stat),ident(SAR_RSQE_EPDU)],const_i(0x00000002),const_i(0)]]],estmt[assign[op_assi(|=),ident(aal0),condexpr3[binary[aop(N/H),ident(stat),ident(SAR_RSQE_CLP)],const_i(0x00000001),const_i(0)]]],estmt[assign[simple_assi(=),*expr[expr(N/H)],ident(aal0)]],estmt[call[ident(skb_put),ident(sb),sizeoftype_expr[type(N/H)]]],estmt[call[ident(memcpy),call[ident(skb_put),ident(sb),ident(ATM_CELL_PAYLOAD)],ident(cell),ident(ATM_CELL_PAYLOAD)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(sb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(sb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(sb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],estmt[assign[op_assi(+=),ident(cell),ident(ATM_CELL_PAYLOAD)]]]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: Unexpected AAL type in dequeue_rx(): %d.\n),->expr[ident(card),ident(name)],.expr[->expr[ident(vcc),ident(qos)],ident(aal)]]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(skb),ident(len)],binary[aop(*),binary[aop(N/H),ident(stat),ident(SAR_RSQE_CELLCNT)],ident(ATM_CELL_PAYLOAD)]]],estmt[assign[simple_assi(=),ident(rpp),&expr[.expr[->expr[ident(vc),ident(rcv)],ident(rx_pool)]]]],estmt[assign[op_assi(+=),->expr[ident(rpp),ident(len)],->expr[ident(skb),ident(len)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),->expr[ident(rpp),ident(first)],ident(skb)]],estmt(NONE)],estmt[assign[simple_assi(=),*expr[->expr[ident(rpp),ident(last)]],ident(skb)]],estmt[assign[simple_assi(=),->expr[ident(rpp),ident(last)],&expr[->expr[ident(skb),ident(next)]]]],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_EPDU)],{}stmt[statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(l1l2),expr(N/H)]],estmt[assign[simple_assi(=),ident(len),binary[aop(N/H),binary[aop(N/H),array_a[ident(l1l2),const_i(0)],const_i(8)],array_a[ident(l1l2),const_i(1)]]]],estmt[assign[simple_assi(=),ident(len),condexpr3[ident(len),ident(len),const_i(0x10000)]]],estmt[call[ident(RXPRINTK),const_s(%s: PDU has %d bytes.\n),->expr[ident(card),ident(name)],ident(len)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const(N/H),->expr[ident(card),ident(name)],ident(len),->expr[ident(rpp),ident(len)],call[ident(readl),ident(SAR_REG_CDC)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_CRC)],{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: AAL5 CRC error.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(skb),call[ident(dev_alloc_skb),->expr[ident(rpp),ident(len)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: Can't alloc RX skb.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(dev_kfree_skb),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(sb),->expr[ident(rpp),ident(first)]]],for[assign[simple_assi(=),ident(i),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[call[ident(skb_copy_from_linear_data),ident(sb),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(len)]]],estmt[assign[simple_assi(=),ident(sb),->expr[ident(sb),ident(next)]]]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(skb),ident(next)],ident(NULL)]],estmt[call[ident(flush_rx_pool),ident(card),ident(rpp)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[call[ident(pci_unmap_single),->expr[ident(card),ident(pcidev)],call[ident(IDT77252_PRV_PADDR),ident(skb)],binary[aop(-),call[ident(skb_end_pointer),ident(skb)],->expr[ident(skb),ident(data)]],ident(PCI_DMA_FROMDEVICE)]],estmt[call[ident(sb_pool_remove),ident(card),ident(skb)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(3),ident(SAR_FB_SIZE_3),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(2),ident(SAR_FB_SIZE_2),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(1),ident(SAR_FB_SIZE_1),const_i(1)]],estmt[call[ident(add_rx_skb),ident(card),const_i(0),ident(SAR_FB_SIZE_0),const_i(1)]]]]],statem(N/H)],estmt(NONE)]]]]
	#no of abstracted update: 1
,
.
flattening lists
filtering
@@ counting : 3
,
,
.
returning singular:
call[ident(memcpy),binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],->expr[->expr[ident(fifo),ident(skbuff)],ident(data)],ident(current_len)] ==> call[ident(skb_copy_from_linear_data),->expr[ident(fifo),ident(skbuff)],binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],ident(current_len)]
returning singular:
estmt[call[ident(memcpy),binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],->expr[->expr[ident(fifo),ident(skbuff)],ident(data)],ident(current_len)]] ==> estmt[call[ident(skb_copy_from_linear_data),->expr[ident(fifo),ident(skbuff)],binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],ident(current_len)]]
returning singular:
{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(memcpy),binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],->expr[->expr[ident(fifo),ident(skbuff)],ident(data)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]] ==> {}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(skb_copy_from_linear_data),->expr[ident(fifo),ident(skbuff)],binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]]
returning singular:
sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(memcpy),binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],->expr[->expr[ident(fifo),ident(skbuff)],ident(data)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]] ==> sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(skb_copy_from_linear_data),->expr[ident(fifo),ident(skbuff)],binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]]
returning singular:
{}stmt[sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(memcpy),binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],->expr[->expr[ident(fifo),ident(skbuff)],ident(data)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]],sel_if[ident(frame_complete),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(1)]],estmt[call[->expr[->expr[ident(fifo),ident(hif)],ident(l1l2)],->expr[ident(fifo),ident(hif)],binary[aop(N/H),ident(PH_DATA),ident(CONFIRM)],expr(N/H)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(dev_kfree_skb_any),->expr[ident(fifo),ident(skbuff)]]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(skbuff)],ident(NULL)]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(0)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]]],estmt(NONE)]] ==> {}stmt[sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(skb_copy_from_linear_data),->expr[ident(fifo),ident(skbuff)],binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]],sel_if[ident(frame_complete),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(1)]],estmt[call[->expr[->expr[ident(fifo),ident(hif)],ident(l1l2)],->expr[ident(fifo),ident(hif)],binary[aop(N/H),ident(PH_DATA),ident(CONFIRM)],expr(N/H)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(dev_kfree_skb_any),->expr[ident(fifo),ident(skbuff)]]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(skbuff)],ident(NULL)]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(0)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]]],estmt(NONE)]]
returning singular:
for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(memcpy),binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],->expr[->expr[ident(fifo),ident(skbuff)],ident(data)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]],sel_if[ident(frame_complete),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(1)]],estmt[call[->expr[->expr[ident(fifo),ident(hif)],ident(l1l2)],->expr[ident(fifo),ident(hif)],binary[aop(N/H),ident(PH_DATA),ident(CONFIRM)],expr(N/H)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(dev_kfree_skb_any),->expr[ident(fifo),ident(skbuff)]]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(skbuff)],ident(NULL)]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(0)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]]],estmt(NONE)]]] ==> for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(skb_copy_from_linear_data),->expr[ident(fifo),ident(skbuff)],binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]],sel_if[ident(frame_complete),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(1)]],estmt[call[->expr[->expr[ident(fifo),ident(hif)],ident(l1l2)],->expr[ident(fifo),ident(hif)],binary[aop(N/H),ident(PH_DATA),ident(CONFIRM)],expr(N/H)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(dev_kfree_skb_any),->expr[ident(fifo),ident(skbuff)]]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(skbuff)],ident(NULL)]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(0)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]]],estmt(NONE)]]]
returning singular:
{}stmt[estmt[assign[simple_assi(=),ident(transp_mode),const_i(0)]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(transp_mode),const_i(1)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(threshbit),binary[aop(N/H),->expr[ident(hfc),ident(threshold_mask)],binary[aop(N/H),const_i(1),ident(fifon)]]]],estmt[assign[simple_assi(=),ident(num_isoc_packets),array_a[ident(iso_packets),ident(fifon)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_DMIN),ident(SINK_DMAX)]]]],{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_MIN),ident(SINK_MAX)]]]]],estmt[call[ident(fill_isoc_urb),ident(urb),->expr[->expr[ident(fifo),ident(hfc)],ident(dev)],->expr[ident(fifo),ident(pipe)],->expr[ident(context_iso_urb),ident(buffer)],ident(num_isoc_packets),->expr[ident(fifo),ident(usb_packet_maxlen)],->expr[ident(fifo),ident(intervall)],ident(tx_iso_complete),->expr[ident(urb),ident(context)]]],estmt[call[ident(memset),->expr[ident(context_iso_urb),ident(buffer)],const_i(0),sizeof_expr[->expr[ident(context_iso_urb),ident(buffer)]]]],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(memcpy),binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],->expr[->expr[ident(fifo),ident(skbuff)],ident(data)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]],sel_if[ident(frame_complete),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(1)]],estmt[call[->expr[->expr[ident(fifo),ident(hif)],ident(l1l2)],->expr[ident(fifo),ident(hif)],binary[aop(N/H),ident(PH_DATA),ident(CONFIRM)],expr(N/H)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(dev_kfree_skb_any),->expr[ident(fifo),ident(skbuff)]]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(skbuff)],ident(NULL)]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(0)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(errcode),call[ident(usb_submit_urb),ident(urb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(errcode)]]],estmt(NONE)]] ==> {}stmt[estmt[assign[simple_assi(=),ident(transp_mode),const_i(0)]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(transp_mode),const_i(1)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(threshbit),binary[aop(N/H),->expr[ident(hfc),ident(threshold_mask)],binary[aop(N/H),const_i(1),ident(fifon)]]]],estmt[assign[simple_assi(=),ident(num_isoc_packets),array_a[ident(iso_packets),ident(fifon)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_DMIN),ident(SINK_DMAX)]]]],{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_MIN),ident(SINK_MAX)]]]]],estmt[call[ident(fill_isoc_urb),ident(urb),->expr[->expr[ident(fifo),ident(hfc)],ident(dev)],->expr[ident(fifo),ident(pipe)],->expr[ident(context_iso_urb),ident(buffer)],ident(num_isoc_packets),->expr[ident(fifo),ident(usb_packet_maxlen)],->expr[ident(fifo),ident(intervall)],ident(tx_iso_complete),->expr[ident(urb),ident(context)]]],estmt[call[ident(memset),->expr[ident(context_iso_urb),ident(buffer)],const_i(0),sizeof_expr[->expr[ident(context_iso_urb),ident(buffer)]]]],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(skb_copy_from_linear_data),->expr[ident(fifo),ident(skbuff)],binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]],sel_if[ident(frame_complete),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(1)]],estmt[call[->expr[->expr[ident(fifo),ident(hif)],ident(l1l2)],->expr[ident(fifo),ident(hif)],binary[aop(N/H),ident(PH_DATA),ident(CONFIRM)],expr(N/H)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(dev_kfree_skb_any),->expr[ident(fifo),ident(skbuff)]]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(skbuff)],ident(NULL)]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(0)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(errcode),call[ident(usb_submit_urb),ident(urb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(errcode)]]],estmt(NONE)]]
returning singular:
sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(transp_mode),const_i(0)]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(transp_mode),const_i(1)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(threshbit),binary[aop(N/H),->expr[ident(hfc),ident(threshold_mask)],binary[aop(N/H),const_i(1),ident(fifon)]]]],estmt[assign[simple_assi(=),ident(num_isoc_packets),array_a[ident(iso_packets),ident(fifon)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_DMIN),ident(SINK_DMAX)]]]],{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_MIN),ident(SINK_MAX)]]]]],estmt[call[ident(fill_isoc_urb),ident(urb),->expr[->expr[ident(fifo),ident(hfc)],ident(dev)],->expr[ident(fifo),ident(pipe)],->expr[ident(context_iso_urb),ident(buffer)],ident(num_isoc_packets),->expr[ident(fifo),ident(usb_packet_maxlen)],->expr[ident(fifo),ident(intervall)],ident(tx_iso_complete),->expr[ident(urb),ident(context)]]],estmt[call[ident(memset),->expr[ident(context_iso_urb),ident(buffer)],const_i(0),sizeof_expr[->expr[ident(context_iso_urb),ident(buffer)]]]],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(memcpy),binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],->expr[->expr[ident(fifo),ident(skbuff)],ident(data)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]],sel_if[ident(frame_complete),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(1)]],estmt[call[->expr[->expr[ident(fifo),ident(hif)],ident(l1l2)],->expr[ident(fifo),ident(hif)],binary[aop(N/H),ident(PH_DATA),ident(CONFIRM)],expr(N/H)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(dev_kfree_skb_any),->expr[ident(fifo),ident(skbuff)]]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(skbuff)],ident(NULL)]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(0)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(errcode),call[ident(usb_submit_urb),ident(urb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(errcode)]]],estmt(NONE)]],{}stmt[sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(status),call[ident(symbolic),ident(urb_errlist),ident(status)],ident(fifon)]]],estmt(NONE)]]] ==> sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(transp_mode),const_i(0)]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(transp_mode),const_i(1)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(threshbit),binary[aop(N/H),->expr[ident(hfc),ident(threshold_mask)],binary[aop(N/H),const_i(1),ident(fifon)]]]],estmt[assign[simple_assi(=),ident(num_isoc_packets),array_a[ident(iso_packets),ident(fifon)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_DMIN),ident(SINK_DMAX)]]]],{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_MIN),ident(SINK_MAX)]]]]],estmt[call[ident(fill_isoc_urb),ident(urb),->expr[->expr[ident(fifo),ident(hfc)],ident(dev)],->expr[ident(fifo),ident(pipe)],->expr[ident(context_iso_urb),ident(buffer)],ident(num_isoc_packets),->expr[ident(fifo),ident(usb_packet_maxlen)],->expr[ident(fifo),ident(intervall)],ident(tx_iso_complete),->expr[ident(urb),ident(context)]]],estmt[call[ident(memset),->expr[ident(context_iso_urb),ident(buffer)],const_i(0),sizeof_expr[->expr[ident(context_iso_urb),ident(buffer)]]]],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(skb_copy_from_linear_data),->expr[ident(fifo),ident(skbuff)],binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]],sel_if[ident(frame_complete),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(1)]],estmt[call[->expr[->expr[ident(fifo),ident(hif)],ident(l1l2)],->expr[ident(fifo),ident(hif)],binary[aop(N/H),ident(PH_DATA),ident(CONFIRM)],expr(N/H)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(dev_kfree_skb_any),->expr[ident(fifo),ident(skbuff)]]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(skbuff)],ident(NULL)]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(0)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(errcode),call[ident(usb_submit_urb),ident(urb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(errcode)]]],estmt(NONE)]],{}stmt[sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(status),call[ident(symbolic),ident(urb_errlist),ident(status)],ident(fifon)]]],estmt(NONE)]]]
returning singular:
{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(fifon),->expr[ident(fifo),ident(fifonum)]]],estmt[assign[simple_assi(=),ident(status),->expr[ident(urb),ident(status)]]],estmt[assign[simple_assi(=),ident(tx_offset),const_i(0)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(DBG),ident(HFCUSB_DBG_VERBOSE_USB),const(N/H),ident(status),ident(fifon)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(errcode),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(status)]]],sel_if[ident(errcode),estmt[call[ident(DBG),ident(HFCUSB_DBG_VERBOSE_USB),const(N/H),ident(k),ident(errcode)]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(status),const_i(0)]]],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(transp_mode),const_i(0)]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(transp_mode),const_i(1)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(threshbit),binary[aop(N/H),->expr[ident(hfc),ident(threshold_mask)],binary[aop(N/H),const_i(1),ident(fifon)]]]],estmt[assign[simple_assi(=),ident(num_isoc_packets),array_a[ident(iso_packets),ident(fifon)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_DMIN),ident(SINK_DMAX)]]]],{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_MIN),ident(SINK_MAX)]]]]],estmt[call[ident(fill_isoc_urb),ident(urb),->expr[->expr[ident(fifo),ident(hfc)],ident(dev)],->expr[ident(fifo),ident(pipe)],->expr[ident(context_iso_urb),ident(buffer)],ident(num_isoc_packets),->expr[ident(fifo),ident(usb_packet_maxlen)],->expr[ident(fifo),ident(intervall)],ident(tx_iso_complete),->expr[ident(urb),ident(context)]]],estmt[call[ident(memset),->expr[ident(context_iso_urb),ident(buffer)],const_i(0),sizeof_expr[->expr[ident(context_iso_urb),ident(buffer)]]]],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(memcpy),binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],->expr[->expr[ident(fifo),ident(skbuff)],ident(data)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]],sel_if[ident(frame_complete),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(1)]],estmt[call[->expr[->expr[ident(fifo),ident(hif)],ident(l1l2)],->expr[ident(fifo),ident(hif)],binary[aop(N/H),ident(PH_DATA),ident(CONFIRM)],expr(N/H)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(dev_kfree_skb_any),->expr[ident(fifo),ident(skbuff)]]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(skbuff)],ident(NULL)]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(0)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(errcode),call[ident(usb_submit_urb),ident(urb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(errcode)]]],estmt(NONE)]],{}stmt[sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(status),call[ident(symbolic),ident(urb_errlist),ident(status)],ident(fifon)]]],estmt(NONE)]]]] ==> {}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(fifon),->expr[ident(fifo),ident(fifonum)]]],estmt[assign[simple_assi(=),ident(status),->expr[ident(urb),ident(status)]]],estmt[assign[simple_assi(=),ident(tx_offset),const_i(0)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(DBG),ident(HFCUSB_DBG_VERBOSE_USB),const(N/H),ident(status),ident(fifon)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(errcode),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(status)]]],sel_if[ident(errcode),estmt[call[ident(DBG),ident(HFCUSB_DBG_VERBOSE_USB),const(N/H),ident(k),ident(errcode)]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(status),const_i(0)]]],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(transp_mode),const_i(0)]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(transp_mode),const_i(1)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(threshbit),binary[aop(N/H),->expr[ident(hfc),ident(threshold_mask)],binary[aop(N/H),const_i(1),ident(fifon)]]]],estmt[assign[simple_assi(=),ident(num_isoc_packets),array_a[ident(iso_packets),ident(fifon)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_DMIN),ident(SINK_DMAX)]]]],{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_MIN),ident(SINK_MAX)]]]]],estmt[call[ident(fill_isoc_urb),ident(urb),->expr[->expr[ident(fifo),ident(hfc)],ident(dev)],->expr[ident(fifo),ident(pipe)],->expr[ident(context_iso_urb),ident(buffer)],ident(num_isoc_packets),->expr[ident(fifo),ident(usb_packet_maxlen)],->expr[ident(fifo),ident(intervall)],ident(tx_iso_complete),->expr[ident(urb),ident(context)]]],estmt[call[ident(memset),->expr[ident(context_iso_urb),ident(buffer)],const_i(0),sizeof_expr[->expr[ident(context_iso_urb),ident(buffer)]]]],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(skb_copy_from_linear_data),->expr[ident(fifo),ident(skbuff)],binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]],sel_if[ident(frame_complete),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(1)]],estmt[call[->expr[->expr[ident(fifo),ident(hif)],ident(l1l2)],->expr[ident(fifo),ident(hif)],binary[aop(N/H),ident(PH_DATA),ident(CONFIRM)],expr(N/H)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(dev_kfree_skb_any),->expr[ident(fifo),ident(skbuff)]]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(skbuff)],ident(NULL)]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(0)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(errcode),call[ident(usb_submit_urb),ident(urb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(errcode)]]],estmt(NONE)]],{}stmt[sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(status),call[ident(symbolic),ident(urb_errlist),ident(status)],ident(fifon)]]],estmt(NONE)]]]]
returning singular:
def[fname(tx_iso_complete),funtype(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(fifon),->expr[ident(fifo),ident(fifonum)]]],estmt[assign[simple_assi(=),ident(status),->expr[ident(urb),ident(status)]]],estmt[assign[simple_assi(=),ident(tx_offset),const_i(0)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(DBG),ident(HFCUSB_DBG_VERBOSE_USB),const(N/H),ident(status),ident(fifon)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(errcode),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(status)]]],sel_if[ident(errcode),estmt[call[ident(DBG),ident(HFCUSB_DBG_VERBOSE_USB),const(N/H),ident(k),ident(errcode)]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(status),const_i(0)]]],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(transp_mode),const_i(0)]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(transp_mode),const_i(1)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(threshbit),binary[aop(N/H),->expr[ident(hfc),ident(threshold_mask)],binary[aop(N/H),const_i(1),ident(fifon)]]]],estmt[assign[simple_assi(=),ident(num_isoc_packets),array_a[ident(iso_packets),ident(fifon)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_DMIN),ident(SINK_DMAX)]]]],{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_MIN),ident(SINK_MAX)]]]]],estmt[call[ident(fill_isoc_urb),ident(urb),->expr[->expr[ident(fifo),ident(hfc)],ident(dev)],->expr[ident(fifo),ident(pipe)],->expr[ident(context_iso_urb),ident(buffer)],ident(num_isoc_packets),->expr[ident(fifo),ident(usb_packet_maxlen)],->expr[ident(fifo),ident(intervall)],ident(tx_iso_complete),->expr[ident(urb),ident(context)]]],estmt[call[ident(memset),->expr[ident(context_iso_urb),ident(buffer)],const_i(0),sizeof_expr[->expr[ident(context_iso_urb),ident(buffer)]]]],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(memcpy),binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],->expr[->expr[ident(fifo),ident(skbuff)],ident(data)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]],sel_if[ident(frame_complete),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(1)]],estmt[call[->expr[->expr[ident(fifo),ident(hif)],ident(l1l2)],->expr[ident(fifo),ident(hif)],binary[aop(N/H),ident(PH_DATA),ident(CONFIRM)],expr(N/H)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(dev_kfree_skb_any),->expr[ident(fifo),ident(skbuff)]]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(skbuff)],ident(NULL)]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(0)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(errcode),call[ident(usb_submit_urb),ident(urb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(errcode)]]],estmt(NONE)]],{}stmt[sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(status),call[ident(symbolic),ident(urb_errlist),ident(status)],ident(fifon)]]],estmt(NONE)]]]]] ==> def[fname(tx_iso_complete),funtype(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(fifon),->expr[ident(fifo),ident(fifonum)]]],estmt[assign[simple_assi(=),ident(status),->expr[ident(urb),ident(status)]]],estmt[assign[simple_assi(=),ident(tx_offset),const_i(0)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(DBG),ident(HFCUSB_DBG_VERBOSE_USB),const(N/H),ident(status),ident(fifon)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(errcode),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(status)]]],sel_if[ident(errcode),estmt[call[ident(DBG),ident(HFCUSB_DBG_VERBOSE_USB),const(N/H),ident(k),ident(errcode)]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(status),const_i(0)]]],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(transp_mode),const_i(0)]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(transp_mode),const_i(1)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(threshbit),binary[aop(N/H),->expr[ident(hfc),ident(threshold_mask)],binary[aop(N/H),const_i(1),ident(fifon)]]]],estmt[assign[simple_assi(=),ident(num_isoc_packets),array_a[ident(iso_packets),ident(fifon)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_DMIN),ident(SINK_DMAX)]]]],{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_MIN),ident(SINK_MAX)]]]]],estmt[call[ident(fill_isoc_urb),ident(urb),->expr[->expr[ident(fifo),ident(hfc)],ident(dev)],->expr[ident(fifo),ident(pipe)],->expr[ident(context_iso_urb),ident(buffer)],ident(num_isoc_packets),->expr[ident(fifo),ident(usb_packet_maxlen)],->expr[ident(fifo),ident(intervall)],ident(tx_iso_complete),->expr[ident(urb),ident(context)]]],estmt[call[ident(memset),->expr[ident(context_iso_urb),ident(buffer)],const_i(0),sizeof_expr[->expr[ident(context_iso_urb),ident(buffer)]]]],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(skb_copy_from_linear_data),->expr[ident(fifo),ident(skbuff)],binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]],sel_if[ident(frame_complete),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(1)]],estmt[call[->expr[->expr[ident(fifo),ident(hif)],ident(l1l2)],->expr[ident(fifo),ident(hif)],binary[aop(N/H),ident(PH_DATA),ident(CONFIRM)],expr(N/H)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(dev_kfree_skb_any),->expr[ident(fifo),ident(skbuff)]]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(skbuff)],ident(NULL)]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(0)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(errcode),call[ident(usb_submit_urb),ident(urb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(errcode)]]],estmt(NONE)]],{}stmt[sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(status),call[ident(symbolic),ident(urb_errlist),ident(status)],ident(fifon)]]],estmt(NONE)]]]]]
returning singular:
prg2[def[fname(tx_iso_complete),funtype(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(fifon),->expr[ident(fifo),ident(fifonum)]]],estmt[assign[simple_assi(=),ident(status),->expr[ident(urb),ident(status)]]],estmt[assign[simple_assi(=),ident(tx_offset),const_i(0)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(DBG),ident(HFCUSB_DBG_VERBOSE_USB),const(N/H),ident(status),ident(fifon)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(errcode),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(status)]]],sel_if[ident(errcode),estmt[call[ident(DBG),ident(HFCUSB_DBG_VERBOSE_USB),const(N/H),ident(k),ident(errcode)]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(status),const_i(0)]]],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(transp_mode),const_i(0)]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(transp_mode),const_i(1)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(threshbit),binary[aop(N/H),->expr[ident(hfc),ident(threshold_mask)],binary[aop(N/H),const_i(1),ident(fifon)]]]],estmt[assign[simple_assi(=),ident(num_isoc_packets),array_a[ident(iso_packets),ident(fifon)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_DMIN),ident(SINK_DMAX)]]]],{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_MIN),ident(SINK_MAX)]]]]],estmt[call[ident(fill_isoc_urb),ident(urb),->expr[->expr[ident(fifo),ident(hfc)],ident(dev)],->expr[ident(fifo),ident(pipe)],->expr[ident(context_iso_urb),ident(buffer)],ident(num_isoc_packets),->expr[ident(fifo),ident(usb_packet_maxlen)],->expr[ident(fifo),ident(intervall)],ident(tx_iso_complete),->expr[ident(urb),ident(context)]]],estmt[call[ident(memset),->expr[ident(context_iso_urb),ident(buffer)],const_i(0),sizeof_expr[->expr[ident(context_iso_urb),ident(buffer)]]]],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(memcpy),binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],->expr[->expr[ident(fifo),ident(skbuff)],ident(data)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]],sel_if[ident(frame_complete),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(1)]],estmt[call[->expr[->expr[ident(fifo),ident(hif)],ident(l1l2)],->expr[ident(fifo),ident(hif)],binary[aop(N/H),ident(PH_DATA),ident(CONFIRM)],expr(N/H)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(dev_kfree_skb_any),->expr[ident(fifo),ident(skbuff)]]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(skbuff)],ident(NULL)]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(0)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(errcode),call[ident(usb_submit_urb),ident(urb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(errcode)]]],estmt(NONE)]],{}stmt[sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(status),call[ident(symbolic),ident(urb_errlist),ident(status)],ident(fifon)]]],estmt(NONE)]]]]]] ==> prg2[def[fname(tx_iso_complete),funtype(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(fifon),->expr[ident(fifo),ident(fifonum)]]],estmt[assign[simple_assi(=),ident(status),->expr[ident(urb),ident(status)]]],estmt[assign[simple_assi(=),ident(tx_offset),const_i(0)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(DBG),ident(HFCUSB_DBG_VERBOSE_USB),const(N/H),ident(status),ident(fifon)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(errcode),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(status)]]],sel_if[ident(errcode),estmt[call[ident(DBG),ident(HFCUSB_DBG_VERBOSE_USB),const(N/H),ident(k),ident(errcode)]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(status),const_i(0)]]],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(transp_mode),const_i(0)]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(transp_mode),const_i(1)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(threshbit),binary[aop(N/H),->expr[ident(hfc),ident(threshold_mask)],binary[aop(N/H),const_i(1),ident(fifon)]]]],estmt[assign[simple_assi(=),ident(num_isoc_packets),array_a[ident(iso_packets),ident(fifon)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_DMIN),ident(SINK_DMAX)]]]],{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_MIN),ident(SINK_MAX)]]]]],estmt[call[ident(fill_isoc_urb),ident(urb),->expr[->expr[ident(fifo),ident(hfc)],ident(dev)],->expr[ident(fifo),ident(pipe)],->expr[ident(context_iso_urb),ident(buffer)],ident(num_isoc_packets),->expr[ident(fifo),ident(usb_packet_maxlen)],->expr[ident(fifo),ident(intervall)],ident(tx_iso_complete),->expr[ident(urb),ident(context)]]],estmt[call[ident(memset),->expr[ident(context_iso_urb),ident(buffer)],const_i(0),sizeof_expr[->expr[ident(context_iso_urb),ident(buffer)]]]],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(skb_copy_from_linear_data),->expr[ident(fifo),ident(skbuff)],binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]],sel_if[ident(frame_complete),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(1)]],estmt[call[->expr[->expr[ident(fifo),ident(hif)],ident(l1l2)],->expr[ident(fifo),ident(hif)],binary[aop(N/H),ident(PH_DATA),ident(CONFIRM)],expr(N/H)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(dev_kfree_skb_any),->expr[ident(fifo),ident(skbuff)]]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(skbuff)],ident(NULL)]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(0)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(errcode),call[ident(usb_submit_urb),ident(urb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(errcode)]]],estmt(NONE)]],{}stmt[sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(status),call[ident(symbolic),ident(urb_errlist),ident(status)],ident(fifon)]]],estmt(NONE)]]]]]]
unabs solutions
[[
call[ident(memcpy),binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],->expr[->expr[ident(fifo),ident(skbuff)],ident(data)],ident(current_len)] ==> call[ident(skb_copy_from_linear_data),->expr[ident(fifo),ident(skbuff)],binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],ident(current_len)]
	¶
]]
[[
estmt[call[ident(memcpy),binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],->expr[->expr[ident(fifo),ident(skbuff)],ident(data)],ident(current_len)]] ==> estmt[call[ident(skb_copy_from_linear_data),->expr[ident(fifo),ident(skbuff)],binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],ident(current_len)]]
	¶
]]
[[
{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(memcpy),binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],->expr[->expr[ident(fifo),ident(skbuff)],ident(data)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]] ==> {}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(skb_copy_from_linear_data),->expr[ident(fifo),ident(skbuff)],binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]]
	¶
]]
[[
sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(memcpy),binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],->expr[->expr[ident(fifo),ident(skbuff)],ident(data)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]] ==> sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(skb_copy_from_linear_data),->expr[ident(fifo),ident(skbuff)],binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]]
	¶
]]
[[
{}stmt[sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(memcpy),binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],->expr[->expr[ident(fifo),ident(skbuff)],ident(data)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]],sel_if[ident(frame_complete),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(1)]],estmt[call[->expr[->expr[ident(fifo),ident(hif)],ident(l1l2)],->expr[ident(fifo),ident(hif)],binary[aop(N/H),ident(PH_DATA),ident(CONFIRM)],expr(N/H)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(dev_kfree_skb_any),->expr[ident(fifo),ident(skbuff)]]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(skbuff)],ident(NULL)]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(0)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]]],estmt(NONE)]] ==> {}stmt[sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(skb_copy_from_linear_data),->expr[ident(fifo),ident(skbuff)],binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]],sel_if[ident(frame_complete),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(1)]],estmt[call[->expr[->expr[ident(fifo),ident(hif)],ident(l1l2)],->expr[ident(fifo),ident(hif)],binary[aop(N/H),ident(PH_DATA),ident(CONFIRM)],expr(N/H)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(dev_kfree_skb_any),->expr[ident(fifo),ident(skbuff)]]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(skbuff)],ident(NULL)]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(0)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]]],estmt(NONE)]]
	¶
]]
[[
for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(memcpy),binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],->expr[->expr[ident(fifo),ident(skbuff)],ident(data)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]],sel_if[ident(frame_complete),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(1)]],estmt[call[->expr[->expr[ident(fifo),ident(hif)],ident(l1l2)],->expr[ident(fifo),ident(hif)],binary[aop(N/H),ident(PH_DATA),ident(CONFIRM)],expr(N/H)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(dev_kfree_skb_any),->expr[ident(fifo),ident(skbuff)]]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(skbuff)],ident(NULL)]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(0)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]]],estmt(NONE)]]] ==> for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(skb_copy_from_linear_data),->expr[ident(fifo),ident(skbuff)],binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]],sel_if[ident(frame_complete),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(1)]],estmt[call[->expr[->expr[ident(fifo),ident(hif)],ident(l1l2)],->expr[ident(fifo),ident(hif)],binary[aop(N/H),ident(PH_DATA),ident(CONFIRM)],expr(N/H)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(dev_kfree_skb_any),->expr[ident(fifo),ident(skbuff)]]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(skbuff)],ident(NULL)]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(0)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]]],estmt(NONE)]]]
	¶
]]
[[
{}stmt[estmt[assign[simple_assi(=),ident(transp_mode),const_i(0)]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(transp_mode),const_i(1)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(threshbit),binary[aop(N/H),->expr[ident(hfc),ident(threshold_mask)],binary[aop(N/H),const_i(1),ident(fifon)]]]],estmt[assign[simple_assi(=),ident(num_isoc_packets),array_a[ident(iso_packets),ident(fifon)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_DMIN),ident(SINK_DMAX)]]]],{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_MIN),ident(SINK_MAX)]]]]],estmt[call[ident(fill_isoc_urb),ident(urb),->expr[->expr[ident(fifo),ident(hfc)],ident(dev)],->expr[ident(fifo),ident(pipe)],->expr[ident(context_iso_urb),ident(buffer)],ident(num_isoc_packets),->expr[ident(fifo),ident(usb_packet_maxlen)],->expr[ident(fifo),ident(intervall)],ident(tx_iso_complete),->expr[ident(urb),ident(context)]]],estmt[call[ident(memset),->expr[ident(context_iso_urb),ident(buffer)],const_i(0),sizeof_expr[->expr[ident(context_iso_urb),ident(buffer)]]]],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(memcpy),binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],->expr[->expr[ident(fifo),ident(skbuff)],ident(data)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]],sel_if[ident(frame_complete),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(1)]],estmt[call[->expr[->expr[ident(fifo),ident(hif)],ident(l1l2)],->expr[ident(fifo),ident(hif)],binary[aop(N/H),ident(PH_DATA),ident(CONFIRM)],expr(N/H)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(dev_kfree_skb_any),->expr[ident(fifo),ident(skbuff)]]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(skbuff)],ident(NULL)]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(0)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(errcode),call[ident(usb_submit_urb),ident(urb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(errcode)]]],estmt(NONE)]] ==> {}stmt[estmt[assign[simple_assi(=),ident(transp_mode),const_i(0)]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(transp_mode),const_i(1)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(threshbit),binary[aop(N/H),->expr[ident(hfc),ident(threshold_mask)],binary[aop(N/H),const_i(1),ident(fifon)]]]],estmt[assign[simple_assi(=),ident(num_isoc_packets),array_a[ident(iso_packets),ident(fifon)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_DMIN),ident(SINK_DMAX)]]]],{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_MIN),ident(SINK_MAX)]]]]],estmt[call[ident(fill_isoc_urb),ident(urb),->expr[->expr[ident(fifo),ident(hfc)],ident(dev)],->expr[ident(fifo),ident(pipe)],->expr[ident(context_iso_urb),ident(buffer)],ident(num_isoc_packets),->expr[ident(fifo),ident(usb_packet_maxlen)],->expr[ident(fifo),ident(intervall)],ident(tx_iso_complete),->expr[ident(urb),ident(context)]]],estmt[call[ident(memset),->expr[ident(context_iso_urb),ident(buffer)],const_i(0),sizeof_expr[->expr[ident(context_iso_urb),ident(buffer)]]]],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(skb_copy_from_linear_data),->expr[ident(fifo),ident(skbuff)],binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]],sel_if[ident(frame_complete),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(1)]],estmt[call[->expr[->expr[ident(fifo),ident(hif)],ident(l1l2)],->expr[ident(fifo),ident(hif)],binary[aop(N/H),ident(PH_DATA),ident(CONFIRM)],expr(N/H)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(dev_kfree_skb_any),->expr[ident(fifo),ident(skbuff)]]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(skbuff)],ident(NULL)]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(0)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(errcode),call[ident(usb_submit_urb),ident(urb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(errcode)]]],estmt(NONE)]]
	¶
]]
[[
sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(transp_mode),const_i(0)]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(transp_mode),const_i(1)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(threshbit),binary[aop(N/H),->expr[ident(hfc),ident(threshold_mask)],binary[aop(N/H),const_i(1),ident(fifon)]]]],estmt[assign[simple_assi(=),ident(num_isoc_packets),array_a[ident(iso_packets),ident(fifon)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_DMIN),ident(SINK_DMAX)]]]],{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_MIN),ident(SINK_MAX)]]]]],estmt[call[ident(fill_isoc_urb),ident(urb),->expr[->expr[ident(fifo),ident(hfc)],ident(dev)],->expr[ident(fifo),ident(pipe)],->expr[ident(context_iso_urb),ident(buffer)],ident(num_isoc_packets),->expr[ident(fifo),ident(usb_packet_maxlen)],->expr[ident(fifo),ident(intervall)],ident(tx_iso_complete),->expr[ident(urb),ident(context)]]],estmt[call[ident(memset),->expr[ident(context_iso_urb),ident(buffer)],const_i(0),sizeof_expr[->expr[ident(context_iso_urb),ident(buffer)]]]],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(memcpy),binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],->expr[->expr[ident(fifo),ident(skbuff)],ident(data)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]],sel_if[ident(frame_complete),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(1)]],estmt[call[->expr[->expr[ident(fifo),ident(hif)],ident(l1l2)],->expr[ident(fifo),ident(hif)],binary[aop(N/H),ident(PH_DATA),ident(CONFIRM)],expr(N/H)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(dev_kfree_skb_any),->expr[ident(fifo),ident(skbuff)]]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(skbuff)],ident(NULL)]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(0)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(errcode),call[ident(usb_submit_urb),ident(urb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(errcode)]]],estmt(NONE)]],{}stmt[sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(status),call[ident(symbolic),ident(urb_errlist),ident(status)],ident(fifon)]]],estmt(NONE)]]] ==> sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(transp_mode),const_i(0)]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(transp_mode),const_i(1)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(threshbit),binary[aop(N/H),->expr[ident(hfc),ident(threshold_mask)],binary[aop(N/H),const_i(1),ident(fifon)]]]],estmt[assign[simple_assi(=),ident(num_isoc_packets),array_a[ident(iso_packets),ident(fifon)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_DMIN),ident(SINK_DMAX)]]]],{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_MIN),ident(SINK_MAX)]]]]],estmt[call[ident(fill_isoc_urb),ident(urb),->expr[->expr[ident(fifo),ident(hfc)],ident(dev)],->expr[ident(fifo),ident(pipe)],->expr[ident(context_iso_urb),ident(buffer)],ident(num_isoc_packets),->expr[ident(fifo),ident(usb_packet_maxlen)],->expr[ident(fifo),ident(intervall)],ident(tx_iso_complete),->expr[ident(urb),ident(context)]]],estmt[call[ident(memset),->expr[ident(context_iso_urb),ident(buffer)],const_i(0),sizeof_expr[->expr[ident(context_iso_urb),ident(buffer)]]]],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(skb_copy_from_linear_data),->expr[ident(fifo),ident(skbuff)],binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]],sel_if[ident(frame_complete),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(1)]],estmt[call[->expr[->expr[ident(fifo),ident(hif)],ident(l1l2)],->expr[ident(fifo),ident(hif)],binary[aop(N/H),ident(PH_DATA),ident(CONFIRM)],expr(N/H)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(dev_kfree_skb_any),->expr[ident(fifo),ident(skbuff)]]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(skbuff)],ident(NULL)]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(0)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(errcode),call[ident(usb_submit_urb),ident(urb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(errcode)]]],estmt(NONE)]],{}stmt[sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(status),call[ident(symbolic),ident(urb_errlist),ident(status)],ident(fifon)]]],estmt(NONE)]]]
	¶
]]
[[
{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(fifon),->expr[ident(fifo),ident(fifonum)]]],estmt[assign[simple_assi(=),ident(status),->expr[ident(urb),ident(status)]]],estmt[assign[simple_assi(=),ident(tx_offset),const_i(0)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(DBG),ident(HFCUSB_DBG_VERBOSE_USB),const(N/H),ident(status),ident(fifon)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(errcode),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(status)]]],sel_if[ident(errcode),estmt[call[ident(DBG),ident(HFCUSB_DBG_VERBOSE_USB),const(N/H),ident(k),ident(errcode)]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(status),const_i(0)]]],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(transp_mode),const_i(0)]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(transp_mode),const_i(1)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(threshbit),binary[aop(N/H),->expr[ident(hfc),ident(threshold_mask)],binary[aop(N/H),const_i(1),ident(fifon)]]]],estmt[assign[simple_assi(=),ident(num_isoc_packets),array_a[ident(iso_packets),ident(fifon)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_DMIN),ident(SINK_DMAX)]]]],{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_MIN),ident(SINK_MAX)]]]]],estmt[call[ident(fill_isoc_urb),ident(urb),->expr[->expr[ident(fifo),ident(hfc)],ident(dev)],->expr[ident(fifo),ident(pipe)],->expr[ident(context_iso_urb),ident(buffer)],ident(num_isoc_packets),->expr[ident(fifo),ident(usb_packet_maxlen)],->expr[ident(fifo),ident(intervall)],ident(tx_iso_complete),->expr[ident(urb),ident(context)]]],estmt[call[ident(memset),->expr[ident(context_iso_urb),ident(buffer)],const_i(0),sizeof_expr[->expr[ident(context_iso_urb),ident(buffer)]]]],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(memcpy),binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],->expr[->expr[ident(fifo),ident(skbuff)],ident(data)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]],sel_if[ident(frame_complete),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(1)]],estmt[call[->expr[->expr[ident(fifo),ident(hif)],ident(l1l2)],->expr[ident(fifo),ident(hif)],binary[aop(N/H),ident(PH_DATA),ident(CONFIRM)],expr(N/H)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(dev_kfree_skb_any),->expr[ident(fifo),ident(skbuff)]]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(skbuff)],ident(NULL)]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(0)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(errcode),call[ident(usb_submit_urb),ident(urb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(errcode)]]],estmt(NONE)]],{}stmt[sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(status),call[ident(symbolic),ident(urb_errlist),ident(status)],ident(fifon)]]],estmt(NONE)]]]] ==> {}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(fifon),->expr[ident(fifo),ident(fifonum)]]],estmt[assign[simple_assi(=),ident(status),->expr[ident(urb),ident(status)]]],estmt[assign[simple_assi(=),ident(tx_offset),const_i(0)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(DBG),ident(HFCUSB_DBG_VERBOSE_USB),const(N/H),ident(status),ident(fifon)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(errcode),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(status)]]],sel_if[ident(errcode),estmt[call[ident(DBG),ident(HFCUSB_DBG_VERBOSE_USB),const(N/H),ident(k),ident(errcode)]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(status),const_i(0)]]],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(transp_mode),const_i(0)]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(transp_mode),const_i(1)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(threshbit),binary[aop(N/H),->expr[ident(hfc),ident(threshold_mask)],binary[aop(N/H),const_i(1),ident(fifon)]]]],estmt[assign[simple_assi(=),ident(num_isoc_packets),array_a[ident(iso_packets),ident(fifon)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_DMIN),ident(SINK_DMAX)]]]],{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_MIN),ident(SINK_MAX)]]]]],estmt[call[ident(fill_isoc_urb),ident(urb),->expr[->expr[ident(fifo),ident(hfc)],ident(dev)],->expr[ident(fifo),ident(pipe)],->expr[ident(context_iso_urb),ident(buffer)],ident(num_isoc_packets),->expr[ident(fifo),ident(usb_packet_maxlen)],->expr[ident(fifo),ident(intervall)],ident(tx_iso_complete),->expr[ident(urb),ident(context)]]],estmt[call[ident(memset),->expr[ident(context_iso_urb),ident(buffer)],const_i(0),sizeof_expr[->expr[ident(context_iso_urb),ident(buffer)]]]],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(skb_copy_from_linear_data),->expr[ident(fifo),ident(skbuff)],binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]],sel_if[ident(frame_complete),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(1)]],estmt[call[->expr[->expr[ident(fifo),ident(hif)],ident(l1l2)],->expr[ident(fifo),ident(hif)],binary[aop(N/H),ident(PH_DATA),ident(CONFIRM)],expr(N/H)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(dev_kfree_skb_any),->expr[ident(fifo),ident(skbuff)]]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(skbuff)],ident(NULL)]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(0)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(errcode),call[ident(usb_submit_urb),ident(urb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(errcode)]]],estmt(NONE)]],{}stmt[sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(status),call[ident(symbolic),ident(urb_errlist),ident(status)],ident(fifon)]]],estmt(NONE)]]]]
	¶
]]
[[
def[fname(tx_iso_complete),funtype(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(fifon),->expr[ident(fifo),ident(fifonum)]]],estmt[assign[simple_assi(=),ident(status),->expr[ident(urb),ident(status)]]],estmt[assign[simple_assi(=),ident(tx_offset),const_i(0)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(DBG),ident(HFCUSB_DBG_VERBOSE_USB),const(N/H),ident(status),ident(fifon)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(errcode),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(status)]]],sel_if[ident(errcode),estmt[call[ident(DBG),ident(HFCUSB_DBG_VERBOSE_USB),const(N/H),ident(k),ident(errcode)]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(status),const_i(0)]]],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(transp_mode),const_i(0)]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(transp_mode),const_i(1)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(threshbit),binary[aop(N/H),->expr[ident(hfc),ident(threshold_mask)],binary[aop(N/H),const_i(1),ident(fifon)]]]],estmt[assign[simple_assi(=),ident(num_isoc_packets),array_a[ident(iso_packets),ident(fifon)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_DMIN),ident(SINK_DMAX)]]]],{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_MIN),ident(SINK_MAX)]]]]],estmt[call[ident(fill_isoc_urb),ident(urb),->expr[->expr[ident(fifo),ident(hfc)],ident(dev)],->expr[ident(fifo),ident(pipe)],->expr[ident(context_iso_urb),ident(buffer)],ident(num_isoc_packets),->expr[ident(fifo),ident(usb_packet_maxlen)],->expr[ident(fifo),ident(intervall)],ident(tx_iso_complete),->expr[ident(urb),ident(context)]]],estmt[call[ident(memset),->expr[ident(context_iso_urb),ident(buffer)],const_i(0),sizeof_expr[->expr[ident(context_iso_urb),ident(buffer)]]]],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(memcpy),binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],->expr[->expr[ident(fifo),ident(skbuff)],ident(data)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]],sel_if[ident(frame_complete),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(1)]],estmt[call[->expr[->expr[ident(fifo),ident(hif)],ident(l1l2)],->expr[ident(fifo),ident(hif)],binary[aop(N/H),ident(PH_DATA),ident(CONFIRM)],expr(N/H)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(dev_kfree_skb_any),->expr[ident(fifo),ident(skbuff)]]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(skbuff)],ident(NULL)]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(0)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(errcode),call[ident(usb_submit_urb),ident(urb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(errcode)]]],estmt(NONE)]],{}stmt[sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(status),call[ident(symbolic),ident(urb_errlist),ident(status)],ident(fifon)]]],estmt(NONE)]]]]] ==> def[fname(tx_iso_complete),funtype(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(fifon),->expr[ident(fifo),ident(fifonum)]]],estmt[assign[simple_assi(=),ident(status),->expr[ident(urb),ident(status)]]],estmt[assign[simple_assi(=),ident(tx_offset),const_i(0)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(DBG),ident(HFCUSB_DBG_VERBOSE_USB),const(N/H),ident(status),ident(fifon)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(errcode),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(status)]]],sel_if[ident(errcode),estmt[call[ident(DBG),ident(HFCUSB_DBG_VERBOSE_USB),const(N/H),ident(k),ident(errcode)]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(status),const_i(0)]]],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(transp_mode),const_i(0)]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(transp_mode),const_i(1)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(threshbit),binary[aop(N/H),->expr[ident(hfc),ident(threshold_mask)],binary[aop(N/H),const_i(1),ident(fifon)]]]],estmt[assign[simple_assi(=),ident(num_isoc_packets),array_a[ident(iso_packets),ident(fifon)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_DMIN),ident(SINK_DMAX)]]]],{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_MIN),ident(SINK_MAX)]]]]],estmt[call[ident(fill_isoc_urb),ident(urb),->expr[->expr[ident(fifo),ident(hfc)],ident(dev)],->expr[ident(fifo),ident(pipe)],->expr[ident(context_iso_urb),ident(buffer)],ident(num_isoc_packets),->expr[ident(fifo),ident(usb_packet_maxlen)],->expr[ident(fifo),ident(intervall)],ident(tx_iso_complete),->expr[ident(urb),ident(context)]]],estmt[call[ident(memset),->expr[ident(context_iso_urb),ident(buffer)],const_i(0),sizeof_expr[->expr[ident(context_iso_urb),ident(buffer)]]]],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(skb_copy_from_linear_data),->expr[ident(fifo),ident(skbuff)],binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]],sel_if[ident(frame_complete),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(1)]],estmt[call[->expr[->expr[ident(fifo),ident(hif)],ident(l1l2)],->expr[ident(fifo),ident(hif)],binary[aop(N/H),ident(PH_DATA),ident(CONFIRM)],expr(N/H)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(dev_kfree_skb_any),->expr[ident(fifo),ident(skbuff)]]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(skbuff)],ident(NULL)]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(0)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(errcode),call[ident(usb_submit_urb),ident(urb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(errcode)]]],estmt(NONE)]],{}stmt[sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(status),call[ident(symbolic),ident(urb_errlist),ident(status)],ident(fifon)]]],estmt(NONE)]]]]]
	¶
]]
[[
prg2[def[fname(tx_iso_complete),funtype(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(fifon),->expr[ident(fifo),ident(fifonum)]]],estmt[assign[simple_assi(=),ident(status),->expr[ident(urb),ident(status)]]],estmt[assign[simple_assi(=),ident(tx_offset),const_i(0)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(DBG),ident(HFCUSB_DBG_VERBOSE_USB),const(N/H),ident(status),ident(fifon)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(errcode),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(status)]]],sel_if[ident(errcode),estmt[call[ident(DBG),ident(HFCUSB_DBG_VERBOSE_USB),const(N/H),ident(k),ident(errcode)]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(status),const_i(0)]]],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(transp_mode),const_i(0)]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(transp_mode),const_i(1)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(threshbit),binary[aop(N/H),->expr[ident(hfc),ident(threshold_mask)],binary[aop(N/H),const_i(1),ident(fifon)]]]],estmt[assign[simple_assi(=),ident(num_isoc_packets),array_a[ident(iso_packets),ident(fifon)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_DMIN),ident(SINK_DMAX)]]]],{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_MIN),ident(SINK_MAX)]]]]],estmt[call[ident(fill_isoc_urb),ident(urb),->expr[->expr[ident(fifo),ident(hfc)],ident(dev)],->expr[ident(fifo),ident(pipe)],->expr[ident(context_iso_urb),ident(buffer)],ident(num_isoc_packets),->expr[ident(fifo),ident(usb_packet_maxlen)],->expr[ident(fifo),ident(intervall)],ident(tx_iso_complete),->expr[ident(urb),ident(context)]]],estmt[call[ident(memset),->expr[ident(context_iso_urb),ident(buffer)],const_i(0),sizeof_expr[->expr[ident(context_iso_urb),ident(buffer)]]]],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(memcpy),binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],->expr[->expr[ident(fifo),ident(skbuff)],ident(data)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]],sel_if[ident(frame_complete),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(1)]],estmt[call[->expr[->expr[ident(fifo),ident(hif)],ident(l1l2)],->expr[ident(fifo),ident(hif)],binary[aop(N/H),ident(PH_DATA),ident(CONFIRM)],expr(N/H)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(dev_kfree_skb_any),->expr[ident(fifo),ident(skbuff)]]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(skbuff)],ident(NULL)]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(0)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(errcode),call[ident(usb_submit_urb),ident(urb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(errcode)]]],estmt(NONE)]],{}stmt[sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(status),call[ident(symbolic),ident(urb_errlist),ident(status)],ident(fifon)]]],estmt(NONE)]]]]]] ==> prg2[def[fname(tx_iso_complete),funtype(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(fifon),->expr[ident(fifo),ident(fifonum)]]],estmt[assign[simple_assi(=),ident(status),->expr[ident(urb),ident(status)]]],estmt[assign[simple_assi(=),ident(tx_offset),const_i(0)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(DBG),ident(HFCUSB_DBG_VERBOSE_USB),const(N/H),ident(status),ident(fifon)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(errcode),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(status)]]],sel_if[ident(errcode),estmt[call[ident(DBG),ident(HFCUSB_DBG_VERBOSE_USB),const(N/H),ident(k),ident(errcode)]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(status),const_i(0)]]],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(transp_mode),const_i(0)]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(transp_mode),const_i(1)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(threshbit),binary[aop(N/H),->expr[ident(hfc),ident(threshold_mask)],binary[aop(N/H),const_i(1),ident(fifon)]]]],estmt[assign[simple_assi(=),ident(num_isoc_packets),array_a[ident(iso_packets),ident(fifon)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_DMIN),ident(SINK_DMAX)]]]],{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_MIN),ident(SINK_MAX)]]]]],estmt[call[ident(fill_isoc_urb),ident(urb),->expr[->expr[ident(fifo),ident(hfc)],ident(dev)],->expr[ident(fifo),ident(pipe)],->expr[ident(context_iso_urb),ident(buffer)],ident(num_isoc_packets),->expr[ident(fifo),ident(usb_packet_maxlen)],->expr[ident(fifo),ident(intervall)],ident(tx_iso_complete),->expr[ident(urb),ident(context)]]],estmt[call[ident(memset),->expr[ident(context_iso_urb),ident(buffer)],const_i(0),sizeof_expr[->expr[ident(context_iso_urb),ident(buffer)]]]],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(skb_copy_from_linear_data),->expr[ident(fifo),ident(skbuff)],binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]],sel_if[ident(frame_complete),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(1)]],estmt[call[->expr[->expr[ident(fifo),ident(hif)],ident(l1l2)],->expr[ident(fifo),ident(hif)],binary[aop(N/H),ident(PH_DATA),ident(CONFIRM)],expr(N/H)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(dev_kfree_skb_any),->expr[ident(fifo),ident(skbuff)]]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(skbuff)],ident(NULL)]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(0)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(errcode),call[ident(usb_submit_urb),ident(urb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(errcode)]]],estmt(NONE)]],{}stmt[sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(status),call[ident(symbolic),ident(urb_errlist),ident(status)],ident(fifon)]]],estmt(NONE)]]]]]]
	¶
]]
starting abstraction
minimal term size: 17
renumbering metas
abstracting the following solution now
[[
call[ident(memcpy),binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],->expr[->expr[ident(fifo),ident(skbuff)],ident(data)],ident(current_len)] ==> call[ident(skb_copy_from_linear_data),->expr[ident(fifo),ident(skbuff)],binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],ident(current_len)]
	¶
]]
of size  :::: 17
@@@@@,
,
.
,
,
.
@@@@@@@,
,
.
@,
,
,
.
@,
,
,
.
,
,
,
,
.
@@@@@,
,
.
@,
,
,
.
@,
,
,
.
@@,
,
.
,
,
,
,
.

with result :::::
call[ident(memcpy),binary[meta(X12),binary[meta(X12),->expr[meta(X11),meta(X10)],meta(X8)],meta(X6)],->expr[->expr[meta(X4),meta(X3)],ident(data)],meta(X0)] ==> call[ident(skb_copy_from_linear_data),->expr[meta(X4),meta(X3)],binary[meta(X12),binary[meta(X12),->expr[meta(X11),meta(X10)],meta(X8)],meta(X6)],meta(X0)]
call[ident(memcpy),binary[meta(X12),binary[meta(X12),->expr[meta(X11),meta(X10)],meta(X8)],meta(X6)],->expr[meta(X2),ident(data)],meta(X0)] ==> call[ident(skb_copy_from_linear_data),meta(X2),binary[meta(X12),binary[meta(X12),->expr[meta(X11),meta(X10)],meta(X8)],meta(X6)],meta(X0)]
call[ident(memcpy),binary[meta(X12),binary[meta(X12),meta(X9),meta(X8)],meta(X6)],->expr[->expr[meta(X4),meta(X3)],ident(data)],meta(X0)] ==> call[ident(skb_copy_from_linear_data),->expr[meta(X4),meta(X3)],binary[meta(X12),binary[meta(X12),meta(X9),meta(X8)],meta(X6)],meta(X0)]
call[ident(memcpy),binary[meta(X12),binary[meta(X12),meta(X9),meta(X8)],meta(X6)],->expr[meta(X2),ident(data)],meta(X0)] ==> call[ident(skb_copy_from_linear_data),meta(X2),binary[meta(X12),binary[meta(X12),meta(X9),meta(X8)],meta(X6)],meta(X0)]
call[ident(memcpy),binary[meta(X12),meta(X7),meta(X6)],->expr[->expr[meta(X4),meta(X3)],ident(data)],meta(X0)] ==> call[ident(skb_copy_from_linear_data),->expr[meta(X4),meta(X3)],binary[meta(X12),meta(X7),meta(X6)],meta(X0)]
call[ident(memcpy),binary[meta(X12),meta(X7),meta(X6)],->expr[meta(X2),ident(data)],meta(X0)] ==> call[ident(skb_copy_from_linear_data),meta(X2),binary[meta(X12),meta(X7),meta(X6)],meta(X0)]
call[ident(memcpy),meta(X5),->expr[->expr[meta(X4),meta(X3)],ident(data)],meta(X0)] ==> call[ident(skb_copy_from_linear_data),->expr[meta(X4),meta(X3)],meta(X5),meta(X0)]
call[ident(memcpy),meta(X5),->expr[meta(X2),ident(data)],meta(X0)] ==> call[ident(skb_copy_from_linear_data),meta(X2),meta(X5),meta(X0)]
	#no of abstracted update: 8
,
.
abstracting the following solution now
[[
estmt[call[ident(memcpy),binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],->expr[->expr[ident(fifo),ident(skbuff)],ident(data)],ident(current_len)]] ==> estmt[call[ident(skb_copy_from_linear_data),->expr[ident(fifo),ident(skbuff)],binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],ident(current_len)]]
	¶
]]
of size  :::: 18
@@@@@,
,
.
@,
,
,
.
@,
,
,
.
@@,
,
.
,
,
,
,
.
,
.

with result :::::
estmt[call[ident(memcpy),binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],->expr[->expr[ident(fifo),ident(skbuff)],ident(data)],ident(current_len)]] ==> estmt[call[ident(skb_copy_from_linear_data),->expr[ident(fifo),ident(skbuff)],binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],ident(current_len)]]
	#no of abstracted update: 1
,
.
abstracting the following solution now
[[
{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(memcpy),binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],->expr[->expr[ident(fifo),ident(skbuff)],ident(data)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]] ==> {}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(skb_copy_from_linear_data),->expr[ident(fifo),ident(skbuff)],binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]]
	¶
]]
of size  :::: 152

with result :::::
{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(memcpy),binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],->expr[->expr[ident(fifo),ident(skbuff)],ident(data)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]] ==> {}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(skb_copy_from_linear_data),->expr[ident(fifo),ident(skbuff)],binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]]
	#no of abstracted update: 1
,
.
abstracting the following solution now
[[
sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(memcpy),binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],->expr[->expr[ident(fifo),ident(skbuff)],ident(data)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]] ==> sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(skb_copy_from_linear_data),->expr[ident(fifo),ident(skbuff)],binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]]
	¶
]]
of size  :::: 197

with result :::::
sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(memcpy),binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],->expr[->expr[ident(fifo),ident(skbuff)],ident(data)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]] ==> sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(skb_copy_from_linear_data),->expr[ident(fifo),ident(skbuff)],binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]]
	#no of abstracted update: 1
,
.
abstracting the following solution now
[[
{}stmt[sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(memcpy),binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],->expr[->expr[ident(fifo),ident(skbuff)],ident(data)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]],sel_if[ident(frame_complete),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(1)]],estmt[call[->expr[->expr[ident(fifo),ident(hif)],ident(l1l2)],->expr[ident(fifo),ident(hif)],binary[aop(N/H),ident(PH_DATA),ident(CONFIRM)],expr(N/H)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(dev_kfree_skb_any),->expr[ident(fifo),ident(skbuff)]]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(skbuff)],ident(NULL)]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(0)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]]],estmt(NONE)]] ==> {}stmt[sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(skb_copy_from_linear_data),->expr[ident(fifo),ident(skbuff)],binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]],sel_if[ident(frame_complete),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(1)]],estmt[call[->expr[->expr[ident(fifo),ident(hif)],ident(l1l2)],->expr[ident(fifo),ident(hif)],binary[aop(N/H),ident(PH_DATA),ident(CONFIRM)],expr(N/H)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(dev_kfree_skb_any),->expr[ident(fifo),ident(skbuff)]]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(skbuff)],ident(NULL)]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(0)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]]],estmt(NONE)]]
	¶
]]
of size  :::: 253

with result :::::
{}stmt[sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(memcpy),binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],->expr[->expr[ident(fifo),ident(skbuff)],ident(data)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]],sel_if[ident(frame_complete),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(1)]],estmt[call[->expr[->expr[ident(fifo),ident(hif)],ident(l1l2)],->expr[ident(fifo),ident(hif)],binary[aop(N/H),ident(PH_DATA),ident(CONFIRM)],expr(N/H)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(dev_kfree_skb_any),->expr[ident(fifo),ident(skbuff)]]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(skbuff)],ident(NULL)]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(0)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]]],estmt(NONE)]] ==> {}stmt[sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(skb_copy_from_linear_data),->expr[ident(fifo),ident(skbuff)],binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]],sel_if[ident(frame_complete),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(1)]],estmt[call[->expr[->expr[ident(fifo),ident(hif)],ident(l1l2)],->expr[ident(fifo),ident(hif)],binary[aop(N/H),ident(PH_DATA),ident(CONFIRM)],expr(N/H)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(dev_kfree_skb_any),->expr[ident(fifo),ident(skbuff)]]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(skbuff)],ident(NULL)]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(0)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]]],estmt(NONE)]]
	#no of abstracted update: 1
,
.
abstracting the following solution now
[[
for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(memcpy),binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],->expr[->expr[ident(fifo),ident(skbuff)],ident(data)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]],sel_if[ident(frame_complete),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(1)]],estmt[call[->expr[->expr[ident(fifo),ident(hif)],ident(l1l2)],->expr[ident(fifo),ident(hif)],binary[aop(N/H),ident(PH_DATA),ident(CONFIRM)],expr(N/H)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(dev_kfree_skb_any),->expr[ident(fifo),ident(skbuff)]]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(skbuff)],ident(NULL)]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(0)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]]],estmt(NONE)]]] ==> for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(skb_copy_from_linear_data),->expr[ident(fifo),ident(skbuff)],binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]],sel_if[ident(frame_complete),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(1)]],estmt[call[->expr[->expr[ident(fifo),ident(hif)],ident(l1l2)],->expr[ident(fifo),ident(hif)],binary[aop(N/H),ident(PH_DATA),ident(CONFIRM)],expr(N/H)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(dev_kfree_skb_any),->expr[ident(fifo),ident(skbuff)]]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(skbuff)],ident(NULL)]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(0)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]]],estmt(NONE)]]]
	¶
]]
of size  :::: 260

with result :::::
for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(memcpy),binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],->expr[->expr[ident(fifo),ident(skbuff)],ident(data)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]],sel_if[ident(frame_complete),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(1)]],estmt[call[->expr[->expr[ident(fifo),ident(hif)],ident(l1l2)],->expr[ident(fifo),ident(hif)],binary[aop(N/H),ident(PH_DATA),ident(CONFIRM)],expr(N/H)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(dev_kfree_skb_any),->expr[ident(fifo),ident(skbuff)]]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(skbuff)],ident(NULL)]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(0)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]]],estmt(NONE)]]] ==> for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(skb_copy_from_linear_data),->expr[ident(fifo),ident(skbuff)],binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]],sel_if[ident(frame_complete),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(1)]],estmt[call[->expr[->expr[ident(fifo),ident(hif)],ident(l1l2)],->expr[ident(fifo),ident(hif)],binary[aop(N/H),ident(PH_DATA),ident(CONFIRM)],expr(N/H)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(dev_kfree_skb_any),->expr[ident(fifo),ident(skbuff)]]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(skbuff)],ident(NULL)]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(0)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]]],estmt(NONE)]]]
	#no of abstracted update: 1
,
.
abstracting the following solution now
[[
{}stmt[estmt[assign[simple_assi(=),ident(transp_mode),const_i(0)]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(transp_mode),const_i(1)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(threshbit),binary[aop(N/H),->expr[ident(hfc),ident(threshold_mask)],binary[aop(N/H),const_i(1),ident(fifon)]]]],estmt[assign[simple_assi(=),ident(num_isoc_packets),array_a[ident(iso_packets),ident(fifon)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_DMIN),ident(SINK_DMAX)]]]],{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_MIN),ident(SINK_MAX)]]]]],estmt[call[ident(fill_isoc_urb),ident(urb),->expr[->expr[ident(fifo),ident(hfc)],ident(dev)],->expr[ident(fifo),ident(pipe)],->expr[ident(context_iso_urb),ident(buffer)],ident(num_isoc_packets),->expr[ident(fifo),ident(usb_packet_maxlen)],->expr[ident(fifo),ident(intervall)],ident(tx_iso_complete),->expr[ident(urb),ident(context)]]],estmt[call[ident(memset),->expr[ident(context_iso_urb),ident(buffer)],const_i(0),sizeof_expr[->expr[ident(context_iso_urb),ident(buffer)]]]],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(memcpy),binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],->expr[->expr[ident(fifo),ident(skbuff)],ident(data)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]],sel_if[ident(frame_complete),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(1)]],estmt[call[->expr[->expr[ident(fifo),ident(hif)],ident(l1l2)],->expr[ident(fifo),ident(hif)],binary[aop(N/H),ident(PH_DATA),ident(CONFIRM)],expr(N/H)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(dev_kfree_skb_any),->expr[ident(fifo),ident(skbuff)]]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(skbuff)],ident(NULL)]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(0)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(errcode),call[ident(usb_submit_urb),ident(urb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(errcode)]]],estmt(NONE)]] ==> {}stmt[estmt[assign[simple_assi(=),ident(transp_mode),const_i(0)]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(transp_mode),const_i(1)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(threshbit),binary[aop(N/H),->expr[ident(hfc),ident(threshold_mask)],binary[aop(N/H),const_i(1),ident(fifon)]]]],estmt[assign[simple_assi(=),ident(num_isoc_packets),array_a[ident(iso_packets),ident(fifon)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_DMIN),ident(SINK_DMAX)]]]],{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_MIN),ident(SINK_MAX)]]]]],estmt[call[ident(fill_isoc_urb),ident(urb),->expr[->expr[ident(fifo),ident(hfc)],ident(dev)],->expr[ident(fifo),ident(pipe)],->expr[ident(context_iso_urb),ident(buffer)],ident(num_isoc_packets),->expr[ident(fifo),ident(usb_packet_maxlen)],->expr[ident(fifo),ident(intervall)],ident(tx_iso_complete),->expr[ident(urb),ident(context)]]],estmt[call[ident(memset),->expr[ident(context_iso_urb),ident(buffer)],const_i(0),sizeof_expr[->expr[ident(context_iso_urb),ident(buffer)]]]],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(skb_copy_from_linear_data),->expr[ident(fifo),ident(skbuff)],binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]],sel_if[ident(frame_complete),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(1)]],estmt[call[->expr[->expr[ident(fifo),ident(hif)],ident(l1l2)],->expr[ident(fifo),ident(hif)],binary[aop(N/H),ident(PH_DATA),ident(CONFIRM)],expr(N/H)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(dev_kfree_skb_any),->expr[ident(fifo),ident(skbuff)]]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(skbuff)],ident(NULL)]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(0)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(errcode),call[ident(usb_submit_urb),ident(urb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(errcode)]]],estmt(NONE)]]
	¶
]]
of size  :::: 373

with result :::::
{}stmt[estmt[assign[simple_assi(=),ident(transp_mode),const_i(0)]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(transp_mode),const_i(1)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(threshbit),binary[aop(N/H),->expr[ident(hfc),ident(threshold_mask)],binary[aop(N/H),const_i(1),ident(fifon)]]]],estmt[assign[simple_assi(=),ident(num_isoc_packets),array_a[ident(iso_packets),ident(fifon)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_DMIN),ident(SINK_DMAX)]]]],{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_MIN),ident(SINK_MAX)]]]]],estmt[call[ident(fill_isoc_urb),ident(urb),->expr[->expr[ident(fifo),ident(hfc)],ident(dev)],->expr[ident(fifo),ident(pipe)],->expr[ident(context_iso_urb),ident(buffer)],ident(num_isoc_packets),->expr[ident(fifo),ident(usb_packet_maxlen)],->expr[ident(fifo),ident(intervall)],ident(tx_iso_complete),->expr[ident(urb),ident(context)]]],estmt[call[ident(memset),->expr[ident(context_iso_urb),ident(buffer)],const_i(0),sizeof_expr[->expr[ident(context_iso_urb),ident(buffer)]]]],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(memcpy),binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],->expr[->expr[ident(fifo),ident(skbuff)],ident(data)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]],sel_if[ident(frame_complete),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(1)]],estmt[call[->expr[->expr[ident(fifo),ident(hif)],ident(l1l2)],->expr[ident(fifo),ident(hif)],binary[aop(N/H),ident(PH_DATA),ident(CONFIRM)],expr(N/H)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(dev_kfree_skb_any),->expr[ident(fifo),ident(skbuff)]]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(skbuff)],ident(NULL)]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(0)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(errcode),call[ident(usb_submit_urb),ident(urb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(errcode)]]],estmt(NONE)]] ==> {}stmt[estmt[assign[simple_assi(=),ident(transp_mode),const_i(0)]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(transp_mode),const_i(1)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(threshbit),binary[aop(N/H),->expr[ident(hfc),ident(threshold_mask)],binary[aop(N/H),const_i(1),ident(fifon)]]]],estmt[assign[simple_assi(=),ident(num_isoc_packets),array_a[ident(iso_packets),ident(fifon)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_DMIN),ident(SINK_DMAX)]]]],{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_MIN),ident(SINK_MAX)]]]]],estmt[call[ident(fill_isoc_urb),ident(urb),->expr[->expr[ident(fifo),ident(hfc)],ident(dev)],->expr[ident(fifo),ident(pipe)],->expr[ident(context_iso_urb),ident(buffer)],ident(num_isoc_packets),->expr[ident(fifo),ident(usb_packet_maxlen)],->expr[ident(fifo),ident(intervall)],ident(tx_iso_complete),->expr[ident(urb),ident(context)]]],estmt[call[ident(memset),->expr[ident(context_iso_urb),ident(buffer)],const_i(0),sizeof_expr[->expr[ident(context_iso_urb),ident(buffer)]]]],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(skb_copy_from_linear_data),->expr[ident(fifo),ident(skbuff)],binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]],sel_if[ident(frame_complete),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(1)]],estmt[call[->expr[->expr[ident(fifo),ident(hif)],ident(l1l2)],->expr[ident(fifo),ident(hif)],binary[aop(N/H),ident(PH_DATA),ident(CONFIRM)],expr(N/H)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(dev_kfree_skb_any),->expr[ident(fifo),ident(skbuff)]]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(skbuff)],ident(NULL)]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(0)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(errcode),call[ident(usb_submit_urb),ident(urb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(errcode)]]],estmt(NONE)]]
	#no of abstracted update: 1
,
.
abstracting the following solution now
[[
sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(transp_mode),const_i(0)]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(transp_mode),const_i(1)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(threshbit),binary[aop(N/H),->expr[ident(hfc),ident(threshold_mask)],binary[aop(N/H),const_i(1),ident(fifon)]]]],estmt[assign[simple_assi(=),ident(num_isoc_packets),array_a[ident(iso_packets),ident(fifon)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_DMIN),ident(SINK_DMAX)]]]],{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_MIN),ident(SINK_MAX)]]]]],estmt[call[ident(fill_isoc_urb),ident(urb),->expr[->expr[ident(fifo),ident(hfc)],ident(dev)],->expr[ident(fifo),ident(pipe)],->expr[ident(context_iso_urb),ident(buffer)],ident(num_isoc_packets),->expr[ident(fifo),ident(usb_packet_maxlen)],->expr[ident(fifo),ident(intervall)],ident(tx_iso_complete),->expr[ident(urb),ident(context)]]],estmt[call[ident(memset),->expr[ident(context_iso_urb),ident(buffer)],const_i(0),sizeof_expr[->expr[ident(context_iso_urb),ident(buffer)]]]],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(memcpy),binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],->expr[->expr[ident(fifo),ident(skbuff)],ident(data)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]],sel_if[ident(frame_complete),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(1)]],estmt[call[->expr[->expr[ident(fifo),ident(hif)],ident(l1l2)],->expr[ident(fifo),ident(hif)],binary[aop(N/H),ident(PH_DATA),ident(CONFIRM)],expr(N/H)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(dev_kfree_skb_any),->expr[ident(fifo),ident(skbuff)]]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(skbuff)],ident(NULL)]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(0)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(errcode),call[ident(usb_submit_urb),ident(urb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(errcode)]]],estmt(NONE)]],{}stmt[sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(status),call[ident(symbolic),ident(urb_errlist),ident(status)],ident(fifon)]]],estmt(NONE)]]] ==> sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(transp_mode),const_i(0)]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(transp_mode),const_i(1)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(threshbit),binary[aop(N/H),->expr[ident(hfc),ident(threshold_mask)],binary[aop(N/H),const_i(1),ident(fifon)]]]],estmt[assign[simple_assi(=),ident(num_isoc_packets),array_a[ident(iso_packets),ident(fifon)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_DMIN),ident(SINK_DMAX)]]]],{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_MIN),ident(SINK_MAX)]]]]],estmt[call[ident(fill_isoc_urb),ident(urb),->expr[->expr[ident(fifo),ident(hfc)],ident(dev)],->expr[ident(fifo),ident(pipe)],->expr[ident(context_iso_urb),ident(buffer)],ident(num_isoc_packets),->expr[ident(fifo),ident(usb_packet_maxlen)],->expr[ident(fifo),ident(intervall)],ident(tx_iso_complete),->expr[ident(urb),ident(context)]]],estmt[call[ident(memset),->expr[ident(context_iso_urb),ident(buffer)],const_i(0),sizeof_expr[->expr[ident(context_iso_urb),ident(buffer)]]]],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(skb_copy_from_linear_data),->expr[ident(fifo),ident(skbuff)],binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]],sel_if[ident(frame_complete),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(1)]],estmt[call[->expr[->expr[ident(fifo),ident(hif)],ident(l1l2)],->expr[ident(fifo),ident(hif)],binary[aop(N/H),ident(PH_DATA),ident(CONFIRM)],expr(N/H)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(dev_kfree_skb_any),->expr[ident(fifo),ident(skbuff)]]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(skbuff)],ident(NULL)]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(0)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(errcode),call[ident(usb_submit_urb),ident(urb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(errcode)]]],estmt(NONE)]],{}stmt[sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(status),call[ident(symbolic),ident(urb_errlist),ident(status)],ident(fifon)]]],estmt(NONE)]]]
	¶
]]
of size  :::: 390

with result :::::
sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(transp_mode),const_i(0)]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(transp_mode),const_i(1)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(threshbit),binary[aop(N/H),->expr[ident(hfc),ident(threshold_mask)],binary[aop(N/H),const_i(1),ident(fifon)]]]],estmt[assign[simple_assi(=),ident(num_isoc_packets),array_a[ident(iso_packets),ident(fifon)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_DMIN),ident(SINK_DMAX)]]]],{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_MIN),ident(SINK_MAX)]]]]],estmt[call[ident(fill_isoc_urb),ident(urb),->expr[->expr[ident(fifo),ident(hfc)],ident(dev)],->expr[ident(fifo),ident(pipe)],->expr[ident(context_iso_urb),ident(buffer)],ident(num_isoc_packets),->expr[ident(fifo),ident(usb_packet_maxlen)],->expr[ident(fifo),ident(intervall)],ident(tx_iso_complete),->expr[ident(urb),ident(context)]]],estmt[call[ident(memset),->expr[ident(context_iso_urb),ident(buffer)],const_i(0),sizeof_expr[->expr[ident(context_iso_urb),ident(buffer)]]]],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(memcpy),binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],->expr[->expr[ident(fifo),ident(skbuff)],ident(data)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]],sel_if[ident(frame_complete),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(1)]],estmt[call[->expr[->expr[ident(fifo),ident(hif)],ident(l1l2)],->expr[ident(fifo),ident(hif)],binary[aop(N/H),ident(PH_DATA),ident(CONFIRM)],expr(N/H)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(dev_kfree_skb_any),->expr[ident(fifo),ident(skbuff)]]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(skbuff)],ident(NULL)]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(0)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(errcode),call[ident(usb_submit_urb),ident(urb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(errcode)]]],estmt(NONE)]],{}stmt[sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(status),call[ident(symbolic),ident(urb_errlist),ident(status)],ident(fifon)]]],estmt(NONE)]]] ==> sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(transp_mode),const_i(0)]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(transp_mode),const_i(1)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(threshbit),binary[aop(N/H),->expr[ident(hfc),ident(threshold_mask)],binary[aop(N/H),const_i(1),ident(fifon)]]]],estmt[assign[simple_assi(=),ident(num_isoc_packets),array_a[ident(iso_packets),ident(fifon)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_DMIN),ident(SINK_DMAX)]]]],{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_MIN),ident(SINK_MAX)]]]]],estmt[call[ident(fill_isoc_urb),ident(urb),->expr[->expr[ident(fifo),ident(hfc)],ident(dev)],->expr[ident(fifo),ident(pipe)],->expr[ident(context_iso_urb),ident(buffer)],ident(num_isoc_packets),->expr[ident(fifo),ident(usb_packet_maxlen)],->expr[ident(fifo),ident(intervall)],ident(tx_iso_complete),->expr[ident(urb),ident(context)]]],estmt[call[ident(memset),->expr[ident(context_iso_urb),ident(buffer)],const_i(0),sizeof_expr[->expr[ident(context_iso_urb),ident(buffer)]]]],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(skb_copy_from_linear_data),->expr[ident(fifo),ident(skbuff)],binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]],sel_if[ident(frame_complete),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(1)]],estmt[call[->expr[->expr[ident(fifo),ident(hif)],ident(l1l2)],->expr[ident(fifo),ident(hif)],binary[aop(N/H),ident(PH_DATA),ident(CONFIRM)],expr(N/H)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(dev_kfree_skb_any),->expr[ident(fifo),ident(skbuff)]]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(skbuff)],ident(NULL)]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(0)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(errcode),call[ident(usb_submit_urb),ident(urb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(errcode)]]],estmt(NONE)]],{}stmt[sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(status),call[ident(symbolic),ident(urb_errlist),ident(status)],ident(fifon)]]],estmt(NONE)]]]
	#no of abstracted update: 1
,
.
abstracting the following solution now
[[
{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(fifon),->expr[ident(fifo),ident(fifonum)]]],estmt[assign[simple_assi(=),ident(status),->expr[ident(urb),ident(status)]]],estmt[assign[simple_assi(=),ident(tx_offset),const_i(0)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(DBG),ident(HFCUSB_DBG_VERBOSE_USB),const(N/H),ident(status),ident(fifon)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(errcode),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(status)]]],sel_if[ident(errcode),estmt[call[ident(DBG),ident(HFCUSB_DBG_VERBOSE_USB),const(N/H),ident(k),ident(errcode)]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(status),const_i(0)]]],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(transp_mode),const_i(0)]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(transp_mode),const_i(1)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(threshbit),binary[aop(N/H),->expr[ident(hfc),ident(threshold_mask)],binary[aop(N/H),const_i(1),ident(fifon)]]]],estmt[assign[simple_assi(=),ident(num_isoc_packets),array_a[ident(iso_packets),ident(fifon)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_DMIN),ident(SINK_DMAX)]]]],{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_MIN),ident(SINK_MAX)]]]]],estmt[call[ident(fill_isoc_urb),ident(urb),->expr[->expr[ident(fifo),ident(hfc)],ident(dev)],->expr[ident(fifo),ident(pipe)],->expr[ident(context_iso_urb),ident(buffer)],ident(num_isoc_packets),->expr[ident(fifo),ident(usb_packet_maxlen)],->expr[ident(fifo),ident(intervall)],ident(tx_iso_complete),->expr[ident(urb),ident(context)]]],estmt[call[ident(memset),->expr[ident(context_iso_urb),ident(buffer)],const_i(0),sizeof_expr[->expr[ident(context_iso_urb),ident(buffer)]]]],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(memcpy),binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],->expr[->expr[ident(fifo),ident(skbuff)],ident(data)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]],sel_if[ident(frame_complete),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(1)]],estmt[call[->expr[->expr[ident(fifo),ident(hif)],ident(l1l2)],->expr[ident(fifo),ident(hif)],binary[aop(N/H),ident(PH_DATA),ident(CONFIRM)],expr(N/H)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(dev_kfree_skb_any),->expr[ident(fifo),ident(skbuff)]]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(skbuff)],ident(NULL)]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(0)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(errcode),call[ident(usb_submit_urb),ident(urb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(errcode)]]],estmt(NONE)]],{}stmt[sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(status),call[ident(symbolic),ident(urb_errlist),ident(status)],ident(fifon)]]],estmt(NONE)]]]] ==> {}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(fifon),->expr[ident(fifo),ident(fifonum)]]],estmt[assign[simple_assi(=),ident(status),->expr[ident(urb),ident(status)]]],estmt[assign[simple_assi(=),ident(tx_offset),const_i(0)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(DBG),ident(HFCUSB_DBG_VERBOSE_USB),const(N/H),ident(status),ident(fifon)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(errcode),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(status)]]],sel_if[ident(errcode),estmt[call[ident(DBG),ident(HFCUSB_DBG_VERBOSE_USB),const(N/H),ident(k),ident(errcode)]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(status),const_i(0)]]],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(transp_mode),const_i(0)]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(transp_mode),const_i(1)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(threshbit),binary[aop(N/H),->expr[ident(hfc),ident(threshold_mask)],binary[aop(N/H),const_i(1),ident(fifon)]]]],estmt[assign[simple_assi(=),ident(num_isoc_packets),array_a[ident(iso_packets),ident(fifon)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_DMIN),ident(SINK_DMAX)]]]],{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_MIN),ident(SINK_MAX)]]]]],estmt[call[ident(fill_isoc_urb),ident(urb),->expr[->expr[ident(fifo),ident(hfc)],ident(dev)],->expr[ident(fifo),ident(pipe)],->expr[ident(context_iso_urb),ident(buffer)],ident(num_isoc_packets),->expr[ident(fifo),ident(usb_packet_maxlen)],->expr[ident(fifo),ident(intervall)],ident(tx_iso_complete),->expr[ident(urb),ident(context)]]],estmt[call[ident(memset),->expr[ident(context_iso_urb),ident(buffer)],const_i(0),sizeof_expr[->expr[ident(context_iso_urb),ident(buffer)]]]],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(skb_copy_from_linear_data),->expr[ident(fifo),ident(skbuff)],binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]],sel_if[ident(frame_complete),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(1)]],estmt[call[->expr[->expr[ident(fifo),ident(hif)],ident(l1l2)],->expr[ident(fifo),ident(hif)],binary[aop(N/H),ident(PH_DATA),ident(CONFIRM)],expr(N/H)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(dev_kfree_skb_any),->expr[ident(fifo),ident(skbuff)]]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(skbuff)],ident(NULL)]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(0)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(errcode),call[ident(usb_submit_urb),ident(urb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(errcode)]]],estmt(NONE)]],{}stmt[sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(status),call[ident(symbolic),ident(urb_errlist),ident(status)],ident(fifon)]]],estmt(NONE)]]]]
	¶
]]
of size  :::: 461

with result :::::
{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(fifon),->expr[ident(fifo),ident(fifonum)]]],estmt[assign[simple_assi(=),ident(status),->expr[ident(urb),ident(status)]]],estmt[assign[simple_assi(=),ident(tx_offset),const_i(0)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(DBG),ident(HFCUSB_DBG_VERBOSE_USB),const(N/H),ident(status),ident(fifon)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(errcode),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(status)]]],sel_if[ident(errcode),estmt[call[ident(DBG),ident(HFCUSB_DBG_VERBOSE_USB),const(N/H),ident(k),ident(errcode)]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(status),const_i(0)]]],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(transp_mode),const_i(0)]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(transp_mode),const_i(1)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(threshbit),binary[aop(N/H),->expr[ident(hfc),ident(threshold_mask)],binary[aop(N/H),const_i(1),ident(fifon)]]]],estmt[assign[simple_assi(=),ident(num_isoc_packets),array_a[ident(iso_packets),ident(fifon)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_DMIN),ident(SINK_DMAX)]]]],{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_MIN),ident(SINK_MAX)]]]]],estmt[call[ident(fill_isoc_urb),ident(urb),->expr[->expr[ident(fifo),ident(hfc)],ident(dev)],->expr[ident(fifo),ident(pipe)],->expr[ident(context_iso_urb),ident(buffer)],ident(num_isoc_packets),->expr[ident(fifo),ident(usb_packet_maxlen)],->expr[ident(fifo),ident(intervall)],ident(tx_iso_complete),->expr[ident(urb),ident(context)]]],estmt[call[ident(memset),->expr[ident(context_iso_urb),ident(buffer)],const_i(0),sizeof_expr[->expr[ident(context_iso_urb),ident(buffer)]]]],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(memcpy),binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],->expr[->expr[ident(fifo),ident(skbuff)],ident(data)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]],sel_if[ident(frame_complete),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(1)]],estmt[call[->expr[->expr[ident(fifo),ident(hif)],ident(l1l2)],->expr[ident(fifo),ident(hif)],binary[aop(N/H),ident(PH_DATA),ident(CONFIRM)],expr(N/H)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(dev_kfree_skb_any),->expr[ident(fifo),ident(skbuff)]]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(skbuff)],ident(NULL)]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(0)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(errcode),call[ident(usb_submit_urb),ident(urb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(errcode)]]],estmt(NONE)]],{}stmt[sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(status),call[ident(symbolic),ident(urb_errlist),ident(status)],ident(fifon)]]],estmt(NONE)]]]] ==> {}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(fifon),->expr[ident(fifo),ident(fifonum)]]],estmt[assign[simple_assi(=),ident(status),->expr[ident(urb),ident(status)]]],estmt[assign[simple_assi(=),ident(tx_offset),const_i(0)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(DBG),ident(HFCUSB_DBG_VERBOSE_USB),const(N/H),ident(status),ident(fifon)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(errcode),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(status)]]],sel_if[ident(errcode),estmt[call[ident(DBG),ident(HFCUSB_DBG_VERBOSE_USB),const(N/H),ident(k),ident(errcode)]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(status),const_i(0)]]],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(transp_mode),const_i(0)]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(transp_mode),const_i(1)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(threshbit),binary[aop(N/H),->expr[ident(hfc),ident(threshold_mask)],binary[aop(N/H),const_i(1),ident(fifon)]]]],estmt[assign[simple_assi(=),ident(num_isoc_packets),array_a[ident(iso_packets),ident(fifon)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_DMIN),ident(SINK_DMAX)]]]],{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_MIN),ident(SINK_MAX)]]]]],estmt[call[ident(fill_isoc_urb),ident(urb),->expr[->expr[ident(fifo),ident(hfc)],ident(dev)],->expr[ident(fifo),ident(pipe)],->expr[ident(context_iso_urb),ident(buffer)],ident(num_isoc_packets),->expr[ident(fifo),ident(usb_packet_maxlen)],->expr[ident(fifo),ident(intervall)],ident(tx_iso_complete),->expr[ident(urb),ident(context)]]],estmt[call[ident(memset),->expr[ident(context_iso_urb),ident(buffer)],const_i(0),sizeof_expr[->expr[ident(context_iso_urb),ident(buffer)]]]],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(skb_copy_from_linear_data),->expr[ident(fifo),ident(skbuff)],binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]],sel_if[ident(frame_complete),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(1)]],estmt[call[->expr[->expr[ident(fifo),ident(hif)],ident(l1l2)],->expr[ident(fifo),ident(hif)],binary[aop(N/H),ident(PH_DATA),ident(CONFIRM)],expr(N/H)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(dev_kfree_skb_any),->expr[ident(fifo),ident(skbuff)]]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(skbuff)],ident(NULL)]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(0)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(errcode),call[ident(usb_submit_urb),ident(urb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(errcode)]]],estmt(NONE)]],{}stmt[sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(status),call[ident(symbolic),ident(urb_errlist),ident(status)],ident(fifon)]]],estmt(NONE)]]]]
	#no of abstracted update: 1
,
.
abstracting the following solution now
[[
def[fname(tx_iso_complete),funtype(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(fifon),->expr[ident(fifo),ident(fifonum)]]],estmt[assign[simple_assi(=),ident(status),->expr[ident(urb),ident(status)]]],estmt[assign[simple_assi(=),ident(tx_offset),const_i(0)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(DBG),ident(HFCUSB_DBG_VERBOSE_USB),const(N/H),ident(status),ident(fifon)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(errcode),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(status)]]],sel_if[ident(errcode),estmt[call[ident(DBG),ident(HFCUSB_DBG_VERBOSE_USB),const(N/H),ident(k),ident(errcode)]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(status),const_i(0)]]],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(transp_mode),const_i(0)]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(transp_mode),const_i(1)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(threshbit),binary[aop(N/H),->expr[ident(hfc),ident(threshold_mask)],binary[aop(N/H),const_i(1),ident(fifon)]]]],estmt[assign[simple_assi(=),ident(num_isoc_packets),array_a[ident(iso_packets),ident(fifon)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_DMIN),ident(SINK_DMAX)]]]],{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_MIN),ident(SINK_MAX)]]]]],estmt[call[ident(fill_isoc_urb),ident(urb),->expr[->expr[ident(fifo),ident(hfc)],ident(dev)],->expr[ident(fifo),ident(pipe)],->expr[ident(context_iso_urb),ident(buffer)],ident(num_isoc_packets),->expr[ident(fifo),ident(usb_packet_maxlen)],->expr[ident(fifo),ident(intervall)],ident(tx_iso_complete),->expr[ident(urb),ident(context)]]],estmt[call[ident(memset),->expr[ident(context_iso_urb),ident(buffer)],const_i(0),sizeof_expr[->expr[ident(context_iso_urb),ident(buffer)]]]],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(memcpy),binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],->expr[->expr[ident(fifo),ident(skbuff)],ident(data)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]],sel_if[ident(frame_complete),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(1)]],estmt[call[->expr[->expr[ident(fifo),ident(hif)],ident(l1l2)],->expr[ident(fifo),ident(hif)],binary[aop(N/H),ident(PH_DATA),ident(CONFIRM)],expr(N/H)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(dev_kfree_skb_any),->expr[ident(fifo),ident(skbuff)]]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(skbuff)],ident(NULL)]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(0)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(errcode),call[ident(usb_submit_urb),ident(urb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(errcode)]]],estmt(NONE)]],{}stmt[sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(status),call[ident(symbolic),ident(urb_errlist),ident(status)],ident(fifon)]]],estmt(NONE)]]]]] ==> def[fname(tx_iso_complete),funtype(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(fifon),->expr[ident(fifo),ident(fifonum)]]],estmt[assign[simple_assi(=),ident(status),->expr[ident(urb),ident(status)]]],estmt[assign[simple_assi(=),ident(tx_offset),const_i(0)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(DBG),ident(HFCUSB_DBG_VERBOSE_USB),const(N/H),ident(status),ident(fifon)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(errcode),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(status)]]],sel_if[ident(errcode),estmt[call[ident(DBG),ident(HFCUSB_DBG_VERBOSE_USB),const(N/H),ident(k),ident(errcode)]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(status),const_i(0)]]],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(transp_mode),const_i(0)]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(transp_mode),const_i(1)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(threshbit),binary[aop(N/H),->expr[ident(hfc),ident(threshold_mask)],binary[aop(N/H),const_i(1),ident(fifon)]]]],estmt[assign[simple_assi(=),ident(num_isoc_packets),array_a[ident(iso_packets),ident(fifon)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_DMIN),ident(SINK_DMAX)]]]],{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_MIN),ident(SINK_MAX)]]]]],estmt[call[ident(fill_isoc_urb),ident(urb),->expr[->expr[ident(fifo),ident(hfc)],ident(dev)],->expr[ident(fifo),ident(pipe)],->expr[ident(context_iso_urb),ident(buffer)],ident(num_isoc_packets),->expr[ident(fifo),ident(usb_packet_maxlen)],->expr[ident(fifo),ident(intervall)],ident(tx_iso_complete),->expr[ident(urb),ident(context)]]],estmt[call[ident(memset),->expr[ident(context_iso_urb),ident(buffer)],const_i(0),sizeof_expr[->expr[ident(context_iso_urb),ident(buffer)]]]],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(skb_copy_from_linear_data),->expr[ident(fifo),ident(skbuff)],binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]],sel_if[ident(frame_complete),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(1)]],estmt[call[->expr[->expr[ident(fifo),ident(hif)],ident(l1l2)],->expr[ident(fifo),ident(hif)],binary[aop(N/H),ident(PH_DATA),ident(CONFIRM)],expr(N/H)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(dev_kfree_skb_any),->expr[ident(fifo),ident(skbuff)]]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(skbuff)],ident(NULL)]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(0)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(errcode),call[ident(usb_submit_urb),ident(urb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(errcode)]]],estmt(NONE)]],{}stmt[sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(status),call[ident(symbolic),ident(urb_errlist),ident(status)],ident(fifon)]]],estmt(NONE)]]]]]
	¶
]]
of size  :::: 464

with result :::::
def[fname(tx_iso_complete),funtype(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(fifon),->expr[ident(fifo),ident(fifonum)]]],estmt[assign[simple_assi(=),ident(status),->expr[ident(urb),ident(status)]]],estmt[assign[simple_assi(=),ident(tx_offset),const_i(0)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(DBG),ident(HFCUSB_DBG_VERBOSE_USB),const(N/H),ident(status),ident(fifon)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(errcode),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(status)]]],sel_if[ident(errcode),estmt[call[ident(DBG),ident(HFCUSB_DBG_VERBOSE_USB),const(N/H),ident(k),ident(errcode)]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(status),const_i(0)]]],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(transp_mode),const_i(0)]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(transp_mode),const_i(1)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(threshbit),binary[aop(N/H),->expr[ident(hfc),ident(threshold_mask)],binary[aop(N/H),const_i(1),ident(fifon)]]]],estmt[assign[simple_assi(=),ident(num_isoc_packets),array_a[ident(iso_packets),ident(fifon)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_DMIN),ident(SINK_DMAX)]]]],{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_MIN),ident(SINK_MAX)]]]]],estmt[call[ident(fill_isoc_urb),ident(urb),->expr[->expr[ident(fifo),ident(hfc)],ident(dev)],->expr[ident(fifo),ident(pipe)],->expr[ident(context_iso_urb),ident(buffer)],ident(num_isoc_packets),->expr[ident(fifo),ident(usb_packet_maxlen)],->expr[ident(fifo),ident(intervall)],ident(tx_iso_complete),->expr[ident(urb),ident(context)]]],estmt[call[ident(memset),->expr[ident(context_iso_urb),ident(buffer)],const_i(0),sizeof_expr[->expr[ident(context_iso_urb),ident(buffer)]]]],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(memcpy),binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],->expr[->expr[ident(fifo),ident(skbuff)],ident(data)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]],sel_if[ident(frame_complete),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(1)]],estmt[call[->expr[->expr[ident(fifo),ident(hif)],ident(l1l2)],->expr[ident(fifo),ident(hif)],binary[aop(N/H),ident(PH_DATA),ident(CONFIRM)],expr(N/H)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(dev_kfree_skb_any),->expr[ident(fifo),ident(skbuff)]]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(skbuff)],ident(NULL)]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(0)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(errcode),call[ident(usb_submit_urb),ident(urb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(errcode)]]],estmt(NONE)]],{}stmt[sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(status),call[ident(symbolic),ident(urb_errlist),ident(status)],ident(fifon)]]],estmt(NONE)]]]]] ==> def[fname(tx_iso_complete),funtype(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(fifon),->expr[ident(fifo),ident(fifonum)]]],estmt[assign[simple_assi(=),ident(status),->expr[ident(urb),ident(status)]]],estmt[assign[simple_assi(=),ident(tx_offset),const_i(0)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(DBG),ident(HFCUSB_DBG_VERBOSE_USB),const(N/H),ident(status),ident(fifon)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(errcode),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(status)]]],sel_if[ident(errcode),estmt[call[ident(DBG),ident(HFCUSB_DBG_VERBOSE_USB),const(N/H),ident(k),ident(errcode)]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(status),const_i(0)]]],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(transp_mode),const_i(0)]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(transp_mode),const_i(1)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(threshbit),binary[aop(N/H),->expr[ident(hfc),ident(threshold_mask)],binary[aop(N/H),const_i(1),ident(fifon)]]]],estmt[assign[simple_assi(=),ident(num_isoc_packets),array_a[ident(iso_packets),ident(fifon)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_DMIN),ident(SINK_DMAX)]]]],{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_MIN),ident(SINK_MAX)]]]]],estmt[call[ident(fill_isoc_urb),ident(urb),->expr[->expr[ident(fifo),ident(hfc)],ident(dev)],->expr[ident(fifo),ident(pipe)],->expr[ident(context_iso_urb),ident(buffer)],ident(num_isoc_packets),->expr[ident(fifo),ident(usb_packet_maxlen)],->expr[ident(fifo),ident(intervall)],ident(tx_iso_complete),->expr[ident(urb),ident(context)]]],estmt[call[ident(memset),->expr[ident(context_iso_urb),ident(buffer)],const_i(0),sizeof_expr[->expr[ident(context_iso_urb),ident(buffer)]]]],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(skb_copy_from_linear_data),->expr[ident(fifo),ident(skbuff)],binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]],sel_if[ident(frame_complete),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(1)]],estmt[call[->expr[->expr[ident(fifo),ident(hif)],ident(l1l2)],->expr[ident(fifo),ident(hif)],binary[aop(N/H),ident(PH_DATA),ident(CONFIRM)],expr(N/H)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(dev_kfree_skb_any),->expr[ident(fifo),ident(skbuff)]]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(skbuff)],ident(NULL)]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(0)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(errcode),call[ident(usb_submit_urb),ident(urb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(errcode)]]],estmt(NONE)]],{}stmt[sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(status),call[ident(symbolic),ident(urb_errlist),ident(status)],ident(fifon)]]],estmt(NONE)]]]]]
	#no of abstracted update: 1
,
.
abstracting the following solution now
[[
prg2[def[fname(tx_iso_complete),funtype(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(fifon),->expr[ident(fifo),ident(fifonum)]]],estmt[assign[simple_assi(=),ident(status),->expr[ident(urb),ident(status)]]],estmt[assign[simple_assi(=),ident(tx_offset),const_i(0)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(DBG),ident(HFCUSB_DBG_VERBOSE_USB),const(N/H),ident(status),ident(fifon)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(errcode),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(status)]]],sel_if[ident(errcode),estmt[call[ident(DBG),ident(HFCUSB_DBG_VERBOSE_USB),const(N/H),ident(k),ident(errcode)]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(status),const_i(0)]]],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(transp_mode),const_i(0)]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(transp_mode),const_i(1)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(threshbit),binary[aop(N/H),->expr[ident(hfc),ident(threshold_mask)],binary[aop(N/H),const_i(1),ident(fifon)]]]],estmt[assign[simple_assi(=),ident(num_isoc_packets),array_a[ident(iso_packets),ident(fifon)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_DMIN),ident(SINK_DMAX)]]]],{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_MIN),ident(SINK_MAX)]]]]],estmt[call[ident(fill_isoc_urb),ident(urb),->expr[->expr[ident(fifo),ident(hfc)],ident(dev)],->expr[ident(fifo),ident(pipe)],->expr[ident(context_iso_urb),ident(buffer)],ident(num_isoc_packets),->expr[ident(fifo),ident(usb_packet_maxlen)],->expr[ident(fifo),ident(intervall)],ident(tx_iso_complete),->expr[ident(urb),ident(context)]]],estmt[call[ident(memset),->expr[ident(context_iso_urb),ident(buffer)],const_i(0),sizeof_expr[->expr[ident(context_iso_urb),ident(buffer)]]]],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(memcpy),binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],->expr[->expr[ident(fifo),ident(skbuff)],ident(data)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]],sel_if[ident(frame_complete),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(1)]],estmt[call[->expr[->expr[ident(fifo),ident(hif)],ident(l1l2)],->expr[ident(fifo),ident(hif)],binary[aop(N/H),ident(PH_DATA),ident(CONFIRM)],expr(N/H)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(dev_kfree_skb_any),->expr[ident(fifo),ident(skbuff)]]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(skbuff)],ident(NULL)]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(0)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(errcode),call[ident(usb_submit_urb),ident(urb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(errcode)]]],estmt(NONE)]],{}stmt[sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(status),call[ident(symbolic),ident(urb_errlist),ident(status)],ident(fifon)]]],estmt(NONE)]]]]]] ==> prg2[def[fname(tx_iso_complete),funtype(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(fifon),->expr[ident(fifo),ident(fifonum)]]],estmt[assign[simple_assi(=),ident(status),->expr[ident(urb),ident(status)]]],estmt[assign[simple_assi(=),ident(tx_offset),const_i(0)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(DBG),ident(HFCUSB_DBG_VERBOSE_USB),const(N/H),ident(status),ident(fifon)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(errcode),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(status)]]],sel_if[ident(errcode),estmt[call[ident(DBG),ident(HFCUSB_DBG_VERBOSE_USB),const(N/H),ident(k),ident(errcode)]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(status),const_i(0)]]],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(transp_mode),const_i(0)]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(transp_mode),const_i(1)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(threshbit),binary[aop(N/H),->expr[ident(hfc),ident(threshold_mask)],binary[aop(N/H),const_i(1),ident(fifon)]]]],estmt[assign[simple_assi(=),ident(num_isoc_packets),array_a[ident(iso_packets),ident(fifon)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_DMIN),ident(SINK_DMAX)]]]],{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_MIN),ident(SINK_MAX)]]]]],estmt[call[ident(fill_isoc_urb),ident(urb),->expr[->expr[ident(fifo),ident(hfc)],ident(dev)],->expr[ident(fifo),ident(pipe)],->expr[ident(context_iso_urb),ident(buffer)],ident(num_isoc_packets),->expr[ident(fifo),ident(usb_packet_maxlen)],->expr[ident(fifo),ident(intervall)],ident(tx_iso_complete),->expr[ident(urb),ident(context)]]],estmt[call[ident(memset),->expr[ident(context_iso_urb),ident(buffer)],const_i(0),sizeof_expr[->expr[ident(context_iso_urb),ident(buffer)]]]],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(skb_copy_from_linear_data),->expr[ident(fifo),ident(skbuff)],binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]],sel_if[ident(frame_complete),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(1)]],estmt[call[->expr[->expr[ident(fifo),ident(hif)],ident(l1l2)],->expr[ident(fifo),ident(hif)],binary[aop(N/H),ident(PH_DATA),ident(CONFIRM)],expr(N/H)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(dev_kfree_skb_any),->expr[ident(fifo),ident(skbuff)]]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(skbuff)],ident(NULL)]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(0)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(errcode),call[ident(usb_submit_urb),ident(urb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(errcode)]]],estmt(NONE)]],{}stmt[sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(status),call[ident(symbolic),ident(urb_errlist),ident(status)],ident(fifon)]]],estmt(NONE)]]]]]]
	¶
]]
of size  :::: 465

with result :::::
prg2[def[fname(tx_iso_complete),funtype(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(fifon),->expr[ident(fifo),ident(fifonum)]]],estmt[assign[simple_assi(=),ident(status),->expr[ident(urb),ident(status)]]],estmt[assign[simple_assi(=),ident(tx_offset),const_i(0)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(DBG),ident(HFCUSB_DBG_VERBOSE_USB),const(N/H),ident(status),ident(fifon)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(errcode),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(status)]]],sel_if[ident(errcode),estmt[call[ident(DBG),ident(HFCUSB_DBG_VERBOSE_USB),const(N/H),ident(k),ident(errcode)]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(status),const_i(0)]]],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(transp_mode),const_i(0)]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(transp_mode),const_i(1)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(threshbit),binary[aop(N/H),->expr[ident(hfc),ident(threshold_mask)],binary[aop(N/H),const_i(1),ident(fifon)]]]],estmt[assign[simple_assi(=),ident(num_isoc_packets),array_a[ident(iso_packets),ident(fifon)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_DMIN),ident(SINK_DMAX)]]]],{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_MIN),ident(SINK_MAX)]]]]],estmt[call[ident(fill_isoc_urb),ident(urb),->expr[->expr[ident(fifo),ident(hfc)],ident(dev)],->expr[ident(fifo),ident(pipe)],->expr[ident(context_iso_urb),ident(buffer)],ident(num_isoc_packets),->expr[ident(fifo),ident(usb_packet_maxlen)],->expr[ident(fifo),ident(intervall)],ident(tx_iso_complete),->expr[ident(urb),ident(context)]]],estmt[call[ident(memset),->expr[ident(context_iso_urb),ident(buffer)],const_i(0),sizeof_expr[->expr[ident(context_iso_urb),ident(buffer)]]]],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(memcpy),binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],->expr[->expr[ident(fifo),ident(skbuff)],ident(data)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]],sel_if[ident(frame_complete),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(1)]],estmt[call[->expr[->expr[ident(fifo),ident(hif)],ident(l1l2)],->expr[ident(fifo),ident(hif)],binary[aop(N/H),ident(PH_DATA),ident(CONFIRM)],expr(N/H)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(dev_kfree_skb_any),->expr[ident(fifo),ident(skbuff)]]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(skbuff)],ident(NULL)]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(0)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(errcode),call[ident(usb_submit_urb),ident(urb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(errcode)]]],estmt(NONE)]],{}stmt[sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(status),call[ident(symbolic),ident(urb_errlist),ident(status)],ident(fifon)]]],estmt(NONE)]]]]]] ==> prg2[def[fname(tx_iso_complete),funtype(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(fifon),->expr[ident(fifo),ident(fifonum)]]],estmt[assign[simple_assi(=),ident(status),->expr[ident(urb),ident(status)]]],estmt[assign[simple_assi(=),ident(tx_offset),const_i(0)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(DBG),ident(HFCUSB_DBG_VERBOSE_USB),const(N/H),ident(status),ident(fifon)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(errcode),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(status)]]],sel_if[ident(errcode),estmt[call[ident(DBG),ident(HFCUSB_DBG_VERBOSE_USB),const(N/H),ident(k),ident(errcode)]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(status),const_i(0)]]],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(transp_mode),const_i(0)]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(transp_mode),const_i(1)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(threshbit),binary[aop(N/H),->expr[ident(hfc),ident(threshold_mask)],binary[aop(N/H),const_i(1),ident(fifon)]]]],estmt[assign[simple_assi(=),ident(num_isoc_packets),array_a[ident(iso_packets),ident(fifon)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_DMIN),ident(SINK_DMAX)]]]],{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_MIN),ident(SINK_MAX)]]]]],estmt[call[ident(fill_isoc_urb),ident(urb),->expr[->expr[ident(fifo),ident(hfc)],ident(dev)],->expr[ident(fifo),ident(pipe)],->expr[ident(context_iso_urb),ident(buffer)],ident(num_isoc_packets),->expr[ident(fifo),ident(usb_packet_maxlen)],->expr[ident(fifo),ident(intervall)],ident(tx_iso_complete),->expr[ident(urb),ident(context)]]],estmt[call[ident(memset),->expr[ident(context_iso_urb),ident(buffer)],const_i(0),sizeof_expr[->expr[ident(context_iso_urb),ident(buffer)]]]],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(skb_copy_from_linear_data),->expr[ident(fifo),ident(skbuff)],binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]],sel_if[ident(frame_complete),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(1)]],estmt[call[->expr[->expr[ident(fifo),ident(hif)],ident(l1l2)],->expr[ident(fifo),ident(hif)],binary[aop(N/H),ident(PH_DATA),ident(CONFIRM)],expr(N/H)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(dev_kfree_skb_any),->expr[ident(fifo),ident(skbuff)]]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(skbuff)],ident(NULL)]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(0)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(errcode),call[ident(usb_submit_urb),ident(urb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(errcode)]]],estmt(NONE)]],{}stmt[sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(status),call[ident(symbolic),ident(urb_errlist),ident(status)],ident(fifon)]]],estmt(NONE)]]]]]]
	#no of abstracted update: 1
,
.
flattening lists
filtering
Done
@@@@@@@@@@@@@@@
[[
call[ident(memcpy),binary[meta(X0),binary[meta(X0),->expr[meta(X1),meta(X2)],meta(X3)],meta(X4)],->expr[->expr[meta(X5),meta(X6)],ident(data)],meta(X7)] ==> call[ident(skb_copy_from_linear_data),->expr[meta(X5),meta(X6)],binary[meta(X0),binary[meta(X0),->expr[meta(X1),meta(X2)],meta(X3)],meta(X4)],meta(X7)]
	¶
call[ident(memcpy),binary[meta(X0),binary[meta(X0),->expr[meta(X1),meta(X2)],meta(X3)],meta(X4)],->expr[meta(X5),ident(data)],meta(X6)] ==> call[ident(skb_copy_from_linear_data),meta(X5),binary[meta(X0),binary[meta(X0),->expr[meta(X1),meta(X2)],meta(X3)],meta(X4)],meta(X6)]
	¶
call[ident(memcpy),binary[meta(X0),binary[meta(X0),meta(X1),meta(X2)],meta(X3)],->expr[->expr[meta(X4),meta(X5)],ident(data)],meta(X6)] ==> call[ident(skb_copy_from_linear_data),->expr[meta(X4),meta(X5)],binary[meta(X0),binary[meta(X0),meta(X1),meta(X2)],meta(X3)],meta(X6)]
	¶
call[ident(memcpy),binary[meta(X0),binary[meta(X0),meta(X1),meta(X2)],meta(X3)],->expr[meta(X4),ident(data)],meta(X5)] ==> call[ident(skb_copy_from_linear_data),meta(X4),binary[meta(X0),binary[meta(X0),meta(X1),meta(X2)],meta(X3)],meta(X5)]
	¶
call[ident(memcpy),binary[meta(X0),meta(X1),meta(X2)],->expr[->expr[meta(X3),meta(X4)],ident(data)],meta(X5)] ==> call[ident(skb_copy_from_linear_data),->expr[meta(X3),meta(X4)],binary[meta(X0),meta(X1),meta(X2)],meta(X5)]
	¶
call[ident(memcpy),binary[meta(X0),meta(X1),meta(X2)],->expr[meta(X3),ident(data)],meta(X4)] ==> call[ident(skb_copy_from_linear_data),meta(X3),binary[meta(X0),meta(X1),meta(X2)],meta(X4)]
	¶
call[ident(memcpy),meta(X0),->expr[->expr[meta(X1),meta(X2)],ident(data)],meta(X3)] ==> call[ident(skb_copy_from_linear_data),->expr[meta(X1),meta(X2)],meta(X0),meta(X3)]
	¶
call[ident(memcpy),meta(X0),->expr[meta(X1),ident(data)],meta(X2)] ==> call[ident(skb_copy_from_linear_data),meta(X1),meta(X0),meta(X2)]
	¶
estmt[call[ident(memcpy),binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],->expr[->expr[ident(fifo),ident(skbuff)],ident(data)],ident(current_len)]] ==> estmt[call[ident(skb_copy_from_linear_data),->expr[ident(fifo),ident(skbuff)],binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],ident(current_len)]]
	¶
{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(memcpy),binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],->expr[->expr[ident(fifo),ident(skbuff)],ident(data)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]] ==> {}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(skb_copy_from_linear_data),->expr[ident(fifo),ident(skbuff)],binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]]
	¶
sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(memcpy),binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],->expr[->expr[ident(fifo),ident(skbuff)],ident(data)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]] ==> sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(skb_copy_from_linear_data),->expr[ident(fifo),ident(skbuff)],binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]]
	¶
{}stmt[sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(memcpy),binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],->expr[->expr[ident(fifo),ident(skbuff)],ident(data)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]],sel_if[ident(frame_complete),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(1)]],estmt[call[->expr[->expr[ident(fifo),ident(hif)],ident(l1l2)],->expr[ident(fifo),ident(hif)],binary[aop(N/H),ident(PH_DATA),ident(CONFIRM)],expr(N/H)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(dev_kfree_skb_any),->expr[ident(fifo),ident(skbuff)]]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(skbuff)],ident(NULL)]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(0)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]]],estmt(NONE)]] ==> {}stmt[sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(skb_copy_from_linear_data),->expr[ident(fifo),ident(skbuff)],binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]],sel_if[ident(frame_complete),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(1)]],estmt[call[->expr[->expr[ident(fifo),ident(hif)],ident(l1l2)],->expr[ident(fifo),ident(hif)],binary[aop(N/H),ident(PH_DATA),ident(CONFIRM)],expr(N/H)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(dev_kfree_skb_any),->expr[ident(fifo),ident(skbuff)]]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(skbuff)],ident(NULL)]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(0)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]]],estmt(NONE)]]
	¶
for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(memcpy),binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],->expr[->expr[ident(fifo),ident(skbuff)],ident(data)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]],sel_if[ident(frame_complete),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(1)]],estmt[call[->expr[->expr[ident(fifo),ident(hif)],ident(l1l2)],->expr[ident(fifo),ident(hif)],binary[aop(N/H),ident(PH_DATA),ident(CONFIRM)],expr(N/H)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(dev_kfree_skb_any),->expr[ident(fifo),ident(skbuff)]]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(skbuff)],ident(NULL)]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(0)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]]],estmt(NONE)]]] ==> for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(skb_copy_from_linear_data),->expr[ident(fifo),ident(skbuff)],binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]],sel_if[ident(frame_complete),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(1)]],estmt[call[->expr[->expr[ident(fifo),ident(hif)],ident(l1l2)],->expr[ident(fifo),ident(hif)],binary[aop(N/H),ident(PH_DATA),ident(CONFIRM)],expr(N/H)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(dev_kfree_skb_any),->expr[ident(fifo),ident(skbuff)]]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(skbuff)],ident(NULL)]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(0)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]]],estmt(NONE)]]]
	¶
{}stmt[estmt[assign[simple_assi(=),ident(transp_mode),const_i(0)]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(transp_mode),const_i(1)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(threshbit),binary[aop(N/H),->expr[ident(hfc),ident(threshold_mask)],binary[aop(N/H),const_i(1),ident(fifon)]]]],estmt[assign[simple_assi(=),ident(num_isoc_packets),array_a[ident(iso_packets),ident(fifon)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_DMIN),ident(SINK_DMAX)]]]],{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_MIN),ident(SINK_MAX)]]]]],estmt[call[ident(fill_isoc_urb),ident(urb),->expr[->expr[ident(fifo),ident(hfc)],ident(dev)],->expr[ident(fifo),ident(pipe)],->expr[ident(context_iso_urb),ident(buffer)],ident(num_isoc_packets),->expr[ident(fifo),ident(usb_packet_maxlen)],->expr[ident(fifo),ident(intervall)],ident(tx_iso_complete),->expr[ident(urb),ident(context)]]],estmt[call[ident(memset),->expr[ident(context_iso_urb),ident(buffer)],const_i(0),sizeof_expr[->expr[ident(context_iso_urb),ident(buffer)]]]],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(memcpy),binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],->expr[->expr[ident(fifo),ident(skbuff)],ident(data)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]],sel_if[ident(frame_complete),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(1)]],estmt[call[->expr[->expr[ident(fifo),ident(hif)],ident(l1l2)],->expr[ident(fifo),ident(hif)],binary[aop(N/H),ident(PH_DATA),ident(CONFIRM)],expr(N/H)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(dev_kfree_skb_any),->expr[ident(fifo),ident(skbuff)]]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(skbuff)],ident(NULL)]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(0)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(errcode),call[ident(usb_submit_urb),ident(urb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(errcode)]]],estmt(NONE)]] ==> {}stmt[estmt[assign[simple_assi(=),ident(transp_mode),const_i(0)]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(transp_mode),const_i(1)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(threshbit),binary[aop(N/H),->expr[ident(hfc),ident(threshold_mask)],binary[aop(N/H),const_i(1),ident(fifon)]]]],estmt[assign[simple_assi(=),ident(num_isoc_packets),array_a[ident(iso_packets),ident(fifon)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_DMIN),ident(SINK_DMAX)]]]],{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_MIN),ident(SINK_MAX)]]]]],estmt[call[ident(fill_isoc_urb),ident(urb),->expr[->expr[ident(fifo),ident(hfc)],ident(dev)],->expr[ident(fifo),ident(pipe)],->expr[ident(context_iso_urb),ident(buffer)],ident(num_isoc_packets),->expr[ident(fifo),ident(usb_packet_maxlen)],->expr[ident(fifo),ident(intervall)],ident(tx_iso_complete),->expr[ident(urb),ident(context)]]],estmt[call[ident(memset),->expr[ident(context_iso_urb),ident(buffer)],const_i(0),sizeof_expr[->expr[ident(context_iso_urb),ident(buffer)]]]],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(skb_copy_from_linear_data),->expr[ident(fifo),ident(skbuff)],binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]],sel_if[ident(frame_complete),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(1)]],estmt[call[->expr[->expr[ident(fifo),ident(hif)],ident(l1l2)],->expr[ident(fifo),ident(hif)],binary[aop(N/H),ident(PH_DATA),ident(CONFIRM)],expr(N/H)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(dev_kfree_skb_any),->expr[ident(fifo),ident(skbuff)]]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(skbuff)],ident(NULL)]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(0)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(errcode),call[ident(usb_submit_urb),ident(urb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(errcode)]]],estmt(NONE)]]
	¶
sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(transp_mode),const_i(0)]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(transp_mode),const_i(1)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(threshbit),binary[aop(N/H),->expr[ident(hfc),ident(threshold_mask)],binary[aop(N/H),const_i(1),ident(fifon)]]]],estmt[assign[simple_assi(=),ident(num_isoc_packets),array_a[ident(iso_packets),ident(fifon)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_DMIN),ident(SINK_DMAX)]]]],{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_MIN),ident(SINK_MAX)]]]]],estmt[call[ident(fill_isoc_urb),ident(urb),->expr[->expr[ident(fifo),ident(hfc)],ident(dev)],->expr[ident(fifo),ident(pipe)],->expr[ident(context_iso_urb),ident(buffer)],ident(num_isoc_packets),->expr[ident(fifo),ident(usb_packet_maxlen)],->expr[ident(fifo),ident(intervall)],ident(tx_iso_complete),->expr[ident(urb),ident(context)]]],estmt[call[ident(memset),->expr[ident(context_iso_urb),ident(buffer)],const_i(0),sizeof_expr[->expr[ident(context_iso_urb),ident(buffer)]]]],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(memcpy),binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],->expr[->expr[ident(fifo),ident(skbuff)],ident(data)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]],sel_if[ident(frame_complete),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(1)]],estmt[call[->expr[->expr[ident(fifo),ident(hif)],ident(l1l2)],->expr[ident(fifo),ident(hif)],binary[aop(N/H),ident(PH_DATA),ident(CONFIRM)],expr(N/H)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(dev_kfree_skb_any),->expr[ident(fifo),ident(skbuff)]]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(skbuff)],ident(NULL)]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(0)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(errcode),call[ident(usb_submit_urb),ident(urb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(errcode)]]],estmt(NONE)]],{}stmt[sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(status),call[ident(symbolic),ident(urb_errlist),ident(status)],ident(fifon)]]],estmt(NONE)]]] ==> sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(transp_mode),const_i(0)]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(transp_mode),const_i(1)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(threshbit),binary[aop(N/H),->expr[ident(hfc),ident(threshold_mask)],binary[aop(N/H),const_i(1),ident(fifon)]]]],estmt[assign[simple_assi(=),ident(num_isoc_packets),array_a[ident(iso_packets),ident(fifon)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_DMIN),ident(SINK_DMAX)]]]],{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_MIN),ident(SINK_MAX)]]]]],estmt[call[ident(fill_isoc_urb),ident(urb),->expr[->expr[ident(fifo),ident(hfc)],ident(dev)],->expr[ident(fifo),ident(pipe)],->expr[ident(context_iso_urb),ident(buffer)],ident(num_isoc_packets),->expr[ident(fifo),ident(usb_packet_maxlen)],->expr[ident(fifo),ident(intervall)],ident(tx_iso_complete),->expr[ident(urb),ident(context)]]],estmt[call[ident(memset),->expr[ident(context_iso_urb),ident(buffer)],const_i(0),sizeof_expr[->expr[ident(context_iso_urb),ident(buffer)]]]],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(skb_copy_from_linear_data),->expr[ident(fifo),ident(skbuff)],binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]],sel_if[ident(frame_complete),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(1)]],estmt[call[->expr[->expr[ident(fifo),ident(hif)],ident(l1l2)],->expr[ident(fifo),ident(hif)],binary[aop(N/H),ident(PH_DATA),ident(CONFIRM)],expr(N/H)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(dev_kfree_skb_any),->expr[ident(fifo),ident(skbuff)]]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(skbuff)],ident(NULL)]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(0)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(errcode),call[ident(usb_submit_urb),ident(urb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(errcode)]]],estmt(NONE)]],{}stmt[sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(status),call[ident(symbolic),ident(urb_errlist),ident(status)],ident(fifon)]]],estmt(NONE)]]]
	¶
{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(fifon),->expr[ident(fifo),ident(fifonum)]]],estmt[assign[simple_assi(=),ident(status),->expr[ident(urb),ident(status)]]],estmt[assign[simple_assi(=),ident(tx_offset),const_i(0)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(DBG),ident(HFCUSB_DBG_VERBOSE_USB),const(N/H),ident(status),ident(fifon)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(errcode),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(status)]]],sel_if[ident(errcode),estmt[call[ident(DBG),ident(HFCUSB_DBG_VERBOSE_USB),const(N/H),ident(k),ident(errcode)]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(status),const_i(0)]]],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(transp_mode),const_i(0)]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(transp_mode),const_i(1)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(threshbit),binary[aop(N/H),->expr[ident(hfc),ident(threshold_mask)],binary[aop(N/H),const_i(1),ident(fifon)]]]],estmt[assign[simple_assi(=),ident(num_isoc_packets),array_a[ident(iso_packets),ident(fifon)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_DMIN),ident(SINK_DMAX)]]]],{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_MIN),ident(SINK_MAX)]]]]],estmt[call[ident(fill_isoc_urb),ident(urb),->expr[->expr[ident(fifo),ident(hfc)],ident(dev)],->expr[ident(fifo),ident(pipe)],->expr[ident(context_iso_urb),ident(buffer)],ident(num_isoc_packets),->expr[ident(fifo),ident(usb_packet_maxlen)],->expr[ident(fifo),ident(intervall)],ident(tx_iso_complete),->expr[ident(urb),ident(context)]]],estmt[call[ident(memset),->expr[ident(context_iso_urb),ident(buffer)],const_i(0),sizeof_expr[->expr[ident(context_iso_urb),ident(buffer)]]]],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(memcpy),binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],->expr[->expr[ident(fifo),ident(skbuff)],ident(data)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]],sel_if[ident(frame_complete),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(1)]],estmt[call[->expr[->expr[ident(fifo),ident(hif)],ident(l1l2)],->expr[ident(fifo),ident(hif)],binary[aop(N/H),ident(PH_DATA),ident(CONFIRM)],expr(N/H)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(dev_kfree_skb_any),->expr[ident(fifo),ident(skbuff)]]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(skbuff)],ident(NULL)]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(0)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(errcode),call[ident(usb_submit_urb),ident(urb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(errcode)]]],estmt(NONE)]],{}stmt[sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(status),call[ident(symbolic),ident(urb_errlist),ident(status)],ident(fifon)]]],estmt(NONE)]]]] ==> {}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(fifon),->expr[ident(fifo),ident(fifonum)]]],estmt[assign[simple_assi(=),ident(status),->expr[ident(urb),ident(status)]]],estmt[assign[simple_assi(=),ident(tx_offset),const_i(0)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(DBG),ident(HFCUSB_DBG_VERBOSE_USB),const(N/H),ident(status),ident(fifon)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(errcode),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(status)]]],sel_if[ident(errcode),estmt[call[ident(DBG),ident(HFCUSB_DBG_VERBOSE_USB),const(N/H),ident(k),ident(errcode)]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(status),const_i(0)]]],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(transp_mode),const_i(0)]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(transp_mode),const_i(1)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(threshbit),binary[aop(N/H),->expr[ident(hfc),ident(threshold_mask)],binary[aop(N/H),const_i(1),ident(fifon)]]]],estmt[assign[simple_assi(=),ident(num_isoc_packets),array_a[ident(iso_packets),ident(fifon)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_DMIN),ident(SINK_DMAX)]]]],{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_MIN),ident(SINK_MAX)]]]]],estmt[call[ident(fill_isoc_urb),ident(urb),->expr[->expr[ident(fifo),ident(hfc)],ident(dev)],->expr[ident(fifo),ident(pipe)],->expr[ident(context_iso_urb),ident(buffer)],ident(num_isoc_packets),->expr[ident(fifo),ident(usb_packet_maxlen)],->expr[ident(fifo),ident(intervall)],ident(tx_iso_complete),->expr[ident(urb),ident(context)]]],estmt[call[ident(memset),->expr[ident(context_iso_urb),ident(buffer)],const_i(0),sizeof_expr[->expr[ident(context_iso_urb),ident(buffer)]]]],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(skb_copy_from_linear_data),->expr[ident(fifo),ident(skbuff)],binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]],sel_if[ident(frame_complete),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(1)]],estmt[call[->expr[->expr[ident(fifo),ident(hif)],ident(l1l2)],->expr[ident(fifo),ident(hif)],binary[aop(N/H),ident(PH_DATA),ident(CONFIRM)],expr(N/H)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(dev_kfree_skb_any),->expr[ident(fifo),ident(skbuff)]]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(skbuff)],ident(NULL)]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(0)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(errcode),call[ident(usb_submit_urb),ident(urb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(errcode)]]],estmt(NONE)]],{}stmt[sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(status),call[ident(symbolic),ident(urb_errlist),ident(status)],ident(fifon)]]],estmt(NONE)]]]]
	¶
def[fname(tx_iso_complete),funtype(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(fifon),->expr[ident(fifo),ident(fifonum)]]],estmt[assign[simple_assi(=),ident(status),->expr[ident(urb),ident(status)]]],estmt[assign[simple_assi(=),ident(tx_offset),const_i(0)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(DBG),ident(HFCUSB_DBG_VERBOSE_USB),const(N/H),ident(status),ident(fifon)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(errcode),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(status)]]],sel_if[ident(errcode),estmt[call[ident(DBG),ident(HFCUSB_DBG_VERBOSE_USB),const(N/H),ident(k),ident(errcode)]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(status),const_i(0)]]],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(transp_mode),const_i(0)]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(transp_mode),const_i(1)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(threshbit),binary[aop(N/H),->expr[ident(hfc),ident(threshold_mask)],binary[aop(N/H),const_i(1),ident(fifon)]]]],estmt[assign[simple_assi(=),ident(num_isoc_packets),array_a[ident(iso_packets),ident(fifon)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_DMIN),ident(SINK_DMAX)]]]],{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_MIN),ident(SINK_MAX)]]]]],estmt[call[ident(fill_isoc_urb),ident(urb),->expr[->expr[ident(fifo),ident(hfc)],ident(dev)],->expr[ident(fifo),ident(pipe)],->expr[ident(context_iso_urb),ident(buffer)],ident(num_isoc_packets),->expr[ident(fifo),ident(usb_packet_maxlen)],->expr[ident(fifo),ident(intervall)],ident(tx_iso_complete),->expr[ident(urb),ident(context)]]],estmt[call[ident(memset),->expr[ident(context_iso_urb),ident(buffer)],const_i(0),sizeof_expr[->expr[ident(context_iso_urb),ident(buffer)]]]],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(memcpy),binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],->expr[->expr[ident(fifo),ident(skbuff)],ident(data)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]],sel_if[ident(frame_complete),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(1)]],estmt[call[->expr[->expr[ident(fifo),ident(hif)],ident(l1l2)],->expr[ident(fifo),ident(hif)],binary[aop(N/H),ident(PH_DATA),ident(CONFIRM)],expr(N/H)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(dev_kfree_skb_any),->expr[ident(fifo),ident(skbuff)]]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(skbuff)],ident(NULL)]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(0)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(errcode),call[ident(usb_submit_urb),ident(urb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(errcode)]]],estmt(NONE)]],{}stmt[sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(status),call[ident(symbolic),ident(urb_errlist),ident(status)],ident(fifon)]]],estmt(NONE)]]]]] ==> def[fname(tx_iso_complete),funtype(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(fifon),->expr[ident(fifo),ident(fifonum)]]],estmt[assign[simple_assi(=),ident(status),->expr[ident(urb),ident(status)]]],estmt[assign[simple_assi(=),ident(tx_offset),const_i(0)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(DBG),ident(HFCUSB_DBG_VERBOSE_USB),const(N/H),ident(status),ident(fifon)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(errcode),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(status)]]],sel_if[ident(errcode),estmt[call[ident(DBG),ident(HFCUSB_DBG_VERBOSE_USB),const(N/H),ident(k),ident(errcode)]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(status),const_i(0)]]],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(transp_mode),const_i(0)]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(transp_mode),const_i(1)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(threshbit),binary[aop(N/H),->expr[ident(hfc),ident(threshold_mask)],binary[aop(N/H),const_i(1),ident(fifon)]]]],estmt[assign[simple_assi(=),ident(num_isoc_packets),array_a[ident(iso_packets),ident(fifon)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_DMIN),ident(SINK_DMAX)]]]],{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_MIN),ident(SINK_MAX)]]]]],estmt[call[ident(fill_isoc_urb),ident(urb),->expr[->expr[ident(fifo),ident(hfc)],ident(dev)],->expr[ident(fifo),ident(pipe)],->expr[ident(context_iso_urb),ident(buffer)],ident(num_isoc_packets),->expr[ident(fifo),ident(usb_packet_maxlen)],->expr[ident(fifo),ident(intervall)],ident(tx_iso_complete),->expr[ident(urb),ident(context)]]],estmt[call[ident(memset),->expr[ident(context_iso_urb),ident(buffer)],const_i(0),sizeof_expr[->expr[ident(context_iso_urb),ident(buffer)]]]],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(skb_copy_from_linear_data),->expr[ident(fifo),ident(skbuff)],binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]],sel_if[ident(frame_complete),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(1)]],estmt[call[->expr[->expr[ident(fifo),ident(hif)],ident(l1l2)],->expr[ident(fifo),ident(hif)],binary[aop(N/H),ident(PH_DATA),ident(CONFIRM)],expr(N/H)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(dev_kfree_skb_any),->expr[ident(fifo),ident(skbuff)]]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(skbuff)],ident(NULL)]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(0)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(errcode),call[ident(usb_submit_urb),ident(urb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(errcode)]]],estmt(NONE)]],{}stmt[sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(status),call[ident(symbolic),ident(urb_errlist),ident(status)],ident(fifon)]]],estmt(NONE)]]]]]
	¶
prg2[def[fname(tx_iso_complete),funtype(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(fifon),->expr[ident(fifo),ident(fifonum)]]],estmt[assign[simple_assi(=),ident(status),->expr[ident(urb),ident(status)]]],estmt[assign[simple_assi(=),ident(tx_offset),const_i(0)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(DBG),ident(HFCUSB_DBG_VERBOSE_USB),const(N/H),ident(status),ident(fifon)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(errcode),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(status)]]],sel_if[ident(errcode),estmt[call[ident(DBG),ident(HFCUSB_DBG_VERBOSE_USB),const(N/H),ident(k),ident(errcode)]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(status),const_i(0)]]],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(transp_mode),const_i(0)]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(transp_mode),const_i(1)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(threshbit),binary[aop(N/H),->expr[ident(hfc),ident(threshold_mask)],binary[aop(N/H),const_i(1),ident(fifon)]]]],estmt[assign[simple_assi(=),ident(num_isoc_packets),array_a[ident(iso_packets),ident(fifon)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_DMIN),ident(SINK_DMAX)]]]],{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_MIN),ident(SINK_MAX)]]]]],estmt[call[ident(fill_isoc_urb),ident(urb),->expr[->expr[ident(fifo),ident(hfc)],ident(dev)],->expr[ident(fifo),ident(pipe)],->expr[ident(context_iso_urb),ident(buffer)],ident(num_isoc_packets),->expr[ident(fifo),ident(usb_packet_maxlen)],->expr[ident(fifo),ident(intervall)],ident(tx_iso_complete),->expr[ident(urb),ident(context)]]],estmt[call[ident(memset),->expr[ident(context_iso_urb),ident(buffer)],const_i(0),sizeof_expr[->expr[ident(context_iso_urb),ident(buffer)]]]],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(memcpy),binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],->expr[->expr[ident(fifo),ident(skbuff)],ident(data)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]],sel_if[ident(frame_complete),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(1)]],estmt[call[->expr[->expr[ident(fifo),ident(hif)],ident(l1l2)],->expr[ident(fifo),ident(hif)],binary[aop(N/H),ident(PH_DATA),ident(CONFIRM)],expr(N/H)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(dev_kfree_skb_any),->expr[ident(fifo),ident(skbuff)]]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(skbuff)],ident(NULL)]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(0)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(errcode),call[ident(usb_submit_urb),ident(urb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(errcode)]]],estmt(NONE)]],{}stmt[sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(status),call[ident(symbolic),ident(urb_errlist),ident(status)],ident(fifon)]]],estmt(NONE)]]]]]] ==> prg2[def[fname(tx_iso_complete),funtype(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(fifon),->expr[ident(fifo),ident(fifonum)]]],estmt[assign[simple_assi(=),ident(status),->expr[ident(urb),ident(status)]]],estmt[assign[simple_assi(=),ident(tx_offset),const_i(0)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(DBG),ident(HFCUSB_DBG_VERBOSE_USB),const(N/H),ident(status),ident(fifon)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(errcode),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(status)]]],sel_if[ident(errcode),estmt[call[ident(DBG),ident(HFCUSB_DBG_VERBOSE_USB),const(N/H),ident(k),ident(errcode)]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(status),const_i(0)]]],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(transp_mode),const_i(0)]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(transp_mode),const_i(1)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(threshbit),binary[aop(N/H),->expr[ident(hfc),ident(threshold_mask)],binary[aop(N/H),const_i(1),ident(fifon)]]]],estmt[assign[simple_assi(=),ident(num_isoc_packets),array_a[ident(iso_packets),ident(fifon)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_DMIN),ident(SINK_DMAX)]]]],{}stmt[estmt[assign[simple_assi(=),ident(sink),condexpr3[ident(threshbit),ident(SINK_MIN),ident(SINK_MAX)]]]]],estmt[call[ident(fill_isoc_urb),ident(urb),->expr[->expr[ident(fifo),ident(hfc)],ident(dev)],->expr[ident(fifo),ident(pipe)],->expr[ident(context_iso_urb),ident(buffer)],ident(num_isoc_packets),->expr[ident(fifo),ident(usb_packet_maxlen)],->expr[ident(fifo),ident(intervall)],ident(tx_iso_complete),->expr[ident(urb),ident(context)]]],estmt[call[ident(memset),->expr[ident(context_iso_urb),ident(buffer)],const_i(0),sizeof_expr[->expr[ident(context_iso_urb),ident(buffer)]]]],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]],for[assign[simple_assi(=),ident(k),const_i(0)],expr(N/H),expr(N/H),{}stmt[sel_if[->expr[ident(fifo),ident(skbuff)],{}stmt[estmt[assign[simple_assi(=),ident(len),->expr[->expr[ident(fifo),ident(skbuff)],ident(len)]]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],estmt[assign[simple_assi(=),ident(current_len),binary[aop(/),binary[aop(-),const_i(0),->expr[ident(fifo),ident(bit_line)]],const_i(8)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),ident(current_len),const_i(14)]],estmt(NONE)],estmt[assign[simple_assi(=),ident(current_len),condexpr3[expr(N/H),ident(len),ident(current_len)]]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],binary[aop(*),ident(current_len),const_i(8)]]],estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(0)]],sel_if[expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),array_a[->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)]],estmt[assign[op_assi(+=),->expr[ident(fifo),ident(bit_line)],const_i(32)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(1)]]],estmt(NONE)],estmt[call[ident(skb_copy_from_linear_data),->expr[ident(fifo),ident(skbuff)],binary[aop(+),binary[aop(+),->expr[ident(context_iso_urb),ident(buffer)],ident(tx_offset)],const_i(1)],ident(current_len)]],estmt[call[ident(skb_pull),->expr[ident(fifo),ident(skbuff)],ident(current_len)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],ident(tx_offset)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],binary[aop(+),ident(current_len),const_i(1)]]],estmt[assign[op_assi(+=),ident(tx_offset),binary[aop(+),ident(current_len),const_i(1)]]]],{}stmt[estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(offset)],expr(N/H)]],estmt[assign[simple_assi(=),.expr[array_a[->expr[ident(urb),ident(iso_frame_desc)],ident(k)],ident(length)],const_i(1)]],estmt[assign[op_assi(-=),->expr[ident(fifo),ident(bit_line)],ident(sink)]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(bit_line)],ident(BITLINE_INF)]]],estmt(NONE)]]],sel_if[ident(frame_complete),{}stmt[estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(1)]],estmt[call[->expr[->expr[ident(fifo),ident(hif)],ident(l1l2)],->expr[ident(fifo),ident(hif)],binary[aop(N/H),ident(PH_DATA),ident(CONFIRM)],expr(N/H)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(dev_kfree_skb_any),->expr[ident(fifo),ident(skbuff)]]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(skbuff)],ident(NULL)]],estmt[assign[simple_assi(=),->expr[ident(fifo),ident(delete_flg)],const_i(0)]]],estmt(NONE)],estmt[assign[simple_assi(=),ident(frame_complete),const_i(0)]]],estmt(NONE)]]],estmt[assign[simple_assi(=),ident(errcode),call[ident(usb_submit_urb),ident(urb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(errcode)]]],estmt(NONE)]],{}stmt[sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const(N/H),ident(status),call[ident(symbolic),ident(urb_errlist),ident(status)],ident(fifon)]]],estmt(NONE)]]]]]]
	¶
]]
[[
call[ident(memcpy),call[meta(X0),meta(X1),->expr[meta(X2),ident(len)]],->expr[meta(X2),ident(data)],->expr[meta(X2),ident(len)]] ==> call[ident(skb_copy_from_linear_data),meta(X2),call[meta(X0),meta(X1),->expr[meta(X2),ident(len)]],->expr[meta(X2),ident(len)]]
	¶
call[ident(memcpy),call[meta(X0),meta(X1),->expr[meta(X2),ident(len)]],->expr[meta(X2),ident(data)],meta(X3)] ==> call[ident(skb_copy_from_linear_data),meta(X2),call[meta(X0),meta(X1),->expr[meta(X2),ident(len)]],meta(X3)]
	¶
call[ident(memcpy),call[meta(X0),meta(X1),->expr[meta(X2),ident(len)]],->expr[meta(X2),ident(data)],meta(X3)] ==> call[ident(skb_copy_from_linear_data),meta(X2),call[meta(X0),meta(X1),meta(X3)],->expr[meta(X2),ident(len)]]
	¶
call[ident(memcpy),call[meta(X0),meta(X1),->expr[meta(X2),ident(len)]],->expr[meta(X2),ident(data)],meta(X3)] ==> call[ident(skb_copy_from_linear_data),meta(X2),call[meta(X0),meta(X1),meta(X3)],meta(X3)]
	¶
call[ident(memcpy),call[meta(X0),meta(X1),meta(X2)],->expr[meta(X3),ident(data)],->expr[meta(X3),ident(len)]] ==> call[ident(skb_copy_from_linear_data),meta(X3),call[meta(X0),meta(X1),->expr[meta(X3),ident(len)]],meta(X2)]
	¶
call[ident(memcpy),call[meta(X0),meta(X1),meta(X2)],->expr[meta(X3),ident(data)],->expr[meta(X3),ident(len)]] ==> call[ident(skb_copy_from_linear_data),meta(X3),call[meta(X0),meta(X1),meta(X2)],->expr[meta(X3),ident(len)]]
	¶
call[ident(memcpy),call[meta(X0),meta(X1),meta(X2)],->expr[meta(X3),ident(data)],->expr[meta(X3),ident(len)]] ==> call[ident(skb_copy_from_linear_data),meta(X3),call[meta(X0),meta(X1),meta(X2)],meta(X2)]
	¶
call[ident(memcpy),call[meta(X0),meta(X1),meta(X2)],->expr[meta(X3),ident(data)],meta(X2)] ==> call[ident(skb_copy_from_linear_data),meta(X3),call[meta(X0),meta(X1),->expr[meta(X3),ident(len)]],meta(X2)]
	¶
call[ident(memcpy),call[meta(X0),meta(X1),meta(X2)],->expr[meta(X3),ident(data)],meta(X2)] ==> call[ident(skb_copy_from_linear_data),meta(X3),call[meta(X0),meta(X1),meta(X2)],->expr[meta(X3),ident(len)]]
	¶
call[ident(memcpy),call[meta(X0),meta(X1),meta(X2)],->expr[meta(X3),ident(data)],meta(X2)] ==> call[ident(skb_copy_from_linear_data),meta(X3),call[meta(X0),meta(X1),meta(X2)],meta(X2)]
	¶
call[ident(memcpy),meta(X0),->expr[meta(X1),ident(data)],->expr[meta(X1),ident(len)]] ==> call[ident(skb_copy_from_linear_data),meta(X1),meta(X0),->expr[meta(X1),ident(len)]]
	¶
call[ident(memcpy),meta(X0),->expr[meta(X1),ident(data)],meta(X2)] ==> call[ident(skb_copy_from_linear_data),meta(X1),meta(X0),meta(X2)]
	¶
estmt[call[ident(memcpy),call[meta(X0),meta(X1),->expr[meta(X2),ident(len)]],->expr[meta(X2),ident(data)],->expr[meta(X2),ident(len)]]] ==> estmt[call[ident(skb_copy_from_linear_data),meta(X2),call[meta(X0),meta(X1),->expr[meta(X2),ident(len)]],->expr[meta(X2),ident(len)]]]
	¶
estmt[call[ident(memcpy),call[meta(X0),meta(X1),->expr[meta(X2),ident(len)]],->expr[meta(X2),ident(data)],meta(X3)]] ==> estmt[call[ident(skb_copy_from_linear_data),meta(X2),call[meta(X0),meta(X1),->expr[meta(X2),ident(len)]],meta(X3)]]
	¶
estmt[call[ident(memcpy),call[meta(X0),meta(X1),->expr[meta(X2),ident(len)]],->expr[meta(X2),ident(data)],meta(X3)]] ==> estmt[call[ident(skb_copy_from_linear_data),meta(X2),call[meta(X0),meta(X1),meta(X3)],->expr[meta(X2),ident(len)]]]
	¶
estmt[call[ident(memcpy),call[meta(X0),meta(X1),->expr[meta(X2),ident(len)]],->expr[meta(X2),ident(data)],meta(X3)]] ==> estmt[call[ident(skb_copy_from_linear_data),meta(X2),call[meta(X0),meta(X1),meta(X3)],meta(X3)]]
	¶
estmt[call[ident(memcpy),call[meta(X0),meta(X1),meta(X2)],->expr[meta(X3),ident(data)],->expr[meta(X3),ident(len)]]] ==> estmt[call[ident(skb_copy_from_linear_data),meta(X3),call[meta(X0),meta(X1),->expr[meta(X3),ident(len)]],meta(X2)]]
	¶
estmt[call[ident(memcpy),call[meta(X0),meta(X1),meta(X2)],->expr[meta(X3),ident(data)],->expr[meta(X3),ident(len)]]] ==> estmt[call[ident(skb_copy_from_linear_data),meta(X3),call[meta(X0),meta(X1),meta(X2)],->expr[meta(X3),ident(len)]]]
	¶
estmt[call[ident(memcpy),call[meta(X0),meta(X1),meta(X2)],->expr[meta(X3),ident(data)],->expr[meta(X3),ident(len)]]] ==> estmt[call[ident(skb_copy_from_linear_data),meta(X3),call[meta(X0),meta(X1),meta(X2)],meta(X2)]]
	¶
estmt[call[ident(memcpy),call[meta(X0),meta(X1),meta(X2)],->expr[meta(X3),ident(data)],meta(X2)]] ==> estmt[call[ident(skb_copy_from_linear_data),meta(X3),call[meta(X0),meta(X1),->expr[meta(X3),ident(len)]],meta(X2)]]
	¶
estmt[call[ident(memcpy),call[meta(X0),meta(X1),meta(X2)],->expr[meta(X3),ident(data)],meta(X2)]] ==> estmt[call[ident(skb_copy_from_linear_data),meta(X3),call[meta(X0),meta(X1),meta(X2)],->expr[meta(X3),ident(len)]]]
	¶
estmt[call[ident(memcpy),call[meta(X0),meta(X1),meta(X2)],->expr[meta(X3),ident(data)],meta(X2)]] ==> estmt[call[ident(skb_copy_from_linear_data),meta(X3),call[meta(X0),meta(X1),meta(X2)],meta(X2)]]
	¶
estmt[call[ident(memcpy),meta(X0),->expr[meta(X1),ident(data)],->expr[meta(X1),ident(len)]]] ==> estmt[call[ident(skb_copy_from_linear_data),meta(X1),meta(X0),->expr[meta(X1),ident(len)]]]
	¶
estmt[call[ident(memcpy),meta(X0),->expr[meta(X1),ident(data)],meta(X2)]] ==> estmt[call[ident(skb_copy_from_linear_data),meta(X1),meta(X0),meta(X2)]]
	¶
{}stmt[estmt[call[ident(memcpy),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(data)],->expr[ident(sb),ident(len)]]],estmt[assign[simple_assi(=),ident(sb),->expr[ident(sb),ident(next)]]]] ==> {}stmt[estmt[call[ident(skb_copy_from_linear_data),ident(sb),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(len)]]],estmt[assign[simple_assi(=),ident(sb),->expr[ident(sb),ident(next)]]]]
	¶
for[assign[simple_assi(=),ident(i),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[call[ident(memcpy),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(data)],->expr[ident(sb),ident(len)]]],estmt[assign[simple_assi(=),ident(sb),->expr[ident(sb),ident(next)]]]]] ==> for[assign[simple_assi(=),ident(i),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[call[ident(skb_copy_from_linear_data),ident(sb),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(len)]]],estmt[assign[simple_assi(=),ident(sb),->expr[ident(sb),ident(next)]]]]]
	¶
{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(skb),call[ident(dev_alloc_skb),->expr[ident(rpp),ident(len)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: Can't alloc RX skb.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(dev_kfree_skb),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(sb),->expr[ident(rpp),ident(first)]]],for[assign[simple_assi(=),ident(i),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[call[ident(memcpy),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(data)],->expr[ident(sb),ident(len)]]],estmt[assign[simple_assi(=),ident(sb),->expr[ident(sb),ident(next)]]]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],statem(N/H)] ==> {}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(skb),call[ident(dev_alloc_skb),->expr[ident(rpp),ident(len)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: Can't alloc RX skb.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(dev_kfree_skb),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(sb),->expr[ident(rpp),ident(first)]]],for[assign[simple_assi(=),ident(i),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[call[ident(skb_copy_from_linear_data),ident(sb),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(len)]]],estmt[assign[simple_assi(=),ident(sb),->expr[ident(sb),ident(next)]]]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],statem(N/H)]
	¶
sel_if[expr(N/H),{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(skb),call[ident(dev_alloc_skb),->expr[ident(rpp),ident(len)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: Can't alloc RX skb.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(dev_kfree_skb),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(sb),->expr[ident(rpp),ident(first)]]],for[assign[simple_assi(=),ident(i),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[call[ident(memcpy),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(data)],->expr[ident(sb),ident(len)]]],estmt[assign[simple_assi(=),ident(sb),->expr[ident(sb),ident(next)]]]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],statem(N/H)],estmt(NONE)] ==> sel_if[expr(N/H),{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(skb),call[ident(dev_alloc_skb),->expr[ident(rpp),ident(len)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: Can't alloc RX skb.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(dev_kfree_skb),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(sb),->expr[ident(rpp),ident(first)]]],for[assign[simple_assi(=),ident(i),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[call[ident(skb_copy_from_linear_data),ident(sb),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(len)]]],estmt[assign[simple_assi(=),ident(sb),->expr[ident(sb),ident(next)]]]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],statem(N/H)],estmt(NONE)]
	¶
{}stmt[statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(l1l2),expr(N/H)]],estmt[assign[simple_assi(=),ident(len),binary[aop(N/H),binary[aop(N/H),array_a[ident(l1l2),const_i(0)],const_i(8)],array_a[ident(l1l2),const_i(1)]]]],estmt[assign[simple_assi(=),ident(len),condexpr3[ident(len),ident(len),const_i(0x10000)]]],estmt[call[ident(RXPRINTK),const_s(%s: PDU has %d bytes.\n),->expr[ident(card),ident(name)],ident(len)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const(N/H),->expr[ident(card),ident(name)],ident(len),->expr[ident(rpp),ident(len)],call[ident(readl),ident(SAR_REG_CDC)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_CRC)],{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: AAL5 CRC error.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(skb),call[ident(dev_alloc_skb),->expr[ident(rpp),ident(len)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: Can't alloc RX skb.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(dev_kfree_skb),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(sb),->expr[ident(rpp),ident(first)]]],for[assign[simple_assi(=),ident(i),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[call[ident(memcpy),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(data)],->expr[ident(sb),ident(len)]]],estmt[assign[simple_assi(=),ident(sb),->expr[ident(sb),ident(next)]]]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(skb),ident(next)],ident(NULL)]],estmt[call[ident(flush_rx_pool),ident(card),ident(rpp)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[call[ident(pci_unmap_single),->expr[ident(card),ident(pcidev)],call[ident(IDT77252_PRV_PADDR),ident(skb)],binary[aop(-),call[ident(skb_end_pointer),ident(skb)],->expr[ident(skb),ident(data)]],ident(PCI_DMA_FROMDEVICE)]],estmt[call[ident(sb_pool_remove),ident(card),ident(skb)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(3),ident(SAR_FB_SIZE_3),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(2),ident(SAR_FB_SIZE_2),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(1),ident(SAR_FB_SIZE_1),const_i(1)]],estmt[call[ident(add_rx_skb),ident(card),const_i(0),ident(SAR_FB_SIZE_0),const_i(1)]]]]],statem(N/H)] ==> {}stmt[statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(l1l2),expr(N/H)]],estmt[assign[simple_assi(=),ident(len),binary[aop(N/H),binary[aop(N/H),array_a[ident(l1l2),const_i(0)],const_i(8)],array_a[ident(l1l2),const_i(1)]]]],estmt[assign[simple_assi(=),ident(len),condexpr3[ident(len),ident(len),const_i(0x10000)]]],estmt[call[ident(RXPRINTK),const_s(%s: PDU has %d bytes.\n),->expr[ident(card),ident(name)],ident(len)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const(N/H),->expr[ident(card),ident(name)],ident(len),->expr[ident(rpp),ident(len)],call[ident(readl),ident(SAR_REG_CDC)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_CRC)],{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: AAL5 CRC error.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(skb),call[ident(dev_alloc_skb),->expr[ident(rpp),ident(len)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: Can't alloc RX skb.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(dev_kfree_skb),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(sb),->expr[ident(rpp),ident(first)]]],for[assign[simple_assi(=),ident(i),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[call[ident(skb_copy_from_linear_data),ident(sb),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(len)]]],estmt[assign[simple_assi(=),ident(sb),->expr[ident(sb),ident(next)]]]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(skb),ident(next)],ident(NULL)]],estmt[call[ident(flush_rx_pool),ident(card),ident(rpp)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[call[ident(pci_unmap_single),->expr[ident(card),ident(pcidev)],call[ident(IDT77252_PRV_PADDR),ident(skb)],binary[aop(-),call[ident(skb_end_pointer),ident(skb)],->expr[ident(skb),ident(data)]],ident(PCI_DMA_FROMDEVICE)]],estmt[call[ident(sb_pool_remove),ident(card),ident(skb)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(3),ident(SAR_FB_SIZE_3),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(2),ident(SAR_FB_SIZE_2),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(1),ident(SAR_FB_SIZE_1),const_i(1)]],estmt[call[ident(add_rx_skb),ident(card),const_i(0),ident(SAR_FB_SIZE_0),const_i(1)]]]]],statem(N/H)]
	¶
sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_EPDU)],{}stmt[statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(l1l2),expr(N/H)]],estmt[assign[simple_assi(=),ident(len),binary[aop(N/H),binary[aop(N/H),array_a[ident(l1l2),const_i(0)],const_i(8)],array_a[ident(l1l2),const_i(1)]]]],estmt[assign[simple_assi(=),ident(len),condexpr3[ident(len),ident(len),const_i(0x10000)]]],estmt[call[ident(RXPRINTK),const_s(%s: PDU has %d bytes.\n),->expr[ident(card),ident(name)],ident(len)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const(N/H),->expr[ident(card),ident(name)],ident(len),->expr[ident(rpp),ident(len)],call[ident(readl),ident(SAR_REG_CDC)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_CRC)],{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: AAL5 CRC error.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(skb),call[ident(dev_alloc_skb),->expr[ident(rpp),ident(len)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: Can't alloc RX skb.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(dev_kfree_skb),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(sb),->expr[ident(rpp),ident(first)]]],for[assign[simple_assi(=),ident(i),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[call[ident(memcpy),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(data)],->expr[ident(sb),ident(len)]]],estmt[assign[simple_assi(=),ident(sb),->expr[ident(sb),ident(next)]]]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(skb),ident(next)],ident(NULL)]],estmt[call[ident(flush_rx_pool),ident(card),ident(rpp)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[call[ident(pci_unmap_single),->expr[ident(card),ident(pcidev)],call[ident(IDT77252_PRV_PADDR),ident(skb)],binary[aop(-),call[ident(skb_end_pointer),ident(skb)],->expr[ident(skb),ident(data)]],ident(PCI_DMA_FROMDEVICE)]],estmt[call[ident(sb_pool_remove),ident(card),ident(skb)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(3),ident(SAR_FB_SIZE_3),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(2),ident(SAR_FB_SIZE_2),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(1),ident(SAR_FB_SIZE_1),const_i(1)]],estmt[call[ident(add_rx_skb),ident(card),const_i(0),ident(SAR_FB_SIZE_0),const_i(1)]]]]],statem(N/H)],estmt(NONE)] ==> sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_EPDU)],{}stmt[statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(l1l2),expr(N/H)]],estmt[assign[simple_assi(=),ident(len),binary[aop(N/H),binary[aop(N/H),array_a[ident(l1l2),const_i(0)],const_i(8)],array_a[ident(l1l2),const_i(1)]]]],estmt[assign[simple_assi(=),ident(len),condexpr3[ident(len),ident(len),const_i(0x10000)]]],estmt[call[ident(RXPRINTK),const_s(%s: PDU has %d bytes.\n),->expr[ident(card),ident(name)],ident(len)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const(N/H),->expr[ident(card),ident(name)],ident(len),->expr[ident(rpp),ident(len)],call[ident(readl),ident(SAR_REG_CDC)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_CRC)],{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: AAL5 CRC error.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(skb),call[ident(dev_alloc_skb),->expr[ident(rpp),ident(len)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: Can't alloc RX skb.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(dev_kfree_skb),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(sb),->expr[ident(rpp),ident(first)]]],for[assign[simple_assi(=),ident(i),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[call[ident(skb_copy_from_linear_data),ident(sb),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(len)]]],estmt[assign[simple_assi(=),ident(sb),->expr[ident(sb),ident(next)]]]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(skb),ident(next)],ident(NULL)]],estmt[call[ident(flush_rx_pool),ident(card),ident(rpp)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[call[ident(pci_unmap_single),->expr[ident(card),ident(pcidev)],call[ident(IDT77252_PRV_PADDR),ident(skb)],binary[aop(-),call[ident(skb_end_pointer),ident(skb)],->expr[ident(skb),ident(data)]],ident(PCI_DMA_FROMDEVICE)]],estmt[call[ident(sb_pool_remove),ident(card),ident(skb)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(3),ident(SAR_FB_SIZE_3),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(2),ident(SAR_FB_SIZE_2),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(1),ident(SAR_FB_SIZE_1),const_i(1)]],estmt[call[ident(add_rx_skb),ident(card),const_i(0),ident(SAR_FB_SIZE_0),const_i(1)]]]]],statem(N/H)],estmt(NONE)]
	¶
{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(stat),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_4)]]]],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_IDLE)],{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: message about inactive connection.\n),->expr[ident(card),ident(name)]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(skb),call[ident(sb_pool_skb),ident(card),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_2)]]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: NULL skb in %s, rsqe: %08x %08x %08x %08x\n),->expr[ident(card),ident(name)],ident(__FUNCTION__),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_1)]],call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_2)]],call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_3)]],call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_4)]]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(header),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_1)]]]],estmt[assign[simple_assi(=),ident(vpi),binary[aop(N/H),binary[aop(N/H),ident(header),const_i(16)],const_i(0x00ff)]]],estmt[assign[simple_assi(=),ident(vci),binary[aop(N/H),binary[aop(N/H),ident(header),const_i(0)],const_i(0xffff)]]],estmt[call[ident(RXPRINTK),const_s(%s: SDU for %d.%d received in buffer 0x%p (data 0x%p).\n),->expr[ident(card),ident(name)],ident(vpi),ident(vci),ident(skb),->expr[ident(skb),ident(data)]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: SDU received for out-of-range vc %u.%u\n),->expr[ident(card),ident(name)],ident(vpi),ident(vci)]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(vc),array_a[->expr[ident(card),ident(vcs)],call[ident(VPCI2VC),ident(card),ident(vpi),ident(vci)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: SDU received on non RX vc %u.%u\n),->expr[ident(card),ident(name)],ident(vpi),ident(vci)]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(vcc),->expr[ident(vc),ident(rx_vcc)]]],estmt[call[ident(pci_dma_sync_single_for_cpu),->expr[ident(card),ident(pcidev)],call[ident(IDT77252_PRV_PADDR),ident(skb)],binary[aop(-),call[ident(skb_end_pointer),ident(skb)],->expr[ident(skb),ident(data)]],ident(PCI_DMA_FROMDEVICE)]],sel_if[expr(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(cell),->expr[ident(skb),ident(data)]]],for[assign[simple_assi(=),ident(i),binary[aop(N/H),ident(stat),ident(SAR_RSQE_CELLCNT)]],ident(i),expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: Can't allocate buffers for aal0.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(atomic_add),ident(i),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_drop)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: atm_charge() dropped aal0 packets.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(atomic_add),binary[aop(-),ident(i),const_i(1)],&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_drop)]]]],estmt[call[ident(dev_kfree_skb),ident(sb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(aal0),binary[aop(N/H),binary[aop(N/H),ident(vpi),ident(ATM_HDR_VPI_SHIFT)],binary[aop(N/H),ident(vci),ident(ATM_HDR_VCI_SHIFT)]]]],estmt[assign[op_assi(|=),ident(aal0),condexpr3[binary[aop(N/H),ident(stat),ident(SAR_RSQE_EPDU)],const_i(0x00000002),const_i(0)]]],estmt[assign[op_assi(|=),ident(aal0),condexpr3[binary[aop(N/H),ident(stat),ident(SAR_RSQE_CLP)],const_i(0x00000001),const_i(0)]]],estmt[assign[simple_assi(=),*expr[expr(N/H)],ident(aal0)]],estmt[call[ident(skb_put),ident(sb),sizeoftype_expr[type(N/H)]]],estmt[call[ident(memcpy),call[ident(skb_put),ident(sb),ident(ATM_CELL_PAYLOAD)],ident(cell),ident(ATM_CELL_PAYLOAD)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(sb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(sb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(sb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],estmt[assign[op_assi(+=),ident(cell),ident(ATM_CELL_PAYLOAD)]]]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: Unexpected AAL type in dequeue_rx(): %d.\n),->expr[ident(card),ident(name)],.expr[->expr[ident(vcc),ident(qos)],ident(aal)]]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(skb),ident(len)],binary[aop(*),binary[aop(N/H),ident(stat),ident(SAR_RSQE_CELLCNT)],ident(ATM_CELL_PAYLOAD)]]],estmt[assign[simple_assi(=),ident(rpp),&expr[.expr[->expr[ident(vc),ident(rcv)],ident(rx_pool)]]]],estmt[assign[op_assi(+=),->expr[ident(rpp),ident(len)],->expr[ident(skb),ident(len)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),->expr[ident(rpp),ident(first)],ident(skb)]],estmt(NONE)],estmt[assign[simple_assi(=),*expr[->expr[ident(rpp),ident(last)]],ident(skb)]],estmt[assign[simple_assi(=),->expr[ident(rpp),ident(last)],&expr[->expr[ident(skb),ident(next)]]]],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_EPDU)],{}stmt[statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(l1l2),expr(N/H)]],estmt[assign[simple_assi(=),ident(len),binary[aop(N/H),binary[aop(N/H),array_a[ident(l1l2),const_i(0)],const_i(8)],array_a[ident(l1l2),const_i(1)]]]],estmt[assign[simple_assi(=),ident(len),condexpr3[ident(len),ident(len),const_i(0x10000)]]],estmt[call[ident(RXPRINTK),const_s(%s: PDU has %d bytes.\n),->expr[ident(card),ident(name)],ident(len)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const(N/H),->expr[ident(card),ident(name)],ident(len),->expr[ident(rpp),ident(len)],call[ident(readl),ident(SAR_REG_CDC)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_CRC)],{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: AAL5 CRC error.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(skb),call[ident(dev_alloc_skb),->expr[ident(rpp),ident(len)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: Can't alloc RX skb.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(dev_kfree_skb),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(sb),->expr[ident(rpp),ident(first)]]],for[assign[simple_assi(=),ident(i),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[call[ident(memcpy),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(data)],->expr[ident(sb),ident(len)]]],estmt[assign[simple_assi(=),ident(sb),->expr[ident(sb),ident(next)]]]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(skb),ident(next)],ident(NULL)]],estmt[call[ident(flush_rx_pool),ident(card),ident(rpp)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[call[ident(pci_unmap_single),->expr[ident(card),ident(pcidev)],call[ident(IDT77252_PRV_PADDR),ident(skb)],binary[aop(-),call[ident(skb_end_pointer),ident(skb)],->expr[ident(skb),ident(data)]],ident(PCI_DMA_FROMDEVICE)]],estmt[call[ident(sb_pool_remove),ident(card),ident(skb)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(3),ident(SAR_FB_SIZE_3),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(2),ident(SAR_FB_SIZE_2),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(1),ident(SAR_FB_SIZE_1),const_i(1)]],estmt[call[ident(add_rx_skb),ident(card),const_i(0),ident(SAR_FB_SIZE_0),const_i(1)]]]]],statem(N/H)],estmt(NONE)]] ==> {}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(stat),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_4)]]]],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_IDLE)],{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: message about inactive connection.\n),->expr[ident(card),ident(name)]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(skb),call[ident(sb_pool_skb),ident(card),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_2)]]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: NULL skb in %s, rsqe: %08x %08x %08x %08x\n),->expr[ident(card),ident(name)],ident(__FUNCTION__),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_1)]],call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_2)]],call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_3)]],call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_4)]]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(header),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_1)]]]],estmt[assign[simple_assi(=),ident(vpi),binary[aop(N/H),binary[aop(N/H),ident(header),const_i(16)],const_i(0x00ff)]]],estmt[assign[simple_assi(=),ident(vci),binary[aop(N/H),binary[aop(N/H),ident(header),const_i(0)],const_i(0xffff)]]],estmt[call[ident(RXPRINTK),const_s(%s: SDU for %d.%d received in buffer 0x%p (data 0x%p).\n),->expr[ident(card),ident(name)],ident(vpi),ident(vci),ident(skb),->expr[ident(skb),ident(data)]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: SDU received for out-of-range vc %u.%u\n),->expr[ident(card),ident(name)],ident(vpi),ident(vci)]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(vc),array_a[->expr[ident(card),ident(vcs)],call[ident(VPCI2VC),ident(card),ident(vpi),ident(vci)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: SDU received on non RX vc %u.%u\n),->expr[ident(card),ident(name)],ident(vpi),ident(vci)]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(vcc),->expr[ident(vc),ident(rx_vcc)]]],estmt[call[ident(pci_dma_sync_single_for_cpu),->expr[ident(card),ident(pcidev)],call[ident(IDT77252_PRV_PADDR),ident(skb)],binary[aop(-),call[ident(skb_end_pointer),ident(skb)],->expr[ident(skb),ident(data)]],ident(PCI_DMA_FROMDEVICE)]],sel_if[expr(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(cell),->expr[ident(skb),ident(data)]]],for[assign[simple_assi(=),ident(i),binary[aop(N/H),ident(stat),ident(SAR_RSQE_CELLCNT)]],ident(i),expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: Can't allocate buffers for aal0.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(atomic_add),ident(i),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_drop)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: atm_charge() dropped aal0 packets.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(atomic_add),binary[aop(-),ident(i),const_i(1)],&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_drop)]]]],estmt[call[ident(dev_kfree_skb),ident(sb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(aal0),binary[aop(N/H),binary[aop(N/H),ident(vpi),ident(ATM_HDR_VPI_SHIFT)],binary[aop(N/H),ident(vci),ident(ATM_HDR_VCI_SHIFT)]]]],estmt[assign[op_assi(|=),ident(aal0),condexpr3[binary[aop(N/H),ident(stat),ident(SAR_RSQE_EPDU)],const_i(0x00000002),const_i(0)]]],estmt[assign[op_assi(|=),ident(aal0),condexpr3[binary[aop(N/H),ident(stat),ident(SAR_RSQE_CLP)],const_i(0x00000001),const_i(0)]]],estmt[assign[simple_assi(=),*expr[expr(N/H)],ident(aal0)]],estmt[call[ident(skb_put),ident(sb),sizeoftype_expr[type(N/H)]]],estmt[call[ident(memcpy),call[ident(skb_put),ident(sb),ident(ATM_CELL_PAYLOAD)],ident(cell),ident(ATM_CELL_PAYLOAD)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(sb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(sb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(sb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],estmt[assign[op_assi(+=),ident(cell),ident(ATM_CELL_PAYLOAD)]]]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: Unexpected AAL type in dequeue_rx(): %d.\n),->expr[ident(card),ident(name)],.expr[->expr[ident(vcc),ident(qos)],ident(aal)]]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(skb),ident(len)],binary[aop(*),binary[aop(N/H),ident(stat),ident(SAR_RSQE_CELLCNT)],ident(ATM_CELL_PAYLOAD)]]],estmt[assign[simple_assi(=),ident(rpp),&expr[.expr[->expr[ident(vc),ident(rcv)],ident(rx_pool)]]]],estmt[assign[op_assi(+=),->expr[ident(rpp),ident(len)],->expr[ident(skb),ident(len)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),->expr[ident(rpp),ident(first)],ident(skb)]],estmt(NONE)],estmt[assign[simple_assi(=),*expr[->expr[ident(rpp),ident(last)]],ident(skb)]],estmt[assign[simple_assi(=),->expr[ident(rpp),ident(last)],&expr[->expr[ident(skb),ident(next)]]]],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_EPDU)],{}stmt[statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(l1l2),expr(N/H)]],estmt[assign[simple_assi(=),ident(len),binary[aop(N/H),binary[aop(N/H),array_a[ident(l1l2),const_i(0)],const_i(8)],array_a[ident(l1l2),const_i(1)]]]],estmt[assign[simple_assi(=),ident(len),condexpr3[ident(len),ident(len),const_i(0x10000)]]],estmt[call[ident(RXPRINTK),const_s(%s: PDU has %d bytes.\n),->expr[ident(card),ident(name)],ident(len)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const(N/H),->expr[ident(card),ident(name)],ident(len),->expr[ident(rpp),ident(len)],call[ident(readl),ident(SAR_REG_CDC)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_CRC)],{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: AAL5 CRC error.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(skb),call[ident(dev_alloc_skb),->expr[ident(rpp),ident(len)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: Can't alloc RX skb.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(dev_kfree_skb),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(sb),->expr[ident(rpp),ident(first)]]],for[assign[simple_assi(=),ident(i),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[call[ident(skb_copy_from_linear_data),ident(sb),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(len)]]],estmt[assign[simple_assi(=),ident(sb),->expr[ident(sb),ident(next)]]]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(skb),ident(next)],ident(NULL)]],estmt[call[ident(flush_rx_pool),ident(card),ident(rpp)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[call[ident(pci_unmap_single),->expr[ident(card),ident(pcidev)],call[ident(IDT77252_PRV_PADDR),ident(skb)],binary[aop(-),call[ident(skb_end_pointer),ident(skb)],->expr[ident(skb),ident(data)]],ident(PCI_DMA_FROMDEVICE)]],estmt[call[ident(sb_pool_remove),ident(card),ident(skb)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(3),ident(SAR_FB_SIZE_3),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(2),ident(SAR_FB_SIZE_2),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(1),ident(SAR_FB_SIZE_1),const_i(1)]],estmt[call[ident(add_rx_skb),ident(card),const_i(0),ident(SAR_FB_SIZE_0),const_i(1)]]]]],statem(N/H)],estmt(NONE)]]
	¶
def[fname(dequeue_rx),funtype(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(stat),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_4)]]]],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_IDLE)],{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: message about inactive connection.\n),->expr[ident(card),ident(name)]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(skb),call[ident(sb_pool_skb),ident(card),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_2)]]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: NULL skb in %s, rsqe: %08x %08x %08x %08x\n),->expr[ident(card),ident(name)],ident(__FUNCTION__),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_1)]],call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_2)]],call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_3)]],call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_4)]]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(header),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_1)]]]],estmt[assign[simple_assi(=),ident(vpi),binary[aop(N/H),binary[aop(N/H),ident(header),const_i(16)],const_i(0x00ff)]]],estmt[assign[simple_assi(=),ident(vci),binary[aop(N/H),binary[aop(N/H),ident(header),const_i(0)],const_i(0xffff)]]],estmt[call[ident(RXPRINTK),const_s(%s: SDU for %d.%d received in buffer 0x%p (data 0x%p).\n),->expr[ident(card),ident(name)],ident(vpi),ident(vci),ident(skb),->expr[ident(skb),ident(data)]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: SDU received for out-of-range vc %u.%u\n),->expr[ident(card),ident(name)],ident(vpi),ident(vci)]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(vc),array_a[->expr[ident(card),ident(vcs)],call[ident(VPCI2VC),ident(card),ident(vpi),ident(vci)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: SDU received on non RX vc %u.%u\n),->expr[ident(card),ident(name)],ident(vpi),ident(vci)]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(vcc),->expr[ident(vc),ident(rx_vcc)]]],estmt[call[ident(pci_dma_sync_single_for_cpu),->expr[ident(card),ident(pcidev)],call[ident(IDT77252_PRV_PADDR),ident(skb)],binary[aop(-),call[ident(skb_end_pointer),ident(skb)],->expr[ident(skb),ident(data)]],ident(PCI_DMA_FROMDEVICE)]],sel_if[expr(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(cell),->expr[ident(skb),ident(data)]]],for[assign[simple_assi(=),ident(i),binary[aop(N/H),ident(stat),ident(SAR_RSQE_CELLCNT)]],ident(i),expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: Can't allocate buffers for aal0.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(atomic_add),ident(i),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_drop)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: atm_charge() dropped aal0 packets.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(atomic_add),binary[aop(-),ident(i),const_i(1)],&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_drop)]]]],estmt[call[ident(dev_kfree_skb),ident(sb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(aal0),binary[aop(N/H),binary[aop(N/H),ident(vpi),ident(ATM_HDR_VPI_SHIFT)],binary[aop(N/H),ident(vci),ident(ATM_HDR_VCI_SHIFT)]]]],estmt[assign[op_assi(|=),ident(aal0),condexpr3[binary[aop(N/H),ident(stat),ident(SAR_RSQE_EPDU)],const_i(0x00000002),const_i(0)]]],estmt[assign[op_assi(|=),ident(aal0),condexpr3[binary[aop(N/H),ident(stat),ident(SAR_RSQE_CLP)],const_i(0x00000001),const_i(0)]]],estmt[assign[simple_assi(=),*expr[expr(N/H)],ident(aal0)]],estmt[call[ident(skb_put),ident(sb),sizeoftype_expr[type(N/H)]]],estmt[call[ident(memcpy),call[ident(skb_put),ident(sb),ident(ATM_CELL_PAYLOAD)],ident(cell),ident(ATM_CELL_PAYLOAD)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(sb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(sb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(sb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],estmt[assign[op_assi(+=),ident(cell),ident(ATM_CELL_PAYLOAD)]]]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: Unexpected AAL type in dequeue_rx(): %d.\n),->expr[ident(card),ident(name)],.expr[->expr[ident(vcc),ident(qos)],ident(aal)]]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(skb),ident(len)],binary[aop(*),binary[aop(N/H),ident(stat),ident(SAR_RSQE_CELLCNT)],ident(ATM_CELL_PAYLOAD)]]],estmt[assign[simple_assi(=),ident(rpp),&expr[.expr[->expr[ident(vc),ident(rcv)],ident(rx_pool)]]]],estmt[assign[op_assi(+=),->expr[ident(rpp),ident(len)],->expr[ident(skb),ident(len)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),->expr[ident(rpp),ident(first)],ident(skb)]],estmt(NONE)],estmt[assign[simple_assi(=),*expr[->expr[ident(rpp),ident(last)]],ident(skb)]],estmt[assign[simple_assi(=),->expr[ident(rpp),ident(last)],&expr[->expr[ident(skb),ident(next)]]]],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_EPDU)],{}stmt[statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(l1l2),expr(N/H)]],estmt[assign[simple_assi(=),ident(len),binary[aop(N/H),binary[aop(N/H),array_a[ident(l1l2),const_i(0)],const_i(8)],array_a[ident(l1l2),const_i(1)]]]],estmt[assign[simple_assi(=),ident(len),condexpr3[ident(len),ident(len),const_i(0x10000)]]],estmt[call[ident(RXPRINTK),const_s(%s: PDU has %d bytes.\n),->expr[ident(card),ident(name)],ident(len)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const(N/H),->expr[ident(card),ident(name)],ident(len),->expr[ident(rpp),ident(len)],call[ident(readl),ident(SAR_REG_CDC)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_CRC)],{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: AAL5 CRC error.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(skb),call[ident(dev_alloc_skb),->expr[ident(rpp),ident(len)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: Can't alloc RX skb.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(dev_kfree_skb),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(sb),->expr[ident(rpp),ident(first)]]],for[assign[simple_assi(=),ident(i),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[call[ident(memcpy),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(data)],->expr[ident(sb),ident(len)]]],estmt[assign[simple_assi(=),ident(sb),->expr[ident(sb),ident(next)]]]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(skb),ident(next)],ident(NULL)]],estmt[call[ident(flush_rx_pool),ident(card),ident(rpp)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[call[ident(pci_unmap_single),->expr[ident(card),ident(pcidev)],call[ident(IDT77252_PRV_PADDR),ident(skb)],binary[aop(-),call[ident(skb_end_pointer),ident(skb)],->expr[ident(skb),ident(data)]],ident(PCI_DMA_FROMDEVICE)]],estmt[call[ident(sb_pool_remove),ident(card),ident(skb)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(3),ident(SAR_FB_SIZE_3),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(2),ident(SAR_FB_SIZE_2),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(1),ident(SAR_FB_SIZE_1),const_i(1)]],estmt[call[ident(add_rx_skb),ident(card),const_i(0),ident(SAR_FB_SIZE_0),const_i(1)]]]]],statem(N/H)],estmt(NONE)]]] ==> def[fname(dequeue_rx),funtype(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(stat),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_4)]]]],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_IDLE)],{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: message about inactive connection.\n),->expr[ident(card),ident(name)]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(skb),call[ident(sb_pool_skb),ident(card),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_2)]]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: NULL skb in %s, rsqe: %08x %08x %08x %08x\n),->expr[ident(card),ident(name)],ident(__FUNCTION__),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_1)]],call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_2)]],call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_3)]],call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_4)]]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(header),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_1)]]]],estmt[assign[simple_assi(=),ident(vpi),binary[aop(N/H),binary[aop(N/H),ident(header),const_i(16)],const_i(0x00ff)]]],estmt[assign[simple_assi(=),ident(vci),binary[aop(N/H),binary[aop(N/H),ident(header),const_i(0)],const_i(0xffff)]]],estmt[call[ident(RXPRINTK),const_s(%s: SDU for %d.%d received in buffer 0x%p (data 0x%p).\n),->expr[ident(card),ident(name)],ident(vpi),ident(vci),ident(skb),->expr[ident(skb),ident(data)]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: SDU received for out-of-range vc %u.%u\n),->expr[ident(card),ident(name)],ident(vpi),ident(vci)]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(vc),array_a[->expr[ident(card),ident(vcs)],call[ident(VPCI2VC),ident(card),ident(vpi),ident(vci)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: SDU received on non RX vc %u.%u\n),->expr[ident(card),ident(name)],ident(vpi),ident(vci)]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(vcc),->expr[ident(vc),ident(rx_vcc)]]],estmt[call[ident(pci_dma_sync_single_for_cpu),->expr[ident(card),ident(pcidev)],call[ident(IDT77252_PRV_PADDR),ident(skb)],binary[aop(-),call[ident(skb_end_pointer),ident(skb)],->expr[ident(skb),ident(data)]],ident(PCI_DMA_FROMDEVICE)]],sel_if[expr(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(cell),->expr[ident(skb),ident(data)]]],for[assign[simple_assi(=),ident(i),binary[aop(N/H),ident(stat),ident(SAR_RSQE_CELLCNT)]],ident(i),expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: Can't allocate buffers for aal0.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(atomic_add),ident(i),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_drop)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: atm_charge() dropped aal0 packets.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(atomic_add),binary[aop(-),ident(i),const_i(1)],&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_drop)]]]],estmt[call[ident(dev_kfree_skb),ident(sb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(aal0),binary[aop(N/H),binary[aop(N/H),ident(vpi),ident(ATM_HDR_VPI_SHIFT)],binary[aop(N/H),ident(vci),ident(ATM_HDR_VCI_SHIFT)]]]],estmt[assign[op_assi(|=),ident(aal0),condexpr3[binary[aop(N/H),ident(stat),ident(SAR_RSQE_EPDU)],const_i(0x00000002),const_i(0)]]],estmt[assign[op_assi(|=),ident(aal0),condexpr3[binary[aop(N/H),ident(stat),ident(SAR_RSQE_CLP)],const_i(0x00000001),const_i(0)]]],estmt[assign[simple_assi(=),*expr[expr(N/H)],ident(aal0)]],estmt[call[ident(skb_put),ident(sb),sizeoftype_expr[type(N/H)]]],estmt[call[ident(memcpy),call[ident(skb_put),ident(sb),ident(ATM_CELL_PAYLOAD)],ident(cell),ident(ATM_CELL_PAYLOAD)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(sb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(sb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(sb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],estmt[assign[op_assi(+=),ident(cell),ident(ATM_CELL_PAYLOAD)]]]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: Unexpected AAL type in dequeue_rx(): %d.\n),->expr[ident(card),ident(name)],.expr[->expr[ident(vcc),ident(qos)],ident(aal)]]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(skb),ident(len)],binary[aop(*),binary[aop(N/H),ident(stat),ident(SAR_RSQE_CELLCNT)],ident(ATM_CELL_PAYLOAD)]]],estmt[assign[simple_assi(=),ident(rpp),&expr[.expr[->expr[ident(vc),ident(rcv)],ident(rx_pool)]]]],estmt[assign[op_assi(+=),->expr[ident(rpp),ident(len)],->expr[ident(skb),ident(len)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),->expr[ident(rpp),ident(first)],ident(skb)]],estmt(NONE)],estmt[assign[simple_assi(=),*expr[->expr[ident(rpp),ident(last)]],ident(skb)]],estmt[assign[simple_assi(=),->expr[ident(rpp),ident(last)],&expr[->expr[ident(skb),ident(next)]]]],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_EPDU)],{}stmt[statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(l1l2),expr(N/H)]],estmt[assign[simple_assi(=),ident(len),binary[aop(N/H),binary[aop(N/H),array_a[ident(l1l2),const_i(0)],const_i(8)],array_a[ident(l1l2),const_i(1)]]]],estmt[assign[simple_assi(=),ident(len),condexpr3[ident(len),ident(len),const_i(0x10000)]]],estmt[call[ident(RXPRINTK),const_s(%s: PDU has %d bytes.\n),->expr[ident(card),ident(name)],ident(len)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const(N/H),->expr[ident(card),ident(name)],ident(len),->expr[ident(rpp),ident(len)],call[ident(readl),ident(SAR_REG_CDC)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_CRC)],{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: AAL5 CRC error.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(skb),call[ident(dev_alloc_skb),->expr[ident(rpp),ident(len)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: Can't alloc RX skb.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(dev_kfree_skb),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(sb),->expr[ident(rpp),ident(first)]]],for[assign[simple_assi(=),ident(i),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[call[ident(skb_copy_from_linear_data),ident(sb),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(len)]]],estmt[assign[simple_assi(=),ident(sb),->expr[ident(sb),ident(next)]]]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(skb),ident(next)],ident(NULL)]],estmt[call[ident(flush_rx_pool),ident(card),ident(rpp)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[call[ident(pci_unmap_single),->expr[ident(card),ident(pcidev)],call[ident(IDT77252_PRV_PADDR),ident(skb)],binary[aop(-),call[ident(skb_end_pointer),ident(skb)],->expr[ident(skb),ident(data)]],ident(PCI_DMA_FROMDEVICE)]],estmt[call[ident(sb_pool_remove),ident(card),ident(skb)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(3),ident(SAR_FB_SIZE_3),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(2),ident(SAR_FB_SIZE_2),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(1),ident(SAR_FB_SIZE_1),const_i(1)]],estmt[call[ident(add_rx_skb),ident(card),const_i(0),ident(SAR_FB_SIZE_0),const_i(1)]]]]],statem(N/H)],estmt(NONE)]]]
	¶
prg2[def[fname(dequeue_rx),funtype(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(stat),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_4)]]]],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_IDLE)],{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: message about inactive connection.\n),->expr[ident(card),ident(name)]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(skb),call[ident(sb_pool_skb),ident(card),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_2)]]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: NULL skb in %s, rsqe: %08x %08x %08x %08x\n),->expr[ident(card),ident(name)],ident(__FUNCTION__),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_1)]],call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_2)]],call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_3)]],call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_4)]]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(header),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_1)]]]],estmt[assign[simple_assi(=),ident(vpi),binary[aop(N/H),binary[aop(N/H),ident(header),const_i(16)],const_i(0x00ff)]]],estmt[assign[simple_assi(=),ident(vci),binary[aop(N/H),binary[aop(N/H),ident(header),const_i(0)],const_i(0xffff)]]],estmt[call[ident(RXPRINTK),const_s(%s: SDU for %d.%d received in buffer 0x%p (data 0x%p).\n),->expr[ident(card),ident(name)],ident(vpi),ident(vci),ident(skb),->expr[ident(skb),ident(data)]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: SDU received for out-of-range vc %u.%u\n),->expr[ident(card),ident(name)],ident(vpi),ident(vci)]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(vc),array_a[->expr[ident(card),ident(vcs)],call[ident(VPCI2VC),ident(card),ident(vpi),ident(vci)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: SDU received on non RX vc %u.%u\n),->expr[ident(card),ident(name)],ident(vpi),ident(vci)]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(vcc),->expr[ident(vc),ident(rx_vcc)]]],estmt[call[ident(pci_dma_sync_single_for_cpu),->expr[ident(card),ident(pcidev)],call[ident(IDT77252_PRV_PADDR),ident(skb)],binary[aop(-),call[ident(skb_end_pointer),ident(skb)],->expr[ident(skb),ident(data)]],ident(PCI_DMA_FROMDEVICE)]],sel_if[expr(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(cell),->expr[ident(skb),ident(data)]]],for[assign[simple_assi(=),ident(i),binary[aop(N/H),ident(stat),ident(SAR_RSQE_CELLCNT)]],ident(i),expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: Can't allocate buffers for aal0.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(atomic_add),ident(i),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_drop)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: atm_charge() dropped aal0 packets.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(atomic_add),binary[aop(-),ident(i),const_i(1)],&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_drop)]]]],estmt[call[ident(dev_kfree_skb),ident(sb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(aal0),binary[aop(N/H),binary[aop(N/H),ident(vpi),ident(ATM_HDR_VPI_SHIFT)],binary[aop(N/H),ident(vci),ident(ATM_HDR_VCI_SHIFT)]]]],estmt[assign[op_assi(|=),ident(aal0),condexpr3[binary[aop(N/H),ident(stat),ident(SAR_RSQE_EPDU)],const_i(0x00000002),const_i(0)]]],estmt[assign[op_assi(|=),ident(aal0),condexpr3[binary[aop(N/H),ident(stat),ident(SAR_RSQE_CLP)],const_i(0x00000001),const_i(0)]]],estmt[assign[simple_assi(=),*expr[expr(N/H)],ident(aal0)]],estmt[call[ident(skb_put),ident(sb),sizeoftype_expr[type(N/H)]]],estmt[call[ident(memcpy),call[ident(skb_put),ident(sb),ident(ATM_CELL_PAYLOAD)],ident(cell),ident(ATM_CELL_PAYLOAD)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(sb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(sb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(sb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],estmt[assign[op_assi(+=),ident(cell),ident(ATM_CELL_PAYLOAD)]]]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: Unexpected AAL type in dequeue_rx(): %d.\n),->expr[ident(card),ident(name)],.expr[->expr[ident(vcc),ident(qos)],ident(aal)]]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(skb),ident(len)],binary[aop(*),binary[aop(N/H),ident(stat),ident(SAR_RSQE_CELLCNT)],ident(ATM_CELL_PAYLOAD)]]],estmt[assign[simple_assi(=),ident(rpp),&expr[.expr[->expr[ident(vc),ident(rcv)],ident(rx_pool)]]]],estmt[assign[op_assi(+=),->expr[ident(rpp),ident(len)],->expr[ident(skb),ident(len)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),->expr[ident(rpp),ident(first)],ident(skb)]],estmt(NONE)],estmt[assign[simple_assi(=),*expr[->expr[ident(rpp),ident(last)]],ident(skb)]],estmt[assign[simple_assi(=),->expr[ident(rpp),ident(last)],&expr[->expr[ident(skb),ident(next)]]]],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_EPDU)],{}stmt[statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(l1l2),expr(N/H)]],estmt[assign[simple_assi(=),ident(len),binary[aop(N/H),binary[aop(N/H),array_a[ident(l1l2),const_i(0)],const_i(8)],array_a[ident(l1l2),const_i(1)]]]],estmt[assign[simple_assi(=),ident(len),condexpr3[ident(len),ident(len),const_i(0x10000)]]],estmt[call[ident(RXPRINTK),const_s(%s: PDU has %d bytes.\n),->expr[ident(card),ident(name)],ident(len)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const(N/H),->expr[ident(card),ident(name)],ident(len),->expr[ident(rpp),ident(len)],call[ident(readl),ident(SAR_REG_CDC)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_CRC)],{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: AAL5 CRC error.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(skb),call[ident(dev_alloc_skb),->expr[ident(rpp),ident(len)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: Can't alloc RX skb.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(dev_kfree_skb),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(sb),->expr[ident(rpp),ident(first)]]],for[assign[simple_assi(=),ident(i),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[call[ident(memcpy),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(data)],->expr[ident(sb),ident(len)]]],estmt[assign[simple_assi(=),ident(sb),->expr[ident(sb),ident(next)]]]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(skb),ident(next)],ident(NULL)]],estmt[call[ident(flush_rx_pool),ident(card),ident(rpp)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[call[ident(pci_unmap_single),->expr[ident(card),ident(pcidev)],call[ident(IDT77252_PRV_PADDR),ident(skb)],binary[aop(-),call[ident(skb_end_pointer),ident(skb)],->expr[ident(skb),ident(data)]],ident(PCI_DMA_FROMDEVICE)]],estmt[call[ident(sb_pool_remove),ident(card),ident(skb)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(3),ident(SAR_FB_SIZE_3),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(2),ident(SAR_FB_SIZE_2),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(1),ident(SAR_FB_SIZE_1),const_i(1)]],estmt[call[ident(add_rx_skb),ident(card),const_i(0),ident(SAR_FB_SIZE_0),const_i(1)]]]]],statem(N/H)],estmt(NONE)]]]] ==> prg2[def[fname(dequeue_rx),funtype(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(stat),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_4)]]]],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_IDLE)],{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: message about inactive connection.\n),->expr[ident(card),ident(name)]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(skb),call[ident(sb_pool_skb),ident(card),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_2)]]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: NULL skb in %s, rsqe: %08x %08x %08x %08x\n),->expr[ident(card),ident(name)],ident(__FUNCTION__),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_1)]],call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_2)]],call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_3)]],call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_4)]]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(header),call[ident(le32_to_cpu),->expr[ident(rsqe),ident(word_1)]]]],estmt[assign[simple_assi(=),ident(vpi),binary[aop(N/H),binary[aop(N/H),ident(header),const_i(16)],const_i(0x00ff)]]],estmt[assign[simple_assi(=),ident(vci),binary[aop(N/H),binary[aop(N/H),ident(header),const_i(0)],const_i(0xffff)]]],estmt[call[ident(RXPRINTK),const_s(%s: SDU for %d.%d received in buffer 0x%p (data 0x%p).\n),->expr[ident(card),ident(name)],ident(vpi),ident(vci),ident(skb),->expr[ident(skb),ident(data)]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: SDU received for out-of-range vc %u.%u\n),->expr[ident(card),ident(name)],ident(vpi),ident(vci)]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(vc),array_a[->expr[ident(card),ident(vcs)],call[ident(VPCI2VC),ident(card),ident(vpi),ident(vci)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: SDU received on non RX vc %u.%u\n),->expr[ident(card),ident(name)],ident(vpi),ident(vci)]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(vcc),->expr[ident(vc),ident(rx_vcc)]]],estmt[call[ident(pci_dma_sync_single_for_cpu),->expr[ident(card),ident(pcidev)],call[ident(IDT77252_PRV_PADDR),ident(skb)],binary[aop(-),call[ident(skb_end_pointer),ident(skb)],->expr[ident(skb),ident(data)]],ident(PCI_DMA_FROMDEVICE)]],sel_if[expr(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(cell),->expr[ident(skb),ident(data)]]],for[assign[simple_assi(=),ident(i),binary[aop(N/H),ident(stat),ident(SAR_RSQE_CELLCNT)]],ident(i),expr(N/H),{}stmt[sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: Can't allocate buffers for aal0.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(atomic_add),ident(i),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_drop)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: atm_charge() dropped aal0 packets.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(atomic_add),binary[aop(-),ident(i),const_i(1)],&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_drop)]]]],estmt[call[ident(dev_kfree_skb),ident(sb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(aal0),binary[aop(N/H),binary[aop(N/H),ident(vpi),ident(ATM_HDR_VPI_SHIFT)],binary[aop(N/H),ident(vci),ident(ATM_HDR_VCI_SHIFT)]]]],estmt[assign[op_assi(|=),ident(aal0),condexpr3[binary[aop(N/H),ident(stat),ident(SAR_RSQE_EPDU)],const_i(0x00000002),const_i(0)]]],estmt[assign[op_assi(|=),ident(aal0),condexpr3[binary[aop(N/H),ident(stat),ident(SAR_RSQE_CLP)],const_i(0x00000001),const_i(0)]]],estmt[assign[simple_assi(=),*expr[expr(N/H)],ident(aal0)]],estmt[call[ident(skb_put),ident(sb),sizeoftype_expr[type(N/H)]]],estmt[call[ident(memcpy),call[ident(skb_put),ident(sb),ident(ATM_CELL_PAYLOAD)],ident(cell),ident(ATM_CELL_PAYLOAD)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(sb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(sb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(sb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],estmt[assign[op_assi(+=),ident(cell),ident(ATM_CELL_PAYLOAD)]]]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(printk),const_s(%s: Unexpected AAL type in dequeue_rx(): %d.\n),->expr[ident(card),ident(name)],.expr[->expr[ident(vcc),ident(qos)],ident(aal)]]],estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(skb),ident(len)],binary[aop(*),binary[aop(N/H),ident(stat),ident(SAR_RSQE_CELLCNT)],ident(ATM_CELL_PAYLOAD)]]],estmt[assign[simple_assi(=),ident(rpp),&expr[.expr[->expr[ident(vc),ident(rcv)],ident(rx_pool)]]]],estmt[assign[op_assi(+=),->expr[ident(rpp),ident(len)],->expr[ident(skb),ident(len)]]],sel_if[expr(N/H),estmt[assign[simple_assi(=),->expr[ident(rpp),ident(first)],ident(skb)]],estmt(NONE)],estmt[assign[simple_assi(=),*expr[->expr[ident(rpp),ident(last)]],ident(skb)]],estmt[assign[simple_assi(=),->expr[ident(rpp),ident(last)],&expr[->expr[ident(skb),ident(next)]]]],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_EPDU)],{}stmt[statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(l1l2),expr(N/H)]],estmt[assign[simple_assi(=),ident(len),binary[aop(N/H),binary[aop(N/H),array_a[ident(l1l2),const_i(0)],const_i(8)],array_a[ident(l1l2),const_i(1)]]]],estmt[assign[simple_assi(=),ident(len),condexpr3[ident(len),ident(len),const_i(0x10000)]]],estmt[call[ident(RXPRINTK),const_s(%s: PDU has %d bytes.\n),->expr[ident(card),ident(name)],ident(len)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const(N/H),->expr[ident(card),ident(name)],ident(len),->expr[ident(rpp),ident(len)],call[ident(readl),ident(SAR_REG_CDC)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[binary[aop(N/H),ident(stat),ident(SAR_RSQE_CRC)],{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: AAL5 CRC error.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(skb),call[ident(dev_alloc_skb),->expr[ident(rpp),ident(len)]]]],sel_if[expr(N/H),{}stmt[estmt[call[ident(RXPRINTK),const_s(%s: Can't alloc RX skb.\n),->expr[ident(card),ident(name)]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx_err)]]]],statem(N/H)],estmt(NONE)],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(dev_kfree_skb),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(sb),->expr[ident(rpp),ident(first)]]],for[assign[simple_assi(=),ident(i),const_i(0)],expr(N/H),expr(N/H),{}stmt[estmt[call[ident(skb_copy_from_linear_data),ident(sb),call[ident(skb_put),ident(skb),->expr[ident(sb),ident(len)]],->expr[ident(sb),ident(len)]]],estmt[assign[simple_assi(=),ident(sb),->expr[ident(sb),ident(next)]]]]],estmt[call[ident(recycle_rx_pool_skb),ident(card),ident(rpp)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],statem(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(skb),ident(next)],ident(NULL)]],estmt[call[ident(flush_rx_pool),ident(card),ident(rpp)]],sel_if[expr(N/H),{}stmt[estmt[call[ident(recycle_rx_skb),ident(card),ident(skb)]],statem(N/H)],estmt(NONE)],estmt[call[ident(pci_unmap_single),->expr[ident(card),ident(pcidev)],call[ident(IDT77252_PRV_PADDR),ident(skb)],binary[aop(-),call[ident(skb_end_pointer),ident(skb)],->expr[ident(skb),ident(data)]],ident(PCI_DMA_FROMDEVICE)]],estmt[call[ident(sb_pool_remove),ident(card),ident(skb)]],estmt[call[ident(skb_trim),ident(skb),ident(len)]],estmt[assign[simple_assi(=),->expr[call[ident(ATM_SKB),ident(skb)],ident(vcc)],ident(vcc)]],estmt[call[ident(__net_timestamp),ident(skb)]],estmt[call[->expr[ident(vcc),ident(push)],ident(vcc),ident(skb)]],estmt[call[ident(atomic_inc),&expr[->expr[->expr[ident(vcc),ident(stats)],ident(rx)]]]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(3),ident(SAR_FB_SIZE_3),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(2),ident(SAR_FB_SIZE_2),const_i(1)]],sel_if[expr(N/H),estmt[call[ident(add_rx_skb),ident(card),const_i(1),ident(SAR_FB_SIZE_1),const_i(1)]],estmt[call[ident(add_rx_skb),ident(card),const_i(0),ident(SAR_FB_SIZE_0),const_i(1)]]]]],statem(N/H)],estmt(NONE)]]]]
	¶
]]
[[
call[ident(memcpy),&expr[meta(X0)],->expr[meta(X1),ident(data)],sizeof_expr[meta(X0)]] ==> call[ident(skb_copy_from_linear_data),meta(X1),&expr[meta(X0)],sizeof_expr[meta(X0)]]
	¶
call[ident(memcpy),&expr[meta(X0)],->expr[meta(X1),ident(data)],meta(X2)] ==> call[ident(skb_copy_from_linear_data),meta(X1),&expr[meta(X0)],meta(X2)]
	¶
call[ident(memcpy),meta(X0),->expr[meta(X1),ident(data)],sizeof_expr[meta(X2)]] ==> call[ident(skb_copy_from_linear_data),meta(X1),meta(X0),sizeof_expr[meta(X2)]]
	¶
call[ident(memcpy),meta(X0),->expr[meta(X1),ident(data)],meta(X2)] ==> call[ident(skb_copy_from_linear_data),meta(X1),meta(X0),meta(X2)]
	¶
estmt[call[ident(memcpy),&expr[meta(X0)],->expr[meta(X1),ident(data)],sizeof_expr[meta(X0)]]] ==> estmt[call[ident(skb_copy_from_linear_data),meta(X1),&expr[meta(X0)],sizeof_expr[meta(X0)]]]
	¶
estmt[call[ident(memcpy),&expr[meta(X0)],->expr[meta(X1),ident(data)],meta(X2)]] ==> estmt[call[ident(skb_copy_from_linear_data),meta(X1),&expr[meta(X0)],meta(X2)]]
	¶
estmt[call[ident(memcpy),meta(X0),->expr[meta(X1),ident(data)],sizeof_expr[meta(X2)]]] ==> estmt[call[ident(skb_copy_from_linear_data),meta(X1),meta(X0),sizeof_expr[meta(X2)]]]
	¶
estmt[call[ident(memcpy),meta(X0),->expr[meta(X1),ident(data)],meta(X2)]] ==> estmt[call[ident(skb_copy_from_linear_data),meta(X1),meta(X0),meta(X2)]]
	¶
{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(ptask),call[ident(kmem_cache_alloc),ident(packet_task_cache),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(skb),call[ident(skb_share_check),ident(skb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[call[ident(memcpy),&expr[ident(hdr_buf)],->expr[ident(skb),ident(data)],sizeof_expr[ident(hdr_buf)]]],estmt[call[ident(skb_pull),ident(skb),ident(ETH1394_HLEN)]],estmt[assign[simple_assi(=),ident(proto),.expr[ident(hdr_buf),ident(h_proto)]]],estmt[assign[simple_assi(=),ident(dg_size),->expr[ident(skb),ident(len)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(tx_type),ident(ETH1394_GASP)]],estmt[assign[simple_assi(=),ident(dest_node),binary[aop(N/H),ident(LOCAL_BUS),ident(ALL_NODES)]]],estmt[assign[simple_assi(=),ident(max_payload),binary[aop(-),->expr[ident(priv),ident(bc_maxpayload)],ident(ETHER1394_GASP_OVERHEAD)]]],estmt[call[ident(BUG_ON),expr(N/H)]],estmt[assign[simple_assi(=),ident(dgl),->expr[ident(priv),ident(bc_dgl)]]],sel_if[expr(N/H),estmt[expr(N/H)],estmt(NONE)]],{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(node),call[ident(eth1394_find_node_guid),&expr[->expr[ident(priv),ident(ip_node_list)]],call[ident(be64_to_cpu),ident(guid)]]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(node_info),expr(N/H)]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(dest_node),->expr[->expr[->expr[ident(node),ident(ud)],ident(ne)],ident(nodeid)]]],estmt[assign[simple_assi(=),ident(max_payload),->expr[ident(node_info),ident(maxpayload)]]],estmt[call[ident(BUG_ON),expr(N/H)]],estmt[assign[simple_assi(=),ident(dgl),->expr[ident(node_info),ident(dgl)]]],sel_if[expr(N/H),estmt[expr(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(tx_type),ident(ETH1394_WRREQ)]]]],sel_if[expr(N/H),estmt[call[ident(ether1394_arp_to_1394arp),ident(skb),ident(dev)]],estmt(NONE)],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word1)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word2)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word3)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word4)],const_i(0)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(skb)],ident(skb)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(priv)],ident(priv)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(tx_type)],ident(tx_type)]],sel_if[expr(N/H),{}stmt[statem(N/H),estmt[call[ident(spin_lock_irqsave),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[assign[simple_assi(=),ident(addr),->expr[ident(node_info),ident(fifo)]]],estmt[call[ident(spin_unlock_irqrestore),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(addr)],ident(addr)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(dest_node)],ident(dest_node)]]],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(tx_type)],ident(tx_type)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(max_payload)],ident(max_payload)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(outstanding_pkts)],call[ident(ether1394_encapsulate_prep),ident(max_payload),ident(proto),&expr[->expr[ident(ptask),ident(hdr)]],ident(dg_size),ident(dgl)]]],estmt[assign[simple_assi(=),ident(tx_len),call[ident(ether1394_encapsulate),ident(skb),ident(max_payload),&expr[->expr[ident(ptask),ident(hdr)]]]]],estmt[assign[simple_assi(=),->expr[ident(dev),ident(trans_start)],ident(jiffies)]],sel_if[call[ident(ether1394_send_packet),ident(ptask),ident(tx_len)],{}stmt[sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[call[ident(skb_pull),ident(skb),const_i(4)]],estmt[call[ident(ether1394_header),ident(skb),ident(dev),call[ident(ntohs),.expr[ident(hdr_buf),ident(h_proto)]],.expr[ident(hdr_buf),ident(h_dest)],ident(NULL),const_i(0)]],estmt[call[ident(netif_stop_queue),ident(dev)]],estmt[assign[simple_assi(=),->expr[ident(priv),ident(wake_node)],ident(dest_node)]],estmt[call[ident(schedule_work),&expr[->expr[ident(priv),ident(wake)]]]],estmt[call[ident(kmem_cache_free),ident(packet_task_cache),ident(ptask)]],st_return[ident(NETDEV_TX_BUSY)]],estmt(NONE)],st_return[ident(NETDEV_TX_OK)],statem(N/H),sel_if[expr(N/H),estmt[call[ident(dev_kfree_skb),ident(skb)]],estmt(NONE)],estmt[call[ident(spin_lock_irqsave),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[expr(N/H)],estmt[expr(N/H)],estmt[call[ident(spin_unlock_irqrestore),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],st_return[ident(NETDEV_TX_OK)]] ==> {}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(ptask),call[ident(kmem_cache_alloc),ident(packet_task_cache),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(skb),call[ident(skb_share_check),ident(skb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[call[ident(skb_copy_from_linear_data),ident(skb),&expr[ident(hdr_buf)],sizeof_expr[ident(hdr_buf)]]],estmt[call[ident(skb_pull),ident(skb),ident(ETH1394_HLEN)]],estmt[assign[simple_assi(=),ident(proto),.expr[ident(hdr_buf),ident(h_proto)]]],estmt[assign[simple_assi(=),ident(dg_size),->expr[ident(skb),ident(len)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(tx_type),ident(ETH1394_GASP)]],estmt[assign[simple_assi(=),ident(dest_node),binary[aop(N/H),ident(LOCAL_BUS),ident(ALL_NODES)]]],estmt[assign[simple_assi(=),ident(max_payload),binary[aop(-),->expr[ident(priv),ident(bc_maxpayload)],ident(ETHER1394_GASP_OVERHEAD)]]],estmt[call[ident(BUG_ON),expr(N/H)]],estmt[assign[simple_assi(=),ident(dgl),->expr[ident(priv),ident(bc_dgl)]]],sel_if[expr(N/H),estmt[expr(N/H)],estmt(NONE)]],{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(node),call[ident(eth1394_find_node_guid),&expr[->expr[ident(priv),ident(ip_node_list)]],call[ident(be64_to_cpu),ident(guid)]]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(node_info),expr(N/H)]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(dest_node),->expr[->expr[->expr[ident(node),ident(ud)],ident(ne)],ident(nodeid)]]],estmt[assign[simple_assi(=),ident(max_payload),->expr[ident(node_info),ident(maxpayload)]]],estmt[call[ident(BUG_ON),expr(N/H)]],estmt[assign[simple_assi(=),ident(dgl),->expr[ident(node_info),ident(dgl)]]],sel_if[expr(N/H),estmt[expr(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(tx_type),ident(ETH1394_WRREQ)]]]],sel_if[expr(N/H),estmt[call[ident(ether1394_arp_to_1394arp),ident(skb),ident(dev)]],estmt(NONE)],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word1)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word2)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word3)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word4)],const_i(0)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(skb)],ident(skb)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(priv)],ident(priv)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(tx_type)],ident(tx_type)]],sel_if[expr(N/H),{}stmt[statem(N/H),estmt[call[ident(spin_lock_irqsave),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[assign[simple_assi(=),ident(addr),->expr[ident(node_info),ident(fifo)]]],estmt[call[ident(spin_unlock_irqrestore),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(addr)],ident(addr)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(dest_node)],ident(dest_node)]]],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(tx_type)],ident(tx_type)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(max_payload)],ident(max_payload)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(outstanding_pkts)],call[ident(ether1394_encapsulate_prep),ident(max_payload),ident(proto),&expr[->expr[ident(ptask),ident(hdr)]],ident(dg_size),ident(dgl)]]],estmt[assign[simple_assi(=),ident(tx_len),call[ident(ether1394_encapsulate),ident(skb),ident(max_payload),&expr[->expr[ident(ptask),ident(hdr)]]]]],estmt[assign[simple_assi(=),->expr[ident(dev),ident(trans_start)],ident(jiffies)]],sel_if[call[ident(ether1394_send_packet),ident(ptask),ident(tx_len)],{}stmt[sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[call[ident(skb_pull),ident(skb),const_i(4)]],estmt[call[ident(ether1394_header),ident(skb),ident(dev),call[ident(ntohs),.expr[ident(hdr_buf),ident(h_proto)]],.expr[ident(hdr_buf),ident(h_dest)],ident(NULL),const_i(0)]],estmt[call[ident(netif_stop_queue),ident(dev)]],estmt[assign[simple_assi(=),->expr[ident(priv),ident(wake_node)],ident(dest_node)]],estmt[call[ident(schedule_work),&expr[->expr[ident(priv),ident(wake)]]]],estmt[call[ident(kmem_cache_free),ident(packet_task_cache),ident(ptask)]],st_return[ident(NETDEV_TX_BUSY)]],estmt(NONE)],st_return[ident(NETDEV_TX_OK)],statem(N/H),sel_if[expr(N/H),estmt[call[ident(dev_kfree_skb),ident(skb)]],estmt(NONE)],estmt[call[ident(spin_lock_irqsave),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[expr(N/H)],estmt[expr(N/H)],estmt[call[ident(spin_unlock_irqrestore),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],st_return[ident(NETDEV_TX_OK)]]
	¶
def[fname(ether1394_tx),funtype(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(ptask),call[ident(kmem_cache_alloc),ident(packet_task_cache),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(skb),call[ident(skb_share_check),ident(skb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[call[ident(memcpy),&expr[ident(hdr_buf)],->expr[ident(skb),ident(data)],sizeof_expr[ident(hdr_buf)]]],estmt[call[ident(skb_pull),ident(skb),ident(ETH1394_HLEN)]],estmt[assign[simple_assi(=),ident(proto),.expr[ident(hdr_buf),ident(h_proto)]]],estmt[assign[simple_assi(=),ident(dg_size),->expr[ident(skb),ident(len)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(tx_type),ident(ETH1394_GASP)]],estmt[assign[simple_assi(=),ident(dest_node),binary[aop(N/H),ident(LOCAL_BUS),ident(ALL_NODES)]]],estmt[assign[simple_assi(=),ident(max_payload),binary[aop(-),->expr[ident(priv),ident(bc_maxpayload)],ident(ETHER1394_GASP_OVERHEAD)]]],estmt[call[ident(BUG_ON),expr(N/H)]],estmt[assign[simple_assi(=),ident(dgl),->expr[ident(priv),ident(bc_dgl)]]],sel_if[expr(N/H),estmt[expr(N/H)],estmt(NONE)]],{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(node),call[ident(eth1394_find_node_guid),&expr[->expr[ident(priv),ident(ip_node_list)]],call[ident(be64_to_cpu),ident(guid)]]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(node_info),expr(N/H)]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(dest_node),->expr[->expr[->expr[ident(node),ident(ud)],ident(ne)],ident(nodeid)]]],estmt[assign[simple_assi(=),ident(max_payload),->expr[ident(node_info),ident(maxpayload)]]],estmt[call[ident(BUG_ON),expr(N/H)]],estmt[assign[simple_assi(=),ident(dgl),->expr[ident(node_info),ident(dgl)]]],sel_if[expr(N/H),estmt[expr(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(tx_type),ident(ETH1394_WRREQ)]]]],sel_if[expr(N/H),estmt[call[ident(ether1394_arp_to_1394arp),ident(skb),ident(dev)]],estmt(NONE)],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word1)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word2)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word3)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word4)],const_i(0)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(skb)],ident(skb)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(priv)],ident(priv)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(tx_type)],ident(tx_type)]],sel_if[expr(N/H),{}stmt[statem(N/H),estmt[call[ident(spin_lock_irqsave),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[assign[simple_assi(=),ident(addr),->expr[ident(node_info),ident(fifo)]]],estmt[call[ident(spin_unlock_irqrestore),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(addr)],ident(addr)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(dest_node)],ident(dest_node)]]],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(tx_type)],ident(tx_type)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(max_payload)],ident(max_payload)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(outstanding_pkts)],call[ident(ether1394_encapsulate_prep),ident(max_payload),ident(proto),&expr[->expr[ident(ptask),ident(hdr)]],ident(dg_size),ident(dgl)]]],estmt[assign[simple_assi(=),ident(tx_len),call[ident(ether1394_encapsulate),ident(skb),ident(max_payload),&expr[->expr[ident(ptask),ident(hdr)]]]]],estmt[assign[simple_assi(=),->expr[ident(dev),ident(trans_start)],ident(jiffies)]],sel_if[call[ident(ether1394_send_packet),ident(ptask),ident(tx_len)],{}stmt[sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[call[ident(skb_pull),ident(skb),const_i(4)]],estmt[call[ident(ether1394_header),ident(skb),ident(dev),call[ident(ntohs),.expr[ident(hdr_buf),ident(h_proto)]],.expr[ident(hdr_buf),ident(h_dest)],ident(NULL),const_i(0)]],estmt[call[ident(netif_stop_queue),ident(dev)]],estmt[assign[simple_assi(=),->expr[ident(priv),ident(wake_node)],ident(dest_node)]],estmt[call[ident(schedule_work),&expr[->expr[ident(priv),ident(wake)]]]],estmt[call[ident(kmem_cache_free),ident(packet_task_cache),ident(ptask)]],st_return[ident(NETDEV_TX_BUSY)]],estmt(NONE)],st_return[ident(NETDEV_TX_OK)],statem(N/H),sel_if[expr(N/H),estmt[call[ident(dev_kfree_skb),ident(skb)]],estmt(NONE)],estmt[call[ident(spin_lock_irqsave),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[expr(N/H)],estmt[expr(N/H)],estmt[call[ident(spin_unlock_irqrestore),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],st_return[ident(NETDEV_TX_OK)]]] ==> def[fname(ether1394_tx),funtype(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(ptask),call[ident(kmem_cache_alloc),ident(packet_task_cache),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(skb),call[ident(skb_share_check),ident(skb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[call[ident(skb_copy_from_linear_data),ident(skb),&expr[ident(hdr_buf)],sizeof_expr[ident(hdr_buf)]]],estmt[call[ident(skb_pull),ident(skb),ident(ETH1394_HLEN)]],estmt[assign[simple_assi(=),ident(proto),.expr[ident(hdr_buf),ident(h_proto)]]],estmt[assign[simple_assi(=),ident(dg_size),->expr[ident(skb),ident(len)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(tx_type),ident(ETH1394_GASP)]],estmt[assign[simple_assi(=),ident(dest_node),binary[aop(N/H),ident(LOCAL_BUS),ident(ALL_NODES)]]],estmt[assign[simple_assi(=),ident(max_payload),binary[aop(-),->expr[ident(priv),ident(bc_maxpayload)],ident(ETHER1394_GASP_OVERHEAD)]]],estmt[call[ident(BUG_ON),expr(N/H)]],estmt[assign[simple_assi(=),ident(dgl),->expr[ident(priv),ident(bc_dgl)]]],sel_if[expr(N/H),estmt[expr(N/H)],estmt(NONE)]],{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(node),call[ident(eth1394_find_node_guid),&expr[->expr[ident(priv),ident(ip_node_list)]],call[ident(be64_to_cpu),ident(guid)]]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(node_info),expr(N/H)]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(dest_node),->expr[->expr[->expr[ident(node),ident(ud)],ident(ne)],ident(nodeid)]]],estmt[assign[simple_assi(=),ident(max_payload),->expr[ident(node_info),ident(maxpayload)]]],estmt[call[ident(BUG_ON),expr(N/H)]],estmt[assign[simple_assi(=),ident(dgl),->expr[ident(node_info),ident(dgl)]]],sel_if[expr(N/H),estmt[expr(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(tx_type),ident(ETH1394_WRREQ)]]]],sel_if[expr(N/H),estmt[call[ident(ether1394_arp_to_1394arp),ident(skb),ident(dev)]],estmt(NONE)],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word1)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word2)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word3)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word4)],const_i(0)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(skb)],ident(skb)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(priv)],ident(priv)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(tx_type)],ident(tx_type)]],sel_if[expr(N/H),{}stmt[statem(N/H),estmt[call[ident(spin_lock_irqsave),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[assign[simple_assi(=),ident(addr),->expr[ident(node_info),ident(fifo)]]],estmt[call[ident(spin_unlock_irqrestore),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(addr)],ident(addr)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(dest_node)],ident(dest_node)]]],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(tx_type)],ident(tx_type)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(max_payload)],ident(max_payload)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(outstanding_pkts)],call[ident(ether1394_encapsulate_prep),ident(max_payload),ident(proto),&expr[->expr[ident(ptask),ident(hdr)]],ident(dg_size),ident(dgl)]]],estmt[assign[simple_assi(=),ident(tx_len),call[ident(ether1394_encapsulate),ident(skb),ident(max_payload),&expr[->expr[ident(ptask),ident(hdr)]]]]],estmt[assign[simple_assi(=),->expr[ident(dev),ident(trans_start)],ident(jiffies)]],sel_if[call[ident(ether1394_send_packet),ident(ptask),ident(tx_len)],{}stmt[sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[call[ident(skb_pull),ident(skb),const_i(4)]],estmt[call[ident(ether1394_header),ident(skb),ident(dev),call[ident(ntohs),.expr[ident(hdr_buf),ident(h_proto)]],.expr[ident(hdr_buf),ident(h_dest)],ident(NULL),const_i(0)]],estmt[call[ident(netif_stop_queue),ident(dev)]],estmt[assign[simple_assi(=),->expr[ident(priv),ident(wake_node)],ident(dest_node)]],estmt[call[ident(schedule_work),&expr[->expr[ident(priv),ident(wake)]]]],estmt[call[ident(kmem_cache_free),ident(packet_task_cache),ident(ptask)]],st_return[ident(NETDEV_TX_BUSY)]],estmt(NONE)],st_return[ident(NETDEV_TX_OK)],statem(N/H),sel_if[expr(N/H),estmt[call[ident(dev_kfree_skb),ident(skb)]],estmt(NONE)],estmt[call[ident(spin_lock_irqsave),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[expr(N/H)],estmt[expr(N/H)],estmt[call[ident(spin_unlock_irqrestore),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],st_return[ident(NETDEV_TX_OK)]]]
	¶
prg2[def[fname(ether1394_tx),funtype(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(ptask),call[ident(kmem_cache_alloc),ident(packet_task_cache),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(skb),call[ident(skb_share_check),ident(skb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[call[ident(memcpy),&expr[ident(hdr_buf)],->expr[ident(skb),ident(data)],sizeof_expr[ident(hdr_buf)]]],estmt[call[ident(skb_pull),ident(skb),ident(ETH1394_HLEN)]],estmt[assign[simple_assi(=),ident(proto),.expr[ident(hdr_buf),ident(h_proto)]]],estmt[assign[simple_assi(=),ident(dg_size),->expr[ident(skb),ident(len)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(tx_type),ident(ETH1394_GASP)]],estmt[assign[simple_assi(=),ident(dest_node),binary[aop(N/H),ident(LOCAL_BUS),ident(ALL_NODES)]]],estmt[assign[simple_assi(=),ident(max_payload),binary[aop(-),->expr[ident(priv),ident(bc_maxpayload)],ident(ETHER1394_GASP_OVERHEAD)]]],estmt[call[ident(BUG_ON),expr(N/H)]],estmt[assign[simple_assi(=),ident(dgl),->expr[ident(priv),ident(bc_dgl)]]],sel_if[expr(N/H),estmt[expr(N/H)],estmt(NONE)]],{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(node),call[ident(eth1394_find_node_guid),&expr[->expr[ident(priv),ident(ip_node_list)]],call[ident(be64_to_cpu),ident(guid)]]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(node_info),expr(N/H)]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(dest_node),->expr[->expr[->expr[ident(node),ident(ud)],ident(ne)],ident(nodeid)]]],estmt[assign[simple_assi(=),ident(max_payload),->expr[ident(node_info),ident(maxpayload)]]],estmt[call[ident(BUG_ON),expr(N/H)]],estmt[assign[simple_assi(=),ident(dgl),->expr[ident(node_info),ident(dgl)]]],sel_if[expr(N/H),estmt[expr(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(tx_type),ident(ETH1394_WRREQ)]]]],sel_if[expr(N/H),estmt[call[ident(ether1394_arp_to_1394arp),ident(skb),ident(dev)]],estmt(NONE)],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word1)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word2)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word3)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word4)],const_i(0)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(skb)],ident(skb)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(priv)],ident(priv)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(tx_type)],ident(tx_type)]],sel_if[expr(N/H),{}stmt[statem(N/H),estmt[call[ident(spin_lock_irqsave),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[assign[simple_assi(=),ident(addr),->expr[ident(node_info),ident(fifo)]]],estmt[call[ident(spin_unlock_irqrestore),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(addr)],ident(addr)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(dest_node)],ident(dest_node)]]],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(tx_type)],ident(tx_type)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(max_payload)],ident(max_payload)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(outstanding_pkts)],call[ident(ether1394_encapsulate_prep),ident(max_payload),ident(proto),&expr[->expr[ident(ptask),ident(hdr)]],ident(dg_size),ident(dgl)]]],estmt[assign[simple_assi(=),ident(tx_len),call[ident(ether1394_encapsulate),ident(skb),ident(max_payload),&expr[->expr[ident(ptask),ident(hdr)]]]]],estmt[assign[simple_assi(=),->expr[ident(dev),ident(trans_start)],ident(jiffies)]],sel_if[call[ident(ether1394_send_packet),ident(ptask),ident(tx_len)],{}stmt[sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[call[ident(skb_pull),ident(skb),const_i(4)]],estmt[call[ident(ether1394_header),ident(skb),ident(dev),call[ident(ntohs),.expr[ident(hdr_buf),ident(h_proto)]],.expr[ident(hdr_buf),ident(h_dest)],ident(NULL),const_i(0)]],estmt[call[ident(netif_stop_queue),ident(dev)]],estmt[assign[simple_assi(=),->expr[ident(priv),ident(wake_node)],ident(dest_node)]],estmt[call[ident(schedule_work),&expr[->expr[ident(priv),ident(wake)]]]],estmt[call[ident(kmem_cache_free),ident(packet_task_cache),ident(ptask)]],st_return[ident(NETDEV_TX_BUSY)]],estmt(NONE)],st_return[ident(NETDEV_TX_OK)],statem(N/H),sel_if[expr(N/H),estmt[call[ident(dev_kfree_skb),ident(skb)]],estmt(NONE)],estmt[call[ident(spin_lock_irqsave),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[expr(N/H)],estmt[expr(N/H)],estmt[call[ident(spin_unlock_irqrestore),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],st_return[ident(NETDEV_TX_OK)]]]] ==> prg2[def[fname(ether1394_tx),funtype(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[assign[simple_assi(=),ident(ptask),call[ident(kmem_cache_alloc),ident(packet_task_cache),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(skb),call[ident(skb_share_check),ident(skb),ident(GFP_ATOMIC)]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[call[ident(skb_copy_from_linear_data),ident(skb),&expr[ident(hdr_buf)],sizeof_expr[ident(hdr_buf)]]],estmt[call[ident(skb_pull),ident(skb),ident(ETH1394_HLEN)]],estmt[assign[simple_assi(=),ident(proto),.expr[ident(hdr_buf),ident(h_proto)]]],estmt[assign[simple_assi(=),ident(dg_size),->expr[ident(skb),ident(len)]]],sel_if[expr(N/H),{}stmt[estmt[assign[simple_assi(=),ident(tx_type),ident(ETH1394_GASP)]],estmt[assign[simple_assi(=),ident(dest_node),binary[aop(N/H),ident(LOCAL_BUS),ident(ALL_NODES)]]],estmt[assign[simple_assi(=),ident(max_payload),binary[aop(-),->expr[ident(priv),ident(bc_maxpayload)],ident(ETHER1394_GASP_OVERHEAD)]]],estmt[call[ident(BUG_ON),expr(N/H)]],estmt[assign[simple_assi(=),ident(dgl),->expr[ident(priv),ident(bc_dgl)]]],sel_if[expr(N/H),estmt[expr(N/H)],estmt(NONE)]],{}stmt[statem(N/H),estmt[assign[simple_assi(=),ident(node),call[ident(eth1394_find_node_guid),&expr[->expr[ident(priv),ident(ip_node_list)]],call[ident(be64_to_cpu),ident(guid)]]]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(node_info),expr(N/H)]],sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[assign[simple_assi(=),ident(dest_node),->expr[->expr[->expr[ident(node),ident(ud)],ident(ne)],ident(nodeid)]]],estmt[assign[simple_assi(=),ident(max_payload),->expr[ident(node_info),ident(maxpayload)]]],estmt[call[ident(BUG_ON),expr(N/H)]],estmt[assign[simple_assi(=),ident(dgl),->expr[ident(node_info),ident(dgl)]]],sel_if[expr(N/H),estmt[expr(N/H)],estmt(NONE)],estmt[assign[simple_assi(=),ident(tx_type),ident(ETH1394_WRREQ)]]]],sel_if[expr(N/H),estmt[call[ident(ether1394_arp_to_1394arp),ident(skb),ident(dev)]],estmt(NONE)],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word1)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word2)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word3)],const_i(0)]],estmt[assign[simple_assi(=),.expr[.expr[->expr[ident(ptask),ident(hdr)],ident(words)],ident(word4)],const_i(0)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(skb)],ident(skb)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(priv)],ident(priv)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(tx_type)],ident(tx_type)]],sel_if[expr(N/H),{}stmt[statem(N/H),estmt[call[ident(spin_lock_irqsave),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[assign[simple_assi(=),ident(addr),->expr[ident(node_info),ident(fifo)]]],estmt[call[ident(spin_unlock_irqrestore),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(addr)],ident(addr)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(dest_node)],ident(dest_node)]]],estmt(NONE)],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(tx_type)],ident(tx_type)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(max_payload)],ident(max_payload)]],estmt[assign[simple_assi(=),->expr[ident(ptask),ident(outstanding_pkts)],call[ident(ether1394_encapsulate_prep),ident(max_payload),ident(proto),&expr[->expr[ident(ptask),ident(hdr)]],ident(dg_size),ident(dgl)]]],estmt[assign[simple_assi(=),ident(tx_len),call[ident(ether1394_encapsulate),ident(skb),ident(max_payload),&expr[->expr[ident(ptask),ident(hdr)]]]]],estmt[assign[simple_assi(=),->expr[ident(dev),ident(trans_start)],ident(jiffies)]],sel_if[call[ident(ether1394_send_packet),ident(ptask),ident(tx_len)],{}stmt[sel_if[expr(N/H),statem(N/H),estmt(NONE)],estmt[call[ident(skb_pull),ident(skb),const_i(4)]],estmt[call[ident(ether1394_header),ident(skb),ident(dev),call[ident(ntohs),.expr[ident(hdr_buf),ident(h_proto)]],.expr[ident(hdr_buf),ident(h_dest)],ident(NULL),const_i(0)]],estmt[call[ident(netif_stop_queue),ident(dev)]],estmt[assign[simple_assi(=),->expr[ident(priv),ident(wake_node)],ident(dest_node)]],estmt[call[ident(schedule_work),&expr[->expr[ident(priv),ident(wake)]]]],estmt[call[ident(kmem_cache_free),ident(packet_task_cache),ident(ptask)]],st_return[ident(NETDEV_TX_BUSY)]],estmt(NONE)],st_return[ident(NETDEV_TX_OK)],statem(N/H),sel_if[expr(N/H),estmt[call[ident(dev_kfree_skb),ident(skb)]],estmt(NONE)],estmt[call[ident(spin_lock_irqsave),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],estmt[expr(N/H)],estmt[expr(N/H)],estmt[call[ident(spin_unlock_irqrestore),&expr[->expr[ident(priv),ident(lock)]],ident(flags)]],st_return[ident(NETDEV_TX_OK)]]]]
	¶
]]
"Real" db mining starting
Closing
printing
{{{
call[ident(memcpy),meta(X0),->expr[meta(X1),ident(data)],meta(X2)] ==> call[ident(skb_copy_from_linear_data),meta(X1),meta(X0),meta(X2)]
 ¶ 
}}}

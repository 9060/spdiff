Spec. file is: specfile
Parsed two: extmem.c.orig, extmem.c.new
Parsed two: dcssblk.c.orig, dcssblk.c.new
Parsed two: raw3270.c.orig, raw3270.c.new
Comment
Comment
Comment
Reading file pair raw3270.c.orig raw3270.c.new
[Visitor] macrodecl DEFINE_MUTEX
[Visitor] macrodecl DECLARE_WAIT_QUEUE_HEAD
[Visitor] macrodecl DEFINE_MUTEX
[Visitor] macrodecl DEVICE_ATTR
[Visitor] macrodecl DEVICE_ATTR
[Visitor] macrodecl DEVICE_ATTR
[Visitor] macrodecl DEFINE_MUTEX
[Visitor] macrodecl LIST_HEAD
[Visitor] macrodecl DECLARE_WAIT_QUEUE_HEAD
[Visitor] macrodecl DEFINE_MUTEX
[Visitor] macrodecl DEVICE_ATTR
[Visitor] macrodecl DEVICE_ATTR
[Visitor] macrodecl DEVICE_ATTR
[Visitor] macrodecl LIST_HEAD
Reading file pair dcssblk.c.orig dcssblk.c.new
[Visitor] macrodecl DEVICE_ATTR
[Visitor] macrodecl DEVICE_ATTR
[Visitor] macrodecl DEVICE_ATTR
[Visitor] macrodecl DEVICE_ATTR
[Visitor] macrodecl DEVICE_ATTR
[Visitor] macrodecl DEVICE_ATTR
[Visitor] macrodecl DEVICE_ATTR
[Visitor] macrodecl DEVICE_ATTR
[Visitor] macrodecl LIST_HEAD
Reading file pair extmem.c.orig extmem.c.new
[Visitor] macrodecl DEFINE_MUTEX
[Visitor] macrodecl DEFINE_MUTEX
[Visitor] macrodecl LIST_HEAD
macro(DEFINE_MUTEX[raw3270_mutex])
macro(DECLARE_WAIT_QUEUE_HEAD[raw3270_wait_queue])
macro(DEFINE_MUTEX[raw3270_init_mutex])
macro(DEVICE_ATTR[model,0444,raw3270_model_show,NULL])
macro(DEVICE_ATTR[rows,0444,raw3270_rows_show,NULL])
macro(DEVICE_ATTR[columns,0444,raw3270_columns_show,NULL])
macro(DEVICE_ATTR[add,S_IWUSR,NULL,dcssblk_add_store])
macro(DEVICE_ATTR[remove,S_IWUSR,NULL,dcssblk_remove_store])
macro(DEVICE_ATTR[save,S_IWUSR|S_IRUGO,dcssblk_save_show,dcssblk_save_store])
macro(DEVICE_ATTR[shared,S_IWUSR|S_IRUGO,dcssblk_shared_show,dcssblk_shared_store])
macro(DEFINE_MUTEX[dcss_lock])
EBUSY EBUSY -[EBUSY] -[EBUSY] list_del list_del out labeled[out,return[rc];] labeled[out,return[rc];]; out out; atomic_read atomic_read ENOENT ENOENT -[ENOENT] -[ENOENT] rc=0 rc=0 rc=0 rc=0; - N/H N/H N/H NULL NULL N/H EIO EIO -[EIO] -[EIO] != || && TYPEDEXP[unsigned long] unsigned long btype[unsigned long] unsigned long return[rc] return[rc]; break break; == long rc < rc onedecl[rc,signed int,storage[nosto,notinline]] dlist[onedecl[rc,signed int,storage[nosto,notinline]]] dlist[onedecl[rc,signed int,storage[nosto,notinline]]]; TYPEDEXP[*void] memcpy memcpy + pointer[void] *void rc BUG_ON BUG_ON N/A kfree kfree kmalloc kmalloc > none none; ENOMEM ENOMEM -[ENOMEM] -[ENOMEM] GFP_KERNEL GFP_KERNEL | kzalloc kzalloc nosto storage[nosto,notinline] unknown 1 1 1 8 8 8 >> & TYPEDEXP[*char] char btype[char] char pointer[char] *char  void void unsigned TYPEDEXP[signed int] 0 0 0 int signed signed int btype[signed int] signed int list_head struct list_head TYPEDEXP[struct list_head] LIST_HEAD_INIT LIST_HEAD_INIT N/H () dlist[()] notinline static storage[static,notinline] asm slab.h includeN[linux,slab.h] module.h includeN[linux,module.h] linux 
[Main] Constructing all safe parts for 3 term pairs
[Main] Making safe parts for pair 1
[Main] terms that changed: 
macro(LIST_HEAD[raw3270_notifier])
macro(LIST_HEAD[raw3270_devices])
[Main] abstracted one pair
[Main] Making safe parts for pair 2
[Main] terms that changed: 
macro(LIST_HEAD[dcssblk_devices])
macro(DEVICE_ATTR[add,S_IWUSR,NULL,dcssblk_add_store])
macro(DEVICE_ATTR[remove,S_IWUSR,NULL,dcssblk_remove_store])
macro(DEVICE_ATTR[save,S_IWUSR|S_IRUGO,dcssblk_save_show,dcssblk_save_store])
macro(DEVICE_ATTR[shared,S_IWUSR|S_IRUGO,dcssblk_shared_show,dcssblk_shared_store])
macro(LIST_HEAD[dcssblk_devices])
macro(DEVICE_ATTR[add,S_IWUSR,NULL,dcssblk_add_store])
macro(DEVICE_ATTR[remove,S_IWUSR,NULL,dcssblk_remove_store])
macro(DEVICE_ATTR[save,S_IWUSR|S_IRUGO,dcssblk_save_show,dcssblk_save_store])
macro(DEVICE_ATTR[shared,S_IWUSR|S_IRUGO,dcssblk_shared_show,dcssblk_shared_store])
macro(DEVICE_ATTR[add,S_IWUSR,NULL,dcssblk_add_store])
macro(DEVICE_ATTR[remove,S_IWUSR,NULL,dcssblk_remove_store])
macro(DEVICE_ATTR[save,S_IWUSR|S_IRUGO,dcssblk_save_show,dcssblk_save_store])
macro(DEVICE_ATTR[shared,S_IWUSR|S_IRUGO,dcssblk_shared_show,dcssblk_shared_store])
macro(DEVICE_ATTR[add,S_IWUSR,NULL,dcssblk_add_store])
macro(DEVICE_ATTR[remove,S_IWUSR,NULL,dcssblk_remove_store])
macro(DEVICE_ATTR[save,S_IWUSR|S_IRUGO,dcssblk_save_show,dcssblk_save_store])
macro(DEVICE_ATTR[shared,S_IWUSR|S_IRUGO,dcssblk_shared_show,dcssblk_shared_store])
macro(LIST_HEAD[dcssblk_devices])
[Main] abstracted one pair
[Main] Making safe parts for pair 3
[Main] terms that changed: 
macro(LIST_HEAD[dcss_list])
macro(DEFINE_MUTEX[dcss_lock])
macro(LIST_HEAD[dcss_list])
macro(DEFINE_MUTEX[dcss_lock])
macro(DEFINE_MUTEX[dcss_lock])
macro(DEFINE_MUTEX[dcss_lock])
macro(LIST_HEAD[dcss_list])
[Main] abstracted one pair
[Main] filtering all safe patches.
[Main] Finding unit patches with minimum support at least: 3
[Main] generating solutions...
[Main] min sup = 3
[Main] found 1 solutions
[Main] solution #1
{{{
@@
struct list_head X2;
X1;
X0;
@@
- X0(X1,&ref[X2])
+ X0(X1,&ref[X2])
}}}

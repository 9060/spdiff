Spec. file is: specfile
Parsed two: leds.c.orig, leds.c.new
Parsed two: lo.c.orig, lo.c.new
Parsed two: main.c.orig, main.c.new
Comment
Comment
Comment
Comment
Reading file pair main.c.orig main.c.new
Reading file pair lo.c.orig lo.c.new
Reading file pair leds.c.orig leds.c.new
sprom ctl ctl r1 sprom dev->dev->bus dev->dev->bus bus 0xFF 0xFF 0xFF return[err] return[err]; err err err ++[i] postfix[++[i]] postfix[++[i]] EINVAL EINVAL -[EINVAL] -[EINVAL] NULL pointer[void] *void TYPEDEXP[*void] NULL TYPEDEXP[typeName[u8,unknown]] break break; phy dev->phy dev->phy i i=0 i=0 dev->wl dev->wl i i onedecl[i,signed int,storage[nosto,notinline]] dlist[onedecl[i,signed int,storage[nosto,notinline]]] dlist[onedecl[i,signed int,storage[nosto,notinline]]]; typeName[u8,unknown] << u8 typeName[u8,unknown] dev->dev dev->dev b43_write16 b43_write16 + b43_read16 b43_read16 == & dev TYPEDEXP[*struct b43_wldev] dev 0 0 0 TYPEDEXP[typeName[u16,unknown]] B43_WARN_ON B43_WARN_ON u16 typeName[u16,unknown] typeName[u16,unknown] && return return; nosto storage[nosto,notinline] unknown < none none; wl || b43_wldev struct b43_wldev pointer[struct b43_wldev] *struct b43_wldev dev param[,dev,*struct b43_wldev] void void funtype[void,param[,dev,*struct b43_wldev]] 4 4 4 3 3 3 2 2 2 1 1 1 const TYPEDEXP[signed int] int signed signed int btype[signed int] signed int notinline  b43.h includeL[b43.h] 
[Main] Constructing all safe parts for 3 term pairs
[Main] Making safe parts for pair 1
[Main] terms that changed: 
[Main] abstracted one pair
[Main] Making safe parts for pair 2
[Main] terms that changed: 
[Main] abstracted one pair
[Main] Making safe parts for pair 3
[Main] terms that changed: 
[Main] abstracted one pair
[Main] filtering all safe patches.
[Main] Finding unit patches with minimum support at least: 3
[Main] generating solutions...
[Main] min sup = 3
[Main] found 10 solutions
[Main] solution #1
{{{
@@
expression X0;
identifier X1;
@@
- X0.r1.X1
+ X0.X1
}}}
[Main] solution #2
{{{
@@
expression X0;
identifier X1;
@@
- X0.r1.X1
+ X0.X1
}}}
[Main] solution #3
{{{
@@
expression X0;
identifier X1;
@@
- X0.r1.X1
+ X0.X1
}}}
[Main] solution #4
{{{
@@
expression X0;
identifier X1;
@@
- X0->X1.r1
+ X0->X1
}}}
[Main] solution #5
{{{
@@
expression X0;
@@
- X0->sprom.r1
+ X0->sprom
}}}
[Main] solution #6
{{{
@@
expression X0;
@@
- X0.r1
+ X0
}}}
[Main] solution #7
{{{
@@
expression X0;
identifier X1;
@@
- X0->X1.r1
+ X0->X1
}}}
[Main] solution #8
{{{
@@
expression X0;
@@
- X0->sprom.r1
+ X0->sprom
}}}
[Main] solution #9
{{{
@@
expression X0;
@@
- X0.r1
+ X0
}}}
[Main] solution #10
{{{
@@
expression X0;
@@
- X0.r1
+ X0
}}}

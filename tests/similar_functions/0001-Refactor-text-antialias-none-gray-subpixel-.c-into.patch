From 139c60b2f98fde9322e68d35d5ae52c79b8e77a8 Mon Sep 17 00:00:00 2001
From: Sylvain Pasche <sylvain.pasche@gmail.com>
Date: Sun, 27 Jan 2008 23:05:55 +0100
Subject: [PATCH] Refactor text-antialias-{none,gray,subpixel}.c into a single text-antialias.c test

---
 test/Makefile.am               |    4 +-
 test/Makefile.win32            |    4 +-
 test/text-antialias-gray.c     |   84 ---------------------------
 test/text-antialias-none.c     |   84 ---------------------------
 test/text-antialias-subpixel.c |   82 --------------------------
 test/text-antialias.c          |  123 ++++++++++++++++++++++++++++++++++++++++
 6 files changed, 125 insertions(+), 256 deletions(-)
 delete mode 100644 test/text-antialias-gray.c
 delete mode 100644 test/text-antialias-none.c
 delete mode 100644 test/text-antialias-subpixel.c
 create mode 100644 test/text-antialias.c

diff --git a/test/Makefile.am b/test/Makefile.am
index f752fe6..b351761 100644
--- a/test/Makefile.am
+++ b/test/Makefile.am
@@ -121,9 +121,7 @@ surface-pattern$(EXEEXT)				\
 surface-pattern-big-scale-down$(EXEEXT)			\
 surface-pattern-scale-down$(EXEEXT)			\
 surface-pattern-scale-up$(EXEEXT)			\
-text-antialias-gray$(EXEEXT)				\
-text-antialias-none$(EXEEXT)				\
-text-antialias-subpixel$(EXEEXT)			\
+text-antialias$(EXEEXT)					\
 text-cache-crash$(EXEEXT)				\
 text-pattern$(EXEEXT)					\
 text-rotate$(EXEEXT)					\
diff --git a/test/Makefile.win32 b/test/Makefile.win32
index 27d8228..b5dc81a 100644
--- a/test/Makefile.win32
+++ b/test/Makefile.win32
@@ -77,9 +77,7 @@ source-clip			\
 source-surface-scale-paint	\
 surface-finish-twice		\
 surface-pattern			\
-text-antialias-gray		\
-text-antialias-none		\
-text-antialias-subpixel		\
+text-antialias			\
 text-cache-crash		\
 text-pattern			\
 text-rotate			\
diff --git a/test/text-antialias-gray.c b/test/text-antialias-gray.c
deleted file mode 100644
index dd0f34e..0000000
--- a/test/text-antialias-gray.c
+++ /dev/null
@@ -1,84 +0,0 @@
-/*
- * Copyright © 2005 Red Hat, Inc.
- *
- * Permission to use, copy, modify, distribute, and sell this software
- * and its documentation for any purpose is hereby granted without
- * fee, provided that the above copyright notice appear in all copies
- * and that both that copyright notice and this permission notice
- * appear in supporting documentation, and that the name of
- * Red Hat, Inc. not be used in advertising or publicity pertaining to
- * distribution of the software without specific, written prior
- * permission. Red Hat, Inc. makes no representations about the
- * suitability of this software for any purpose.  It is provided "as
- * is" without express or implied warranty.
- *
- * RED HAT, INC. DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS
- * SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND
- * FITNESS, IN NO EVENT SHALL RED HAT, INC. BE LIABLE FOR ANY SPECIAL,
- * INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER
- * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION
- * OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR
- * IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
- *
- * Author: Carl D. Worth <cworth@cworth.org>
- */
-
-#include "cairo-test.h"
-
-#define WIDTH  31
-#define HEIGHT 22
-#define TEXT_SIZE 12
-
-static cairo_test_draw_function_t draw;
-
-cairo_test_t test = {
-    "text-antialias-gray",
-    "Tests text rendering with grayscale antialiasing",
-    WIDTH, HEIGHT,
-    draw
-};
-
-static cairo_test_status_t
-draw (cairo_t *cr, int width, int height)
-{
-    cairo_text_extents_t extents;
-    cairo_font_options_t *font_options;
-    static char black[] = "black", blue[] = "blue";
-
-    /* We draw in the default black, so paint white first. */
-    cairo_save (cr);
-    cairo_set_source_rgb (cr, 1.0, 1.0, 1.0); /* white */
-    cairo_paint (cr);
-    cairo_restore (cr);
-
-    cairo_select_font_face (cr, "Bitstream Vera Sans",
-			    CAIRO_FONT_SLANT_NORMAL,
-			    CAIRO_FONT_WEIGHT_NORMAL);
-    cairo_set_font_size (cr, TEXT_SIZE);
-
-    font_options = cairo_font_options_create ();
-    cairo_get_font_options (cr, font_options);
-    cairo_font_options_set_antialias (font_options, CAIRO_ANTIALIAS_GRAY);
-    cairo_set_font_options (cr, font_options);
-
-    cairo_font_options_destroy (font_options);
-
-    cairo_set_source_rgb (cr, 0, 0, 0); /* black */
-    cairo_text_extents (cr, black, &extents);
-    cairo_move_to (cr, -extents.x_bearing, -extents.y_bearing);
-    cairo_show_text (cr, black);
-    cairo_translate (cr, 0, -extents.y_bearing + 1);
-
-    cairo_set_source_rgb (cr, 0, 0, 1); /* blue */
-    cairo_text_extents (cr, blue, &extents);
-    cairo_move_to (cr, -extents.x_bearing, -extents.y_bearing);
-    cairo_show_text (cr, blue);
-
-    return CAIRO_TEST_SUCCESS;
-}
-
-int
-main (void)
-{
-    return cairo_test (&test);
-}
diff --git a/test/text-antialias-none.c b/test/text-antialias-none.c
deleted file mode 100644
index f53fde4..0000000
--- a/test/text-antialias-none.c
+++ /dev/null
@@ -1,84 +0,0 @@
-/*
- * Copyright © 2005 Red Hat, Inc.
- *
- * Permission to use, copy, modify, distribute, and sell this software
- * and its documentation for any purpose is hereby granted without
- * fee, provided that the above copyright notice appear in all copies
- * and that both that copyright notice and this permission notice
- * appear in supporting documentation, and that the name of
- * Red Hat, Inc. not be used in advertising or publicity pertaining to
- * distribution of the software without specific, written prior
- * permission. Red Hat, Inc. makes no representations about the
- * suitability of this software for any purpose.  It is provided "as
- * is" without express or implied warranty.
- *
- * RED HAT, INC. DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS
- * SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND
- * FITNESS, IN NO EVENT SHALL RED HAT, INC. BE LIABLE FOR ANY SPECIAL,
- * INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER
- * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION
- * OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR
- * IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
- *
- * Author: Carl D. Worth <cworth@cworth.org>
- */
-
-#include "cairo-test.h"
-
-#define WIDTH  31
-#define HEIGHT 22
-#define TEXT_SIZE 12
-
-static cairo_test_draw_function_t draw;
-
-cairo_test_t test = {
-    "text-antialias-none",
-    "Tests text rendering with no antialiasing",
-    WIDTH, HEIGHT,
-    draw
-};
-
-static cairo_test_status_t
-draw (cairo_t *cr, int width, int height)
-{
-    cairo_text_extents_t extents;
-    cairo_font_options_t *font_options;
-    static char black[] = "black", blue[] = "blue";
-
-    /* We draw in the default black, so paint white first. */
-    cairo_save (cr);
-    cairo_set_source_rgb (cr, 1.0, 1.0, 1.0); /* white */
-    cairo_paint (cr);
-    cairo_restore (cr);
-
-    cairo_select_font_face (cr, "Bitstream Vera Sans",
-			    CAIRO_FONT_SLANT_NORMAL,
-			    CAIRO_FONT_WEIGHT_NORMAL);
-    cairo_set_font_size (cr, TEXT_SIZE);
-
-    font_options = cairo_font_options_create ();
-    cairo_get_font_options (cr, font_options);
-    cairo_font_options_set_antialias (font_options, CAIRO_ANTIALIAS_NONE);
-    cairo_set_font_options (cr, font_options);
-
-    cairo_font_options_destroy (font_options);
-
-    cairo_set_source_rgb (cr, 0, 0, 0); /* black */
-    cairo_text_extents (cr, black, &extents);
-    cairo_move_to (cr, -extents.x_bearing, -extents.y_bearing);
-    cairo_show_text (cr, black);
-    cairo_translate (cr, 0, -extents.y_bearing + 1);
-
-    cairo_set_source_rgb (cr, 0, 0, 1); /* blue */
-    cairo_text_extents (cr, blue, &extents);
-    cairo_move_to (cr, -extents.x_bearing, -extents.y_bearing);
-    cairo_show_text (cr, blue);
-
-    return CAIRO_TEST_SUCCESS;
-}
-
-int
-main (void)
-{
-    return cairo_test (&test);
-}
diff --git a/test/text-antialias-subpixel.c b/test/text-antialias-subpixel.c
deleted file mode 100644
index af0112a..0000000
--- a/test/text-antialias-subpixel.c
+++ /dev/null
@@ -1,82 +0,0 @@
-/*
- * Copyright © 2005 Red Hat, Inc.
- *
- * Permission to use, copy, modify, distribute, and sell this software
- * and its documentation for any purpose is hereby granted without
- * fee, provided that the above copyright notice appear in all copies
- * and that both that copyright notice and this permission notice
- * appear in supporting documentation, and that the name of
- * Red Hat, Inc. not be used in advertising or publicity pertaining to
- * distribution of the software without specific, written prior
- * permission. Red Hat, Inc. makes no representations about the
- * suitability of this software for any purpose.  It is provided "as
- * is" without express or implied warranty.
- *
- * RED HAT, INC. DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS
- * SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND
- * FITNESS, IN NO EVENT SHALL RED HAT, INC. BE LIABLE FOR ANY SPECIAL,
- * INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER
- * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION
- * OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR
- * IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
- *
- * Author: Carl D. Worth <cworth@cworth.org>
- */
-
-#include "cairo-test.h"
-
-#define WIDTH  31
-#define HEIGHT 22
-#define TEXT_SIZE 12
-
-static cairo_test_draw_function_t draw;
-
-cairo_test_t test = {
-    "text-antialias-subpixel",
-    "Tests text rendering with subpixel antialiasing",
-    WIDTH, HEIGHT,
-    draw
-};
-
-static cairo_test_status_t
-draw (cairo_t *cr, int width, int height)
-{
-    cairo_text_extents_t extents;
-    cairo_font_options_t *font_options;
-    static char black[] = "black", blue[] = "blue";
-
-    cairo_set_source_rgb (cr, 1.0, 1.0, 1.0);
-    cairo_paint (cr);
-
-    cairo_select_font_face (cr, "Bitstream Vera Sans",
-			    CAIRO_FONT_SLANT_NORMAL,
-			    CAIRO_FONT_WEIGHT_NORMAL);
-    cairo_set_font_size (cr, TEXT_SIZE);
-
-    font_options = cairo_font_options_create ();
-    cairo_get_font_options (cr, font_options);
-    cairo_font_options_set_antialias (font_options, CAIRO_ANTIALIAS_SUBPIXEL);
-    cairo_font_options_set_subpixel_order (font_options, CAIRO_SUBPIXEL_ORDER_RGB);
-    cairo_set_font_options (cr, font_options);
-
-    cairo_font_options_destroy (font_options);
-
-    cairo_set_source_rgb (cr, 0, 0, 0); /* black */
-    cairo_text_extents (cr, black, &extents);
-    cairo_move_to (cr, -extents.x_bearing, -extents.y_bearing);
-    cairo_show_text (cr, black);
-    cairo_translate (cr, 0, -extents.y_bearing + 1);
-
-    cairo_set_source_rgb (cr, 0, 0, 1); /* blue */
-    cairo_text_extents (cr, blue, &extents);
-    cairo_move_to (cr, -extents.x_bearing, -extents.y_bearing);
-    cairo_show_text (cr, blue);
-
-    return CAIRO_TEST_SUCCESS;
-}
-
-int
-main (void)
-{
-    return cairo_test (&test);
-}
diff --git a/test/text-antialias.c b/test/text-antialias.c
new file mode 100644
index 0000000..d26b846
--- /dev/null
+++ b/test/text-antialias.c
@@ -0,0 +1,123 @@
+/*
+ * Copyright © 2005 Red Hat, Inc.
+ *
+ * Permission to use, copy, modify, distribute, and sell this software
+ * and its documentation for any purpose is hereby granted without
+ * fee, provided that the above copyright notice appear in all copies
+ * and that both that copyright notice and this permission notice
+ * appear in supporting documentation, and that the name of
+ * Red Hat, Inc. not be used in advertising or publicity pertaining to
+ * distribution of the software without specific, written prior
+ * permission. Red Hat, Inc. makes no representations about the
+ * suitability of this software for any purpose.  It is provided "as
+ * is" without express or implied warranty.
+ *
+ * RED HAT, INC. DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS
+ * SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND
+ * FITNESS, IN NO EVENT SHALL RED HAT, INC. BE LIABLE FOR ANY SPECIAL,
+ * INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER
+ * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION
+ * OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR
+ * IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
+ *
+ * Author: Carl D. Worth <cworth@cworth.org>
+ */
+
+#include "cairo-test.h"
+
+#define WIDTH  31
+#define HEIGHT 22
+#define TEXT_SIZE 12
+
+static cairo_test_draw_function_t draw_antialias_none;
+static cairo_test_draw_function_t draw_antialias_gray;
+static cairo_test_draw_function_t draw_antialias_subpixel;
+
+cairo_test_t test_antialias_none = {
+    "text-antialias-none",
+    "Tests text rendering with no antialiasing",
+    WIDTH, HEIGHT,
+    draw_antialias_none
+};
+
+cairo_test_t test_antialias_gray = {
+    "text-antialias-gray",
+    "Tests text rendering with grayscale antialiasing",
+    WIDTH, HEIGHT,
+    draw_antialias_gray
+};
+
+cairo_test_t test_antialias_subpixel = {
+    "text-antialias-subpixel",
+    "Tests text rendering with subpixel antialiasing",
+    WIDTH, HEIGHT,
+    draw_antialias_subpixel
+};
+
+static cairo_test_status_t
+draw (cairo_t *cr, int width, int height, cairo_antialias_t antialias)
+{
+    cairo_text_extents_t extents;
+    cairo_font_options_t *font_options;
+    static char black[] = "black", blue[] = "blue";
+
+    /* We draw in the default black, so paint white first. */
+    cairo_save (cr);
+    cairo_set_source_rgb (cr, 1.0, 1.0, 1.0); /* white */
+    cairo_paint (cr);
+    cairo_restore (cr);
+
+    cairo_select_font_face (cr, "Bitstream Vera Sans",
+			    CAIRO_FONT_SLANT_NORMAL,
+			    CAIRO_FONT_WEIGHT_NORMAL);
+    cairo_set_font_size (cr, TEXT_SIZE);
+
+    font_options = cairo_font_options_create ();
+    cairo_get_font_options (cr, font_options);
+    cairo_font_options_set_antialias (font_options, antialias);
+    cairo_font_options_set_subpixel_order (font_options, CAIRO_SUBPIXEL_ORDER_RGB);
+    cairo_set_font_options (cr, font_options);
+
+    cairo_font_options_destroy (font_options);
+
+    cairo_set_source_rgb (cr, 0, 0, 0); /* black */
+    cairo_text_extents (cr, black, &extents);
+    cairo_move_to (cr, -extents.x_bearing, -extents.y_bearing);
+    cairo_show_text (cr, black);
+    cairo_translate (cr, 0, -extents.y_bearing + 1);
+
+    cairo_set_source_rgb (cr, 0, 0, 1); /* blue */
+    cairo_text_extents (cr, blue, &extents);
+    cairo_move_to (cr, -extents.x_bearing, -extents.y_bearing);
+    cairo_show_text (cr, blue);
+
+    return CAIRO_TEST_SUCCESS;
+}
+
+static cairo_test_status_t
+draw_antialias_none (cairo_t *cr, int width, int height)
+{
+    return draw (cr, width, height, CAIRO_ANTIALIAS_NONE);
+}
+
+static cairo_test_status_t
+draw_antialias_gray (cairo_t *cr, int width, int height)
+{
+    return draw (cr, width, height, CAIRO_ANTIALIAS_GRAY);
+}
+
+static cairo_test_status_t
+draw_antialias_subpixel (cairo_t *cr, int width, int height)
+{
+    return draw (cr, width, height, CAIRO_ANTIALIAS_SUBPIXEL);
+}
+
+int
+main (void)
+{
+    cairo_test_status_t ret = CAIRO_TEST_SUCCESS;
+    ret |= cairo_test (&test_antialias_none);
+    ret |= cairo_test (&test_antialias_gray);
+    ret |= cairo_test (&test_antialias_subpixel);
+    return ret;
+}
-- 
1.5.3.7


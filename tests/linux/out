Spec. file is: specfile
Parsed two: farsync.c.orig, farsync.c
Parsed two: eth1394.c.orig, eth1394.c
Parsed two: idt77252.c.orig, idt77252.c
Reading file pair idt77252.c.orig idt77252.c
Reading file pair eth1394.c.orig eth1394.c
Reading file pair farsync.c.orig farsync.c
prg2[decl(N/H),includeN[inc_elem(linux),inc_elem(module.h)],includeN[inc_elem(linux),inc_elem(pci.h)],includeN[inc_elem(linux),inc_elem(poison.h)],includeN[inc_elem(linux),inc_elem(skbuff.h)],includeN[inc_elem(linux),inc_elem(kernel.h)],includeN[inc_elem(linux),inc_elem(vmalloc.h)],includeN[inc_elem(linux),inc_elem(netdevice.h)],includeN[inc_elem(linux),inc_elem(atmdev.h)],includeN[inc_elem(linux),inc_elem(atm.h)],includeN[inc_elem(linux),inc_elem(delay.h)],includeN[inc_elem(linux),inc_elem(init.h)],includeN[inc_elem(linux),inc_elem(bitops.h)],includeN[inc_elem(linux),inc_elem(wait.h)],includeN[inc_elem(linux),inc_elem(jiffies.h)],includeN[inc_elem(linux),inc_elem(mutex.h)],includeN[inc_elem(asm),inc_elem(io.h)],includeN[inc_elem(asm),inc_elem(uaccess.h)],includeN[inc_elem(asm),inc_elem(atomic.h)],includeN[inc_elem(asm),inc_elem(byteorder.h)],includeL[inc_elem(suni.h)],includeL[inc_elem(idt77252.h)],includeL[inc_elem(idt77252_tables.h)],decl(N/H),define(N/H),define(N/H),decl(N/H),define(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),def[fname(waitfor_idle),funtype[fulltype[ctype[btype(void)]],param[reg(),name(card),fulltype[typec(N/H)]]],{}stmt[statem(N/H),estmt[exp:assign[simple_assi(=),exp:ident(stat),exp:call[exp:ident(readl),exp:ident(SAR_REG_STAT)]]],while[exp:binary_arith[aop(&),exp:ident(stat),exp:ident(SAR_STAT_CMDBZ)],estmt[exp:assign[simple_assi(=),exp:ident(stat),exp:call[exp:ident(readl),exp:ident(SAR_REG_STAT)]]]]]],def[fname(read_sram),funtype[fulltype[typec(N/H)],param[reg(),name(card),fulltype[typec(N/H)]],param[reg(),name(addr),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]]],{}stmt[statem(N/H),statem(N/H),estmt[exp:call[exp:ident(spin_lock_irqsave),exp:&ref:exp:record_ptr[exp:ident(card),ident(cmd_lock)],exp:ident(flags)]],estmt[exp:call[exp:ident(writel),exp:binary_arith[aop(|),exp:ident(SAR_CMD_READ_SRAM),exp:binary_arith[aop(<<),exp:ident(addr),exp:const:int(2)]],exp:ident(SAR_REG_CMD)]],estmt[exp:call[exp:ident(waitfor_idle),exp:ident(card)]],estmt[exp:assign[simple_assi(=),exp:ident(value),exp:call[exp:ident(readl),exp:ident(SAR_REG_DR0)]]],estmt[exp:call[exp:ident(spin_unlock_irqrestore),exp:&ref:exp:record_ptr[exp:ident(card),ident(cmd_lock)],exp:ident(flags)]],st_return[exp:ident(value)]]],def[fname(write_sram),funtype[fulltype[ctype[btype(void)]],param[reg(),name(card),fulltype[typec(N/H)]],param[reg(),name(addr),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(value),fulltype[typec(N/H)]]],{}stmt[statem(N/H),sel_if[exp:binary_logi[logiop(and),exp:binary_logi[logiop(eq),exp:ident(idt77252_sram_write_errors),exp:const:int(0)],exp:binary_logi[logiop(or),exp:binary_logi[logiop(and),exp:binary_logi[logiop(??),exp:ident(addr),exp:binary_arith[aop(-),exp:binary_arith[aop(+),exp:array_acc[exp:record_ptr[exp:ident(card),ident(tst)],exp:const:int(0)],exp:record_ptr[exp:ident(card),ident(tst_size)]],exp:const:int(2)]],exp:binary_logi[logiop(??),exp:ident(addr),exp:binary_arith[aop(+),exp:array_acc[exp:record_ptr[exp:ident(card),ident(tst)],exp:const:int(0)],exp:record_ptr[exp:ident(card),ident(tst_size)]]]],exp:binary_logi[logiop(and),exp:binary_logi[logiop(??),exp:ident(addr),exp:binary_arith[aop(-),exp:binary_arith[aop(+),exp:array_acc[exp:record_ptr[exp:ident(card),ident(tst)],exp:const:int(1)],exp:record_ptr[exp:ident(card),ident(tst_size)]],exp:const:int(2)]],exp:binary_logi[logiop(??),exp:ident(addr),exp:binary_arith[aop(+),exp:array_acc[exp:record_ptr[exp:ident(card),ident(tst)],exp:const:int(1)],exp:record_ptr[exp:ident(card),ident(tst_size)]]]]]],{}stmt[estmt[exp:call[exp:ident(printk),exp:const:string(%s: ERROR: TST JMP section at %08lx written: %08x\n),exp:record_ptr[exp:ident(card),ident(name)],exp:ident(addr),exp:ident(value)]]],estmt(NONE)],estmt[exp:call[exp:ident(spin_lock_irqsave),exp:&ref:exp:record_ptr[exp:ident(card),ident(cmd_lock)],exp:ident(flags)]],estmt[exp:call[exp:ident(writel),exp:ident(value),exp:ident(SAR_REG_DR0)]],estmt[exp:call[exp:ident(writel),exp:binary_arith[aop(|),exp:ident(SAR_CMD_WRITE_SRAM),exp:binary_arith[aop(<<),exp:ident(addr),exp:const:int(2)]],exp:ident(SAR_REG_CMD)]],estmt[exp:call[exp:ident(waitfor_idle),exp:ident(card)]],estmt[exp:call[exp:ident(spin_unlock_irqrestore),exp:&ref:exp:record_ptr[exp:ident(card),ident(cmd_lock)],exp:ident(flags)]]]],def[fname(read_utility),funtype[fulltype[typec(N/H)],param[reg(),name(dev),fulltype[typec(N/H)]],param[reg(),name(ubus_addr),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),sel_if[exp:??(N/H),{}stmt[estmt[exp:call[exp:ident(printk),exp:const:string(Error: No such device.\n)]],st_return[exp:??(N/H)]],estmt(NONE)],estmt[exp:call[exp:ident(spin_lock_irqsave),exp:&ref:exp:record_ptr[exp:ident(card),ident(cmd_lock)],exp:ident(flags)]],estmt[exp:call[exp:ident(writel),exp:binary_arith[aop(+),exp:ident(SAR_CMD_READ_UTILITY),exp:ident(ubus_addr)],exp:ident(SAR_REG_CMD)]],estmt[exp:call[exp:ident(waitfor_idle),exp:ident(card)]],estmt[exp:assign[simple_assi(=),exp:ident(value),exp:call[exp:ident(readl),exp:ident(SAR_REG_DR0)]]],estmt[exp:call[exp:ident(spin_unlock_irqrestore),exp:&ref:exp:record_ptr[exp:ident(card),ident(cmd_lock)],exp:ident(flags)]],st_return[exp:ident(value)]]],def[fname(write_utility),funtype[fulltype[ctype[btype(void)]],param[reg(),name(dev),fulltype[typec(N/H)]],param[reg(),name(ubus_addr),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(value),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp:??(N/H),{}stmt[estmt[exp:call[exp:ident(printk),exp:const:string(Error: No such device.\n)]],statem(N/H)],estmt(NONE)],estmt[exp:call[exp:ident(spin_lock_irqsave),exp:&ref:exp:record_ptr[exp:ident(card),ident(cmd_lock)],exp:ident(flags)]],estmt[exp:call[exp:ident(writel),exp:??(N/H),exp:ident(SAR_REG_DR0)]],estmt[exp:call[exp:ident(writel),exp:binary_arith[aop(+),exp:ident(SAR_CMD_WRITE_UTILITY),exp:ident(ubus_addr)],exp:ident(SAR_REG_CMD)]],estmt[exp:call[exp:ident(waitfor_idle),exp:ident(card)]],estmt[exp:call[exp:ident(spin_unlock_irqrestore),exp:&ref:exp:record_ptr[exp:ident(card),ident(cmd_lock)],exp:ident(flags)]]]],decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),def[fname(idt77252_read_gp),funtype[fulltype[typec(N/H)],param[reg(),name(card),fulltype[typec(N/H)]]],{}stmt[statem(N/H),estmt[exp:assign[simple_assi(=),exp:ident(gp),exp:call[exp:ident(readl),exp:ident(SAR_REG_GP)]]],st_return[exp:ident(gp)]]],def[fname(idt77252_write_gp),funtype[fulltype[ctype[btype(void)]],param[reg(),name(card),fulltype[typec(N/H)]],param[reg(),name(value),fulltype[typec(N/H)]]],{}stmt[statem(N/H),estmt[exp:call[exp:ident(spin_lock_irqsave),exp:&ref:exp:record_ptr[exp:ident(card),ident(cmd_lock)],exp:ident(flags)]],estmt[exp:call[exp:ident(waitfor_idle),exp:ident(card)]],estmt[exp:call[exp:ident(writel),exp:ident(value),exp:ident(SAR_REG_GP)]],estmt[exp:call[exp:ident(spin_unlock_irqrestore),exp:&ref:exp:record_ptr[exp:ident(card),ident(cmd_lock)],exp:ident(flags)]]]],def[fname(idt77252_eeprom_read_status),funtype[fulltype[typec(N/H)],param[reg(),name(card),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp:assign[simple_assi(=),exp:ident(gp),exp:binary_arith[aop(&),exp:call[exp:ident(idt77252_read_gp),exp:ident(card)],exp:??(N/H)]]],for[exp:assign[simple_assi(=),exp:ident(i),exp:const:int(0)],exp:binary_logi[logiop(??),exp:ident(i),exp:call[exp:ident(ARRAY_SIZE),exp:ident(rdsrtab)]],exp:??(N/H),{}stmt[estmt[exp:call[exp:ident(idt77252_write_gp),exp:ident(card),exp:binary_arith[aop(|),exp:ident(gp),exp:array_acc[exp:ident(rdsrtab),exp:ident(i)]]]],estmt[exp:call[exp:ident(udelay),exp:const:int(5)]]]],estmt[exp:call[exp:ident(idt77252_write_gp),exp:ident(card),exp:binary_arith[aop(|),exp:ident(gp),exp:ident(SAR_GP_EECS)]]],estmt[exp:call[exp:ident(udelay),exp:const:int(5)]],estmt[exp:assign[simple_assi(=),exp:ident(byte),exp:const:int(0)]],for[exp:??(N/H),exp:binary_logi[logiop(??),exp:ident(i),exp:const:int(8)],exp:??(N/H),{}stmt[estmt[exp:assign[op_assi(N/H),exp:ident(byte),exp:const:int(1)]],estmt[exp:call[exp:ident(idt77252_write_gp),exp:ident(card),exp:binary_arith[aop(|),exp:ident(gp),exp:array_acc[exp:ident(clktab),exp:??(N/H)]]]],estmt[exp:call[exp:ident(udelay),exp:const:int(5)]],estmt[exp:assign[op_assi(|=),exp:ident(byte),exp:cond3[exp:binary_arith[aop(&),exp:call[exp:ident(idt77252_read_gp),exp:ident(card)],exp:ident(SAR_GP_EEDI)],exp:const:int(1),exp:const:int(0)]]],estmt[exp:call[exp:ident(idt77252_write_gp),exp:ident(card),exp:binary_arith[aop(|),exp:ident(gp),exp:array_acc[exp:ident(clktab),exp:??(N/H)]]]],estmt[exp:call[exp:ident(udelay),exp:const:int(5)]]]],estmt[exp:call[exp:ident(idt77252_write_gp),exp:ident(card),exp:binary_arith[aop(|),exp:ident(gp),exp:ident(SAR_GP_EECS)]]],estmt[exp:call[exp:ident(udelay),exp:const:int(5)]],st_return[exp:ident(byte)]]],def[fname(idt77252_eeprom_read_byte),funtype[fulltype[typec(N/H)],param[reg(),name(card),fulltype[typec(N/H)]],param[reg(),name(offset),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp:assign[simple_assi(=),exp:ident(gp),exp:binary_arith[aop(&),exp:call[exp:ident(idt77252_read_gp),exp:ident(card)],exp:??(N/H)]]],for[exp:assign[simple_assi(=),exp:ident(i),exp:const:int(0)],exp:binary_logi[logiop(??),exp:ident(i),exp:call[exp:ident(ARRAY_SIZE),exp:ident(rdtab)]],exp:??(N/H),{}stmt[estmt[exp:call[exp:ident(idt77252_write_gp),exp:ident(card),exp:binary_arith[aop(|),exp:ident(gp),exp:array_acc[exp:ident(rdtab),exp:ident(i)]]]],estmt[exp:call[exp:ident(udelay),exp:const:int(5)]]]],estmt[exp:call[exp:ident(idt77252_write_gp),exp:ident(card),exp:binary_arith[aop(|),exp:ident(gp),exp:ident(SAR_GP_EECS)]]],estmt[exp:call[exp:ident(udelay),exp:const:int(5)]],for[exp:??(N/H),exp:binary_logi[logiop(??),exp:ident(i),exp:const:int(8)],exp:??(N/H),{}stmt[estmt[exp:call[exp:ident(idt77252_write_gp),exp:ident(card),exp:binary_arith[aop(|),exp:binary_arith[aop(|),exp:ident(gp),exp:array_acc[exp:ident(clktab),exp:??(N/H)]],exp:cond3[exp:binary_arith[aop(&),exp:ident(offset),exp:const:int(1)],exp:ident(SAR_GP_EEDO),exp:const:int(0)]]]],estmt[exp:call[exp:ident(udelay),exp:const:int(5)]],estmt[exp:call[exp:ident(idt77252_write_gp),exp:ident(card),exp:binary_arith[aop(|),exp:binary_arith[aop(|),exp:ident(gp),exp:array_acc[exp:ident(clktab),exp:??(N/H)]],exp:cond3[exp:binary_arith[aop(&),exp:ident(offset),exp:const:int(1)],exp:ident(SAR_GP_EEDO),exp:const:int(0)]]]],estmt[exp:call[exp:ident(udelay),exp:const:int(5)]],estmt[exp:assign[op_assi(N/H),exp:ident(offset),exp:const:int(1)]]]],estmt[exp:call[exp:ident(idt77252_write_gp),exp:ident(card),exp:binary_arith[aop(|),exp:ident(gp),exp:ident(SAR_GP_EECS)]]],estmt[exp:call[exp:ident(udelay),exp:const:int(5)]],estmt[exp:assign[simple_assi(=),exp:ident(byte),exp:const:int(0)]],for[exp:??(N/H),exp:binary_logi[logiop(??),exp:ident(i),exp:const:int(8)],exp:??(N/H),{}stmt[estmt[exp:assign[op_assi(N/H),exp:ident(byte),exp:const:int(1)]],estmt[exp:call[exp:ident(idt77252_write_gp),exp:ident(card),exp:binary_arith[aop(|),exp:ident(gp),exp:array_acc[exp:ident(clktab),exp:??(N/H)]]]],estmt[exp:call[exp:ident(udelay),exp:const:int(5)]],estmt[exp:assign[op_assi(|=),exp:ident(byte),exp:cond3[exp:binary_arith[aop(&),exp:call[exp:ident(idt77252_read_gp),exp:ident(card)],exp:ident(SAR_GP_EEDI)],exp:const:int(1),exp:const:int(0)]]],estmt[exp:call[exp:ident(idt77252_write_gp),exp:ident(card),exp:binary_arith[aop(|),exp:ident(gp),exp:array_acc[exp:ident(clktab),exp:??(N/H)]]]],estmt[exp:call[exp:ident(udelay),exp:const:int(5)]]]],estmt[exp:call[exp:ident(idt77252_write_gp),exp:ident(card),exp:binary_arith[aop(|),exp:ident(gp),exp:ident(SAR_GP_EECS)]]],estmt[exp:call[exp:ident(udelay),exp:const:int(5)]],st_return[exp:ident(byte)]]],def[fname(idt77252_eeprom_write_byte),funtype[fulltype[ctype[btype(void)]],param[reg(),name(card),fulltype[typec(N/H)]],param[reg(),name(offset),fulltype[typec(N/H)]],param[reg(),name(data),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp:assign[simple_assi(=),exp:ident(gp),exp:binary_arith[aop(&),exp:call[exp:ident(idt77252_read_gp),exp:ident(card)],exp:??(N/H)]]],for[exp:assign[simple_assi(=),exp:ident(i),exp:const:int(0)],exp:binary_logi[logiop(??),exp:ident(i),exp:call[exp:ident(ARRAY_SIZE),exp:ident(wrentab)]],exp:??(N/H),{}stmt[estmt[exp:call[exp:ident(idt77252_write_gp),exp:ident(card),exp:binary_arith[aop(|),exp:ident(gp),exp:array_acc[exp:ident(wrentab),exp:ident(i)]]]],estmt[exp:call[exp:ident(udelay),exp:const:int(5)]]]],estmt[exp:call[exp:ident(idt77252_write_gp),exp:ident(card),exp:binary_arith[aop(|),exp:ident(gp),exp:ident(SAR_GP_EECS)]]],estmt[exp:call[exp:ident(udelay),exp:const:int(5)]],for[exp:assign[simple_assi(=),exp:ident(i),exp:const:int(0)],exp:binary_logi[logiop(??),exp:ident(i),exp:call[exp:ident(ARRAY_SIZE),exp:ident(wrtab)]],exp:??(N/H),{}stmt[estmt[exp:call[exp:ident(idt77252_write_gp),exp:ident(card),exp:binary_arith[aop(|),exp:ident(gp),exp:array_acc[exp:ident(wrtab),exp:ident(i)]]]],estmt[exp:call[exp:ident(udelay),exp:const:int(5)]]]],estmt[exp:call[exp:ident(idt77252_write_gp),exp:ident(card),exp:binary_arith[aop(|),exp:ident(gp),exp:ident(SAR_GP_EECS)]]],estmt[exp:call[exp:ident(udelay),exp:const:int(5)]],for[exp:??(N/H),exp:binary_logi[logiop(??),exp:ident(i),exp:const:int(8)],exp:??(N/H),{}stmt[estmt[exp:call[exp:ident(idt77252_write_gp),exp:ident(card),exp:binary_arith[aop(|),exp:binary_arith[aop(|),exp:ident(gp),exp:array_acc[exp:ident(clktab),exp:??(N/H)]],exp:cond3[exp:binary_arith[aop(&),exp:ident(offset),exp:const:int(1)],exp:ident(SAR_GP_EEDO),exp:const:int(0)]]]],estmt[exp:call[exp:ident(udelay),exp:const:int(5)]],estmt[exp:call[exp:ident(idt77252_write_gp),exp:ident(card),exp:binary_arith[aop(|),exp:binary_arith[aop(|),exp:ident(gp),exp:array_acc[exp:ident(clktab),exp:??(N/H)]],exp:cond3[exp:binary_arith[aop(&),exp:ident(offset),exp:const:int(1)],exp:ident(SAR_GP_EEDO),exp:const:int(0)]]]],estmt[exp:call[exp:ident(udelay),exp:const:int(5)]],estmt[exp:assign[op_assi(N/H),exp:ident(offset),exp:const:int(1)]]]],estmt[exp:call[exp:ident(idt77252_write_gp),exp:ident(card),exp:binary_arith[aop(|),exp:ident(gp),exp:ident(SAR_GP_EECS)]]],estmt[exp:call[exp:ident(udelay),exp:const:int(5)]],for[exp:??(N/H),exp:binary_logi[logiop(??),exp:ident(i),exp:const:int(8)],exp:??(N/H),{}stmt[estmt[exp:call[exp:ident(idt77252_write_gp),exp:ident(card),exp:binary_arith[aop(|),exp:binary_arith[aop(|),exp:ident(gp),exp:array_acc[exp:ident(clktab),exp:??(N/H)]],exp:cond3[exp:binary_arith[aop(&),exp:ident(data),exp:const:int(1)],exp:ident(SAR_GP_EEDO),exp:const:int(0)]]]],estmt[exp:call[exp:ident(udelay),exp:const:int(5)]],estmt[exp:call[exp:ident(idt77252_write_gp),exp:ident(card),exp:binary_arith[aop(|),exp:binary_arith[aop(|),exp:ident(gp),exp:array_acc[exp:ident(clktab),exp:??(N/H)]],exp:cond3[exp:binary_arith[aop(&),exp:ident(data),exp:const:int(1)],exp:ident(SAR_GP_EEDO),exp:const:int(0)]]]],estmt[exp:call[exp:ident(udelay),exp:const:int(5)]],estmt[exp:assign[op_assi(N/H),exp:ident(data),exp:const:int(1)]]]],estmt[exp:call[exp:ident(idt77252_write_gp),exp:ident(card),exp:binary_arith[aop(|),exp:ident(gp),exp:ident(SAR_GP_EECS)]]],estmt[exp:call[exp:ident(udelay),exp:const:int(5)]]]],def[fname(idt77252_eeprom_init),funtype[fulltype[ctype[btype(void)]],param[reg(),name(card),fulltype[typec(N/H)]]],{}stmt[statem(N/H),estmt[exp:assign[simple_assi(=),exp:ident(gp),exp:binary_arith[aop(&),exp:call[exp:ident(idt77252_read_gp),exp:ident(card)],exp:??(N/H)]]],estmt[exp:call[exp:ident(idt77252_write_gp),exp:ident(card),exp:binary_arith[aop(|),exp:binary_arith[aop(|),exp:ident(gp),exp:ident(SAR_GP_EECS)],exp:ident(SAR_GP_EESCLK)]]],estmt[exp:call[exp:ident(udelay),exp:const:int(5)]],estmt[exp:call[exp:ident(idt77252_write_gp),exp:ident(card),exp:binary_arith[aop(|),exp:ident(gp),exp:ident(SAR_GP_EECS)]]],estmt[exp:call[exp:ident(udelay),exp:const:int(5)]],estmt[exp:call[exp:ident(idt77252_write_gp),exp:ident(card),exp:binary_arith[aop(|),exp:binary_arith[aop(|),exp:ident(gp),exp:ident(SAR_GP_EECS)],exp:ident(SAR_GP_EESCLK)]]],estmt[exp:call[exp:ident(udelay),exp:const:int(5)]],estmt[exp:call[exp:ident(idt77252_write_gp),exp:ident(card),exp:binary_arith[aop(|),exp:ident(gp),exp:ident(SAR_GP_EECS)]]],estmt[exp:call[exp:ident(udelay),exp:const:int(5)]]]],def[fname(dump_tct),funtype[fulltype[ctype[btype(void)]],param[reg(),name(card),fulltype[typec(N/H)]],param[reg(),name(index),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[statem(N/H),statem(N/H),estmt[exp:assign[simple_assi(=),exp:ident(tct),exp:??(N/H)]],estmt[exp:call[exp:ident(printk),exp:const:string(%s: TCT %x:),exp:record_ptr[exp:ident(card),ident(name)],exp:ident(index)]],for[exp:assign[simple_assi(=),exp:ident(i),exp:const:int(0)],exp:binary_logi[logiop(??),exp:ident(i),exp:const:int(8)],exp:??(N/H),{}stmt[estmt[exp:call[exp:ident(printk),exp:const:string( %08x),exp:call[exp:ident(read_sram),exp:ident(card),exp:binary_arith[aop(+),exp:ident(tct),exp:ident(i)]]]]]],estmt[exp:call[exp:ident(printk),exp:const:string(\n)]]]],def[fname(idt77252_tx_dump),funtype[fulltype[ctype[btype(void)]],param[reg(),name(card),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp:call[exp:ident(printk),exp:const:string(%s\n),exp:ident(__FUNCTION__)]],for[exp:assign[simple_assi(=),exp:ident(i),exp:const:int(0)],exp:binary_logi[logiop(??),exp:ident(i),exp:record_ptr[exp:ident(card),ident(tct_size)]],exp:??(N/H),{}stmt[estmt[exp:assign[simple_assi(=),exp:ident(vc),exp:array_acc[exp:record_ptr[exp:ident(card),ident(vcs)],exp:ident(i)]]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:ident(vcc),exp:ident(NULL)]],sel_if[exp:record_ptr[exp:ident(vc),ident(rx_vcc)],estmt[exp:assign[simple_assi(=),exp:ident(vcc),exp:record_ptr[exp:ident(vc),ident(rx_vcc)]]],sel_if[exp:record_ptr[exp:ident(vc),ident(tx_vcc)],estmt[exp:assign[simple_assi(=),exp:ident(vcc),exp:record_ptr[exp:ident(vc),ident(tx_vcc)]]],estmt(NONE)]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp:call[exp:ident(printk),exp:const:string(%s: Connection %d:\n),exp:record_ptr[exp:ident(card),ident(name)],exp:record_ptr[exp:ident(vc),ident(index)]]],estmt[exp:call[exp:ident(dump_tct),exp:ident(card),exp:record_ptr[exp:ident(vc),ident(index)]]]]]]],def[fname(sb_pool_add),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(card),fulltype[typec(N/H)]],param[reg(),name(skb),fulltype[typec(N/H)]],param[reg(),name(queue),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[statem(N/H),statem(N/H),estmt[exp:assign[simple_assi(=),exp:ident(index),exp:record_ptr[exp:ident(pool),ident(index)]]],while[exp:array_acc[exp:record_ptr[exp:ident(pool),ident(skb)],exp:ident(index)],{}stmt[estmt[exp:assign[simple_assi(=),exp:ident(index),exp:binary_arith[aop(&),exp:binary_arith[aop(+),exp:ident(index),exp:const:int(1)],exp:ident(FBQ_MASK)]]],sel_if[exp:binary_logi[logiop(eq),exp:ident(index),exp:record_ptr[exp:ident(pool),ident(index)]],st_return[exp:??(N/H)],estmt(NONE)]]],estmt[exp:assign[simple_assi(=),exp:array_acc[exp:record_ptr[exp:ident(pool),ident(skb)],exp:ident(index)],exp:ident(skb)]],estmt[exp:assign[simple_assi(=),exp:call[exp:ident(IDT77252_PRV_POOL),exp:ident(skb)],exp:call[exp:ident(POOL_HANDLE),exp:ident(queue),exp:ident(index)]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(pool),ident(index)],exp:binary_arith[aop(&),exp:binary_arith[aop(+),exp:ident(index),exp:const:int(1)],exp:ident(FBQ_MASK)]]],st_return[exp:const:int(0)]]],def[fname(sb_pool_remove),funtype[fulltype[ctype[btype(void)]],param[reg(),name(card),fulltype[typec(N/H)]],param[reg(),name(skb),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp:assign[simple_assi(=),exp:ident(handle),exp:call[exp:ident(IDT77252_PRV_POOL),exp:ident(skb)]]],estmt[exp:assign[simple_assi(=),exp:ident(queue),exp:call[exp:ident(POOL_QUEUE),exp:ident(handle)]]],sel_if[exp:binary_logi[logiop(??),exp:ident(queue),exp:const:int(3)],statem(N/H),estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:ident(index),exp:call[exp:ident(POOL_INDEX),exp:ident(handle)]]],sel_if[exp:binary_logi[logiop(??),exp:ident(index),exp:binary_arith[aop(-),exp:ident(FBQ_SIZE),exp:const:int(1)]],statem(N/H),estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:array_acc[exp:record_acc[exp:array_acc[exp:record_ptr[exp:ident(card),ident(sbpool)],exp:ident(queue)],ident(skb)],exp:ident(index)],exp:ident(NULL)]]]],def[fname(sb_pool_skb),funtype[fulltype[typec(N/H)],param[reg(),name(card),fulltype[typec(N/H)]],param[reg(),name(handle),fulltype[typec(N/H)]]],{}stmt[statem(N/H),estmt[exp:assign[simple_assi(=),exp:ident(queue),exp:call[exp:ident(POOL_QUEUE),exp:ident(handle)]]],sel_if[exp:binary_logi[logiop(??),exp:ident(queue),exp:const:int(3)],st_return[exp:ident(NULL)],estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:ident(index),exp:call[exp:ident(POOL_INDEX),exp:ident(handle)]]],sel_if[exp:binary_logi[logiop(??),exp:ident(index),exp:binary_arith[aop(-),exp:ident(FBQ_SIZE),exp:const:int(1)]],st_return[exp:ident(NULL)],estmt(NONE)],st_return[exp:array_acc[exp:record_acc[exp:array_acc[exp:record_ptr[exp:ident(card),ident(sbpool)],exp:ident(queue)],ident(skb)],exp:ident(index)]]]],def[fname(alloc_scq),funtype[fulltype[typec(N/H)],param[reg(),name(card),fulltype[typec(N/H)]],param[reg(),name(class),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[statem(N/H),estmt[exp:assign[simple_assi(=),exp:ident(scq),exp:call[exp:ident(kzalloc),exp:sizeoftype:fulltype[typec(N/H)],exp:ident(GFP_KERNEL)]]],sel_if[exp:??(N/H),st_return[exp:ident(NULL)],estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(scq),ident(base)],exp:call[exp:ident(pci_alloc_consistent),exp:record_ptr[exp:ident(card),ident(pcidev)],exp:ident(SCQ_SIZE),exp:&ref:exp:record_ptr[exp:ident(scq),ident(paddr)]]]],sel_if[exp:binary_logi[logiop(eq),exp:record_ptr[exp:ident(scq),ident(base)],exp:ident(NULL)],{}stmt[estmt[exp:call[exp:ident(kfree),exp:ident(scq)]],st_return[exp:ident(NULL)]],estmt(NONE)],estmt[exp:call[exp:ident(memset),exp:record_ptr[exp:ident(scq),ident(base)],exp:const:int(0),exp:ident(SCQ_SIZE)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(scq),ident(next)],exp:record_ptr[exp:ident(scq),ident(base)]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(scq),ident(last)],exp:binary_arith[aop(+),exp:record_ptr[exp:ident(scq),ident(base)],exp:binary_arith[aop(-),exp:ident(SCQ_ENTRIES),exp:const:int(1)]]]],estmt[exp:call[exp:ident(atomic_set),exp:&ref:exp:record_ptr[exp:ident(scq),ident(used)],exp:const:int(0)]],estmt[exp:call[exp:ident(spin_lock_init),exp:&ref:exp:record_ptr[exp:ident(scq),ident(lock)]]],estmt[exp:call[exp:ident(spin_lock_init),exp:&ref:exp:record_ptr[exp:ident(scq),ident(skblock)]]],estmt[exp:call[exp:ident(skb_queue_head_init),exp:&ref:exp:record_ptr[exp:ident(scq),ident(transmit)]]],estmt[exp:call[exp:ident(skb_queue_head_init),exp:&ref:exp:record_ptr[exp:ident(scq),ident(pending)]]],estmt[exp:call[exp:ident(TXPRINTK),exp:const:string(idt77252: SCQ: base 0x%p, next 0x%p, last 0x%p, paddr %08llx\n),exp:record_ptr[exp:ident(scq),ident(base)],exp:record_ptr[exp:ident(scq),ident(next)],exp:record_ptr[exp:ident(scq),ident(last)],exp:??(N/H)]],st_return[exp:ident(scq)]]],def[fname(free_scq),funtype[fulltype[ctype[btype(void)]],param[reg(),name(card),fulltype[typec(N/H)]],param[reg(),name(scq),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp:call[exp:ident(pci_free_consistent),exp:record_ptr[exp:ident(card),ident(pcidev)],exp:ident(SCQ_SIZE),exp:record_ptr[exp:ident(scq),ident(base)],exp:record_ptr[exp:ident(scq),ident(paddr)]]],while[exp:assign[simple_assi(=),exp:ident(skb),exp:call[exp:ident(skb_dequeue),exp:&ref:exp:record_ptr[exp:ident(scq),ident(transmit)]]],{}stmt[estmt[exp:call[exp:ident(pci_unmap_single),exp:record_ptr[exp:ident(card),ident(pcidev)],exp:call[exp:ident(IDT77252_PRV_PADDR),exp:ident(skb)],exp:record_ptr[exp:ident(skb),ident(len)],exp:ident(PCI_DMA_TODEVICE)]],estmt[exp:assign[simple_assi(=),exp:ident(vcc),exp:record_ptr[exp:call[exp:ident(ATM_SKB),exp:ident(skb)],ident(vcc)]]],sel_if[exp:record_ptr[exp:ident(vcc),ident(pop)],estmt[exp:call[exp:record_ptr[exp:ident(vcc),ident(pop)],exp:ident(vcc),exp:ident(skb)]],estmt[exp:call[exp:ident(dev_kfree_skb),exp:ident(skb)]]]]],while[exp:assign[simple_assi(=),exp:ident(skb),exp:call[exp:ident(skb_dequeue),exp:&ref:exp:record_ptr[exp:ident(scq),ident(pending)]]],{}stmt[estmt[exp:call[exp:ident(pci_unmap_single),exp:record_ptr[exp:ident(card),ident(pcidev)],exp:call[exp:ident(IDT77252_PRV_PADDR),exp:ident(skb)],exp:record_ptr[exp:ident(skb),ident(len)],exp:ident(PCI_DMA_TODEVICE)]],estmt[exp:assign[simple_assi(=),exp:ident(vcc),exp:record_ptr[exp:call[exp:ident(ATM_SKB),exp:ident(skb)],ident(vcc)]]],sel_if[exp:record_ptr[exp:ident(vcc),ident(pop)],estmt[exp:call[exp:record_ptr[exp:ident(vcc),ident(pop)],exp:ident(vcc),exp:ident(skb)]],estmt[exp:call[exp:ident(dev_kfree_skb),exp:ident(skb)]]]]],estmt[exp:call[exp:ident(kfree),exp:ident(scq)]]]],def[fname(push_on_scq),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(card),fulltype[typec(N/H)]],param[reg(),name(vc),fulltype[typec(N/H)]],param[reg(),name(skb),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp:call[exp:ident(TXPRINTK),exp:const:string(%s: SCQ: next 0x%p\n),exp:record_ptr[exp:ident(card),ident(name)],exp:record_ptr[exp:ident(scq),ident(next)]]],estmt[exp:call[exp:ident(atomic_inc),exp:&ref:exp:record_ptr[exp:ident(scq),ident(used)]]],estmt[exp:assign[simple_assi(=),exp:ident(entries),exp:call[exp:ident(atomic_read),exp:&ref:exp:record_ptr[exp:ident(scq),ident(used)]]]],sel_if[exp:binary_logi[logiop(??),exp:ident(entries),exp:binary_arith[aop(-),exp:ident(SCQ_ENTRIES),exp:const:int(1)]],{}stmt[estmt[exp:call[exp:ident(atomic_dec),exp:&ref:exp:record_ptr[exp:ident(scq),ident(used)]]],statem(N/H)],estmt(NONE)],estmt[exp:call[exp:ident(skb_queue_tail),exp:&ref:exp:record_ptr[exp:ident(scq),ident(transmit)],exp:ident(skb)]],estmt[exp:call[exp:ident(spin_lock_irqsave),exp:&ref:exp:record_ptr[exp:ident(vc),ident(lock)],exp:ident(flags)]],sel_if[exp:record_ptr[exp:ident(vc),ident(estimator)],{}stmt[statem(N/H),statem(N/H),estmt[exp:assign[op_assi(+=),exp:record_ptr[exp:record_ptr[exp:ident(vc),ident(estimator)],ident(cells)],exp:binary_arith[aop(/),exp:binary_arith[aop(+),exp:record_ptr[exp:ident(skb),ident(len)],exp:const:int(47)],exp:const:int(48)]]],sel_if[exp:binary_logi[logiop(??),exp:call[exp:ident(atomic_read),exp:&ref:exp:record_ptr[exp:ident(sk),ident(sk_wmem_alloc)]],exp:binary_arith[aop(>>),exp:record_ptr[exp:ident(sk),ident(sk_sndbuf)],exp:const:int(1)]],{}stmt[statem(N/H),estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:record_ptr[exp:ident(vc),ident(estimator)],ident(cps)],exp:ident(cps)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:record_ptr[exp:ident(vc),ident(estimator)],ident(avcps)],exp:binary_arith[aop(<<),exp:ident(cps),exp:const:int(5)]]],sel_if[exp:binary_logi[logiop(??),exp:record_ptr[exp:ident(vc),ident(lacr)],exp:record_ptr[exp:ident(vc),ident(init_er)]],{}stmt[estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(vc),ident(lacr)],exp:record_ptr[exp:ident(vc),ident(init_er)]]],estmt[exp:call[exp:ident(writel),exp:binary_arith[aop(|),exp:binary_arith[aop(|),exp:ident(TCMDQ_LACR),exp:binary_arith[aop(<<),exp:record_ptr[exp:ident(vc),ident(lacr)],exp:const:int(16)]],exp:record_ptr[exp:ident(vc),ident(index)]],exp:ident(SAR_REG_TCMDQ)]]],estmt(NONE)]],estmt(NONE)]],estmt(NONE)],estmt[exp:call[exp:ident(spin_unlock_irqrestore),exp:&ref:exp:record_ptr[exp:ident(vc),ident(lock)],exp:ident(flags)]],estmt[exp:assign[simple_assi(=),exp:ident(tbd),exp:&ref:exp:call[exp:ident(IDT77252_PRV_TBD),exp:ident(skb)]]],estmt[exp:call[exp:ident(spin_lock_irqsave),exp:&ref:exp:record_ptr[exp:ident(scq),ident(lock)],exp:ident(flags)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:record_ptr[exp:ident(scq),ident(next)],ident(word_1)],exp:call[exp:ident(cpu_to_le32),exp:binary_arith[aop(|),exp:binary_arith[aop(|),exp:record_ptr[exp:ident(tbd),ident(word_1)],exp:ident(SAR_TBD_TSIF)],exp:ident(SAR_TBD_GTSI)]]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:record_ptr[exp:ident(scq),ident(next)],ident(word_2)],exp:call[exp:ident(cpu_to_le32),exp:record_ptr[exp:ident(tbd),ident(word_2)]]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:record_ptr[exp:ident(scq),ident(next)],ident(word_3)],exp:call[exp:ident(cpu_to_le32),exp:record_ptr[exp:ident(tbd),ident(word_3)]]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:record_ptr[exp:ident(scq),ident(next)],ident(word_4)],exp:call[exp:ident(cpu_to_le32),exp:record_ptr[exp:ident(tbd),ident(word_4)]]]],sel_if[exp:binary_logi[logiop(eq),exp:record_ptr[exp:ident(scq),ident(next)],exp:record_ptr[exp:ident(scq),ident(last)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(scq),ident(next)],exp:record_ptr[exp:ident(scq),ident(base)]]],estmt[exp:??(N/H)]],estmt[exp:call[exp:ident(write_sram),exp:ident(card),exp:record_ptr[exp:ident(scq),ident(scd)],exp:binary_arith[aop(+),exp:record_ptr[exp:ident(scq),ident(paddr)],exp:??(N/H)]]],estmt[exp:call[exp:ident(spin_unlock_irqrestore),exp:&ref:exp:record_ptr[exp:ident(scq),ident(lock)],exp:ident(flags)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(scq),ident(trans_start)],exp:ident(jiffies)]],sel_if[exp:call[exp:ident(test_and_clear_bit),exp:ident(VCF_IDLE),exp:&ref:exp:record_ptr[exp:ident(vc),ident(flags)]],{}stmt[estmt[exp:call[exp:ident(writel),exp:binary_arith[aop(|),exp:binary_arith[aop(|),exp:ident(TCMDQ_START_LACR),exp:binary_arith[aop(<<),exp:record_ptr[exp:ident(vc),ident(lacr)],exp:const:int(16)]],exp:record_ptr[exp:ident(vc),ident(index)]],exp:ident(SAR_REG_TCMDQ)]]],estmt(NONE)],estmt[exp:call[exp:ident(TXPRINTK),exp:const:string(%d entries in SCQ used (push).\n),exp:call[exp:ident(atomic_read),exp:&ref:exp:record_ptr[exp:ident(scq),ident(used)]]]],estmt[exp:call[exp:ident(XPRINTK),exp:const:string(%s: SCQ (after push %2d) head = 0x%x, next = 0x%p.\n),exp:record_ptr[exp:ident(card),ident(name)],exp:call[exp:ident(atomic_read),exp:&ref:exp:record_ptr[exp:ident(scq),ident(used)]],exp:call[exp:ident(read_sram),exp:ident(card),exp:binary_arith[aop(+),exp:record_ptr[exp:ident(scq),ident(scd)],exp:const:int(1)]],exp:record_ptr[exp:ident(scq),ident(next)]]],st_return[exp:const:int(0)],statem(N/H),st_return[exp:??(N/H)]]],def[fname(drain_scq),funtype[fulltype[ctype[btype(void)]],param[reg(),name(card),fulltype[typec(N/H)]],param[reg(),name(vc),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp:call[exp:ident(TXPRINTK),exp:const:string(%s: SCQ (before drain %2d) next = 0x%p.\n),exp:record_ptr[exp:ident(card),ident(name)],exp:call[exp:ident(atomic_read),exp:&ref:exp:record_ptr[exp:ident(scq),ident(used)]],exp:record_ptr[exp:ident(scq),ident(next)]]],estmt[exp:assign[simple_assi(=),exp:ident(skb),exp:call[exp:ident(skb_dequeue),exp:&ref:exp:record_ptr[exp:ident(scq),ident(transmit)]]]],sel_if[exp:ident(skb),{}stmt[estmt[exp:call[exp:ident(TXPRINTK),exp:const:string(%s: freeing skb at %p.\n),exp:record_ptr[exp:ident(card),ident(name)],exp:ident(skb)]],estmt[exp:call[exp:ident(pci_unmap_single),exp:record_ptr[exp:ident(card),ident(pcidev)],exp:call[exp:ident(IDT77252_PRV_PADDR),exp:ident(skb)],exp:record_ptr[exp:ident(skb),ident(len)],exp:ident(PCI_DMA_TODEVICE)]],estmt[exp:assign[simple_assi(=),exp:ident(vcc),exp:record_ptr[exp:call[exp:ident(ATM_SKB),exp:ident(skb)],ident(vcc)]]],sel_if[exp:record_ptr[exp:ident(vcc),ident(pop)],estmt[exp:call[exp:record_ptr[exp:ident(vcc),ident(pop)],exp:ident(vcc),exp:ident(skb)]],estmt[exp:call[exp:ident(dev_kfree_skb),exp:ident(skb)]]],estmt[exp:call[exp:ident(atomic_inc),exp:&ref:exp:record_ptr[exp:record_ptr[exp:ident(vcc),ident(stats)],ident(tx)]]]],estmt(NONE)],estmt[exp:call[exp:ident(atomic_dec),exp:&ref:exp:record_ptr[exp:ident(scq),ident(used)]]],estmt[exp:call[exp:ident(spin_lock),exp:&ref:exp:record_ptr[exp:ident(scq),ident(skblock)]]],while[exp:assign[simple_assi(=),exp:ident(skb),exp:call[exp:ident(skb_dequeue),exp:&ref:exp:record_ptr[exp:ident(scq),ident(pending)]]],{}stmt[sel_if[exp:call[exp:ident(push_on_scq),exp:ident(card),exp:ident(vc),exp:ident(skb)],{}stmt[estmt[exp:call[exp:ident(skb_queue_head),exp:&ref:exp:record_ptr[exp:record_ptr[exp:ident(vc),ident(scq)],ident(pending)],exp:ident(skb)]],statem(N/H)],estmt(NONE)]]],estmt[exp:call[exp:ident(spin_unlock),exp:&ref:exp:record_ptr[exp:ident(scq),ident(skblock)]]]]],def[fname(queue_skb),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(card),fulltype[typec(N/H)]],param[reg(),name(vc),fulltype[typec(N/H)]],param[reg(),name(skb),fulltype[typec(N/H)]],param[reg(),name(oam),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),sel_if[exp:binary_logi[logiop(eq),exp:record_ptr[exp:ident(skb),ident(len)],exp:const:int(0)],{}stmt[estmt[exp:call[exp:ident(printk),exp:const:string(%s: invalid skb->len (%d)\n),exp:record_ptr[exp:ident(card),ident(name)],exp:record_ptr[exp:ident(skb),ident(len)]]],st_return[exp:??(N/H)]],estmt(NONE)],estmt[exp:call[exp:ident(TXPRINTK),exp:const:string(%s: Sending %d bytes of data.\n),exp:record_ptr[exp:ident(card),ident(name)],exp:record_ptr[exp:ident(skb),ident(len)]]],estmt[exp:assign[simple_assi(=),exp:ident(tbd),exp:&ref:exp:call[exp:ident(IDT77252_PRV_TBD),exp:ident(skb)]]],estmt[exp:assign[simple_assi(=),exp:ident(vcc),exp:record_ptr[exp:call[exp:ident(ATM_SKB),exp:ident(skb)],ident(vcc)]]],estmt[exp:assign[simple_assi(=),exp:call[exp:ident(IDT77252_PRV_PADDR),exp:ident(skb)],exp:call[exp:ident(pci_map_single),exp:record_ptr[exp:ident(card),ident(pcidev)],exp:record_ptr[exp:ident(skb),ident(data)],exp:record_ptr[exp:ident(skb),ident(len)],exp:ident(PCI_DMA_TODEVICE)]]],estmt[exp:assign[simple_assi(=),exp:ident(error),exp:??(N/H)]],sel_if[exp:ident(oam),{}stmt[sel_if[exp:binary_logi[logiop(??),exp:record_ptr[exp:ident(skb),ident(len)],exp:const:int(52)],statem(N/H),estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(tbd),ident(word_1)],exp:binary_arith[aop(|),exp:binary_arith[aop(|),exp:ident(SAR_TBD_OAM),exp:ident(ATM_CELL_PAYLOAD)],exp:ident(SAR_TBD_EPDU)]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(tbd),ident(word_2)],exp:binary_arith[aop(+),exp:call[exp:ident(IDT77252_PRV_PADDR),exp:ident(skb)],exp:const:int(4)]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(tbd),ident(word_3)],exp:const:int(0x00000000)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(tbd),ident(word_4)],exp:binary_arith[aop(|),exp:binary_arith[aop(|),exp:binary_arith[aop(|),exp:binary_arith[aop(<<),exp:array_acc[exp:record_ptr[exp:ident(skb),ident(data)],exp:const:int(0)],exp:const:int(24)],exp:binary_arith[aop(<<),exp:array_acc[exp:record_ptr[exp:ident(skb),ident(data)],exp:const:int(1)],exp:const:int(16)]],exp:binary_arith[aop(<<),exp:array_acc[exp:record_ptr[exp:ident(skb),ident(data)],exp:const:int(2)],exp:const:int(8)]],exp:binary_arith[aop(<<),exp:array_acc[exp:record_ptr[exp:ident(skb),ident(data)],exp:const:int(3)],exp:const:int(0)]]]],sel_if[exp:call[exp:ident(test_bit),exp:ident(VCF_RSV),exp:&ref:exp:record_ptr[exp:ident(vc),ident(flags)]],estmt[exp:assign[simple_assi(=),exp:ident(vc),exp:array_acc[exp:record_ptr[exp:ident(card),ident(vcs)],exp:const:int(0)]]],estmt(NONE)],statem(N/H)],estmt(NONE)],sel_if[exp:call[exp:ident(test_bit),exp:ident(VCF_RSV),exp:&ref:exp:record_ptr[exp:ident(vc),ident(flags)]],{}stmt[estmt[exp:call[exp:ident(printk),exp:const:string(%s: Trying to transmit on reserved VC\n),exp:record_ptr[exp:ident(card),ident(name)]]],statem(N/H)],estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:ident(aal),exp:record_acc[exp:record_ptr[exp:ident(vcc),ident(qos)],ident(aal)]]],statem(N/H),statem(N/H),estmt[exp:call[exp:ident(skb_queue_tail),exp:&ref:exp:record_ptr[exp:record_ptr[exp:ident(vc),ident(scq)],ident(pending)],exp:ident(skb)]],while[exp:assign[simple_assi(=),exp:ident(skb),exp:call[exp:ident(skb_dequeue),exp:&ref:exp:record_ptr[exp:record_ptr[exp:ident(vc),ident(scq)],ident(pending)]]],{}stmt[sel_if[exp:call[exp:ident(push_on_scq),exp:ident(card),exp:ident(vc),exp:ident(skb)],{}stmt[estmt[exp:call[exp:ident(skb_queue_head),exp:&ref:exp:record_ptr[exp:record_ptr[exp:ident(vc),ident(scq)],ident(pending)],exp:ident(skb)]],statem(N/H)],estmt(NONE)]]],estmt[exp:call[exp:ident(spin_unlock_irqrestore),exp:&ref:exp:record_ptr[exp:record_ptr[exp:ident(vc),ident(scq)],ident(skblock)],exp:ident(flags)]],st_return[exp:const:int(0)],statem(N/H),st_return[exp:ident(error)]]],def[fname(get_free_scd),funtype[fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]],param[reg(),name(card),fulltype[typec(N/H)]],param[reg(),name(vc),fulltype[typec(N/H)]]],{}stmt[statem(N/H),for[exp:assign[simple_assi(=),exp:ident(i),exp:const:int(0)],exp:binary_logi[logiop(??),exp:ident(i),exp:record_ptr[exp:ident(card),ident(scd_size)]],exp:??(N/H),{}stmt[sel_if[exp:??(N/H),{}stmt[estmt[exp:assign[simple_assi(=),exp:array_acc[exp:record_ptr[exp:ident(card),ident(scd2vc)],exp:ident(i)],exp:ident(vc)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(vc),ident(scd_index)],exp:ident(i)]],st_return[exp:binary_arith[aop(+),exp:record_ptr[exp:ident(card),ident(scd_base)],exp:binary_arith[aop(*),exp:ident(i),exp:ident(SAR_SRAM_SCD_SIZE)]]]],estmt(NONE)]]],st_return[exp:const:int(0)]]],def[fname(fill_scd),funtype[fulltype[ctype[btype(void)]],param[reg(),name(card),fulltype[typec(N/H)]],param[reg(),name(scq),fulltype[typec(N/H)]],param[reg(),name(class),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[estmt[exp:call[exp:ident(write_sram),exp:ident(card),exp:record_ptr[exp:ident(scq),ident(scd)],exp:record_ptr[exp:ident(scq),ident(paddr)]]],estmt[exp:call[exp:ident(write_sram),exp:ident(card),exp:binary_arith[aop(+),exp:record_ptr[exp:ident(scq),ident(scd)],exp:const:int(1)],exp:const:int(0x00000000)]],estmt[exp:call[exp:ident(write_sram),exp:ident(card),exp:binary_arith[aop(+),exp:record_ptr[exp:ident(scq),ident(scd)],exp:const:int(2)],exp:const:int(0xffffffff)]],estmt[exp:call[exp:ident(write_sram),exp:ident(card),exp:binary_arith[aop(+),exp:record_ptr[exp:ident(scq),ident(scd)],exp:const:int(3)],exp:const:int(0x00000000)]]]],def[fname(clear_scd),funtype[fulltype[ctype[btype(void)]],param[reg(),name(card),fulltype[typec(N/H)]],param[reg(),name(scq),fulltype[typec(N/H)]],param[reg(),name(class),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[statem(N/H)]],def[fname(init_rsq),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(card),fulltype[typec(N/H)]]],{}stmt[statem(N/H),estmt[exp:assign[simple_assi(=),exp:record_acc[exp:record_ptr[exp:ident(card),ident(rsq)],ident(base)],exp:call[exp:ident(pci_alloc_consistent),exp:record_ptr[exp:ident(card),ident(pcidev)],exp:ident(RSQSIZE),exp:&ref:exp:record_acc[exp:record_ptr[exp:ident(card),ident(rsq)],ident(paddr)]]]],sel_if[exp:binary_logi[logiop(eq),exp:record_acc[exp:record_ptr[exp:ident(card),ident(rsq)],ident(base)],exp:ident(NULL)],{}stmt[estmt[exp:call[exp:ident(printk),exp:const:string(%s: can't allocate RSQ.\n),exp:record_ptr[exp:ident(card),ident(name)]]],st_return[exp:??(N/H)]],estmt(NONE)],estmt[exp:call[exp:ident(memset),exp:record_acc[exp:record_ptr[exp:ident(card),ident(rsq)],ident(base)],exp:const:int(0),exp:ident(RSQSIZE)]],estmt[exp:assign[simple_assi(=),exp:record_acc[exp:record_ptr[exp:ident(card),ident(rsq)],ident(last)],exp:binary_arith[aop(-),exp:binary_arith[aop(+),exp:record_acc[exp:record_ptr[exp:ident(card),ident(rsq)],ident(base)],exp:ident(RSQ_NUM_ENTRIES)],exp:const:int(1)]]],estmt[exp:assign[simple_assi(=),exp:record_acc[exp:record_ptr[exp:ident(card),ident(rsq)],ident(next)],exp:record_acc[exp:record_ptr[exp:ident(card),ident(rsq)],ident(last)]]],for[exp:assign[simple_assi(=),exp:ident(rsqe),exp:record_acc[exp:record_ptr[exp:ident(card),ident(rsq)],ident(base)]],exp:binary_logi[logiop(??),exp:ident(rsqe),exp:record_acc[exp:record_ptr[exp:ident(card),ident(rsq)],ident(last)]],exp:??(N/H),estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(rsqe),ident(word_4)],exp:const:int(0)]]],estmt[exp:call[exp:ident(writel),exp:binary_arith[aop(-),exp:??(N/H),exp:??(N/H)],exp:ident(SAR_REG_RSQH)]],estmt[exp:call[exp:ident(writel),exp:record_acc[exp:record_ptr[exp:ident(card),ident(rsq)],ident(paddr)],exp:ident(SAR_REG_RSQB)]],estmt[exp:call[exp:ident(IPRINTK),exp:const:string(%s: RSQ base at 0x%lx (0x%x).\n),exp:record_ptr[exp:ident(card),ident(name)],exp:??(N/H),exp:call[exp:ident(readl),exp:ident(SAR_REG_RSQB)]]],estmt[exp:call[exp:ident(IPRINTK),exp:const:string(%s: RSQ head = 0x%x, base = 0x%x, tail = 0x%x.\n),exp:record_ptr[exp:ident(card),ident(name)],exp:call[exp:ident(readl),exp:ident(SAR_REG_RSQH)],exp:call[exp:ident(readl),exp:ident(SAR_REG_RSQB)],exp:call[exp:ident(readl),exp:ident(SAR_REG_RSQT)]]],st_return[exp:const:int(0)]]],def[fname(deinit_rsq),funtype[fulltype[ctype[btype(void)]],param[reg(),name(card),fulltype[typec(N/H)]]],{}stmt[estmt[exp:call[exp:ident(pci_free_consistent),exp:record_ptr[exp:ident(card),ident(pcidev)],exp:ident(RSQSIZE),exp:record_acc[exp:record_ptr[exp:ident(card),ident(rsq)],ident(base)],exp:record_acc[exp:record_ptr[exp:ident(card),ident(rsq)],ident(paddr)]]]]],def[fname(dequeue_rx),funtype[fulltype[ctype[btype(void)]],param[reg(),name(card),fulltype[typec(N/H)]],param[reg(),name(rsqe),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp:assign[simple_assi(=),exp:ident(stat),exp:call[exp:ident(le32_to_cpu),exp:record_ptr[exp:ident(rsqe),ident(word_4)]]]],sel_if[exp:binary_arith[aop(&),exp:ident(stat),exp:ident(SAR_RSQE_IDLE)],{}stmt[estmt[exp:call[exp:ident(RXPRINTK),exp:const:string(%s: message about inactive connection.\n),exp:record_ptr[exp:ident(card),ident(name)]]],statem(N/H)],estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:ident(skb),exp:call[exp:ident(sb_pool_skb),exp:ident(card),exp:call[exp:ident(le32_to_cpu),exp:record_ptr[exp:ident(rsqe),ident(word_2)]]]]],sel_if[exp:binary_logi[logiop(eq),exp:ident(skb),exp:ident(NULL)],{}stmt[estmt[exp:call[exp:ident(printk),exp:const:string(%s: NULL skb in %s, rsqe: %08x %08x %08x %08x\n),exp:record_ptr[exp:ident(card),ident(name)],exp:ident(__FUNCTION__),exp:call[exp:ident(le32_to_cpu),exp:record_ptr[exp:ident(rsqe),ident(word_1)]],exp:call[exp:ident(le32_to_cpu),exp:record_ptr[exp:ident(rsqe),ident(word_2)]],exp:call[exp:ident(le32_to_cpu),exp:record_ptr[exp:ident(rsqe),ident(word_3)]],exp:call[exp:ident(le32_to_cpu),exp:record_ptr[exp:ident(rsqe),ident(word_4)]]]],statem(N/H)],estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:ident(header),exp:call[exp:ident(le32_to_cpu),exp:record_ptr[exp:ident(rsqe),ident(word_1)]]]],estmt[exp:assign[simple_assi(=),exp:ident(vpi),exp:binary_arith[aop(&),exp:binary_arith[aop(>>),exp:ident(header),exp:const:int(16)],exp:const:int(0x00ff)]]],estmt[exp:assign[simple_assi(=),exp:ident(vci),exp:binary_arith[aop(&),exp:binary_arith[aop(>>),exp:ident(header),exp:const:int(0)],exp:const:int(0xffff)]]],estmt[exp:call[exp:ident(RXPRINTK),exp:const:string(%s: SDU for %d.%d received in buffer 0x%p (data 0x%p).\n),exp:record_ptr[exp:ident(card),ident(name)],exp:ident(vpi),exp:ident(vci),exp:ident(skb),exp:record_ptr[exp:ident(skb),ident(data)]]],sel_if[exp:binary_logi[logiop(or),exp:binary_logi[logiop(??),exp:ident(vpi),exp:binary_arith[aop(<<),exp:const:int(1),exp:record_ptr[exp:ident(card),ident(vpibits)]]],exp:binary_logi[logiop(??),exp:ident(vci),exp:binary_arith[aop(&),exp:ident(vci),exp:record_ptr[exp:ident(card),ident(vcimask)]]]],{}stmt[estmt[exp:call[exp:ident(printk),exp:const:string(%s: SDU received for out-of-range vc %u.%u\n),exp:record_ptr[exp:ident(card),ident(name)],exp:ident(vpi),exp:ident(vci)]],estmt[exp:call[exp:ident(recycle_rx_skb),exp:ident(card),exp:ident(skb)]],statem(N/H)],estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:ident(vc),exp:array_acc[exp:record_ptr[exp:ident(card),ident(vcs)],exp:call[exp:ident(VPCI2VC),exp:ident(card),exp:ident(vpi),exp:ident(vci)]]]],sel_if[exp:binary_logi[logiop(or),exp:??(N/H),exp:??(N/H)],{}stmt[estmt[exp:call[exp:ident(printk),exp:const:string(%s: SDU received on non RX vc %u.%u\n),exp:record_ptr[exp:ident(card),ident(name)],exp:ident(vpi),exp:ident(vci)]],estmt[exp:call[exp:ident(recycle_rx_skb),exp:ident(card),exp:ident(skb)]],statem(N/H)],estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:ident(vcc),exp:record_ptr[exp:ident(vc),ident(rx_vcc)]]],estmt[exp:call[exp:ident(pci_dma_sync_single_for_cpu),exp:record_ptr[exp:ident(card),ident(pcidev)],exp:call[exp:ident(IDT77252_PRV_PADDR),exp:ident(skb)],exp:binary_arith[aop(-),exp:call[exp:ident(skb_end_pointer),exp:ident(skb)],exp:record_ptr[exp:ident(skb),ident(data)]],exp:ident(PCI_DMA_FROMDEVICE)]],sel_if[exp:binary_logi[logiop(or),exp:binary_logi[logiop(eq),exp:record_acc[exp:record_ptr[exp:ident(vcc),ident(qos)],ident(aal)],exp:ident(ATM_AAL0)],exp:binary_logi[logiop(eq),exp:record_acc[exp:record_ptr[exp:ident(vcc),ident(qos)],ident(aal)],exp:ident(ATM_AAL34)]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp:assign[simple_assi(=),exp:ident(cell),exp:record_ptr[exp:ident(skb),ident(data)]]],for[exp:assign[simple_assi(=),exp:ident(i),exp:binary_arith[aop(&),exp:ident(stat),exp:ident(SAR_RSQE_CELLCNT)]],exp:ident(i),exp:??(N/H),{}stmt[sel_if[exp:binary_logi[logiop(eq),exp:assign[simple_assi(=),exp:ident(sb),exp:call[exp:ident(dev_alloc_skb),exp:const:int(64)]],exp:ident(NULL)],{}stmt[estmt[exp:call[exp:ident(printk),exp:const:string(%s: Can't allocate buffers for aal0.\n),exp:record_ptr[exp:ident(card),ident(name)]]],estmt[exp:call[exp:ident(atomic_add),exp:ident(i),exp:&ref:exp:record_ptr[exp:record_ptr[exp:ident(vcc),ident(stats)],ident(rx_drop)]]],statem(N/H)],estmt(NONE)],sel_if[exp:??(N/H),{}stmt[estmt[exp:call[exp:ident(RXPRINTK),exp:const:string(%s: atm_charge() dropped aal0 packets.\n),exp:record_ptr[exp:ident(card),ident(name)]]],estmt[exp:call[exp:ident(atomic_add),exp:binary_arith[aop(-),exp:ident(i),exp:const:int(1)],exp:&ref:exp:record_ptr[exp:record_ptr[exp:ident(vcc),ident(stats)],ident(rx_drop)]]],estmt[exp:call[exp:ident(dev_kfree_skb),exp:ident(sb)]],statem(N/H)],estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:ident(aal0),exp:binary_arith[aop(|),exp:binary_arith[aop(<<),exp:ident(vpi),exp:ident(ATM_HDR_VPI_SHIFT)],exp:binary_arith[aop(<<),exp:ident(vci),exp:ident(ATM_HDR_VCI_SHIFT)]]]],estmt[exp:assign[op_assi(|=),exp:ident(aal0),exp:cond3[exp:binary_arith[aop(&),exp:ident(stat),exp:ident(SAR_RSQE_EPDU)],exp:const:int(0x00000002),exp:const:int(0)]]],estmt[exp:assign[op_assi(|=),exp:ident(aal0),exp:cond3[exp:binary_arith[aop(&),exp:ident(stat),exp:ident(SAR_RSQE_CLP)],exp:const:int(0x00000001),exp:const:int(0)]]],estmt[exp:assign[simple_assi(=),exp:*ref:exp:??(N/H),exp:ident(aal0)]],estmt[exp:call[exp:ident(skb_put),exp:ident(sb),exp:sizeoftype:fulltype[typec(N/H)]]],estmt[exp:call[exp:ident(memcpy),exp:call[exp:ident(skb_put),exp:ident(sb),exp:ident(ATM_CELL_PAYLOAD)],exp:ident(cell),exp:ident(ATM_CELL_PAYLOAD)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:call[exp:ident(ATM_SKB),exp:ident(sb)],ident(vcc)],exp:ident(vcc)]],estmt[exp:call[exp:ident(__net_timestamp),exp:ident(sb)]],estmt[exp:call[exp:record_ptr[exp:ident(vcc),ident(push)],exp:ident(vcc),exp:ident(sb)]],estmt[exp:call[exp:ident(atomic_inc),exp:&ref:exp:record_ptr[exp:record_ptr[exp:ident(vcc),ident(stats)],ident(rx)]]],estmt[exp:assign[op_assi(+=),exp:ident(cell),exp:ident(ATM_CELL_PAYLOAD)]]]],estmt[exp:call[exp:ident(recycle_rx_skb),exp:ident(card),exp:ident(skb)]],statem(N/H)],estmt(NONE)],sel_if[exp:binary_logi[logiop(??),exp:record_acc[exp:record_ptr[exp:ident(vcc),ident(qos)],ident(aal)],exp:ident(ATM_AAL5)],{}stmt[estmt[exp:call[exp:ident(printk),exp:const:string(%s: Unexpected AAL type in dequeue_rx(): %d.\n),exp:record_ptr[exp:ident(card),ident(name)],exp:record_acc[exp:record_ptr[exp:ident(vcc),ident(qos)],ident(aal)]]],estmt[exp:call[exp:ident(recycle_rx_skb),exp:ident(card),exp:ident(skb)]],statem(N/H)],estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(skb),ident(len)],exp:binary_arith[aop(*),exp:binary_arith[aop(&),exp:ident(stat),exp:ident(SAR_RSQE_CELLCNT)],exp:ident(ATM_CELL_PAYLOAD)]]],estmt[exp:assign[simple_assi(=),exp:ident(rpp),exp:&ref:exp:record_acc[exp:record_ptr[exp:ident(vc),ident(rcv)],ident(rx_pool)]]],estmt[exp:assign[op_assi(+=),exp:record_ptr[exp:ident(rpp),ident(len)],exp:record_ptr[exp:ident(skb),ident(len)]]],sel_if[exp:??(N/H),estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(rpp),ident(first)],exp:ident(skb)]],estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:*ref:exp:record_ptr[exp:ident(rpp),ident(last)],exp:ident(skb)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(rpp),ident(last)],exp:&ref:exp:record_ptr[exp:ident(skb),ident(next)]]],sel_if[exp:binary_arith[aop(&),exp:ident(stat),exp:ident(SAR_RSQE_EPDU)],{}stmt[statem(N/H),statem(N/H),estmt[exp:assign[simple_assi(=),exp:ident(l1l2),exp:??(N/H)]],estmt[exp:assign[simple_assi(=),exp:ident(len),exp:binary_arith[aop(|),exp:binary_arith[aop(<<),exp:array_acc[exp:ident(l1l2),exp:const:int(0)],exp:const:int(8)],exp:array_acc[exp:ident(l1l2),exp:const:int(1)]]]],estmt[exp:assign[simple_assi(=),exp:ident(len),exp:cond3[exp:ident(len),exp:ident(len),exp:const:int(0x10000)]]],estmt[exp:call[exp:ident(RXPRINTK),exp:const:string(%s: PDU has %d bytes.\n),exp:record_ptr[exp:ident(card),ident(name)],exp:ident(len)]],sel_if[exp:binary_logi[logiop(or),exp:binary_logi[logiop(??),exp:binary_arith[aop(+),exp:ident(len),exp:const:int(8)],exp:record_ptr[exp:ident(rpp),ident(len)]],exp:binary_logi[logiop(??),exp:binary_arith[aop(+),exp:ident(len),exp:binary_arith[aop(+),exp:const:int(47),exp:const:int(8)]],exp:record_ptr[exp:ident(rpp),ident(len)]]],{}stmt[estmt[exp:call[exp:ident(RXPRINTK),exp:const:other(N/H),exp:record_ptr[exp:ident(card),ident(name)],exp:ident(len),exp:record_ptr[exp:ident(rpp),ident(len)],exp:call[exp:ident(readl),exp:ident(SAR_REG_CDC)]]],estmt[exp:call[exp:ident(recycle_rx_pool_skb),exp:ident(card),exp:ident(rpp)]],estmt[exp:call[exp:ident(atomic_inc),exp:&ref:exp:record_ptr[exp:record_ptr[exp:ident(vcc),ident(stats)],ident(rx_err)]]],statem(N/H)],estmt(NONE)],sel_if[exp:binary_arith[aop(&),exp:ident(stat),exp:ident(SAR_RSQE_CRC)],{}stmt[estmt[exp:call[exp:ident(RXPRINTK),exp:const:string(%s: AAL5 CRC error.\n),exp:record_ptr[exp:ident(card),ident(name)]]],estmt[exp:call[exp:ident(recycle_rx_pool_skb),exp:ident(card),exp:ident(rpp)]],estmt[exp:call[exp:ident(atomic_inc),exp:&ref:exp:record_ptr[exp:record_ptr[exp:ident(vcc),ident(stats)],ident(rx_err)]]],statem(N/H)],estmt(NONE)],sel_if[exp:binary_logi[logiop(??),exp:record_ptr[exp:ident(rpp),ident(count)],exp:const:int(1)],{}stmt[statem(N/H),estmt[exp:assign[simple_assi(=),exp:ident(skb),exp:call[exp:ident(dev_alloc_skb),exp:record_ptr[exp:ident(rpp),ident(len)]]]],sel_if[exp:??(N/H),{}stmt[estmt[exp:call[exp:ident(RXPRINTK),exp:const:string(%s: Can't alloc RX skb.\n),exp:record_ptr[exp:ident(card),ident(name)]]],estmt[exp:call[exp:ident(recycle_rx_pool_skb),exp:ident(card),exp:ident(rpp)]],estmt[exp:call[exp:ident(atomic_inc),exp:&ref:exp:record_ptr[exp:record_ptr[exp:ident(vcc),ident(stats)],ident(rx_err)]]],statem(N/H)],estmt(NONE)],sel_if[exp:??(N/H),{}stmt[estmt[exp:call[exp:ident(recycle_rx_pool_skb),exp:ident(card),exp:ident(rpp)]],estmt[exp:call[exp:ident(dev_kfree_skb),exp:ident(skb)]],statem(N/H)],estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:ident(sb),exp:record_ptr[exp:ident(rpp),ident(first)]]],for[exp:assign[simple_assi(=),exp:ident(i),exp:const:int(0)],exp:binary_logi[logiop(??),exp:ident(i),exp:record_ptr[exp:ident(rpp),ident(count)]],exp:??(N/H),{}stmt[estmt[exp:call[exp:ident(memcpy),exp:call[exp:ident(skb_put),exp:ident(skb),exp:record_ptr[exp:ident(sb),ident(len)]],exp:record_ptr[exp:ident(sb),ident(data)],exp:record_ptr[exp:ident(sb),ident(len)]]],estmt[exp:assign[simple_assi(=),exp:ident(sb),exp:record_ptr[exp:ident(sb),ident(next)]]]]],estmt[exp:call[exp:ident(recycle_rx_pool_skb),exp:ident(card),exp:ident(rpp)]],estmt[exp:call[exp:ident(skb_trim),exp:ident(skb),exp:ident(len)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:call[exp:ident(ATM_SKB),exp:ident(skb)],ident(vcc)],exp:ident(vcc)]],estmt[exp:call[exp:ident(__net_timestamp),exp:ident(skb)]],estmt[exp:call[exp:record_ptr[exp:ident(vcc),ident(push)],exp:ident(vcc),exp:ident(skb)]],estmt[exp:call[exp:ident(atomic_inc),exp:&ref:exp:record_ptr[exp:record_ptr[exp:ident(vcc),ident(stats)],ident(rx)]]],statem(N/H)],estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(skb),ident(next)],exp:ident(NULL)]],estmt[exp:call[exp:ident(flush_rx_pool),exp:ident(card),exp:ident(rpp)]],sel_if[exp:??(N/H),{}stmt[estmt[exp:call[exp:ident(recycle_rx_skb),exp:ident(card),exp:ident(skb)]],statem(N/H)],estmt(NONE)],estmt[exp:call[exp:ident(pci_unmap_single),exp:record_ptr[exp:ident(card),ident(pcidev)],exp:call[exp:ident(IDT77252_PRV_PADDR),exp:ident(skb)],exp:binary_arith[aop(-),exp:call[exp:ident(skb_end_pointer),exp:ident(skb)],exp:record_ptr[exp:ident(skb),ident(data)]],exp:ident(PCI_DMA_FROMDEVICE)]],estmt[exp:call[exp:ident(sb_pool_remove),exp:ident(card),exp:ident(skb)]],estmt[exp:call[exp:ident(skb_trim),exp:ident(skb),exp:ident(len)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:call[exp:ident(ATM_SKB),exp:ident(skb)],ident(vcc)],exp:ident(vcc)]],estmt[exp:call[exp:ident(__net_timestamp),exp:ident(skb)]],estmt[exp:call[exp:record_ptr[exp:ident(vcc),ident(push)],exp:ident(vcc),exp:ident(skb)]],estmt[exp:call[exp:ident(atomic_inc),exp:&ref:exp:record_ptr[exp:record_ptr[exp:ident(vcc),ident(stats)],ident(rx)]]],sel_if[exp:binary_logi[logiop(??),exp:record_ptr[exp:ident(skb),ident(truesize)],exp:ident(SAR_FB_SIZE_3)],estmt[exp:call[exp:ident(add_rx_skb),exp:ident(card),exp:const:int(3),exp:ident(SAR_FB_SIZE_3),exp:const:int(1)]],sel_if[exp:binary_logi[logiop(??),exp:record_ptr[exp:ident(skb),ident(truesize)],exp:ident(SAR_FB_SIZE_2)],estmt[exp:call[exp:ident(add_rx_skb),exp:ident(card),exp:const:int(2),exp:ident(SAR_FB_SIZE_2),exp:const:int(1)]],sel_if[exp:binary_logi[logiop(??),exp:record_ptr[exp:ident(skb),ident(truesize)],exp:ident(SAR_FB_SIZE_1)],estmt[exp:call[exp:ident(add_rx_skb),exp:ident(card),exp:const:int(1),exp:ident(SAR_FB_SIZE_1),exp:const:int(1)]],estmt[exp:call[exp:ident(add_rx_skb),exp:ident(card),exp:const:int(0),exp:ident(SAR_FB_SIZE_0),exp:const:int(1)]]]]],statem(N/H)],estmt(NONE)]]],def[fname(idt77252_rx),funtype[fulltype[ctype[btype(void)]],param[reg(),name(card),fulltype[typec(N/H)]]],{}stmt[statem(N/H),sel_if[exp:binary_logi[logiop(eq),exp:record_acc[exp:record_ptr[exp:ident(card),ident(rsq)],ident(next)],exp:record_acc[exp:record_ptr[exp:ident(card),ident(rsq)],ident(last)]],estmt[exp:assign[simple_assi(=),exp:ident(rsqe),exp:record_acc[exp:record_ptr[exp:ident(card),ident(rsq)],ident(base)]]],estmt[exp:assign[simple_assi(=),exp:ident(rsqe),exp:binary_arith[aop(+),exp:record_acc[exp:record_ptr[exp:ident(card),ident(rsq)],ident(next)],exp:const:int(1)]]]],sel_if[exp:??(N/H),{}stmt[estmt[exp:call[exp:ident(RXPRINTK),exp:const:string(%s: no entry in RSQ.\n),exp:record_ptr[exp:ident(card),ident(name)]]],statem(N/H)],estmt(NONE)],statem(N/H),estmt[exp:call[exp:ident(writel),exp:binary_arith[aop(-),exp:??(N/H),exp:??(N/H)],exp:ident(SAR_REG_RSQH)]]]],def[fname(idt77252_rx_raw),funtype[fulltype[ctype[btype(void)]],param[reg(),name(card),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),sel_if[exp:binary_logi[logiop(eq),exp:record_ptr[exp:ident(card),ident(raw_cell_head)],exp:ident(NULL)],{}stmt[statem(N/H),estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(card),ident(raw_cell_head)],exp:call[exp:ident(sb_pool_skb),exp:ident(card),exp:ident(handle)]]]],estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:ident(queue),exp:record_ptr[exp:ident(card),ident(raw_cell_head)]]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:ident(head),exp:binary_arith[aop(+),exp:call[exp:ident(IDT77252_PRV_PADDR),exp:ident(queue)],exp:binary_arith[aop(-),exp:binary_arith[aop(-),exp:record_ptr[exp:ident(queue),ident(data)],exp:record_ptr[exp:ident(queue),ident(head)]],exp:const:int(16)]]]],estmt[exp:assign[simple_assi(=),exp:ident(tail),exp:call[exp:ident(readl),exp:ident(SAR_REG_RAWCT)]]],estmt[exp:call[exp:ident(pci_dma_sync_single_for_cpu),exp:record_ptr[exp:ident(card),ident(pcidev)],exp:call[exp:ident(IDT77252_PRV_PADDR),exp:ident(queue)],exp:binary_arith[aop(-),exp:binary_arith[aop(-),exp:call[exp:ident(skb_end_pointer),exp:ident(queue)],exp:record_ptr[exp:ident(queue),ident(head)]],exp:const:int(16)],exp:ident(PCI_DMA_FROMDEVICE)]],while[exp:binary_logi[logiop(??),exp:ident(head),exp:ident(tail)],{}stmt[statem(N/H),statem(N/H),estmt[exp:assign[simple_assi(=),exp:ident(header),exp:call[exp:ident(le32_to_cpu),exp:*ref:exp:??(N/H)]]],estmt[exp:assign[simple_assi(=),exp:ident(vpi),exp:binary_arith[aop(>>),exp:binary_arith[aop(&),exp:ident(header),exp:ident(ATM_HDR_VPI_MASK)],exp:ident(ATM_HDR_VPI_SHIFT)]]],estmt[exp:assign[simple_assi(=),exp:ident(vci),exp:binary_arith[aop(>>),exp:binary_arith[aop(&),exp:ident(header),exp:ident(ATM_HDR_VCI_MASK)],exp:ident(ATM_HDR_VCI_SHIFT)]]],estmt[exp:assign[simple_assi(=),exp:ident(pti),exp:binary_arith[aop(>>),exp:binary_arith[aop(&),exp:ident(header),exp:ident(ATM_HDR_PTI_MASK)],exp:ident(ATM_HDR_PTI_SHIFT)]]],sel_if[exp:binary_arith[aop(&),exp:ident(debug),exp:ident(DBG_RAW_CELL)],{}stmt[statem(N/H),estmt[exp:call[exp:ident(printk),exp:const:string(%s: raw cell %x.%02x.%04x.%x.%x\n),exp:record_ptr[exp:ident(card),ident(name)],exp:binary_arith[aop(&),exp:binary_arith[aop(>>),exp:ident(header),exp:const:int(28)],exp:const:int(0x000f)],exp:binary_arith[aop(&),exp:binary_arith[aop(>>),exp:ident(header),exp:const:int(20)],exp:const:int(0x00ff)],exp:binary_arith[aop(&),exp:binary_arith[aop(>>),exp:ident(header),exp:const:int(4)],exp:const:int(0xffff)],exp:binary_arith[aop(&),exp:binary_arith[aop(>>),exp:ident(header),exp:const:int(1)],exp:const:int(0x0007)],exp:binary_arith[aop(&),exp:binary_arith[aop(>>),exp:ident(header),exp:const:int(0)],exp:const:int(0x0001)]]],for[exp:assign[simple_assi(=),exp:ident(i),exp:const:int(16)],exp:binary_logi[logiop(??),exp:ident(i),exp:const:int(64)],exp:??(N/H),estmt[exp:call[exp:ident(printk),exp:const:string( %02x),exp:array_acc[exp:record_ptr[exp:ident(queue),ident(data)],exp:ident(i)]]]],estmt[exp:call[exp:ident(printk),exp:const:string(\n)]]],estmt(NONE)],sel_if[exp:binary_logi[logiop(or),exp:binary_logi[logiop(??),exp:ident(vpi),exp:binary_arith[aop(<<),exp:const:int(1),exp:record_ptr[exp:ident(card),ident(vpibits)]]],exp:binary_logi[logiop(??),exp:ident(vci),exp:binary_arith[aop(<<),exp:const:int(1),exp:record_ptr[exp:ident(card),ident(vcibits)]]]],{}stmt[estmt[exp:call[exp:ident(RPRINTK),exp:const:string(%s: SDU received for out-of-range vc %u.%u\n),exp:record_ptr[exp:ident(card),ident(name)],exp:ident(vpi),exp:ident(vci)]],statem(N/H)],estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:ident(vc),exp:array_acc[exp:record_ptr[exp:ident(card),ident(vcs)],exp:call[exp:ident(VPCI2VC),exp:ident(card),exp:ident(vpi),exp:ident(vci)]]]],sel_if[exp:binary_logi[logiop(or),exp:??(N/H),exp:??(N/H)],{}stmt[estmt[exp:call[exp:ident(RPRINTK),exp:const:string(%s: SDU received on non RX vc %u.%u\n),exp:record_ptr[exp:ident(card),ident(name)],exp:ident(vpi),exp:ident(vci)]],statem(N/H)],estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:ident(vcc),exp:record_ptr[exp:ident(vc),ident(rx_vcc)]]],sel_if[exp:binary_logi[logiop(??),exp:record_acc[exp:record_ptr[exp:ident(vcc),ident(qos)],ident(aal)],exp:ident(ATM_AAL0)],{}stmt[estmt[exp:call[exp:ident(RPRINTK),exp:const:string(%s: raw cell for non AAL0 vc %u.%u\n),exp:record_ptr[exp:ident(card),ident(name)],exp:ident(vpi),exp:ident(vci)]],estmt[exp:call[exp:ident(atomic_inc),exp:&ref:exp:record_ptr[exp:record_ptr[exp:ident(vcc),ident(stats)],ident(rx_drop)]]],statem(N/H)],estmt(NONE)],sel_if[exp:binary_logi[logiop(eq),exp:assign[simple_assi(=),exp:ident(sb),exp:call[exp:ident(dev_alloc_skb),exp:const:int(64)]],exp:ident(NULL)],{}stmt[estmt[exp:call[exp:ident(printk),exp:const:string(%s: Can't allocate buffers for AAL0.\n),exp:record_ptr[exp:ident(card),ident(name)]]],estmt[exp:call[exp:ident(atomic_inc),exp:&ref:exp:record_ptr[exp:record_ptr[exp:ident(vcc),ident(stats)],ident(rx_err)]]],statem(N/H)],estmt(NONE)],sel_if[exp:??(N/H),{}stmt[estmt[exp:call[exp:ident(RXPRINTK),exp:const:string(%s: atm_charge() dropped AAL0 packets.\n),exp:record_ptr[exp:ident(card),ident(name)]]],estmt[exp:call[exp:ident(dev_kfree_skb),exp:ident(sb)]],statem(N/H)],estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:*ref:exp:??(N/H),exp:ident(header)]],estmt[exp:call[exp:ident(skb_put),exp:ident(sb),exp:sizeoftype:fulltype[typec(N/H)]]],estmt[exp:call[exp:ident(memcpy),exp:call[exp:ident(skb_put),exp:ident(sb),exp:ident(ATM_CELL_PAYLOAD)],exp:&ref:exp:array_acc[exp:record_ptr[exp:ident(queue),ident(data)],exp:const:int(16)],exp:ident(ATM_CELL_PAYLOAD)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:call[exp:ident(ATM_SKB),exp:ident(sb)],ident(vcc)],exp:ident(vcc)]],estmt[exp:call[exp:ident(__net_timestamp),exp:ident(sb)]],estmt[exp:call[exp:record_ptr[exp:ident(vcc),ident(push)],exp:ident(vcc),exp:ident(sb)]],estmt[exp:call[exp:ident(atomic_inc),exp:&ref:exp:record_ptr[exp:record_ptr[exp:ident(vcc),ident(stats)],ident(rx)]]],statem(N/H),estmt[exp:assign[simple_assi(=),exp:ident(head),exp:binary_arith[aop(+),exp:call[exp:ident(IDT77252_PRV_PADDR),exp:ident(queue)],exp:binary_arith[aop(-),exp:binary_arith[aop(-),exp:record_ptr[exp:ident(queue),ident(data)],exp:record_ptr[exp:ident(queue),ident(head)]],exp:const:int(16)]]]],sel_if[exp:binary_logi[logiop(??),exp:record_ptr[exp:ident(queue),ident(len)],exp:const:int(128)],{}stmt[statem(N/H),statem(N/H),estmt[exp:assign[simple_assi(=),exp:ident(head),exp:call[exp:ident(le32_to_cpu),exp:*ref:exp:??(N/H)]]],estmt[exp:assign[simple_assi(=),exp:ident(handle),exp:call[exp:ident(le32_to_cpu),exp:*ref:exp:??(N/H)]]],estmt[exp:assign[simple_assi(=),exp:ident(next),exp:call[exp:ident(sb_pool_skb),exp:ident(card),exp:ident(handle)]]],estmt[exp:call[exp:ident(recycle_rx_skb),exp:ident(card),exp:ident(queue)]],sel_if[exp:ident(next),{}stmt[estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(card),ident(raw_cell_head)],exp:ident(next)]],estmt[exp:assign[simple_assi(=),exp:ident(queue),exp:record_ptr[exp:ident(card),ident(raw_cell_head)]]],estmt[exp:call[exp:ident(pci_dma_sync_single_for_cpu),exp:record_ptr[exp:ident(card),ident(pcidev)],exp:call[exp:ident(IDT77252_PRV_PADDR),exp:ident(queue)],exp:binary_arith[aop(-),exp:call[exp:ident(skb_end_pointer),exp:ident(queue)],exp:record_ptr[exp:ident(queue),ident(data)]],exp:ident(PCI_DMA_FROMDEVICE)]]],{}stmt[estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(card),ident(raw_cell_head)],exp:ident(NULL)]],estmt[exp:call[exp:ident(printk),exp:const:string(%s: raw cell queue overrun\n),exp:record_ptr[exp:ident(card),ident(name)]]],statem(N/H)]]],estmt(NONE)]]]]],def[fname(init_tsq),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(card),fulltype[typec(N/H)]]],{}stmt[statem(N/H),estmt[exp:assign[simple_assi(=),exp:record_acc[exp:record_ptr[exp:ident(card),ident(tsq)],ident(base)],exp:call[exp:ident(pci_alloc_consistent),exp:record_ptr[exp:ident(card),ident(pcidev)],exp:ident(RSQSIZE),exp:&ref:exp:record_acc[exp:record_ptr[exp:ident(card),ident(tsq)],ident(paddr)]]]],sel_if[exp:binary_logi[logiop(eq),exp:record_acc[exp:record_ptr[exp:ident(card),ident(tsq)],ident(base)],exp:ident(NULL)],{}stmt[estmt[exp:call[exp:ident(printk),exp:const:string(%s: can't allocate TSQ.\n),exp:record_ptr[exp:ident(card),ident(name)]]],st_return[exp:??(N/H)]],estmt(NONE)],estmt[exp:call[exp:ident(memset),exp:record_acc[exp:record_ptr[exp:ident(card),ident(tsq)],ident(base)],exp:const:int(0),exp:ident(TSQSIZE)]],estmt[exp:assign[simple_assi(=),exp:record_acc[exp:record_ptr[exp:ident(card),ident(tsq)],ident(last)],exp:binary_arith[aop(-),exp:binary_arith[aop(+),exp:record_acc[exp:record_ptr[exp:ident(card),ident(tsq)],ident(base)],exp:ident(TSQ_NUM_ENTRIES)],exp:const:int(1)]]],estmt[exp:assign[simple_assi(=),exp:record_acc[exp:record_ptr[exp:ident(card),ident(tsq)],ident(next)],exp:record_acc[exp:record_ptr[exp:ident(card),ident(tsq)],ident(last)]]],for[exp:assign[simple_assi(=),exp:ident(tsqe),exp:record_acc[exp:record_ptr[exp:ident(card),ident(tsq)],ident(base)]],exp:binary_logi[logiop(??),exp:ident(tsqe),exp:record_acc[exp:record_ptr[exp:ident(card),ident(tsq)],ident(last)]],exp:??(N/H),estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(tsqe),ident(word_2)],exp:call[exp:ident(cpu_to_le32),exp:ident(SAR_TSQE_INVALID)]]]],estmt[exp:call[exp:ident(writel),exp:record_acc[exp:record_ptr[exp:ident(card),ident(tsq)],ident(paddr)],exp:ident(SAR_REG_TSQB)]],estmt[exp:call[exp:ident(writel),exp:binary_arith[aop(-),exp:??(N/H),exp:??(N/H)],exp:ident(SAR_REG_TSQH)]],st_return[exp:const:int(0)]]],def[fname(deinit_tsq),funtype[fulltype[ctype[btype(void)]],param[reg(),name(card),fulltype[typec(N/H)]]],{}stmt[estmt[exp:call[exp:ident(pci_free_consistent),exp:record_ptr[exp:ident(card),ident(pcidev)],exp:ident(TSQSIZE),exp:record_acc[exp:record_ptr[exp:ident(card),ident(tsq)],ident(base)],exp:record_acc[exp:record_ptr[exp:ident(card),ident(tsq)],ident(paddr)]]]]],def[fname(idt77252_tx),funtype[fulltype[ctype[btype(void)]],param[reg(),name(card),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),sel_if[exp:binary_logi[logiop(eq),exp:record_acc[exp:record_ptr[exp:ident(card),ident(tsq)],ident(next)],exp:record_acc[exp:record_ptr[exp:ident(card),ident(tsq)],ident(last)]],estmt[exp:assign[simple_assi(=),exp:ident(tsqe),exp:record_acc[exp:record_ptr[exp:ident(card),ident(tsq)],ident(base)]]],estmt[exp:assign[simple_assi(=),exp:ident(tsqe),exp:binary_arith[aop(+),exp:record_acc[exp:record_ptr[exp:ident(card),ident(tsq)],ident(next)],exp:const:int(1)]]]],estmt[exp:call[exp:ident(TXPRINTK),exp:const:string(idt77252_tx: tsq  %p: base %p, next %p, last %p\n),exp:ident(tsqe),exp:record_acc[exp:record_ptr[exp:ident(card),ident(tsq)],ident(base)],exp:record_acc[exp:record_ptr[exp:ident(card),ident(tsq)],ident(next)],exp:record_acc[exp:record_ptr[exp:ident(card),ident(tsq)],ident(last)]]],estmt[exp:call[exp:ident(TXPRINTK),exp:const:string(idt77252_tx: tsqb %08x, tsqt %08x, tsqh %08x, \n),exp:call[exp:ident(readl),exp:ident(SAR_REG_TSQB)],exp:call[exp:ident(readl),exp:ident(SAR_REG_TSQT)],exp:call[exp:ident(readl),exp:ident(SAR_REG_TSQH)]]],estmt[exp:assign[simple_assi(=),exp:ident(stat),exp:call[exp:ident(le32_to_cpu),exp:record_ptr[exp:ident(tsqe),ident(word_2)]]]],sel_if[exp:binary_arith[aop(&),exp:ident(stat),exp:ident(SAR_TSQE_INVALID)],statem(N/H),estmt(NONE)],statem(N/H),estmt[exp:call[exp:ident(writel),exp:binary_arith[aop(-),exp:??(N/H),exp:??(N/H)],exp:ident(SAR_REG_TSQH)]],estmt[exp:call[exp:ident(XPRINTK),exp:const:string(idt77252_tx-after writel%d: TSQ head = 0x%x, tail = 0x%x, next = 0x%p.\n),exp:record_ptr[exp:ident(card),ident(index)],exp:call[exp:ident(readl),exp:ident(SAR_REG_TSQH)],exp:call[exp:ident(readl),exp:ident(SAR_REG_TSQT)],exp:record_acc[exp:record_ptr[exp:ident(card),ident(tsq)],ident(next)]]]]],def[fname(tst_timer),funtype[fulltype[ctype[btype(void)]],param[reg(),name(data),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp:call[exp:ident(spin_lock_irqsave),exp:&ref:exp:record_ptr[exp:ident(card),ident(tst_lock)],exp:ident(flags)]],estmt[exp:assign[simple_assi(=),exp:ident(base),exp:array_acc[exp:record_ptr[exp:ident(card),ident(tst)],exp:record_ptr[exp:ident(card),ident(tst_index)]]]],estmt[exp:assign[simple_assi(=),exp:ident(idle),exp:array_acc[exp:record_ptr[exp:ident(card),ident(tst)],exp:binary_arith[aop(N/H),exp:record_ptr[exp:ident(card),ident(tst_index)],exp:const:int(1)]]]],sel_if[exp:call[exp:ident(test_bit),exp:ident(TST_SWITCH_WAIT),exp:&ref:exp:record_ptr[exp:ident(card),ident(tst_state)]],{}stmt[estmt[exp:assign[simple_assi(=),exp:ident(jump),exp:binary_arith[aop(-),exp:binary_arith[aop(+),exp:ident(base),exp:record_ptr[exp:ident(card),ident(tst_size)]],exp:const:int(2)]]],estmt[exp:assign[simple_assi(=),exp:ident(pc),exp:binary_arith[aop(>>),exp:call[exp:ident(readl),exp:ident(SAR_REG_NOW)],exp:const:int(2)]]],sel_if[exp:binary_arith[aop(&),exp:binary_arith[aop(N/H),exp:ident(pc),exp:ident(idle)],exp:??(N/H)],{}stmt[estmt[exp:call[exp:ident(mod_timer),exp:&ref:exp:record_ptr[exp:ident(card),ident(tst_timer)],exp:binary_arith[aop(+),exp:ident(jiffies),exp:const:int(1)]]],statem(N/H)],estmt(NONE)],estmt[exp:call[exp:ident(clear_bit),exp:ident(TST_SWITCH_WAIT),exp:&ref:exp:record_ptr[exp:ident(card),ident(tst_state)]]],estmt[exp:assign[op_assi(x=),exp:record_ptr[exp:ident(card),ident(tst_index)],exp:const:int(1)]],estmt[exp:call[exp:ident(write_sram),exp:ident(card),exp:ident(jump),exp:binary_arith[aop(|),exp:ident(TSTE_OPC_JMP),exp:binary_arith[aop(<<),exp:ident(base),exp:const:int(2)]]]],estmt[exp:assign[simple_assi(=),exp:ident(base),exp:array_acc[exp:record_ptr[exp:ident(card),ident(tst)],exp:record_ptr[exp:ident(card),ident(tst_index)]]]],estmt[exp:assign[simple_assi(=),exp:ident(idle),exp:array_acc[exp:record_ptr[exp:ident(card),ident(tst)],exp:binary_arith[aop(N/H),exp:record_ptr[exp:ident(card),ident(tst_index)],exp:const:int(1)]]]],for[exp:assign[simple_assi(=),exp:ident(e),exp:const:int(0)],exp:binary_logi[logiop(??),exp:ident(e),exp:binary_arith[aop(-),exp:record_ptr[exp:ident(card),ident(tst_size)],exp:const:int(2)]],exp:??(N/H),{}stmt[sel_if[exp:binary_arith[aop(&),exp:record_acc[exp:array_acc[exp:record_ptr[exp:ident(card),ident(soft_tst)],exp:ident(e)],ident(tste)],exp:ident(TSTE_PUSH_IDLE)],{}stmt[estmt[exp:call[exp:ident(write_sram),exp:ident(card),exp:binary_arith[aop(+),exp:ident(idle),exp:ident(e)],exp:binary_arith[aop(&),exp:record_acc[exp:array_acc[exp:record_ptr[exp:ident(card),ident(soft_tst)],exp:ident(e)],ident(tste)],exp:ident(TSTE_MASK)]]],estmt[exp:assign[op_assi(&=),exp:record_acc[exp:array_acc[exp:record_ptr[exp:ident(card),ident(soft_tst)],exp:ident(e)],ident(tste)],exp:??(N/H)]]],estmt(NONE)]]]],estmt(NONE)],sel_if[exp:call[exp:ident(test_and_clear_bit),exp:ident(TST_SWITCH_PENDING),exp:&ref:exp:record_ptr[exp:ident(card),ident(tst_state)]],{}stmt[for[exp:assign[simple_assi(=),exp:ident(e),exp:const:int(0)],exp:binary_logi[logiop(??),exp:ident(e),exp:binary_arith[aop(-),exp:record_ptr[exp:ident(card),ident(tst_size)],exp:const:int(2)]],exp:??(N/H),{}stmt[sel_if[exp:binary_arith[aop(&),exp:record_acc[exp:array_acc[exp:record_ptr[exp:ident(card),ident(soft_tst)],exp:ident(e)],ident(tste)],exp:ident(TSTE_PUSH_ACTIVE)],{}stmt[estmt[exp:call[exp:ident(write_sram),exp:ident(card),exp:binary_arith[aop(+),exp:ident(idle),exp:ident(e)],exp:binary_arith[aop(&),exp:record_acc[exp:array_acc[exp:record_ptr[exp:ident(card),ident(soft_tst)],exp:ident(e)],ident(tste)],exp:ident(TSTE_MASK)]]],estmt[exp:assign[op_assi(&=),exp:record_acc[exp:array_acc[exp:record_ptr[exp:ident(card),ident(soft_tst)],exp:ident(e)],ident(tste)],exp:??(N/H)]],estmt[exp:assign[op_assi(|=),exp:record_acc[exp:array_acc[exp:record_ptr[exp:ident(card),ident(soft_tst)],exp:ident(e)],ident(tste)],exp:ident(TSTE_PUSH_IDLE)]]],estmt(NONE)]]],estmt[exp:assign[simple_assi(=),exp:ident(jump),exp:binary_arith[aop(-),exp:binary_arith[aop(+),exp:ident(base),exp:record_ptr[exp:ident(card),ident(tst_size)]],exp:const:int(2)]]],estmt[exp:call[exp:ident(write_sram),exp:ident(card),exp:ident(jump),exp:ident(TSTE_OPC_NULL)]],estmt[exp:call[exp:ident(set_bit),exp:ident(TST_SWITCH_WAIT),exp:&ref:exp:record_ptr[exp:ident(card),ident(tst_state)]]],estmt[exp:call[exp:ident(mod_timer),exp:&ref:exp:record_ptr[exp:ident(card),ident(tst_timer)],exp:binary_arith[aop(+),exp:ident(jiffies),exp:const:int(1)]]]],estmt(NONE)],statem(N/H)]],def[fname(__fill_tst),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(card),fulltype[typec(N/H)]],param[reg(),name(vc),fulltype[typec(N/H)]],param[reg(),name(n),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(opc),fulltype[ctype[btype[itype[sgn(unsigned),base(int)]]]]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp:assign[simple_assi(=),exp:ident(avail),exp:binary_arith[aop(-),exp:record_ptr[exp:ident(card),ident(tst_size)],exp:const:int(2)]]],for[exp:assign[simple_assi(=),exp:ident(e),exp:const:int(0)],exp:binary_logi[logiop(??),exp:ident(e),exp:ident(avail)],exp:??(N/H),{}stmt[sel_if[exp:binary_logi[logiop(eq),exp:record_acc[exp:array_acc[exp:record_ptr[exp:ident(card),ident(soft_tst)],exp:ident(e)],ident(vc)],exp:ident(NULL)],statem(N/H),estmt(NONE)]]],sel_if[exp:binary_logi[logiop(??),exp:ident(e),exp:ident(avail)],{}stmt[estmt[exp:call[exp:ident(printk),exp:const:string(%s: No free TST entries found\n),exp:record_ptr[exp:ident(card),ident(name)]]],st_return[exp:??(N/H)]],estmt(NONE)],estmt[exp:call[exp:ident(NPRINTK),exp:const:string(%s: conn %d: first TST entry at %d.\n),exp:record_ptr[exp:ident(card),ident(name)],exp:cond3[exp:ident(vc),exp:record_ptr[exp:ident(vc),ident(index)],exp:??(N/H)],exp:ident(e)]],estmt[exp:assign[simple_assi(=),exp:ident(r),exp:ident(n)]],estmt[exp:assign[simple_assi(=),exp:ident(cl),exp:ident(avail)]],estmt[exp:assign[simple_assi(=),exp:ident(data),exp:binary_arith[aop(&),exp:ident(opc),exp:ident(TSTE_OPC_MASK)]]],sel_if[exp:binary_logi[logiop(and),exp:ident(vc),exp:binary_logi[logiop(??),exp:ident(opc),exp:ident(TSTE_OPC_NULL)]],estmt[exp:assign[simple_assi(=),exp:ident(data),exp:binary_arith[aop(|),exp:ident(opc),exp:record_ptr[exp:ident(vc),ident(index)]]]],estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:ident(idle),exp:array_acc[exp:record_ptr[exp:ident(card),ident(tst)],exp:binary_arith[aop(N/H),exp:record_ptr[exp:ident(card),ident(tst_index)],exp:const:int(1)]]]],while[exp:binary_logi[logiop(??),exp:ident(r),exp:const:int(0)],{}stmt[sel_if[exp:binary_logi[logiop(and),exp:binary_logi[logiop(??),exp:ident(cl),exp:ident(avail)],exp:binary_logi[logiop(eq),exp:record_acc[exp:array_acc[exp:record_ptr[exp:ident(card),ident(soft_tst)],exp:ident(e)],ident(vc)],exp:ident(NULL)]],{}stmt[sel_if[exp:ident(vc),estmt[exp:assign[simple_assi(=),exp:record_acc[exp:array_acc[exp:record_ptr[exp:ident(card),ident(soft_tst)],exp:ident(e)],ident(vc)],exp:ident(vc)]],estmt[exp:assign[simple_assi(=),exp:record_acc[exp:array_acc[exp:record_ptr[exp:ident(card),ident(soft_tst)],exp:ident(e)],ident(vc)],exp:??(N/H)]]],estmt[exp:assign[simple_assi(=),exp:record_acc[exp:array_acc[exp:record_ptr[exp:ident(card),ident(soft_tst)],exp:ident(e)],ident(tste)],exp:ident(data)]],sel_if[exp:call[exp:ident(timer_pending),exp:&ref:exp:record_ptr[exp:ident(card),ident(tst_timer)]],estmt[exp:assign[op_assi(|=),exp:record_acc[exp:array_acc[exp:record_ptr[exp:ident(card),ident(soft_tst)],exp:ident(e)],ident(tste)],exp:ident(TSTE_PUSH_ACTIVE)]],{}stmt[estmt[exp:call[exp:ident(write_sram),exp:ident(card),exp:binary_arith[aop(+),exp:ident(idle),exp:ident(e)],exp:ident(data)]],estmt[exp:assign[op_assi(|=),exp:record_acc[exp:array_acc[exp:record_ptr[exp:ident(card),ident(soft_tst)],exp:ident(e)],ident(tste)],exp:ident(TSTE_PUSH_IDLE)]]]],estmt[exp:assign[op_assi(-=),exp:ident(cl),exp:record_ptr[exp:ident(card),ident(tst_size)]]],estmt[exp:??(N/H)]],estmt(NONE)],sel_if[exp:binary_logi[logiop(eq),exp:??(N/H),exp:ident(avail)],estmt[exp:assign[simple_assi(=),exp:ident(e),exp:const:int(0)]],estmt(NONE)],estmt[exp:assign[op_assi(+=),exp:ident(cl),exp:ident(n)]]]],st_return[exp:const:int(0)]]],def[fname(fill_tst),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(card),fulltype[typec(N/H)]],param[reg(),name(vc),fulltype[typec(N/H)]],param[reg(),name(n),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(opc),fulltype[ctype[btype[itype[sgn(unsigned),base(int)]]]]]],{}stmt[statem(N/H),statem(N/H),estmt[exp:call[exp:ident(spin_lock_irqsave),exp:&ref:exp:record_ptr[exp:ident(card),ident(tst_lock)],exp:ident(flags)]],estmt[exp:assign[simple_assi(=),exp:ident(res),exp:call[exp:ident(__fill_tst),exp:ident(card),exp:ident(vc),exp:ident(n),exp:ident(opc)]]],estmt[exp:call[exp:ident(set_bit),exp:ident(TST_SWITCH_PENDING),exp:&ref:exp:record_ptr[exp:ident(card),ident(tst_state)]]],sel_if[exp:??(N/H),estmt[exp:call[exp:ident(mod_timer),exp:&ref:exp:record_ptr[exp:ident(card),ident(tst_timer)],exp:binary_arith[aop(+),exp:ident(jiffies),exp:const:int(1)]]],estmt(NONE)],estmt[exp:call[exp:ident(spin_unlock_irqrestore),exp:&ref:exp:record_ptr[exp:ident(card),ident(tst_lock)],exp:ident(flags)]],st_return[exp:ident(res)]]],def[fname(__clear_tst),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(card),fulltype[typec(N/H)]],param[reg(),name(vc),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp:assign[simple_assi(=),exp:ident(idle),exp:array_acc[exp:record_ptr[exp:ident(card),ident(tst)],exp:binary_arith[aop(N/H),exp:record_ptr[exp:ident(card),ident(tst_index)],exp:const:int(1)]]]],for[exp:assign[simple_assi(=),exp:ident(e),exp:const:int(0)],exp:binary_logi[logiop(??),exp:ident(e),exp:binary_arith[aop(-),exp:record_ptr[exp:ident(card),ident(tst_size)],exp:const:int(2)]],exp:??(N/H),{}stmt[sel_if[exp:binary_logi[logiop(eq),exp:record_acc[exp:array_acc[exp:record_ptr[exp:ident(card),ident(soft_tst)],exp:ident(e)],ident(vc)],exp:ident(vc)],{}stmt[estmt[exp:assign[simple_assi(=),exp:record_acc[exp:array_acc[exp:record_ptr[exp:ident(card),ident(soft_tst)],exp:ident(e)],ident(vc)],exp:ident(NULL)]],estmt[exp:assign[simple_assi(=),exp:record_acc[exp:array_acc[exp:record_ptr[exp:ident(card),ident(soft_tst)],exp:ident(e)],ident(tste)],exp:ident(TSTE_OPC_VAR)]],sel_if[exp:call[exp:ident(timer_pending),exp:&ref:exp:record_ptr[exp:ident(card),ident(tst_timer)]],estmt[exp:assign[op_assi(|=),exp:record_acc[exp:array_acc[exp:record_ptr[exp:ident(card),ident(soft_tst)],exp:ident(e)],ident(tste)],exp:ident(TSTE_PUSH_ACTIVE)]],{}stmt[estmt[exp:call[exp:ident(write_sram),exp:ident(card),exp:binary_arith[aop(+),exp:ident(idle),exp:ident(e)],exp:ident(TSTE_OPC_VAR)]],estmt[exp:assign[op_assi(|=),exp:record_acc[exp:array_acc[exp:record_ptr[exp:ident(card),ident(soft_tst)],exp:ident(e)],ident(tste)],exp:ident(TSTE_PUSH_IDLE)]]]]],estmt(NONE)]]],st_return[exp:const:int(0)]]],def[fname(clear_tst),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(card),fulltype[typec(N/H)]],param[reg(),name(vc),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp:call[exp:ident(spin_lock_irqsave),exp:&ref:exp:record_ptr[exp:ident(card),ident(tst_lock)],exp:ident(flags)]],estmt[exp:assign[simple_assi(=),exp:ident(res),exp:call[exp:ident(__clear_tst),exp:ident(card),exp:ident(vc)]]],estmt[exp:call[exp:ident(set_bit),exp:ident(TST_SWITCH_PENDING),exp:&ref:exp:record_ptr[exp:ident(card),ident(tst_state)]]],sel_if[exp:??(N/H),estmt[exp:call[exp:ident(mod_timer),exp:&ref:exp:record_ptr[exp:ident(card),ident(tst_timer)],exp:binary_arith[aop(+),exp:ident(jiffies),exp:const:int(1)]]],estmt(NONE)],estmt[exp:call[exp:ident(spin_unlock_irqrestore),exp:&ref:exp:record_ptr[exp:ident(card),ident(tst_lock)],exp:ident(flags)]],st_return[exp:ident(res)]]],def[fname(change_tst),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(card),fulltype[typec(N/H)]],param[reg(),name(vc),fulltype[typec(N/H)]],param[reg(),name(n),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(opc),fulltype[ctype[btype[itype[sgn(unsigned),base(int)]]]]]],{}stmt[statem(N/H),statem(N/H),estmt[exp:call[exp:ident(spin_lock_irqsave),exp:&ref:exp:record_ptr[exp:ident(card),ident(tst_lock)],exp:ident(flags)]],estmt[exp:call[exp:ident(__clear_tst),exp:ident(card),exp:ident(vc)]],estmt[exp:assign[simple_assi(=),exp:ident(res),exp:call[exp:ident(__fill_tst),exp:ident(card),exp:ident(vc),exp:ident(n),exp:ident(opc)]]],estmt[exp:call[exp:ident(set_bit),exp:ident(TST_SWITCH_PENDING),exp:&ref:exp:record_ptr[exp:ident(card),ident(tst_state)]]],sel_if[exp:??(N/H),estmt[exp:call[exp:ident(mod_timer),exp:&ref:exp:record_ptr[exp:ident(card),ident(tst_timer)],exp:binary_arith[aop(+),exp:ident(jiffies),exp:const:int(1)]]],estmt(NONE)],estmt[exp:call[exp:ident(spin_unlock_irqrestore),exp:&ref:exp:record_ptr[exp:ident(card),ident(tst_lock)],exp:ident(flags)]],st_return[exp:ident(res)]]],def[fname(set_tct),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(card),fulltype[typec(N/H)]],param[reg(),name(vc),fulltype[typec(N/H)]]],{}stmt[statem(N/H),estmt[exp:assign[simple_assi(=),exp:ident(tct),exp:??(N/H)]],statem(N/H),st_return[exp:const:int(0)]]],def[fname(idt77252_fbq_level),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(card),fulltype[typec(N/H)]],param[reg(),name(queue),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[st_return[exp:binary_arith[aop(&),exp:binary_arith[aop(>>),exp:call[exp:ident(readl),exp:ident(SAR_REG_STAT)],exp:binary_arith[aop(+),exp:const:int(16),exp:binary_arith[aop(<<),exp:ident(queue),exp:const:int(2)]]],exp:const:int(0x0f)]]]],def[fname(idt77252_fbq_full),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(card),fulltype[typec(N/H)]],param[reg(),name(queue),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[st_return[exp:binary_logi[logiop(eq),exp:binary_arith[aop(>>),exp:call[exp:ident(readl),exp:ident(SAR_REG_STAT)],exp:binary_arith[aop(+),exp:const:int(16),exp:binary_arith[aop(<<),exp:ident(queue),exp:const:int(2)]]],exp:const:int(0x0f)]]]],def[fname(push_rx_skb),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(card),fulltype[typec(N/H)]],param[reg(),name(skb),fulltype[typec(N/H)]],param[reg(),name(queue),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(skb),ident(data)],exp:record_ptr[exp:ident(skb),ident(head)]]],estmt[exp:call[exp:ident(skb_reset_tail_pointer),exp:ident(skb)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(skb),ident(len)],exp:const:int(0)]],estmt[exp:call[exp:ident(skb_reserve),exp:ident(skb),exp:const:int(16)]],statem(N/H),sel_if[exp:call[exp:ident(idt77252_fbq_full),exp:ident(card),exp:ident(queue)],st_return[exp:??(N/H)],estmt(NONE)],estmt[exp:call[exp:ident(memset),exp:&ref:exp:array_acc[exp:record_ptr[exp:ident(skb),ident(data)],exp:binary_arith[aop(-),exp:binary_arith[aop(&),exp:record_ptr[exp:ident(skb),ident(len)],exp:??(N/H)],exp:const:int(64)]],exp:const:int(0),exp:binary_arith[aop(*),exp:const:int(2),exp:sizeoftype:fulltype[typec(N/H)]]]],estmt[exp:assign[simple_assi(=),exp:ident(handle),exp:call[exp:ident(IDT77252_PRV_POOL),exp:ident(skb)]]],estmt[exp:assign[simple_assi(=),exp:ident(addr),exp:call[exp:ident(IDT77252_PRV_PADDR),exp:ident(skb)]]],estmt[exp:call[exp:ident(spin_lock_irqsave),exp:&ref:exp:record_ptr[exp:ident(card),ident(cmd_lock)],exp:ident(flags)]],estmt[exp:call[exp:ident(writel),exp:ident(handle),exp:array_acc[exp:record_ptr[exp:ident(card),ident(fbq)],exp:ident(queue)]]],estmt[exp:call[exp:ident(writel),exp:ident(addr),exp:array_acc[exp:record_ptr[exp:ident(card),ident(fbq)],exp:ident(queue)]]],estmt[exp:call[exp:ident(spin_unlock_irqrestore),exp:&ref:exp:record_ptr[exp:ident(card),ident(cmd_lock)],exp:ident(flags)]],st_return[exp:const:int(0)]]],def[fname(add_rx_skb),funtype[fulltype[ctype[btype(void)]],param[reg(),name(card),fulltype[typec(N/H)]],param[reg(),name(queue),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(size),fulltype[ctype[btype[itype[sgn(unsigned),base(int)]]]]],param[reg(),name(count),fulltype[ctype[btype[itype[sgn(unsigned),base(int)]]]]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),while[exp:??(N/H),{}stmt[estmt[exp:assign[simple_assi(=),exp:ident(skb),exp:call[exp:ident(dev_alloc_skb),exp:ident(size)]]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],sel_if[exp:call[exp:ident(sb_pool_add),exp:ident(card),exp:ident(skb),exp:ident(queue)],{}stmt[estmt[exp:call[exp:ident(printk),exp:const:string(%s: SB POOL full\n),exp:ident(__FUNCTION__)]],statem(N/H)],estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:ident(paddr),exp:call[exp:ident(pci_map_single),exp:record_ptr[exp:ident(card),ident(pcidev)],exp:record_ptr[exp:ident(skb),ident(data)],exp:binary_arith[aop(-),exp:call[exp:ident(skb_end_pointer),exp:ident(skb)],exp:record_ptr[exp:ident(skb),ident(data)]],exp:ident(PCI_DMA_FROMDEVICE)]]],estmt[exp:assign[simple_assi(=),exp:call[exp:ident(IDT77252_PRV_PADDR),exp:ident(skb)],exp:ident(paddr)]],sel_if[exp:call[exp:ident(push_rx_skb),exp:ident(card),exp:ident(skb),exp:ident(queue)],{}stmt[estmt[exp:call[exp:ident(printk),exp:const:string(%s: FB QUEUE full\n),exp:ident(__FUNCTION__)]],statem(N/H)],estmt(NONE)]]],statem(N/H),statem(N/H),estmt[exp:assign[simple_assi(=),exp:ident(handle),exp:call[exp:ident(IDT77252_PRV_POOL),exp:ident(skb)]]],estmt[exp:assign[simple_assi(=),exp:array_acc[exp:record_acc[exp:array_acc[exp:record_ptr[exp:ident(card),ident(sbpool)],exp:call[exp:ident(POOL_QUEUE),exp:ident(handle)]],ident(skb)],exp:call[exp:ident(POOL_INDEX),exp:ident(handle)]],exp:ident(NULL)]],statem(N/H)]],def[fname(recycle_rx_skb),funtype[fulltype[ctype[btype(void)]],param[reg(),name(card),fulltype[typec(N/H)]],param[reg(),name(skb),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp:call[exp:ident(pci_dma_sync_single_for_device),exp:record_ptr[exp:ident(card),ident(pcidev)],exp:call[exp:ident(IDT77252_PRV_PADDR),exp:ident(skb)],exp:binary_arith[aop(-),exp:call[exp:ident(skb_end_pointer),exp:ident(skb)],exp:record_ptr[exp:ident(skb),ident(data)]],exp:ident(PCI_DMA_FROMDEVICE)]],estmt[exp:assign[simple_assi(=),exp:ident(err),exp:call[exp:ident(push_rx_skb),exp:ident(card),exp:ident(skb),exp:call[exp:ident(POOL_QUEUE),exp:ident(handle)]]]],sel_if[exp:ident(err),{}stmt[estmt[exp:call[exp:ident(pci_unmap_single),exp:record_ptr[exp:ident(card),ident(pcidev)],exp:call[exp:ident(IDT77252_PRV_PADDR),exp:ident(skb)],exp:binary_arith[aop(-),exp:call[exp:ident(skb_end_pointer),exp:ident(skb)],exp:record_ptr[exp:ident(skb),ident(data)]],exp:ident(PCI_DMA_FROMDEVICE)]],estmt[exp:call[exp:ident(sb_pool_remove),exp:ident(card),exp:ident(skb)]],estmt[exp:call[exp:ident(dev_kfree_skb),exp:ident(skb)]]],estmt(NONE)]]],def[fname(flush_rx_pool),funtype[fulltype[ctype[btype(void)]],param[reg(),name(card),fulltype[typec(N/H)]],param[reg(),name(rpp),fulltype[typec(N/H)]]],{}stmt[estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(rpp),ident(len)],exp:const:int(0)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(rpp),ident(count)],exp:const:int(0)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(rpp),ident(first)],exp:ident(NULL)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(rpp),ident(last)],exp:&ref:exp:record_ptr[exp:ident(rpp),ident(first)]]]]],def[fname(recycle_rx_pool_skb),funtype[fulltype[ctype[btype(void)]],param[reg(),name(card),fulltype[typec(N/H)]],param[reg(),name(rpp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp:assign[simple_assi(=),exp:ident(skb),exp:record_ptr[exp:ident(rpp),ident(first)]]],for[exp:assign[simple_assi(=),exp:ident(i),exp:const:int(0)],exp:binary_logi[logiop(??),exp:ident(i),exp:record_ptr[exp:ident(rpp),ident(count)]],exp:??(N/H),{}stmt[estmt[exp:assign[simple_assi(=),exp:ident(next),exp:record_ptr[exp:ident(skb),ident(next)]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(skb),ident(next)],exp:ident(NULL)]],estmt[exp:call[exp:ident(recycle_rx_skb),exp:ident(card),exp:ident(skb)]],estmt[exp:assign[simple_assi(=),exp:ident(skb),exp:ident(next)]]]],estmt[exp:call[exp:ident(flush_rx_pool),exp:ident(card),exp:ident(rpp)]]]],def[fname(idt77252_phy_put),funtype[fulltype[ctype[btype(void)]],param[reg(),name(dev),fulltype[typec(N/H)]],param[reg(),name(value),fulltype[ctype[btype[itype[sgn(unsigned),base(char2)]]]]],param[reg(),name(addr),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]]],{}stmt[estmt[exp:call[exp:ident(write_utility),exp:record_ptr[exp:ident(dev),ident(dev_data)],exp:binary_arith[aop(+),exp:const:int(0x100),exp:binary_arith[aop(&),exp:ident(addr),exp:const:int(0x1ff)]],exp:ident(value)]]]],def[fname(idt77252_phy_get),funtype[fulltype[ctype[btype[itype[sgn(unsigned),base(char2)]]]],param[reg(),name(dev),fulltype[typec(N/H)]],param[reg(),name(addr),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]]],{}stmt[st_return[exp:call[exp:ident(read_utility),exp:record_ptr[exp:ident(dev),ident(dev_data)],exp:binary_arith[aop(+),exp:const:int(0x100),exp:binary_arith[aop(&),exp:ident(addr),exp:const:int(0x1ff)]]]]]],def[fname(idt77252_send_skb),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(vcc),fulltype[typec(N/H)]],param[reg(),name(skb),fulltype[typec(N/H)]],param[reg(),name(oam),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),sel_if[exp:binary_logi[logiop(eq),exp:ident(vc),exp:ident(NULL)],{}stmt[estmt[exp:call[exp:ident(printk),exp:const:string(%s: NULL connection in send().\n),exp:record_ptr[exp:ident(card),ident(name)]]],estmt[exp:call[exp:ident(atomic_inc),exp:&ref:exp:record_ptr[exp:record_ptr[exp:ident(vcc),ident(stats)],ident(tx_err)]]],estmt[exp:call[exp:ident(dev_kfree_skb),exp:ident(skb)]],st_return[exp:??(N/H)]],estmt(NONE)],sel_if[exp:??(N/H),{}stmt[estmt[exp:call[exp:ident(printk),exp:const:string(%s: Trying to transmit on a non-tx VC.\n),exp:record_ptr[exp:ident(card),ident(name)]]],estmt[exp:call[exp:ident(atomic_inc),exp:&ref:exp:record_ptr[exp:record_ptr[exp:ident(vcc),ident(stats)],ident(tx_err)]]],estmt[exp:call[exp:ident(dev_kfree_skb),exp:ident(skb)]],st_return[exp:??(N/H)]],estmt(NONE)],statem(N/H),sel_if[exp:binary_logi[logiop(??),exp:record_ptr[exp:call[exp:ident(skb_shinfo),exp:ident(skb)],ident(nr_frags)],exp:const:int(0)],{}stmt[estmt[exp:call[exp:ident(printk),exp:const:string(%s: No scatter-gather yet.\n),exp:record_ptr[exp:ident(card),ident(name)]]],estmt[exp:call[exp:ident(atomic_inc),exp:&ref:exp:record_ptr[exp:record_ptr[exp:ident(vcc),ident(stats)],ident(tx_err)]]],estmt[exp:call[exp:ident(dev_kfree_skb),exp:ident(skb)]],st_return[exp:??(N/H)]],estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:call[exp:ident(ATM_SKB),exp:ident(skb)],ident(vcc)],exp:ident(vcc)]],estmt[exp:assign[simple_assi(=),exp:ident(err),exp:call[exp:ident(queue_skb),exp:ident(card),exp:ident(vc),exp:ident(skb),exp:ident(oam)]]],sel_if[exp:ident(err),{}stmt[estmt[exp:call[exp:ident(atomic_inc),exp:&ref:exp:record_ptr[exp:record_ptr[exp:ident(vcc),ident(stats)],ident(tx_err)]]],estmt[exp:call[exp:ident(dev_kfree_skb),exp:ident(skb)]],st_return[exp:ident(err)]],estmt(NONE)],st_return[exp:const:int(0)]]],def[fname(idt77252_send),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(vcc),fulltype[typec(N/H)]],param[reg(),name(skb),fulltype[typec(N/H)]]],{}stmt[st_return[exp:call[exp:ident(idt77252_send_skb),exp:ident(vcc),exp:ident(skb),exp:const:int(0)]]]],def[fname(idt77252_send_oam),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(vcc),fulltype[typec(N/H)]],param[reg(),name(cell),fulltype[typec(N/H)]],param[reg(),name(flags),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp:assign[simple_assi(=),exp:ident(skb),exp:call[exp:ident(dev_alloc_skb),exp:const:int(64)]]],sel_if[exp:??(N/H),{}stmt[estmt[exp:call[exp:ident(printk),exp:const:string(%s: Out of memory in send_oam().\n),exp:record_ptr[exp:ident(card),ident(name)]]],estmt[exp:call[exp:ident(atomic_inc),exp:&ref:exp:record_ptr[exp:record_ptr[exp:ident(vcc),ident(stats)],ident(tx_err)]]],st_return[exp:??(N/H)]],estmt(NONE)],estmt[exp:call[exp:ident(atomic_add),exp:record_ptr[exp:ident(skb),ident(truesize)],exp:&ref:exp:record_ptr[exp:call[exp:ident(sk_atm),exp:ident(vcc)],ident(sk_wmem_alloc)]]],estmt[exp:call[exp:ident(memcpy),exp:call[exp:ident(skb_put),exp:ident(skb),exp:const:int(52)],exp:ident(cell),exp:const:int(52)]],st_return[exp:call[exp:ident(idt77252_send_skb),exp:ident(vcc),exp:ident(skb),exp:const:int(1)]]]],def[fname(idt77252_fls),funtype[fulltype[ctype[btype[itype[sgn(unsigned),base(int)]]]],param[reg(),name(x),fulltype[ctype[btype[itype[sgn(unsigned),base(int)]]]]]],{}stmt[statem(N/H),sel_if[exp:binary_logi[logiop(eq),exp:ident(x),exp:const:int(0)],st_return[exp:const:int(0)],estmt(NONE)],sel_if[exp:binary_arith[aop(&),exp:ident(x),exp:const:int(0xffff0000)],{}stmt[estmt[exp:assign[op_assi(N/H),exp:ident(x),exp:const:int(16)]],estmt[exp:assign[op_assi(+=),exp:ident(r),exp:const:int(16)]]],estmt(NONE)],sel_if[exp:binary_arith[aop(&),exp:ident(x),exp:const:int(0xff00)],{}stmt[estmt[exp:assign[op_assi(N/H),exp:ident(x),exp:const:int(8)]],estmt[exp:assign[op_assi(+=),exp:ident(r),exp:const:int(8)]]],estmt(NONE)],sel_if[exp:binary_arith[aop(&),exp:ident(x),exp:const:int(0xf0)],{}stmt[estmt[exp:assign[op_assi(N/H),exp:ident(x),exp:const:int(4)]],estmt[exp:assign[op_assi(+=),exp:ident(r),exp:const:int(4)]]],estmt(NONE)],sel_if[exp:binary_arith[aop(&),exp:ident(x),exp:const:int(0xc)],{}stmt[estmt[exp:assign[op_assi(N/H),exp:ident(x),exp:const:int(2)]],estmt[exp:assign[op_assi(+=),exp:ident(r),exp:const:int(2)]]],estmt(NONE)],sel_if[exp:binary_arith[aop(&),exp:ident(x),exp:const:int(0x2)],estmt[exp:assign[op_assi(+=),exp:ident(r),exp:const:int(1)]],estmt(NONE)],st_return[exp:ident(r)]]],def[fname(idt77252_int_to_atmfp),funtype[fulltype[typec(N/H)],param[reg(),name(rate),fulltype[ctype[btype[itype[sgn(unsigned),base(int)]]]]]],{}stmt[statem(N/H),sel_if[exp:binary_logi[logiop(eq),exp:ident(rate),exp:const:int(0)],st_return[exp:const:int(0)],estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:ident(e),exp:binary_arith[aop(-),exp:call[exp:ident(idt77252_fls),exp:ident(rate)],exp:const:int(1)]]],sel_if[exp:binary_logi[logiop(??),exp:ident(e),exp:const:int(9)],estmt[exp:assign[simple_assi(=),exp:ident(m),exp:binary_arith[aop(<<),exp:binary_arith[aop(-),exp:ident(rate),exp:binary_arith[aop(<<),exp:const:int(1),exp:ident(e)]],exp:binary_arith[aop(-),exp:const:int(9),exp:ident(e)]]]],sel_if[exp:binary_logi[logiop(eq),exp:ident(e),exp:const:int(9)],estmt[exp:assign[simple_assi(=),exp:ident(m),exp:binary_arith[aop(-),exp:ident(rate),exp:binary_arith[aop(<<),exp:const:int(1),exp:ident(e)]]]],estmt[exp:assign[simple_assi(=),exp:ident(m),exp:binary_arith[aop(>>),exp:binary_arith[aop(-),exp:ident(rate),exp:binary_arith[aop(<<),exp:const:int(1),exp:ident(e)]],exp:binary_arith[aop(-),exp:ident(e),exp:const:int(9)]]]]]],st_return[exp:binary_arith[aop(|),exp:binary_arith[aop(|),exp:const:int(0x4000),exp:binary_arith[aop(<<),exp:ident(e),exp:const:int(9)]],exp:ident(m)]]]],def[fname(idt77252_rate_logindex),funtype[fulltype[typec(N/H)],param[reg(),name(card),fulltype[typec(N/H)]],param[reg(),name(pcr),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[statem(N/H),estmt[exp:assign[simple_assi(=),exp:ident(afp),exp:call[exp:ident(idt77252_int_to_atmfp),exp:cond3[exp:binary_logi[logiop(??),exp:ident(pcr),exp:const:int(0)],exp:??(N/H),exp:ident(pcr)]]]],sel_if[exp:binary_logi[logiop(??),exp:ident(pcr),exp:const:int(0)],st_return[exp:array_acc[exp:ident(rate_to_log),exp:binary_arith[aop(&),exp:binary_arith[aop(>>),exp:ident(afp),exp:const:int(5)],exp:const:int(0x1ff)]]],estmt(NONE)],st_return[exp:array_acc[exp:ident(rate_to_log),exp:binary_arith[aop(&),exp:binary_arith[aop(+),exp:binary_arith[aop(>>),exp:ident(afp),exp:const:int(5)],exp:const:int(1)],exp:const:int(0x1ff)]]]]],def[fname(idt77252_est_timer),funtype[fulltype[ctype[btype(void)]],param[reg(),name(data),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp:call[exp:ident(spin_lock_irqsave),exp:&ref:exp:record_ptr[exp:ident(vc),ident(lock)],exp:ident(flags)]],estmt[exp:assign[simple_assi(=),exp:ident(est),exp:record_ptr[exp:ident(vc),ident(estimator)]]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:ident(ncells),exp:record_ptr[exp:ident(est),ident(cells)]]],estmt[exp:assign[simple_assi(=),exp:ident(rate),exp:binary_arith[aop(<<),exp:??(N/H),exp:binary_arith[aop(-),exp:const:int(7),exp:record_ptr[exp:ident(est),ident(interval)]]]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(est),ident(last_cells)],exp:ident(ncells)]],estmt[exp:assign[op_assi(+=),exp:record_ptr[exp:ident(est),ident(avcps)],exp:binary_arith[aop(>>),exp:binary_arith[aop(-),exp:??(N/H),exp:??(N/H)],exp:record_ptr[exp:ident(est),ident(ewma_log)]]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(est),ident(cps)],exp:binary_arith[aop(>>),exp:binary_arith[aop(+),exp:record_ptr[exp:ident(est),ident(avcps)],exp:const:int(0x1f)],exp:const:int(5)]]],estmt[exp:assign[simple_assi(=),exp:ident(cps),exp:record_ptr[exp:ident(est),ident(cps)]]],sel_if[exp:binary_logi[logiop(??),exp:ident(cps),exp:binary_arith[aop(>>),exp:record_ptr[exp:ident(est),ident(maxcps)],exp:const:int(4)]],estmt[exp:assign[simple_assi(=),exp:ident(cps),exp:binary_arith[aop(>>),exp:record_ptr[exp:ident(est),ident(maxcps)],exp:const:int(4)]]],estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:ident(lacr),exp:call[exp:ident(idt77252_rate_logindex),exp:ident(card),exp:ident(cps)]]],sel_if[exp:binary_logi[logiop(??),exp:ident(lacr),exp:record_ptr[exp:ident(vc),ident(max_er)]],estmt[exp:assign[simple_assi(=),exp:ident(lacr),exp:record_ptr[exp:ident(vc),ident(max_er)]]],estmt(NONE)],sel_if[exp:binary_logi[logiop(??),exp:ident(lacr),exp:record_ptr[exp:ident(vc),ident(lacr)]],{}stmt[estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(vc),ident(lacr)],exp:ident(lacr)]],estmt[exp:call[exp:ident(writel),exp:binary_arith[aop(|),exp:binary_arith[aop(|),exp:ident(TCMDQ_LACR),exp:binary_arith[aop(<<),exp:record_ptr[exp:ident(vc),ident(lacr)],exp:const:int(16)]],exp:record_ptr[exp:ident(vc),ident(index)]],exp:ident(SAR_REG_TCMDQ)]]],estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:record_acc[exp:record_ptr[exp:ident(est),ident(timer)],ident(expires)],exp:binary_arith[aop(+),exp:ident(jiffies),exp:binary_arith[aop(<<),exp:binary_arith[aop(/),exp:ident(HZ),exp:const:int(4)],exp:record_ptr[exp:ident(est),ident(interval)]]]]],estmt[exp:call[exp:ident(add_timer),exp:&ref:exp:record_ptr[exp:ident(est),ident(timer)]]],statem(N/H)]],def[fname(idt77252_init_est),funtype[fulltype[typec(N/H)],param[reg(),name(vc),fulltype[typec(N/H)]],param[reg(),name(pcr),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[statem(N/H),estmt[exp:assign[simple_assi(=),exp:ident(est),exp:call[exp:ident(kzalloc),exp:sizeoftype:fulltype[typec(N/H)],exp:ident(GFP_KERNEL)]]],sel_if[exp:??(N/H),st_return[exp:ident(NULL)],estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(est),ident(maxcps)],exp:cond3[exp:binary_logi[logiop(??),exp:ident(pcr),exp:const:int(0)],exp:??(N/H),exp:ident(pcr)]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(est),ident(cps)],exp:record_ptr[exp:ident(est),ident(maxcps)]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(est),ident(avcps)],exp:binary_arith[aop(<<),exp:record_ptr[exp:ident(est),ident(cps)],exp:const:int(5)]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(est),ident(interval)],exp:const:int(2)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(est),ident(ewma_log)],exp:const:int(2)]],estmt[exp:call[exp:ident(init_timer),exp:&ref:exp:record_ptr[exp:ident(est),ident(timer)]]],estmt[exp:assign[simple_assi(=),exp:record_acc[exp:record_ptr[exp:ident(est),ident(timer)],ident(data)],exp:??(N/H)]],estmt[exp:assign[simple_assi(=),exp:record_acc[exp:record_ptr[exp:ident(est),ident(timer)],ident(function)],exp:ident(idt77252_est_timer)]],estmt[exp:assign[simple_assi(=),exp:record_acc[exp:record_ptr[exp:ident(est),ident(timer)],ident(expires)],exp:binary_arith[aop(+),exp:ident(jiffies),exp:binary_arith[aop(<<),exp:binary_arith[aop(/),exp:ident(HZ),exp:const:int(4)],exp:record_ptr[exp:ident(est),ident(interval)]]]]],estmt[exp:call[exp:ident(add_timer),exp:&ref:exp:record_ptr[exp:ident(est),ident(timer)]]],st_return[exp:ident(est)]]],def[fname(idt77252_init_cbr),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(card),fulltype[typec(N/H)]],param[reg(),name(vc),fulltype[typec(N/H)]],param[reg(),name(vcc),fulltype[typec(N/H)]],param[reg(),name(qos),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),sel_if[exp:binary_logi[logiop(and),exp:binary_logi[logiop(and),exp:binary_logi[logiop(eq),exp:record_acc[exp:record_ptr[exp:ident(qos),ident(txtp)],ident(max_pcr)],exp:const:int(0)],exp:binary_logi[logiop(eq),exp:record_acc[exp:record_ptr[exp:ident(qos),ident(txtp)],ident(pcr)],exp:const:int(0)]],exp:binary_logi[logiop(eq),exp:record_acc[exp:record_ptr[exp:ident(qos),ident(txtp)],ident(min_pcr)],exp:const:int(0)]],{}stmt[estmt[exp:call[exp:ident(printk),exp:const:string(%s: trying to open a CBR VC with cell rate = 0\n),exp:record_ptr[exp:ident(card),ident(name)]]],st_return[exp:??(N/H)]],estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:ident(tst_used),exp:const:int(0)]],estmt[exp:assign[simple_assi(=),exp:ident(tst_free),exp:record_ptr[exp:ident(card),ident(tst_free)]]],sel_if[exp:call[exp:ident(test_bit),exp:ident(VCF_TX),exp:&ref:exp:record_ptr[exp:ident(vc),ident(flags)]],estmt[exp:assign[simple_assi(=),exp:ident(tst_used),exp:record_ptr[exp:ident(vc),ident(ntste)]]],estmt(NONE)],estmt[exp:assign[op_assi(+=),exp:ident(tst_free),exp:ident(tst_used)]],estmt[exp:assign[simple_assi(=),exp:ident(tcr),exp:call[exp:ident(atm_pcr_goal),exp:&ref:exp:record_ptr[exp:ident(qos),ident(txtp)]]]],estmt[exp:assign[simple_assi(=),exp:ident(tcra),exp:cond3[exp:binary_logi[logiop(??),exp:ident(tcr),exp:const:int(0)],exp:ident(tcr),exp:??(N/H)]]],estmt[exp:call[exp:ident(TXPRINTK),exp:const:string(%s: CBR target cell rate = %d\n),exp:record_ptr[exp:ident(card),ident(name)],exp:ident(tcra)]],estmt[exp:assign[simple_assi(=),exp:ident(tmpl),exp:binary_arith[aop(*),exp:??(N/H),exp:binary_arith[aop(-),exp:??(N/H),exp:const:int(2)]]]],estmt[exp:assign[simple_assi(=),exp:ident(modl),exp:binary_arith[aop(%),exp:ident(tmpl),exp:??(N/H)]]],estmt[exp:assign[simple_assi(=),exp:ident(tst_entries),exp:??(N/H)]],sel_if[exp:binary_logi[logiop(??),exp:ident(tcr),exp:const:int(0)],{}stmt[sel_if[exp:binary_logi[logiop(??),exp:ident(modl),exp:const:int(0)],estmt[exp:??(N/H)],estmt(NONE)]],sel_if[exp:binary_logi[logiop(eq),exp:ident(tcr),exp:const:int(0)],{}stmt[estmt[exp:assign[simple_assi(=),exp:ident(tst_entries),exp:binary_arith[aop(-),exp:ident(tst_free),exp:ident(SAR_TST_RESERVED)]]],sel_if[exp:binary_logi[logiop(??),exp:ident(tst_entries),exp:const:int(0)],{}stmt[estmt[exp:call[exp:ident(printk),exp:const:string(%s: no CBR bandwidth free.\n),exp:record_ptr[exp:ident(card),ident(name)]]],st_return[exp:??(N/H)]],estmt(NONE)]],estmt(NONE)]],sel_if[exp:binary_logi[logiop(eq),exp:ident(tst_entries),exp:const:int(0)],{}stmt[estmt[exp:call[exp:ident(printk),exp:const:string(%s: selected CBR bandwidth < granularity.\n),exp:record_ptr[exp:ident(card),ident(name)]]],st_return[exp:??(N/H)]],estmt(NONE)],sel_if[exp:binary_logi[logiop(??),exp:ident(tst_entries),exp:binary_arith[aop(-),exp:ident(tst_free),exp:ident(SAR_TST_RESERVED)]],{}stmt[estmt[exp:call[exp:ident(printk),exp:const:string(%s: not enough CBR bandwidth free.\n),exp:record_ptr[exp:ident(card),ident(name)]]],st_return[exp:??(N/H)]],estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(vc),ident(ntste)],exp:ident(tst_entries)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(card),ident(tst_free)],exp:binary_arith[aop(-),exp:ident(tst_free),exp:ident(tst_entries)]]],sel_if[exp:call[exp:ident(test_bit),exp:ident(VCF_TX),exp:&ref:exp:record_ptr[exp:ident(vc),ident(flags)]],{}stmt[sel_if[exp:binary_logi[logiop(eq),exp:ident(tst_used),exp:ident(tst_entries)],st_return[exp:const:int(0)],estmt(NONE)],estmt[exp:call[exp:ident(OPRINTK),exp:const:string(%s: modify %d -> %d entries in TST.\n),exp:record_ptr[exp:ident(card),ident(name)],exp:ident(tst_used),exp:ident(tst_entries)]],estmt[exp:call[exp:ident(change_tst),exp:ident(card),exp:ident(vc),exp:ident(tst_entries),exp:ident(TSTE_OPC_CBR)]],st_return[exp:const:int(0)]],estmt(NONE)],estmt[exp:call[exp:ident(OPRINTK),exp:const:string(%s: setting %d entries in TST.\n),exp:record_ptr[exp:ident(card),ident(name)],exp:ident(tst_entries)]],estmt[exp:call[exp:ident(fill_tst),exp:ident(card),exp:ident(vc),exp:ident(tst_entries),exp:ident(TSTE_OPC_CBR)]],st_return[exp:const:int(0)]]],def[fname(idt77252_init_ubr),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(card),fulltype[typec(N/H)]],param[reg(),name(vc),fulltype[typec(N/H)]],param[reg(),name(vcc),fulltype[typec(N/H)]],param[reg(),name(qos),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp:call[exp:ident(spin_lock_irqsave),exp:&ref:exp:record_ptr[exp:ident(vc),ident(lock)],exp:ident(flags)]],sel_if[exp:record_ptr[exp:ident(vc),ident(estimator)],{}stmt[estmt[exp:call[exp:ident(del_timer),exp:&ref:exp:record_ptr[exp:record_ptr[exp:ident(vc),ident(estimator)],ident(timer)]]],estmt[exp:call[exp:ident(kfree),exp:record_ptr[exp:ident(vc),ident(estimator)]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(vc),ident(estimator)],exp:ident(NULL)]]],estmt(NONE)],estmt[exp:call[exp:ident(spin_unlock_irqrestore),exp:&ref:exp:record_ptr[exp:ident(vc),ident(lock)],exp:ident(flags)]],estmt[exp:assign[simple_assi(=),exp:ident(tcr),exp:call[exp:ident(atm_pcr_goal),exp:&ref:exp:record_ptr[exp:ident(qos),ident(txtp)]]]],sel_if[exp:binary_logi[logiop(eq),exp:ident(tcr),exp:const:int(0)],estmt[exp:assign[simple_assi(=),exp:ident(tcr),exp:record_ptr[exp:ident(card),ident(link_pcr)]]],estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(vc),ident(estimator)],exp:call[exp:ident(idt77252_init_est),exp:ident(vc),exp:ident(tcr)]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(vc),ident(class)],exp:ident(SCHED_UBR)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(vc),ident(init_er)],exp:call[exp:ident(idt77252_rate_logindex),exp:ident(card),exp:ident(tcr)]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(vc),ident(lacr)],exp:record_ptr[exp:ident(vc),ident(init_er)]]],sel_if[exp:binary_logi[logiop(??),exp:ident(tcr),exp:const:int(0)],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(vc),ident(max_er)],exp:record_ptr[exp:ident(vc),ident(init_er)]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(vc),ident(max_er)],exp:const:int(0xff)]]],st_return[exp:const:int(0)]]],def[fname(idt77252_init_tx),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(card),fulltype[typec(N/H)]],param[reg(),name(vc),fulltype[typec(N/H)]],param[reg(),name(vcc),fulltype[typec(N/H)]],param[reg(),name(qos),fulltype[typec(N/H)]]],{}stmt[statem(N/H),sel_if[exp:call[exp:ident(test_bit),exp:ident(VCF_TX),exp:&ref:exp:record_ptr[exp:ident(vc),ident(flags)]],st_return[exp:??(N/H)],estmt(NONE)],statem(N/H),estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(vc),ident(scq)],exp:call[exp:ident(alloc_scq),exp:ident(card),exp:record_ptr[exp:ident(vc),ident(class)]]]],sel_if[exp:??(N/H),{}stmt[estmt[exp:call[exp:ident(printk),exp:const:string(%s: can't get SCQ.\n),exp:record_ptr[exp:ident(card),ident(name)]]],st_return[exp:??(N/H)]],estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:record_ptr[exp:ident(vc),ident(scq)],ident(scd)],exp:call[exp:ident(get_free_scd),exp:ident(card),exp:ident(vc)]]],sel_if[exp:binary_logi[logiop(eq),exp:record_ptr[exp:record_ptr[exp:ident(vc),ident(scq)],ident(scd)],exp:const:int(0)],{}stmt[estmt[exp:call[exp:ident(printk),exp:const:string(%s: no SCD available.\n),exp:record_ptr[exp:ident(card),ident(name)]]],estmt[exp:call[exp:ident(free_scq),exp:ident(card),exp:record_ptr[exp:ident(vc),ident(scq)]]],st_return[exp:??(N/H)]],estmt(NONE)],estmt[exp:call[exp:ident(fill_scd),exp:ident(card),exp:record_ptr[exp:ident(vc),ident(scq)],exp:record_ptr[exp:ident(vc),ident(class)]]],sel_if[exp:call[exp:ident(set_tct),exp:ident(card),exp:ident(vc)],{}stmt[estmt[exp:call[exp:ident(printk),exp:const:string(%s: class %d not supported.\n),exp:record_ptr[exp:ident(card),ident(name)],exp:record_acc[exp:record_ptr[exp:ident(qos),ident(txtp)],ident(traffic_class)]]],estmt[exp:assign[simple_assi(=),exp:array_acc[exp:record_ptr[exp:ident(card),ident(scd2vc)],exp:record_ptr[exp:ident(vc),ident(scd_index)]],exp:ident(NULL)]],estmt[exp:call[exp:ident(free_scq),exp:ident(card),exp:record_ptr[exp:ident(vc),ident(scq)]]],st_return[exp:??(N/H)]],estmt(NONE)],statem(N/H),estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(vc),ident(tx_vcc)],exp:ident(vcc)]],estmt[exp:call[exp:ident(set_bit),exp:ident(VCF_TX),exp:&ref:exp:record_ptr[exp:ident(vc),ident(flags)]]],st_return[exp:const:int(0)]]],def[fname(idt77252_init_rx),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(card),fulltype[typec(N/H)]],param[reg(),name(vc),fulltype[typec(N/H)]],param[reg(),name(vcc),fulltype[typec(N/H)]],param[reg(),name(qos),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),sel_if[exp:call[exp:ident(test_bit),exp:ident(VCF_RX),exp:&ref:exp:record_ptr[exp:ident(vc),ident(flags)]],st_return[exp:??(N/H)],estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(vc),ident(rx_vcc)],exp:ident(vcc)]],estmt[exp:call[exp:ident(set_bit),exp:ident(VCF_RX),exp:&ref:exp:record_ptr[exp:ident(vc),ident(flags)]]],sel_if[exp:binary_logi[logiop(or),exp:binary_logi[logiop(eq),exp:record_ptr[exp:ident(vcc),ident(vci)],exp:const:int(3)],exp:binary_logi[logiop(eq),exp:record_ptr[exp:ident(vcc),ident(vci)],exp:const:int(4)]],st_return[exp:const:int(0)],estmt(NONE)],estmt[exp:call[exp:ident(flush_rx_pool),exp:ident(card),exp:&ref:exp:record_acc[exp:record_ptr[exp:ident(vc),ident(rcv)],ident(rx_pool)]]],estmt[exp:assign[op_assi(|=),exp:ident(rcte),exp:ident(SAR_RCTE_CONNECTOPEN)]],estmt[exp:assign[op_assi(|=),exp:ident(rcte),exp:ident(SAR_RCTE_RAWCELLINTEN)]],statem(N/H),sel_if[exp:binary_logi[logiop(??),exp:record_ptr[exp:ident(qos),ident(aal)],exp:ident(ATM_AAL5)],estmt[exp:assign[op_assi(|=),exp:ident(rcte),exp:ident(SAR_RCTE_FBP_1)]],sel_if[exp:binary_logi[logiop(??),exp:record_acc[exp:record_ptr[exp:ident(qos),ident(rxtp)],ident(max_sdu)],exp:ident(SAR_FB_SIZE_2)],estmt[exp:assign[op_assi(|=),exp:ident(rcte),exp:ident(SAR_RCTE_FBP_3)]],sel_if[exp:binary_logi[logiop(??),exp:record_acc[exp:record_ptr[exp:ident(qos),ident(rxtp)],ident(max_sdu)],exp:ident(SAR_FB_SIZE_1)],estmt[exp:assign[op_assi(|=),exp:ident(rcte),exp:ident(SAR_RCTE_FBP_2)]],sel_if[exp:binary_logi[logiop(??),exp:record_acc[exp:record_ptr[exp:ident(qos),ident(rxtp)],ident(max_sdu)],exp:ident(SAR_FB_SIZE_0)],estmt[exp:assign[op_assi(|=),exp:ident(rcte),exp:ident(SAR_RCTE_FBP_1)]],estmt[exp:assign[op_assi(|=),exp:ident(rcte),exp:ident(SAR_RCTE_FBP_01)]]]]]],estmt[exp:assign[simple_assi(=),exp:ident(addr),exp:binary_arith[aop(+),exp:record_ptr[exp:ident(card),ident(rct_base)],exp:binary_arith[aop(<<),exp:record_ptr[exp:ident(vc),ident(index)],exp:const:int(2)]]]],estmt[exp:call[exp:ident(OPRINTK),exp:const:string(%s: writing RCT at 0x%lx\n),exp:record_ptr[exp:ident(card),ident(name)],exp:ident(addr)]],estmt[exp:call[exp:ident(write_sram),exp:ident(card),exp:ident(addr),exp:ident(rcte)]],estmt[exp:call[exp:ident(spin_lock_irqsave),exp:&ref:exp:record_ptr[exp:ident(card),ident(cmd_lock)],exp:ident(flags)]],estmt[exp:call[exp:ident(writel),exp:binary_arith[aop(|),exp:ident(SAR_CMD_OPEN_CONNECTION),exp:binary_arith[aop(<<),exp:ident(addr),exp:const:int(2)]],exp:ident(SAR_REG_CMD)]],estmt[exp:call[exp:ident(waitfor_idle),exp:ident(card)]],estmt[exp:call[exp:ident(spin_unlock_irqrestore),exp:&ref:exp:record_ptr[exp:ident(card),ident(cmd_lock)],exp:ident(flags)]],st_return[exp:const:int(0)]]],def[fname(idt77252_open),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(vcc),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),sel_if[exp:binary_logi[logiop(or),exp:binary_logi[logiop(eq),exp:ident(vpi),exp:ident(ATM_VPI_UNSPEC)],exp:binary_logi[logiop(eq),exp:ident(vci),exp:ident(ATM_VCI_UNSPEC)]],st_return[exp:const:int(0)],estmt(NONE)],sel_if[exp:binary_logi[logiop(??),exp:ident(vpi),exp:binary_arith[aop(<<),exp:const:int(1),exp:record_ptr[exp:ident(card),ident(vpibits)]]],{}stmt[estmt[exp:call[exp:ident(printk),exp:const:string(%s: unsupported VPI: %d\n),exp:record_ptr[exp:ident(card),ident(name)],exp:ident(vpi)]],st_return[exp:??(N/H)]],estmt(NONE)],sel_if[exp:binary_logi[logiop(??),exp:ident(vci),exp:binary_arith[aop(<<),exp:const:int(1),exp:record_ptr[exp:ident(card),ident(vcibits)]]],{}stmt[estmt[exp:call[exp:ident(printk),exp:const:string(%s: unsupported VCI: %d\n),exp:record_ptr[exp:ident(card),ident(name)],exp:ident(vci)]],st_return[exp:??(N/H)]],estmt(NONE)],estmt[exp:call[exp:ident(set_bit),exp:ident(ATM_VF_ADDR),exp:&ref:exp:record_ptr[exp:ident(vcc),ident(flags)]]],estmt[exp:call[exp:ident(mutex_lock),exp:&ref:exp:record_ptr[exp:ident(card),ident(mutex)]]],estmt[exp:call[exp:ident(OPRINTK),exp:const:string(%s: opening vpi.vci: %d.%d\n),exp:record_ptr[exp:ident(card),ident(name)],exp:ident(vpi),exp:ident(vci)]],statem(N/H),estmt[exp:assign[simple_assi(=),exp:ident(index),exp:call[exp:ident(VPCI2VC),exp:ident(card),exp:ident(vpi),exp:ident(vci)]]],sel_if[exp:??(N/H),{}stmt[estmt[exp:assign[simple_assi(=),exp:array_acc[exp:record_ptr[exp:ident(card),ident(vcs)],exp:ident(index)],exp:call[exp:ident(kzalloc),exp:sizeoftype:fulltype[typec(N/H)],exp:ident(GFP_KERNEL)]]],sel_if[exp:??(N/H),{}stmt[estmt[exp:call[exp:ident(printk),exp:const:string(%s: can't alloc vc in open()\n),exp:record_ptr[exp:ident(card),ident(name)]]],estmt[exp:call[exp:ident(mutex_unlock),exp:&ref:exp:record_ptr[exp:ident(card),ident(mutex)]]],st_return[exp:??(N/H)]],estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:array_acc[exp:record_ptr[exp:ident(card),ident(vcs)],exp:ident(index)],ident(card)],exp:ident(card)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:array_acc[exp:record_ptr[exp:ident(card),ident(vcs)],exp:ident(index)],ident(index)],exp:ident(index)]],estmt[exp:call[exp:ident(spin_lock_init),exp:&ref:exp:record_ptr[exp:array_acc[exp:record_ptr[exp:ident(card),ident(vcs)],exp:ident(index)],ident(lock)]]]],estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:ident(vc),exp:array_acc[exp:record_ptr[exp:ident(card),ident(vcs)],exp:ident(index)]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(vcc),ident(dev_data)],exp:ident(vc)]],estmt[exp:call[exp:ident(IPRINTK),exp:const:string(%s: idt77252_open: vc = %d (%d.%d) %s/%s (max RX SDU: %u)\n),exp:record_ptr[exp:ident(card),ident(name)],exp:record_ptr[exp:ident(vc),ident(index)],exp:record_ptr[exp:ident(vcc),ident(vpi)],exp:record_ptr[exp:ident(vcc),ident(vci)],exp:cond3[exp:binary_logi[logiop(??),exp:record_acc[exp:record_acc[exp:record_ptr[exp:ident(vcc),ident(qos)],ident(rxtp)],ident(traffic_class)],exp:ident(ATM_NONE)],exp:const:string(rx),exp:const:string(--)],exp:cond3[exp:binary_logi[logiop(??),exp:record_acc[exp:record_acc[exp:record_ptr[exp:ident(vcc),ident(qos)],ident(txtp)],ident(traffic_class)],exp:ident(ATM_NONE)],exp:const:string(tx),exp:const:string(--)],exp:record_acc[exp:record_acc[exp:record_ptr[exp:ident(vcc),ident(qos)],ident(rxtp)],ident(max_sdu)]]],estmt[exp:assign[simple_assi(=),exp:ident(inuse),exp:const:int(0)]],sel_if[exp:binary_logi[logiop(and),exp:binary_logi[logiop(??),exp:record_acc[exp:record_acc[exp:record_ptr[exp:ident(vcc),ident(qos)],ident(txtp)],ident(traffic_class)],exp:ident(ATM_NONE)],exp:call[exp:ident(test_bit),exp:ident(VCF_TX),exp:&ref:exp:record_ptr[exp:ident(vc),ident(flags)]]],estmt[exp:assign[simple_assi(=),exp:ident(inuse),exp:const:int(1)]],estmt(NONE)],sel_if[exp:binary_logi[logiop(and),exp:binary_logi[logiop(??),exp:record_acc[exp:record_acc[exp:record_ptr[exp:ident(vcc),ident(qos)],ident(rxtp)],ident(traffic_class)],exp:ident(ATM_NONE)],exp:call[exp:ident(test_bit),exp:ident(VCF_RX),exp:&ref:exp:record_ptr[exp:ident(vc),ident(flags)]]],estmt[exp:assign[op_assi(+=),exp:ident(inuse),exp:const:int(2)]],estmt(NONE)],sel_if[exp:ident(inuse),{}stmt[estmt[exp:call[exp:ident(printk),exp:const:string(%s: %s vci already in use.\n),exp:record_ptr[exp:ident(card),ident(name)],exp:cond3[exp:binary_logi[logiop(eq),exp:ident(inuse),exp:const:int(1)],exp:const:string(tx),exp:cond3[exp:binary_logi[logiop(eq),exp:ident(inuse),exp:const:int(2)],exp:const:string(rx),exp:const:string(tx and rx)]]]],estmt[exp:call[exp:ident(mutex_unlock),exp:&ref:exp:record_ptr[exp:ident(card),ident(mutex)]]],st_return[exp:??(N/H)]],estmt(NONE)],sel_if[exp:binary_logi[logiop(??),exp:record_acc[exp:record_acc[exp:record_ptr[exp:ident(vcc),ident(qos)],ident(txtp)],ident(traffic_class)],exp:ident(ATM_NONE)],{}stmt[estmt[exp:assign[simple_assi(=),exp:ident(error),exp:call[exp:ident(idt77252_init_tx),exp:ident(card),exp:ident(vc),exp:ident(vcc),exp:&ref:exp:record_ptr[exp:ident(vcc),ident(qos)]]]],sel_if[exp:ident(error),{}stmt[estmt[exp:call[exp:ident(mutex_unlock),exp:&ref:exp:record_ptr[exp:ident(card),ident(mutex)]]],st_return[exp:ident(error)]],estmt(NONE)]],estmt(NONE)],sel_if[exp:binary_logi[logiop(??),exp:record_acc[exp:record_acc[exp:record_ptr[exp:ident(vcc),ident(qos)],ident(rxtp)],ident(traffic_class)],exp:ident(ATM_NONE)],{}stmt[estmt[exp:assign[simple_assi(=),exp:ident(error),exp:call[exp:ident(idt77252_init_rx),exp:ident(card),exp:ident(vc),exp:ident(vcc),exp:&ref:exp:record_ptr[exp:ident(vcc),ident(qos)]]]],sel_if[exp:ident(error),{}stmt[estmt[exp:call[exp:ident(mutex_unlock),exp:&ref:exp:record_ptr[exp:ident(card),ident(mutex)]]],st_return[exp:ident(error)]],estmt(NONE)]],estmt(NONE)],estmt[exp:call[exp:ident(set_bit),exp:ident(ATM_VF_READY),exp:&ref:exp:record_ptr[exp:ident(vcc),ident(flags)]]],estmt[exp:call[exp:ident(mutex_unlock),exp:&ref:exp:record_ptr[exp:ident(card),ident(mutex)]]],st_return[exp:const:int(0)]]],def[fname(idt77252_close),funtype[fulltype[ctype[btype(void)]],param[reg(),name(vcc),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp:call[exp:ident(mutex_lock),exp:&ref:exp:record_ptr[exp:ident(card),ident(mutex)]]],estmt[exp:call[exp:ident(IPRINTK),exp:const:string(%s: idt77252_close: vc = %d (%d.%d)\n),exp:record_ptr[exp:ident(card),ident(name)],exp:record_ptr[exp:ident(vc),ident(index)],exp:record_ptr[exp:ident(vcc),ident(vpi)],exp:record_ptr[exp:ident(vcc),ident(vci)]]],estmt[exp:call[exp:ident(clear_bit),exp:ident(ATM_VF_READY),exp:&ref:exp:record_ptr[exp:ident(vcc),ident(flags)]]],sel_if[exp:binary_logi[logiop(??),exp:record_acc[exp:record_acc[exp:record_ptr[exp:ident(vcc),ident(qos)],ident(rxtp)],ident(traffic_class)],exp:ident(ATM_NONE)],{}stmt[estmt[exp:call[exp:ident(spin_lock_irqsave),exp:&ref:exp:record_ptr[exp:ident(vc),ident(lock)],exp:ident(flags)]],estmt[exp:call[exp:ident(clear_bit),exp:ident(VCF_RX),exp:&ref:exp:record_ptr[exp:ident(vc),ident(flags)]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(vc),ident(rx_vcc)],exp:ident(NULL)]],estmt[exp:call[exp:ident(spin_unlock_irqrestore),exp:&ref:exp:record_ptr[exp:ident(vc),ident(lock)],exp:ident(flags)]],sel_if[exp:binary_logi[logiop(or),exp:binary_logi[logiop(eq),exp:record_ptr[exp:ident(vcc),ident(vci)],exp:const:int(3)],exp:binary_logi[logiop(eq),exp:record_ptr[exp:ident(vcc),ident(vci)],exp:const:int(4)]],statem(N/H),estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:ident(addr),exp:binary_arith[aop(+),exp:record_ptr[exp:ident(card),ident(rct_base)],exp:binary_arith[aop(*),exp:record_ptr[exp:ident(vc),ident(index)],exp:ident(SAR_SRAM_RCT_SIZE)]]]],estmt[exp:call[exp:ident(spin_lock_irqsave),exp:&ref:exp:record_ptr[exp:ident(card),ident(cmd_lock)],exp:ident(flags)]],estmt[exp:call[exp:ident(writel),exp:binary_arith[aop(|),exp:ident(SAR_CMD_CLOSE_CONNECTION),exp:binary_arith[aop(<<),exp:ident(addr),exp:const:int(2)]],exp:ident(SAR_REG_CMD)]],estmt[exp:call[exp:ident(waitfor_idle),exp:ident(card)]],estmt[exp:call[exp:ident(spin_unlock_irqrestore),exp:&ref:exp:record_ptr[exp:ident(card),ident(cmd_lock)],exp:ident(flags)]],sel_if[exp:record_acc[exp:record_acc[exp:record_ptr[exp:ident(vc),ident(rcv)],ident(rx_pool)],ident(count)],{}stmt[estmt[exp:call[exp:ident(DPRINTK),exp:const:string(%s: closing a VC with pending rx buffers.\n),exp:record_ptr[exp:ident(card),ident(name)]]],estmt[exp:call[exp:ident(recycle_rx_pool_skb),exp:ident(card),exp:&ref:exp:record_acc[exp:record_ptr[exp:ident(vc),ident(rcv)],ident(rx_pool)]]]],estmt(NONE)]],estmt(NONE)],statem(N/H),estmt[exp:call[exp:ident(mutex_unlock),exp:&ref:exp:record_ptr[exp:ident(card),ident(mutex)]]]]],def[fname(idt77252_change_qos),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(vcc),fulltype[typec(N/H)]],param[reg(),name(qos),fulltype[typec(N/H)]],param[reg(),name(flags),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp:call[exp:ident(mutex_lock),exp:&ref:exp:record_ptr[exp:ident(card),ident(mutex)]]],sel_if[exp:binary_logi[logiop(??),exp:record_acc[exp:record_ptr[exp:ident(qos),ident(txtp)],ident(traffic_class)],exp:ident(ATM_NONE)],{}stmt[sel_if[exp:??(N/H),{}stmt[estmt[exp:assign[simple_assi(=),exp:ident(error),exp:call[exp:ident(idt77252_init_tx),exp:ident(card),exp:ident(vc),exp:ident(vcc),exp:ident(qos)]]],sel_if[exp:ident(error),statem(N/H),estmt(NONE)]],{}stmt[statem(N/H)]]],estmt(NONE)],sel_if[exp:binary_logi[logiop(and),exp:binary_logi[logiop(??),exp:record_acc[exp:record_ptr[exp:ident(qos),ident(rxtp)],ident(traffic_class)],exp:ident(ATM_NONE)],exp:??(N/H)],{}stmt[estmt[exp:assign[simple_assi(=),exp:ident(error),exp:call[exp:ident(idt77252_init_rx),exp:ident(card),exp:ident(vc),exp:ident(vcc),exp:ident(qos)]]],sel_if[exp:ident(error),statem(N/H),estmt(NONE)]],estmt(NONE)],estmt[exp:call[exp:ident(memcpy),exp:&ref:exp:record_ptr[exp:ident(vcc),ident(qos)],exp:ident(qos),exp:sizeoftype:fulltype[typec(N/H)]]],estmt[exp:call[exp:ident(set_bit),exp:ident(ATM_VF_HASQOS),exp:&ref:exp:record_ptr[exp:ident(vcc),ident(flags)]]],statem(N/H),st_return[exp:ident(error)]]],def[fname(idt77252_proc_read),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(dev),fulltype[typec(N/H)]],param[reg(),name(pos),fulltype[typec(N/H)]],param[reg(),name(page),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp:assign[simple_assi(=),exp:ident(left),exp:??(N/H)]],sel_if[exp:??(N/H),st_return[exp:call[exp:ident(sprintf),exp:ident(page),exp:const:string(IDT77252 Interrupts:\n)]],estmt(NONE)],sel_if[exp:??(N/H),st_return[exp:call[exp:ident(sprintf),exp:ident(page),exp:const:string(TSIF:  %lu\n),exp:array_acc[exp:record_ptr[exp:ident(card),ident(irqstat)],exp:const:int(15)]]],estmt(NONE)],sel_if[exp:??(N/H),st_return[exp:call[exp:ident(sprintf),exp:ident(page),exp:const:string(TXICP: %lu\n),exp:array_acc[exp:record_ptr[exp:ident(card),ident(irqstat)],exp:const:int(14)]]],estmt(NONE)],sel_if[exp:??(N/H),st_return[exp:call[exp:ident(sprintf),exp:ident(page),exp:const:string(TSQF:  %lu\n),exp:array_acc[exp:record_ptr[exp:ident(card),ident(irqstat)],exp:const:int(12)]]],estmt(NONE)],sel_if[exp:??(N/H),st_return[exp:call[exp:ident(sprintf),exp:ident(page),exp:const:string(TMROF: %lu\n),exp:array_acc[exp:record_ptr[exp:ident(card),ident(irqstat)],exp:const:int(11)]]],estmt(NONE)],sel_if[exp:??(N/H),st_return[exp:call[exp:ident(sprintf),exp:ident(page),exp:const:string(PHYI:  %lu\n),exp:array_acc[exp:record_ptr[exp:ident(card),ident(irqstat)],exp:const:int(10)]]],estmt(NONE)],sel_if[exp:??(N/H),st_return[exp:call[exp:ident(sprintf),exp:ident(page),exp:const:string(FBQ3A: %lu\n),exp:array_acc[exp:record_ptr[exp:ident(card),ident(irqstat)],exp:const:int(8)]]],estmt(NONE)],sel_if[exp:??(N/H),st_return[exp:call[exp:ident(sprintf),exp:ident(page),exp:const:string(FBQ2A: %lu\n),exp:array_acc[exp:record_ptr[exp:ident(card),ident(irqstat)],exp:const:int(7)]]],estmt(NONE)],sel_if[exp:??(N/H),st_return[exp:call[exp:ident(sprintf),exp:ident(page),exp:const:string(RSQF:  %lu\n),exp:array_acc[exp:record_ptr[exp:ident(card),ident(irqstat)],exp:const:int(6)]]],estmt(NONE)],sel_if[exp:??(N/H),st_return[exp:call[exp:ident(sprintf),exp:ident(page),exp:const:string(EPDU:  %lu\n),exp:array_acc[exp:record_ptr[exp:ident(card),ident(irqstat)],exp:const:int(5)]]],estmt(NONE)],sel_if[exp:??(N/H),st_return[exp:call[exp:ident(sprintf),exp:ident(page),exp:const:string(RAWCF: %lu\n),exp:array_acc[exp:record_ptr[exp:ident(card),ident(irqstat)],exp:const:int(4)]]],estmt(NONE)],sel_if[exp:??(N/H),st_return[exp:call[exp:ident(sprintf),exp:ident(page),exp:const:string(FBQ1A: %lu\n),exp:array_acc[exp:record_ptr[exp:ident(card),ident(irqstat)],exp:const:int(3)]]],estmt(NONE)],sel_if[exp:??(N/H),st_return[exp:call[exp:ident(sprintf),exp:ident(page),exp:const:string(FBQ0A: %lu\n),exp:array_acc[exp:record_ptr[exp:ident(card),ident(irqstat)],exp:const:int(2)]]],estmt(NONE)],sel_if[exp:??(N/H),st_return[exp:call[exp:ident(sprintf),exp:ident(page),exp:const:string(RSQAF: %lu\n),exp:array_acc[exp:record_ptr[exp:ident(card),ident(irqstat)],exp:const:int(1)]]],estmt(NONE)],sel_if[exp:??(N/H),st_return[exp:call[exp:ident(sprintf),exp:ident(page),exp:const:string(IDT77252 Transmit Connection Table:\n)]],estmt(NONE)],for[exp:assign[simple_assi(=),exp:ident(i),exp:const:int(0)],exp:binary_logi[logiop(??),exp:ident(i),exp:record_ptr[exp:ident(card),ident(tct_size)]],exp:??(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp:assign[simple_assi(=),exp:ident(vc),exp:array_acc[exp:record_ptr[exp:ident(card),ident(vcs)],exp:ident(i)]]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:ident(vcc),exp:ident(NULL)]],sel_if[exp:record_ptr[exp:ident(vc),ident(tx_vcc)],estmt[exp:assign[simple_assi(=),exp:ident(vcc),exp:record_ptr[exp:ident(vc),ident(tx_vcc)]]],estmt(NONE)],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:ident(p),exp:ident(page)]],estmt[exp:assign[op_assi(+=),exp:ident(p),exp:call[exp:ident(sprintf),exp:ident(p),exp:const:string(  %4u: %u.%u: ),exp:ident(i),exp:record_ptr[exp:ident(vcc),ident(vpi)],exp:record_ptr[exp:ident(vcc),ident(vci)]]]],estmt[exp:assign[simple_assi(=),exp:ident(tct),exp:??(N/H)]],for[exp:assign[simple_assi(=),exp:ident(i),exp:const:int(0)],exp:binary_logi[logiop(??),exp:ident(i),exp:const:int(8)],exp:??(N/H),estmt[exp:assign[op_assi(+=),exp:ident(p),exp:call[exp:ident(sprintf),exp:ident(p),exp:const:string( %08x),exp:call[exp:ident(read_sram),exp:ident(card),exp:binary_arith[aop(+),exp:ident(tct),exp:ident(i)]]]]]],estmt[exp:assign[op_assi(+=),exp:ident(p),exp:call[exp:ident(sprintf),exp:ident(p),exp:const:string(\n)]]],st_return[exp:binary_arith[aop(-),exp:ident(p),exp:ident(page)]]]],st_return[exp:const:int(0)]]],def[fname(idt77252_collect_stat),funtype[fulltype[ctype[btype(void)]],param[reg(),name(card),fulltype[typec(N/H)]]],{}stmt[statem(N/H),estmt[exp:assign[simple_assi(=),exp:ident(cdc),exp:call[exp:ident(readl),exp:ident(SAR_REG_CDC)]]],estmt[exp:assign[simple_assi(=),exp:ident(vpec),exp:call[exp:ident(readl),exp:ident(SAR_REG_VPEC)]]],estmt[exp:assign[simple_assi(=),exp:ident(icc),exp:call[exp:ident(readl),exp:ident(SAR_REG_ICC)]]],estmt[exp:call[exp:ident(printk),exp:const:string(%s:),exp:record_ptr[exp:ident(card),ident(name)]]],sel_if[exp:binary_arith[aop(&),exp:ident(cdc),exp:const:int(0x7f0000)],{}stmt[statem(N/H),estmt[exp:call[exp:ident(printk),exp:const:string( [)]],sel_if[exp:binary_arith[aop(&),exp:ident(cdc),exp:binary_arith[aop(<<),exp:const:int(1),exp:const:int(22)]],{}stmt[estmt[exp:call[exp:ident(printk),exp:const:string(%sRM ID),exp:ident(s)]],estmt[exp:assign[simple_assi(=),exp:ident(s),exp:const:string( | )]]],estmt(NONE)],sel_if[exp:binary_arith[aop(&),exp:ident(cdc),exp:binary_arith[aop(<<),exp:const:int(1),exp:const:int(21)]],{}stmt[estmt[exp:call[exp:ident(printk),exp:const:string(%sCON TAB),exp:ident(s)]],estmt[exp:assign[simple_assi(=),exp:ident(s),exp:const:string( | )]]],estmt(NONE)],sel_if[exp:binary_arith[aop(&),exp:ident(cdc),exp:binary_arith[aop(<<),exp:const:int(1),exp:const:int(20)]],{}stmt[estmt[exp:call[exp:ident(printk),exp:const:string(%sNO FB),exp:ident(s)]],estmt[exp:assign[simple_assi(=),exp:ident(s),exp:const:string( | )]]],estmt(NONE)],sel_if[exp:binary_arith[aop(&),exp:ident(cdc),exp:binary_arith[aop(<<),exp:const:int(1),exp:const:int(19)]],{}stmt[estmt[exp:call[exp:ident(printk),exp:const:string(%sOAM CRC),exp:ident(s)]],estmt[exp:assign[simple_assi(=),exp:ident(s),exp:const:string( | )]]],estmt(NONE)],sel_if[exp:binary_arith[aop(&),exp:ident(cdc),exp:binary_arith[aop(<<),exp:const:int(1),exp:const:int(18)]],{}stmt[estmt[exp:call[exp:ident(printk),exp:const:string(%sRM CRC),exp:ident(s)]],estmt[exp:assign[simple_assi(=),exp:ident(s),exp:const:string( | )]]],estmt(NONE)],sel_if[exp:binary_arith[aop(&),exp:ident(cdc),exp:binary_arith[aop(<<),exp:const:int(1),exp:const:int(17)]],{}stmt[estmt[exp:call[exp:ident(printk),exp:const:string(%sRM FIFO),exp:ident(s)]],estmt[exp:assign[simple_assi(=),exp:ident(s),exp:const:string( | )]]],estmt(NONE)],sel_if[exp:binary_arith[aop(&),exp:ident(cdc),exp:binary_arith[aop(<<),exp:const:int(1),exp:const:int(16)]],{}stmt[estmt[exp:call[exp:ident(printk),exp:const:string(%sRX FIFO),exp:ident(s)]],estmt[exp:assign[simple_assi(=),exp:ident(s),exp:const:string( | )]]],estmt(NONE)],estmt[exp:call[exp:ident(printk),exp:const:string(])]]],estmt(NONE)],estmt[exp:call[exp:ident(printk),exp:const:string( CDC %04x, VPEC %04x, ICC: %04x\n),exp:binary_arith[aop(&),exp:ident(cdc),exp:const:int(0xffff)],exp:binary_arith[aop(&),exp:ident(vpec),exp:const:int(0xffff)],exp:binary_arith[aop(&),exp:ident(icc),exp:const:int(0xffff)]]]]],def[fname(idt77252_interrupt),funtype[fulltype[typec(N/H)],param[reg(),name(irq),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(dev_id),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp:assign[simple_assi(=),exp:ident(stat),exp:binary_arith[aop(&),exp:call[exp:ident(readl),exp:ident(SAR_REG_STAT)],exp:const:int(0xffff)]]],sel_if[exp:??(N/H),st_return[exp:ident(IRQ_NONE)],estmt(NONE)],sel_if[exp:call[exp:ident(test_and_set_bit),exp:ident(IDT77252_BIT_INTERRUPT),exp:&ref:exp:record_ptr[exp:ident(card),ident(flags)]],{}stmt[estmt[exp:call[exp:ident(printk),exp:const:string(%s: Re-entering irq_handler()\n),exp:record_ptr[exp:ident(card),ident(name)]]],statem(N/H)],estmt(NONE)],estmt[exp:call[exp:ident(writel),exp:ident(stat),exp:ident(SAR_REG_STAT)]],sel_if[exp:binary_arith[aop(&),exp:ident(stat),exp:ident(SAR_STAT_TSIF)],{}stmt[estmt[exp:call[exp:ident(INTPRINTK),exp:const:string(%s: TSIF\n),exp:record_ptr[exp:ident(card),ident(name)]]],estmt[exp:??(N/H)],estmt[exp:call[exp:ident(idt77252_tx),exp:ident(card)]]],estmt(NONE)],sel_if[exp:binary_arith[aop(&),exp:ident(stat),exp:ident(SAR_STAT_TXICP)],{}stmt[estmt[exp:call[exp:ident(INTPRINTK),exp:const:string(%s: TXICP\n),exp:record_ptr[exp:ident(card),ident(name)]]],estmt[exp:??(N/H)],estmt[exp:call[exp:ident(idt77252_tx_dump),exp:ident(card)]]],estmt(NONE)],sel_if[exp:binary_arith[aop(&),exp:ident(stat),exp:ident(SAR_STAT_TSQF)],{}stmt[estmt[exp:call[exp:ident(INTPRINTK),exp:const:string(%s: TSQF\n),exp:record_ptr[exp:ident(card),ident(name)]]],estmt[exp:??(N/H)],estmt[exp:call[exp:ident(idt77252_tx),exp:ident(card)]]],estmt(NONE)],sel_if[exp:binary_arith[aop(&),exp:ident(stat),exp:ident(SAR_STAT_TMROF)],{}stmt[estmt[exp:call[exp:ident(INTPRINTK),exp:const:string(%s: TMROF\n),exp:record_ptr[exp:ident(card),ident(name)]]],estmt[exp:??(N/H)],estmt[exp:call[exp:ident(idt77252_collect_stat),exp:ident(card)]]],estmt(NONE)],sel_if[exp:binary_arith[aop(&),exp:ident(stat),exp:ident(SAR_STAT_EPDU)],{}stmt[estmt[exp:call[exp:ident(INTPRINTK),exp:const:string(%s: EPDU\n),exp:record_ptr[exp:ident(card),ident(name)]]],estmt[exp:??(N/H)],estmt[exp:call[exp:ident(idt77252_rx),exp:ident(card)]]],estmt(NONE)],sel_if[exp:binary_arith[aop(&),exp:ident(stat),exp:ident(SAR_STAT_RSQAF)],{}stmt[estmt[exp:call[exp:ident(INTPRINTK),exp:const:string(%s: RSQAF\n),exp:record_ptr[exp:ident(card),ident(name)]]],estmt[exp:??(N/H)],estmt[exp:call[exp:ident(idt77252_rx),exp:ident(card)]]],estmt(NONE)],sel_if[exp:binary_arith[aop(&),exp:ident(stat),exp:ident(SAR_STAT_RSQF)],{}stmt[estmt[exp:call[exp:ident(INTPRINTK),exp:const:string(%s: RSQF\n),exp:record_ptr[exp:ident(card),ident(name)]]],estmt[exp:??(N/H)],estmt[exp:call[exp:ident(idt77252_rx),exp:ident(card)]]],estmt(NONE)],sel_if[exp:binary_arith[aop(&),exp:ident(stat),exp:ident(SAR_STAT_RAWCF)],{}stmt[estmt[exp:call[exp:ident(INTPRINTK),exp:const:string(%s: RAWCF\n),exp:record_ptr[exp:ident(card),ident(name)]]],estmt[exp:??(N/H)],estmt[exp:call[exp:ident(idt77252_rx_raw),exp:ident(card)]]],estmt(NONE)],sel_if[exp:binary_arith[aop(&),exp:ident(stat),exp:ident(SAR_STAT_PHYI)],{}stmt[estmt[exp:call[exp:ident(INTPRINTK),exp:const:string(%s: PHYI),exp:record_ptr[exp:ident(card),ident(name)]]],estmt[exp:??(N/H)],sel_if[exp:binary_logi[logiop(and),exp:record_ptr[exp:record_ptr[exp:ident(card),ident(atmdev)],ident(phy)],exp:record_ptr[exp:record_ptr[exp:record_ptr[exp:ident(card),ident(atmdev)],ident(phy)],ident(interrupt)]],estmt[exp:call[exp:record_ptr[exp:record_ptr[exp:record_ptr[exp:ident(card),ident(atmdev)],ident(phy)],ident(interrupt)],exp:record_ptr[exp:ident(card),ident(atmdev)]]],estmt(NONE)]],estmt(NONE)],sel_if[exp:binary_arith[aop(&),exp:ident(stat),exp:binary_arith[aop(|),exp:binary_arith[aop(|),exp:binary_arith[aop(|),exp:ident(SAR_STAT_FBQ0A),exp:ident(SAR_STAT_FBQ1A)],exp:ident(SAR_STAT_FBQ2A)],exp:ident(SAR_STAT_FBQ3A)]],{}stmt[estmt[exp:call[exp:ident(writel),exp:binary_arith[aop(&),exp:call[exp:ident(readl),exp:ident(SAR_REG_CFG)],exp:??(N/H)],exp:ident(SAR_REG_CFG)]],estmt[exp:call[exp:ident(INTPRINTK),exp:const:string(%s: FBQA: %04x\n),exp:record_ptr[exp:ident(card),ident(name)],exp:ident(stat)]],sel_if[exp:binary_arith[aop(&),exp:ident(stat),exp:ident(SAR_STAT_FBQ0A)],estmt[exp:??(N/H)],estmt(NONE)],sel_if[exp:binary_arith[aop(&),exp:ident(stat),exp:ident(SAR_STAT_FBQ1A)],estmt[exp:??(N/H)],estmt(NONE)],sel_if[exp:binary_arith[aop(&),exp:ident(stat),exp:ident(SAR_STAT_FBQ2A)],estmt[exp:??(N/H)],estmt(NONE)],sel_if[exp:binary_arith[aop(&),exp:ident(stat),exp:ident(SAR_STAT_FBQ3A)],estmt[exp:??(N/H)],estmt(NONE)],estmt[exp:call[exp:ident(schedule_work),exp:&ref:exp:record_ptr[exp:ident(card),ident(tqueue)]]]],estmt(NONE)],statem(N/H),st_return[exp:ident(IRQ_HANDLED)]]],def[fname(idt77252_softint),funtype[fulltype[ctype[btype(void)]],param[reg(),name(work),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),for[exp:assign[simple_assi(=),exp:ident(done),exp:const:int(1)],expr(NONE),exp:assign[simple_assi(=),exp:ident(done),exp:const:int(1)],{}stmt[estmt[exp:assign[simple_assi(=),exp:ident(stat),exp:binary_arith[aop(>>),exp:call[exp:ident(readl),exp:ident(SAR_REG_STAT)],exp:const:int(16)]]],sel_if[exp:binary_logi[logiop(??),exp:binary_arith[aop(&),exp:ident(stat),exp:const:int(0x0f)],exp:ident(SAR_FBQ0_HIGH)],{}stmt[estmt[exp:call[exp:ident(add_rx_skb),exp:ident(card),exp:const:int(0),exp:ident(SAR_FB_SIZE_0),exp:const:int(32)]],estmt[exp:assign[simple_assi(=),exp:ident(done),exp:const:int(0)]]],estmt(NONE)],estmt[exp:assign[op_assi(N/H),exp:ident(stat),exp:const:int(4)]],sel_if[exp:binary_logi[logiop(??),exp:binary_arith[aop(&),exp:ident(stat),exp:const:int(0x0f)],exp:ident(SAR_FBQ1_HIGH)],{}stmt[estmt[exp:call[exp:ident(add_rx_skb),exp:ident(card),exp:const:int(1),exp:ident(SAR_FB_SIZE_1),exp:const:int(32)]],estmt[exp:assign[simple_assi(=),exp:ident(done),exp:const:int(0)]]],estmt(NONE)],estmt[exp:assign[op_assi(N/H),exp:ident(stat),exp:const:int(4)]],sel_if[exp:binary_logi[logiop(??),exp:binary_arith[aop(&),exp:ident(stat),exp:const:int(0x0f)],exp:ident(SAR_FBQ2_HIGH)],{}stmt[estmt[exp:call[exp:ident(add_rx_skb),exp:ident(card),exp:const:int(2),exp:ident(SAR_FB_SIZE_2),exp:const:int(32)]],estmt[exp:assign[simple_assi(=),exp:ident(done),exp:const:int(0)]]],estmt(NONE)],estmt[exp:assign[op_assi(N/H),exp:ident(stat),exp:const:int(4)]],sel_if[exp:binary_logi[logiop(??),exp:binary_arith[aop(&),exp:ident(stat),exp:const:int(0x0f)],exp:ident(SAR_FBQ3_HIGH)],{}stmt[estmt[exp:call[exp:ident(add_rx_skb),exp:ident(card),exp:const:int(3),exp:ident(SAR_FB_SIZE_3),exp:const:int(32)]],estmt[exp:assign[simple_assi(=),exp:ident(done),exp:const:int(0)]]],estmt(NONE)],sel_if[exp:ident(done),statem(N/H),estmt(NONE)]]],estmt[exp:call[exp:ident(writel),exp:binary_arith[aop(|),exp:call[exp:ident(readl),exp:ident(SAR_REG_CFG)],exp:ident(SAR_CFG_FBIE)],exp:ident(SAR_REG_CFG)]]]],def[fname(open_card_oam),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(card),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),for[exp:assign[simple_assi(=),exp:ident(vpi),exp:const:int(0)],exp:binary_logi[logiop(??),exp:ident(vpi),exp:binary_arith[aop(<<),exp:const:int(1),exp:record_ptr[exp:ident(card),ident(vpibits)]]],exp:??(N/H),{}stmt[for[exp:assign[simple_assi(=),exp:ident(vci),exp:const:int(3)],exp:binary_logi[logiop(??),exp:ident(vci),exp:const:int(5)],exp:??(N/H),{}stmt[estmt[exp:assign[simple_assi(=),exp:ident(index),exp:call[exp:ident(VPCI2VC),exp:ident(card),exp:ident(vpi),exp:ident(vci)]]],estmt[exp:assign[simple_assi(=),exp:ident(vc),exp:call[exp:ident(kzalloc),exp:sizeoftype:fulltype[typec(N/H)],exp:ident(GFP_KERNEL)]]],sel_if[exp:??(N/H),{}stmt[estmt[exp:call[exp:ident(printk),exp:const:string(%s: can't alloc vc\n),exp:record_ptr[exp:ident(card),ident(name)]]],st_return[exp:??(N/H)]],estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(vc),ident(index)],exp:ident(index)]],estmt[exp:assign[simple_assi(=),exp:array_acc[exp:record_ptr[exp:ident(card),ident(vcs)],exp:ident(index)],exp:ident(vc)]],estmt[exp:call[exp:ident(flush_rx_pool),exp:ident(card),exp:&ref:exp:record_acc[exp:record_ptr[exp:ident(vc),ident(rcv)],ident(rx_pool)]]],estmt[exp:assign[simple_assi(=),exp:ident(rcte),exp:binary_arith[aop(|),exp:binary_arith[aop(|),exp:binary_arith[aop(|),exp:ident(SAR_RCTE_CONNECTOPEN),exp:ident(SAR_RCTE_RAWCELLINTEN)],exp:ident(SAR_RCTE_RCQ)],exp:ident(SAR_RCTE_FBP_1)]]],estmt[exp:assign[simple_assi(=),exp:ident(addr),exp:binary_arith[aop(+),exp:record_ptr[exp:ident(card),ident(rct_base)],exp:binary_arith[aop(<<),exp:record_ptr[exp:ident(vc),ident(index)],exp:const:int(2)]]]],estmt[exp:call[exp:ident(write_sram),exp:ident(card),exp:ident(addr),exp:ident(rcte)]],estmt[exp:call[exp:ident(spin_lock_irqsave),exp:&ref:exp:record_ptr[exp:ident(card),ident(cmd_lock)],exp:ident(flags)]],estmt[exp:call[exp:ident(writel),exp:binary_arith[aop(|),exp:ident(SAR_CMD_OPEN_CONNECTION),exp:binary_arith[aop(<<),exp:ident(addr),exp:const:int(2)]],exp:ident(SAR_REG_CMD)]],estmt[exp:call[exp:ident(waitfor_idle),exp:ident(card)]],estmt[exp:call[exp:ident(spin_unlock_irqrestore),exp:&ref:exp:record_ptr[exp:ident(card),ident(cmd_lock)],exp:ident(flags)]]]]]],st_return[exp:const:int(0)]]],def[fname(close_card_oam),funtype[fulltype[ctype[btype(void)]],param[reg(),name(card),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),for[exp:assign[simple_assi(=),exp:ident(vpi),exp:const:int(0)],exp:binary_logi[logiop(??),exp:ident(vpi),exp:binary_arith[aop(<<),exp:const:int(1),exp:record_ptr[exp:ident(card),ident(vpibits)]]],exp:??(N/H),{}stmt[for[exp:assign[simple_assi(=),exp:ident(vci),exp:const:int(3)],exp:binary_logi[logiop(??),exp:ident(vci),exp:const:int(5)],exp:??(N/H),{}stmt[estmt[exp:assign[simple_assi(=),exp:ident(index),exp:call[exp:ident(VPCI2VC),exp:ident(card),exp:ident(vpi),exp:ident(vci)]]],estmt[exp:assign[simple_assi(=),exp:ident(vc),exp:array_acc[exp:record_ptr[exp:ident(card),ident(vcs)],exp:ident(index)]]],estmt[exp:assign[simple_assi(=),exp:ident(addr),exp:binary_arith[aop(+),exp:record_ptr[exp:ident(card),ident(rct_base)],exp:binary_arith[aop(*),exp:record_ptr[exp:ident(vc),ident(index)],exp:ident(SAR_SRAM_RCT_SIZE)]]]],estmt[exp:call[exp:ident(spin_lock_irqsave),exp:&ref:exp:record_ptr[exp:ident(card),ident(cmd_lock)],exp:ident(flags)]],estmt[exp:call[exp:ident(writel),exp:binary_arith[aop(|),exp:ident(SAR_CMD_CLOSE_CONNECTION),exp:binary_arith[aop(<<),exp:ident(addr),exp:const:int(2)]],exp:ident(SAR_REG_CMD)]],estmt[exp:call[exp:ident(waitfor_idle),exp:ident(card)]],estmt[exp:call[exp:ident(spin_unlock_irqrestore),exp:&ref:exp:record_ptr[exp:ident(card),ident(cmd_lock)],exp:ident(flags)]],sel_if[exp:record_acc[exp:record_acc[exp:record_ptr[exp:ident(vc),ident(rcv)],ident(rx_pool)],ident(count)],{}stmt[estmt[exp:call[exp:ident(DPRINTK),exp:const:other(N/H),exp:record_ptr[exp:ident(card),ident(name)]]],estmt[exp:call[exp:ident(recycle_rx_pool_skb),exp:ident(card),exp:&ref:exp:record_acc[exp:record_ptr[exp:ident(vc),ident(rcv)],ident(rx_pool)]]]],estmt(NONE)]]]]]]],def[fname(open_card_ubr0),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(card),fulltype[typec(N/H)]]],{}stmt[statem(N/H),estmt[exp:assign[simple_assi(=),exp:ident(vc),exp:call[exp:ident(kzalloc),exp:sizeoftype:fulltype[typec(N/H)],exp:ident(GFP_KERNEL)]]],sel_if[exp:??(N/H),{}stmt[estmt[exp:call[exp:ident(printk),exp:const:string(%s: can't alloc vc\n),exp:record_ptr[exp:ident(card),ident(name)]]],st_return[exp:??(N/H)]],estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:array_acc[exp:record_ptr[exp:ident(card),ident(vcs)],exp:const:int(0)],exp:ident(vc)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(vc),ident(class)],exp:ident(SCHED_UBR0)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(vc),ident(scq)],exp:call[exp:ident(alloc_scq),exp:ident(card),exp:record_ptr[exp:ident(vc),ident(class)]]]],sel_if[exp:??(N/H),{}stmt[estmt[exp:call[exp:ident(printk),exp:const:string(%s: can't get SCQ.\n),exp:record_ptr[exp:ident(card),ident(name)]]],st_return[exp:??(N/H)]],estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:array_acc[exp:record_ptr[exp:ident(card),ident(scd2vc)],exp:const:int(0)],exp:ident(vc)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(vc),ident(scd_index)],exp:const:int(0)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:record_ptr[exp:ident(vc),ident(scq)],ident(scd)],exp:record_ptr[exp:ident(card),ident(scd_base)]]],estmt[exp:call[exp:ident(fill_scd),exp:ident(card),exp:record_ptr[exp:ident(vc),ident(scq)],exp:record_ptr[exp:ident(vc),ident(class)]]],estmt[exp:call[exp:ident(write_sram),exp:ident(card),exp:binary_arith[aop(+),exp:record_ptr[exp:ident(card),ident(tct_base)],exp:const:int(0)],exp:binary_arith[aop(|),exp:ident(TCT_UBR),exp:record_ptr[exp:ident(card),ident(scd_base)]]]],estmt[exp:call[exp:ident(write_sram),exp:ident(card),exp:binary_arith[aop(+),exp:record_ptr[exp:ident(card),ident(tct_base)],exp:const:int(1)],exp:const:int(0)]],estmt[exp:call[exp:ident(write_sram),exp:ident(card),exp:binary_arith[aop(+),exp:record_ptr[exp:ident(card),ident(tct_base)],exp:const:int(2)],exp:const:int(0)]],estmt[exp:call[exp:ident(write_sram),exp:ident(card),exp:binary_arith[aop(+),exp:record_ptr[exp:ident(card),ident(tct_base)],exp:const:int(3)],exp:const:int(0)]],estmt[exp:call[exp:ident(write_sram),exp:ident(card),exp:binary_arith[aop(+),exp:record_ptr[exp:ident(card),ident(tct_base)],exp:const:int(4)],exp:const:int(0)]],estmt[exp:call[exp:ident(write_sram),exp:ident(card),exp:binary_arith[aop(+),exp:record_ptr[exp:ident(card),ident(tct_base)],exp:const:int(5)],exp:const:int(0)]],estmt[exp:call[exp:ident(write_sram),exp:ident(card),exp:binary_arith[aop(+),exp:record_ptr[exp:ident(card),ident(tct_base)],exp:const:int(6)],exp:const:int(0)]],estmt[exp:call[exp:ident(write_sram),exp:ident(card),exp:binary_arith[aop(+),exp:record_ptr[exp:ident(card),ident(tct_base)],exp:const:int(7)],exp:ident(TCT_FLAG_UBR)]],estmt[exp:call[exp:ident(clear_bit),exp:ident(VCF_IDLE),exp:&ref:exp:record_ptr[exp:ident(vc),ident(flags)]]],estmt[exp:call[exp:ident(writel),exp:binary_arith[aop(|),exp:ident(TCMDQ_START),exp:const:int(0)],exp:ident(SAR_REG_TCMDQ)]],st_return[exp:const:int(0)]]],def[fname(idt77252_dev_open),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(card),fulltype[typec(N/H)]]],{}stmt[statem(N/H),sel_if[exp:??(N/H),{}stmt[estmt[exp:call[exp:ident(printk),exp:const:string(%s: SAR not yet initialized.\n),exp:record_ptr[exp:ident(card),ident(name)]]],st_return[exp:??(N/H)]],estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:ident(conf),exp:binary_arith[aop(|),exp:binary_arith[aop(|),exp:binary_arith[aop(|),exp:binary_arith[aop(|),exp:binary_arith[aop(|),exp:binary_arith[aop(|),exp:binary_arith[aop(|),exp:binary_arith[aop(|),exp:binary_arith[aop(|),exp:binary_arith[aop(|),exp:ident(SAR_CFG_RXPTH),exp:ident(SAR_RX_DELAY)],exp:ident(SAR_CFG_RAWIE)],exp:ident(SAR_CFG_RQFIE)],exp:ident(SAR_CFG_TMOIE)],exp:ident(SAR_CFG_FBIE)],exp:ident(SAR_CFG_TXEN)],exp:ident(SAR_CFG_TXINT)],exp:ident(SAR_CFG_TXUIE)],exp:ident(SAR_CFG_TXSFI)],exp:ident(SAR_CFG_PHYIE)]]],estmt[exp:assign[op_assi(|=),exp:ident(conf),exp:ident(SAR_CFG_VPECA)]],estmt[exp:call[exp:ident(writel),exp:binary_arith[aop(|),exp:call[exp:ident(readl),exp:ident(SAR_REG_CFG)],exp:ident(conf)],exp:ident(SAR_REG_CFG)]],sel_if[exp:call[exp:ident(open_card_oam),exp:ident(card)],{}stmt[estmt[exp:call[exp:ident(printk),exp:const:string(%s: Error initializing OAM.\n),exp:record_ptr[exp:ident(card),ident(name)]]],st_return[exp:??(N/H)]],estmt(NONE)],sel_if[exp:call[exp:ident(open_card_ubr0),exp:ident(card)],{}stmt[estmt[exp:call[exp:ident(printk),exp:const:string(%s: Error initializing UBR0.\n),exp:record_ptr[exp:ident(card),ident(name)]]],st_return[exp:??(N/H)]],estmt(NONE)],estmt[exp:call[exp:ident(IPRINTK),exp:const:string(%s: opened IDT77252 ABR SAR.\n),exp:record_ptr[exp:ident(card),ident(name)]]],st_return[exp:const:int(0)]]],def[fname(idt77252_dev_close),funtype[fulltype[ctype[btype(void)]],param[reg(),name(dev),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp:call[exp:ident(close_card_oam),exp:ident(card)]],estmt[exp:assign[simple_assi(=),exp:ident(conf),exp:binary_arith[aop(|),exp:binary_arith[aop(|),exp:binary_arith[aop(|),exp:binary_arith[aop(|),exp:binary_arith[aop(|),exp:binary_arith[aop(|),exp:binary_arith[aop(|),exp:binary_arith[aop(|),exp:binary_arith[aop(|),exp:ident(SAR_CFG_RXPTH),exp:ident(SAR_RX_DELAY)],exp:ident(SAR_CFG_RAWIE)],exp:ident(SAR_CFG_RQFIE)],exp:ident(SAR_CFG_TMOIE)],exp:ident(SAR_CFG_FBIE)],exp:ident(SAR_CFG_TXEN)],exp:ident(SAR_CFG_TXINT)],exp:ident(SAR_CFG_TXUIE)],exp:ident(SAR_CFG_TXSFI)]]],estmt[exp:call[exp:ident(writel),exp:binary_arith[aop(&),exp:call[exp:ident(readl),exp:ident(SAR_REG_CFG)],exp:??(N/H)],exp:ident(SAR_REG_CFG)]],estmt[exp:call[exp:ident(DIPRINTK),exp:const:string(%s: closed IDT77252 ABR SAR.\n),exp:record_ptr[exp:ident(card),ident(name)]]]]],def[fname(deinit_card),funtype[fulltype[ctype[btype(void)]],param[reg(),name(card),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp:??(N/H),{}stmt[estmt[exp:call[exp:ident(printk),exp:const:string(%s: SAR not yet initialized.\n),exp:record_ptr[exp:ident(card),ident(name)]]],statem(N/H)],estmt(NONE)],estmt[exp:call[exp:ident(DIPRINTK),exp:const:string(idt77252: deinitialize card %u\n),exp:record_ptr[exp:ident(card),ident(index)]]],estmt[exp:call[exp:ident(writel),exp:const:int(0),exp:ident(SAR_REG_CFG)]],sel_if[exp:record_ptr[exp:ident(card),ident(atmdev)],estmt[exp:call[exp:ident(atm_dev_deregister),exp:record_ptr[exp:ident(card),ident(atmdev)]]],estmt(NONE)],for[exp:assign[simple_assi(=),exp:ident(i),exp:const:int(0)],exp:binary_logi[logiop(??),exp:ident(i),exp:const:int(4)],exp:??(N/H),{}stmt[for[exp:assign[simple_assi(=),exp:ident(j),exp:const:int(0)],exp:binary_logi[logiop(??),exp:ident(j),exp:ident(FBQ_SIZE)],exp:??(N/H),{}stmt[estmt[exp:assign[simple_assi(=),exp:ident(skb),exp:array_acc[exp:record_acc[exp:array_acc[exp:record_ptr[exp:ident(card),ident(sbpool)],exp:ident(i)],ident(skb)],exp:ident(j)]]],sel_if[exp:ident(skb),{}stmt[estmt[exp:call[exp:ident(pci_unmap_single),exp:record_ptr[exp:ident(card),ident(pcidev)],exp:call[exp:ident(IDT77252_PRV_PADDR),exp:ident(skb)],exp:binary_arith[aop(-),exp:call[exp:ident(skb_end_pointer),exp:ident(skb)],exp:record_ptr[exp:ident(skb),ident(data)]],exp:ident(PCI_DMA_FROMDEVICE)]],estmt[exp:assign[simple_assi(=),exp:array_acc[exp:record_acc[exp:array_acc[exp:record_ptr[exp:ident(card),ident(sbpool)],exp:ident(i)],ident(skb)],exp:ident(j)],exp:ident(NULL)]],estmt[exp:call[exp:ident(dev_kfree_skb),exp:ident(skb)]]],estmt(NONE)]]]]],estmt[exp:call[exp:ident(vfree),exp:record_ptr[exp:ident(card),ident(soft_tst)]]],estmt[exp:call[exp:ident(vfree),exp:record_ptr[exp:ident(card),ident(scd2vc)]]],estmt[exp:call[exp:ident(vfree),exp:record_ptr[exp:ident(card),ident(vcs)]]],sel_if[exp:record_ptr[exp:ident(card),ident(raw_cell_hnd)],{}stmt[estmt[exp:call[exp:ident(pci_free_consistent),exp:record_ptr[exp:ident(card),ident(pcidev)],exp:binary_arith[aop(*),exp:const:int(2),exp:sizeoftype:fulltype[typec(N/H)]],exp:record_ptr[exp:ident(card),ident(raw_cell_hnd)],exp:record_ptr[exp:ident(card),ident(raw_cell_paddr)]]]],estmt(NONE)],sel_if[exp:record_acc[exp:record_ptr[exp:ident(card),ident(rsq)],ident(base)],{}stmt[estmt[exp:call[exp:ident(DIPRINTK),exp:const:string(%s: Release RSQ ...\n),exp:record_ptr[exp:ident(card),ident(name)]]],estmt[exp:call[exp:ident(deinit_rsq),exp:ident(card)]]],estmt(NONE)],sel_if[exp:record_acc[exp:record_ptr[exp:ident(card),ident(tsq)],ident(base)],{}stmt[estmt[exp:call[exp:ident(DIPRINTK),exp:const:string(%s: Release TSQ ...\n),exp:record_ptr[exp:ident(card),ident(name)]]],estmt[exp:call[exp:ident(deinit_tsq),exp:ident(card)]]],estmt(NONE)],estmt[exp:call[exp:ident(DIPRINTK),exp:const:string(idt77252: Release IRQ.\n)]],estmt[exp:call[exp:ident(free_irq),exp:record_ptr[exp:record_ptr[exp:ident(card),ident(pcidev)],ident(irq)],exp:ident(card)]],for[exp:assign[simple_assi(=),exp:ident(i),exp:const:int(0)],exp:binary_logi[logiop(??),exp:ident(i),exp:const:int(4)],exp:??(N/H),{}stmt[sel_if[exp:array_acc[exp:record_ptr[exp:ident(card),ident(fbq)],exp:ident(i)],estmt[exp:call[exp:ident(iounmap),exp:array_acc[exp:record_ptr[exp:ident(card),ident(fbq)],exp:ident(i)]]],estmt(NONE)]]],sel_if[exp:record_ptr[exp:ident(card),ident(membase)],estmt[exp:call[exp:ident(iounmap),exp:record_ptr[exp:ident(card),ident(membase)]]],estmt(NONE)],estmt[exp:call[exp:ident(clear_bit),exp:ident(IDT77252_BIT_INIT),exp:&ref:exp:record_ptr[exp:ident(card),ident(flags)]]],estmt[exp:call[exp:ident(DIPRINTK),exp:const:string(%s: Card deinitialized.\n),exp:record_ptr[exp:ident(card),ident(name)]]]]],NCP(N/H),NCP(N/H),NCP(N/H),NCP(N/H),NCP(N/H),decl(N/H),mtop(N/H),decl(N/H),NCP(N/H),NCP(N/H),mtop(N/H),mtop(N/H),mtop(N/H),mtop(N/H),mtop(N/H),mtop(N/H),mtop(N/H),mtop(N/H),mtop(N/H)]
prg2[includeN[inc_elem(linux),inc_elem(module.h)],includeN[inc_elem(linux),inc_elem(kernel.h)],includeN[inc_elem(linux),inc_elem(slab.h)],includeN[inc_elem(linux),inc_elem(errno.h)],includeN[inc_elem(linux),inc_elem(types.h)],includeN[inc_elem(linux),inc_elem(delay.h)],includeN[inc_elem(linux),inc_elem(init.h)],includeN[inc_elem(linux),inc_elem(workqueue.h)],includeN[inc_elem(linux),inc_elem(netdevice.h)],includeN[inc_elem(linux),inc_elem(inetdevice.h)],includeN[inc_elem(linux),inc_elem(if_arp.h)],includeN[inc_elem(linux),inc_elem(if_ether.h)],includeN[inc_elem(linux),inc_elem(ip.h)],includeN[inc_elem(linux),inc_elem(in.h)],includeN[inc_elem(linux),inc_elem(tcp.h)],includeN[inc_elem(linux),inc_elem(skbuff.h)],includeN[inc_elem(linux),inc_elem(bitops.h)],includeN[inc_elem(linux),inc_elem(ethtool.h)],includeN[inc_elem(asm),inc_elem(uaccess.h)],includeN[inc_elem(asm),inc_elem(delay.h)],includeN[inc_elem(asm),inc_elem(unaligned.h)],includeN[inc_elem(net),inc_elem(arp.h)],includeL[inc_elem(config_roms.h)],includeL[inc_elem(csr1212.h)],includeL[inc_elem(eth1394.h)],includeL[inc_elem(highlevel.h)],includeL[inc_elem(ieee1394.h)],includeL[inc_elem(ieee1394_core.h)],includeL[inc_elem(ieee1394_hotplug.h)],includeL[inc_elem(ieee1394_transactions.h)],includeL[inc_elem(ieee1394_types.h)],includeL[inc_elem(iso.h)],includeL[inc_elem(nodemgr.h)],define(N/H),define(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),mtop(N/H),mtop(N/H),mtop(N/H),decl(N/H),mtop(N/H),mtop(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),def[fname(ether1394_recv_init),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(priv),fulltype[typec(N/H)]]],{}stmt[statem(N/H),estmt[exp:assign[simple_assi(=),exp:ident(iso_buf_size),exp:call[exp:ident(min),exp:??(N/H),exp:binary_arith[aop(*),exp:const:int(2),exp:binary_arith[aop(<<),exp:const:int(1U),exp:binary_arith[aop(+),exp:record_acc[exp:record_ptr[exp:record_ptr[exp:ident(priv),ident(host)],ident(csr)],ident(max_rec)],exp:const:int(1)]]]]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(priv),ident(iso)],exp:call[exp:ident(hpsb_iso_recv_init),exp:record_ptr[exp:ident(priv),ident(host)],exp:binary_arith[aop(*),exp:ident(ETHER1394_GASP_BUFFERS),exp:ident(iso_buf_size)],exp:ident(ETHER1394_GASP_BUFFERS),exp:record_ptr[exp:ident(priv),ident(broadcast_channel)],exp:ident(HPSB_ISO_DMA_PACKET_PER_BUFFER),exp:const:int(1),exp:ident(ether1394_iso)]]],sel_if[exp:binary_logi[logiop(eq),exp:record_ptr[exp:ident(priv),ident(iso)],exp:ident(NULL)],{}stmt[estmt[exp:call[exp:ident(ETH1394_PRINT_G),exp:ident(KERN_ERR),exp:const:string(Failed to allocate IR context\n)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(priv),ident(bc_state)],exp:ident(ETHER1394_BC_ERROR)]],st_return[exp:??(N/H)]],estmt(NONE)],sel_if[exp:binary_logi[logiop(??),exp:call[exp:ident(hpsb_iso_recv_start),exp:record_ptr[exp:ident(priv),ident(iso)],exp:??(N/H),exp:binary_arith[aop(<<),exp:const:int(1),exp:const:int(3)],exp:??(N/H)],exp:const:int(0)],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(priv),ident(bc_state)],exp:ident(ETHER1394_BC_STOPPED)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(priv),ident(bc_state)],exp:ident(ETHER1394_BC_RUNNING)]]],st_return[exp:const:int(0)]]],def[fname(ether1394_open),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(dev),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp:binary_logi[logiop(eq),exp:record_ptr[exp:ident(priv),ident(bc_state)],exp:ident(ETHER1394_BC_ERROR)],{}stmt[estmt[exp:assign[simple_assi(=),exp:ident(ret),exp:call[exp:ident(ether1394_recv_init),exp:ident(priv)]]],sel_if[exp:ident(ret),st_return[exp:ident(ret)],estmt(NONE)]],estmt(NONE)],estmt[exp:call[exp:ident(netif_start_queue),exp:ident(dev)]],st_return[exp:const:int(0)]]],def[fname(ether1394_stop),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(dev),fulltype[typec(N/H)]]],{}stmt[estmt[exp:call[exp:ident(flush_scheduled_work)]],estmt[exp:call[exp:ident(netif_stop_queue),exp:ident(dev)]],st_return[exp:const:int(0)]]],def[fname(ether1394_stats),funtype[fulltype[typec(N/H)],param[reg(),name(dev),fulltype[typec(N/H)]]],{}stmt[st_return[exp:&ref:exp:record_ptr[exp:??(N/H),ident(stats)]]]],def[fname(ether1394_tx_timeout),funtype[fulltype[ctype[btype(void)]],param[reg(),name(dev),fulltype[typec(N/H)]]],{}stmt[statem(N/H),estmt[exp:call[exp:ident(ETH1394_PRINT),exp:ident(KERN_ERR),exp:record_ptr[exp:ident(dev),ident(name)],exp:const:string(Timeout, resetting host\n)]],estmt[exp:call[exp:ident(ether1394_host_reset),exp:ident(host)]]]],def[fname(ether1394_max_mtu),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(host),fulltype[typec(N/H)]]],{}stmt[st_return[exp:binary_arith[aop(-),exp:binary_arith[aop(-),exp:binary_arith[aop(<<),exp:const:int(1),exp:binary_arith[aop(+),exp:record_acc[exp:record_ptr[exp:ident(host),ident(csr)],ident(max_rec)],exp:const:int(1)]],exp:sizeoftype:fulltype[typec(N/H)]],exp:ident(ETHER1394_GASP_OVERHEAD)]]]],def[fname(ether1394_change_mtu),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(dev),fulltype[typec(N/H)]],param[reg(),name(new_mtu),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[statem(N/H),sel_if[exp:binary_logi[logiop(??),exp:ident(new_mtu),exp:const:int(68)],st_return[exp:??(N/H)],estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:ident(max_mtu),exp:call[exp:ident(ether1394_max_mtu),exp:record_ptr[exp:??(N/H),ident(host)]]]],sel_if[exp:binary_logi[logiop(??),exp:ident(new_mtu),exp:ident(max_mtu)],{}stmt[estmt[exp:call[exp:ident(ETH1394_PRINT),exp:ident(KERN_INFO),exp:record_ptr[exp:ident(dev),ident(name)],exp:const:string(Local node constrains MTU to %d\n),exp:ident(max_mtu)]],st_return[exp:??(N/H)]],estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(dev),ident(mtu)],exp:ident(new_mtu)]],st_return[exp:const:int(0)]]],def[fname(purge_partial_datagram),funtype[fulltype[ctype[btype(void)]],param[reg(),name(old),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp:assign[simple_assi(=),exp:ident(pd),exp:call[exp:ident(list_entry),exp:ident(old),argtype(N/H),exp:ident(list)]]],statem(N/H),estmt[exp:call[exp:ident(list_del),exp:ident(old)]],estmt[exp:call[exp:ident(kfree_skb),exp:record_ptr[exp:ident(pd),ident(skb)]]],estmt[exp:call[exp:ident(kfree),exp:ident(pd)]]]],def[fname(eth1394_find_node),funtype[fulltype[typec(N/H)],param[reg(),name(inl),fulltype[typec(N/H)]],param[reg(),name(ud),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),st_return[exp:ident(NULL)]]],def[fname(eth1394_find_node_guid),funtype[fulltype[typec(N/H)],param[reg(),name(inl),fulltype[typec(N/H)]],param[reg(),name(guid),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),st_return[exp:ident(NULL)]]],def[fname(eth1394_find_node_nodeid),funtype[fulltype[typec(N/H)],param[reg(),name(inl),fulltype[typec(N/H)]],param[reg(),name(nodeid),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),st_return[exp:ident(NULL)]]],def[fname(eth1394_new_node),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(hi),fulltype[typec(N/H)]],param[reg(),name(ud),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp:assign[simple_assi(=),exp:ident(new_node),exp:call[exp:ident(kmalloc),exp:sizeof:exp:*ref:exp:ident(new_node),exp:ident(GFP_KERNEL)]]],sel_if[exp:??(N/H),st_return[exp:??(N/H)],estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:ident(node_info),exp:call[exp:ident(kmalloc),exp:sizeof:exp:*ref:exp:ident(node_info),exp:ident(GFP_KERNEL)]]],sel_if[exp:??(N/H),{}stmt[estmt[exp:call[exp:ident(kfree),exp:ident(new_node)]],st_return[exp:??(N/H)]],estmt(NONE)],estmt[exp:call[exp:ident(spin_lock_init),exp:&ref:exp:record_acc[exp:record_ptr[exp:ident(node_info),ident(pdg)],ident(lock)]]],estmt[exp:call[exp:ident(INIT_LIST_HEAD),exp:&ref:exp:record_acc[exp:record_ptr[exp:ident(node_info),ident(pdg)],ident(list)]]],estmt[exp:assign[simple_assi(=),exp:record_acc[exp:record_ptr[exp:ident(node_info),ident(pdg)],ident(sz)],exp:const:int(0)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(node_info),ident(fifo)],exp:ident(CSR1212_INVALID_ADDR_SPACE)]],estmt[exp:assign[simple_assi(=),exp:record_acc[exp:record_ptr[exp:ident(ud),ident(device)],ident(driver_data)],exp:ident(node_info)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(new_node),ident(ud)],exp:ident(ud)]],estmt[exp:assign[simple_assi(=),exp:ident(priv),exp:call[exp:ident(netdev_priv),exp:record_ptr[exp:ident(hi),ident(dev)]]]],estmt[exp:call[exp:ident(list_add_tail),exp:&ref:exp:record_ptr[exp:ident(new_node),ident(list)],exp:&ref:exp:record_ptr[exp:ident(priv),ident(ip_node_list)]]],st_return[exp:const:int(0)]]],def[fname(eth1394_probe),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(dev),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp:assign[simple_assi(=),exp:ident(ud),exp:call[exp:ident(container_of),exp:ident(dev),argtype(N/H),exp:ident(device)]]],estmt[exp:assign[simple_assi(=),exp:ident(hi),exp:call[exp:ident(hpsb_get_hostinfo),exp:&ref:exp:ident(eth1394_highlevel),exp:record_ptr[exp:record_ptr[exp:ident(ud),ident(ne)],ident(host)]]]],sel_if[exp:??(N/H),st_return[exp:??(N/H)],estmt(NONE)],st_return[exp:call[exp:ident(eth1394_new_node),exp:ident(hi),exp:ident(ud)]]]],def[fname(eth1394_remove),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(dev),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp:assign[simple_assi(=),exp:ident(ud),exp:call[exp:ident(container_of),exp:ident(dev),argtype(N/H),exp:ident(device)]]],estmt[exp:assign[simple_assi(=),exp:ident(hi),exp:call[exp:ident(hpsb_get_hostinfo),exp:&ref:exp:ident(eth1394_highlevel),exp:record_ptr[exp:record_ptr[exp:ident(ud),ident(ne)],ident(host)]]]],sel_if[exp:??(N/H),st_return[exp:??(N/H)],estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:ident(priv),exp:call[exp:ident(netdev_priv),exp:record_ptr[exp:ident(hi),ident(dev)]]]],estmt[exp:assign[simple_assi(=),exp:ident(old_node),exp:call[exp:ident(eth1394_find_node),exp:&ref:exp:record_ptr[exp:ident(priv),ident(ip_node_list)],exp:ident(ud)]]],sel_if[exp:??(N/H),st_return[exp:const:int(0)],estmt(NONE)],estmt[exp:call[exp:ident(list_del),exp:&ref:exp:record_ptr[exp:ident(old_node),ident(list)]]],estmt[exp:call[exp:ident(kfree),exp:ident(old_node)]],estmt[exp:assign[simple_assi(=),exp:ident(node_info),exp:??(N/H)]],estmt[exp:call[exp:ident(spin_lock_irqsave),exp:&ref:exp:record_acc[exp:record_ptr[exp:ident(node_info),ident(pdg)],ident(lock)],exp:ident(flags)]],statem(N/H),estmt[exp:call[exp:ident(spin_unlock_irqrestore),exp:&ref:exp:record_acc[exp:record_ptr[exp:ident(node_info),ident(pdg)],ident(lock)],exp:ident(flags)]],estmt[exp:call[exp:ident(kfree),exp:ident(node_info)]],estmt[exp:assign[simple_assi(=),exp:record_acc[exp:record_ptr[exp:ident(ud),ident(device)],ident(driver_data)],exp:ident(NULL)]],st_return[exp:const:int(0)]]],def[fname(eth1394_update),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(ud),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp:assign[simple_assi(=),exp:ident(hi),exp:call[exp:ident(hpsb_get_hostinfo),exp:&ref:exp:ident(eth1394_highlevel),exp:record_ptr[exp:record_ptr[exp:ident(ud),ident(ne)],ident(host)]]]],sel_if[exp:??(N/H),st_return[exp:??(N/H)],estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:ident(priv),exp:call[exp:ident(netdev_priv),exp:record_ptr[exp:ident(hi),ident(dev)]]]],estmt[exp:assign[simple_assi(=),exp:ident(node),exp:call[exp:ident(eth1394_find_node),exp:&ref:exp:record_ptr[exp:ident(priv),ident(ip_node_list)],exp:ident(ud)]]],sel_if[exp:ident(node),st_return[exp:const:int(0)],estmt(NONE)],st_return[exp:call[exp:ident(eth1394_new_node),exp:ident(hi),exp:ident(ud)]]]],decl(N/H),mtop(N/H),decl(N/H),def[fname(ether1394_reset_priv),funtype[fulltype[ctype[btype(void)]],param[reg(),name(dev),fulltype[typec(N/H)]],param[reg(),name(set_mtu),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp:call[exp:ident(spin_lock_irqsave),exp:&ref:exp:record_ptr[exp:ident(priv),ident(lock)],exp:ident(flags)]],estmt[exp:call[exp:ident(memset),exp:record_ptr[exp:ident(priv),ident(ud_list)],exp:const:int(0),exp:sizeof:exp:record_ptr[exp:ident(priv),ident(ud_list)]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(priv),ident(bc_maxpayload)],exp:const:int(512)]],for[exp:assign[simple_assi(=),exp:ident(i),exp:const:int(0)],exp:binary_logi[logiop(??),exp:ident(i),exp:record_ptr[exp:ident(host),ident(node_count)]],exp:??(N/H),{}stmt[sel_if[exp:binary_logi[logiop(eq),exp:array_acc[exp:record_ptr[exp:ident(host),ident(speed)],exp:ident(i)],exp:ident(SELFID_SPEED_UNKNOWN)],{}stmt[estmt[exp:assign[simple_assi(=),exp:ident(max_speed),exp:ident(IEEE1394_SPEED_100)]],statem(N/H)],estmt(NONE)],sel_if[exp:binary_logi[logiop(??),exp:ident(max_speed),exp:array_acc[exp:record_ptr[exp:ident(host),ident(speed)],exp:ident(i)]],estmt[exp:assign[simple_assi(=),exp:ident(max_speed),exp:array_acc[exp:record_ptr[exp:ident(host),ident(speed)],exp:ident(i)]]],estmt(NONE)]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(priv),ident(bc_sspd)],exp:ident(max_speed)]],sel_if[exp:ident(set_mtu),{}stmt[estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(dev),ident(mtu)],exp:call[exp:ident(min),exp:const:int(1500),exp:call[exp:ident(ether1394_max_mtu),exp:ident(host)]]]],estmt[exp:call[exp:ident(memcpy),exp:record_ptr[exp:ident(dev),ident(dev_addr)],exp:&ref:exp:ident(guid),exp:sizeoftype:fulltype[typec(N/H)]]],estmt[exp:call[exp:ident(memset),exp:record_ptr[exp:ident(dev),ident(broadcast)],exp:const:int(0xff),exp:sizeoftype:fulltype[typec(N/H)]]]],estmt(NONE)],estmt[exp:call[exp:ident(spin_unlock_irqrestore),exp:&ref:exp:record_ptr[exp:ident(priv),ident(lock)],exp:ident(flags)]]]],decl(N/H),def[fname(ether1394_init_dev),funtype[fulltype[ctype[btype(void)]],param[reg(),name(dev),fulltype[typec(N/H)]]],{}stmt[estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(dev),ident(open)],exp:ident(ether1394_open)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(dev),ident(stop)],exp:ident(ether1394_stop)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(dev),ident(hard_start_xmit)],exp:ident(ether1394_tx)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(dev),ident(get_stats)],exp:ident(ether1394_stats)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(dev),ident(tx_timeout)],exp:ident(ether1394_tx_timeout)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(dev),ident(change_mtu)],exp:ident(ether1394_change_mtu)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(dev),ident(header_ops)],exp:&ref:exp:ident(ether1394_header_ops)]],estmt[exp:call[exp:ident(SET_ETHTOOL_OPS),exp:ident(dev),exp:&ref:exp:ident(ethtool_ops)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(dev),ident(watchdog_timeo)],exp:ident(ETHER1394_TIMEOUT)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(dev),ident(flags)],exp:binary_arith[aop(|),exp:ident(IFF_BROADCAST),exp:ident(IFF_MULTICAST)]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(dev),ident(features)],exp:ident(NETIF_F_HIGHDMA)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(dev),ident(addr_len)],exp:ident(ETH1394_ALEN)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(dev),ident(hard_header_len)],exp:ident(ETH1394_HLEN)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(dev),ident(type)],exp:ident(ARPHRD_IEEE1394)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(dev),ident(tx_queue_len)],exp:const:int(1000)]]]],def[fname(ether1394_wake_queue),funtype[fulltype[ctype[btype(void)]],param[reg(),name(work),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp:assign[simple_assi(=),exp:ident(priv),exp:call[exp:ident(container_of),exp:ident(work),argtype(N/H),exp:ident(wake)]]],estmt[exp:assign[simple_assi(=),exp:ident(packet),exp:call[exp:ident(hpsb_alloc_packet),exp:const:int(0)]]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(packet),ident(host)],exp:record_ptr[exp:ident(priv),ident(host)]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(packet),ident(node_id)],exp:record_ptr[exp:ident(priv),ident(wake_node)]]],sel_if[exp:binary_logi[logiop(eq),exp:call[exp:ident(hpsb_get_tlabel),exp:ident(packet)],exp:const:int(0)],estmt[exp:call[exp:ident(hpsb_free_tlabel),exp:ident(packet)]],estmt(NONE)],estmt[exp:call[exp:ident(hpsb_free_packet),exp:ident(packet)]],statem(N/H)]],def[fname(ether1394_add_host),funtype[fulltype[ctype[btype(void)]],param[reg(),name(host),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),sel_if[exp:binary_logi[logiop(??),exp:call[exp:ident(hpsb_config_rom_ip1394_add),exp:ident(host)],exp:const:int(0)],{}stmt[estmt[exp:call[exp:ident(ETH1394_PRINT_G),exp:ident(KERN_ERR),exp:const:string(Can't add IP-over-1394 ROM entry\n)]],statem(N/H)],estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:ident(fifo_addr),exp:call[exp:ident(hpsb_allocate_and_register_addrspace),exp:&ref:exp:ident(eth1394_highlevel),exp:ident(host),exp:&ref:exp:ident(addr_ops),exp:ident(ETHER1394_REGION_ADDR_LEN),exp:ident(ETHER1394_REGION_ADDR_LEN),exp:ident(CSR1212_INVALID_ADDR_SPACE),exp:ident(CSR1212_INVALID_ADDR_SPACE)]]],sel_if[exp:binary_logi[logiop(eq),exp:ident(fifo_addr),exp:ident(CSR1212_INVALID_ADDR_SPACE)],{}stmt[estmt[exp:call[exp:ident(ETH1394_PRINT_G),exp:ident(KERN_ERR),exp:const:string(Cannot register CSR space\n)]],estmt[exp:call[exp:ident(hpsb_config_rom_ip1394_remove),exp:ident(host)]],statem(N/H)],estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:ident(dev),exp:call[exp:ident(alloc_netdev),exp:sizeof:exp:*ref:exp:ident(priv),exp:const:string(eth%d),exp:ident(ether1394_init_dev)]]],sel_if[exp:binary_logi[logiop(eq),exp:ident(dev),exp:ident(NULL)],{}stmt[estmt[exp:call[exp:ident(ETH1394_PRINT_G),exp:ident(KERN_ERR),exp:const:string(Out of memory\n)]],statem(N/H)],estmt(NONE)],estmt[exp:call[exp:ident(SET_NETDEV_DEV),exp:ident(dev),exp:&ref:exp:record_ptr[exp:ident(host),ident(device)]]],estmt[exp:assign[simple_assi(=),exp:ident(priv),exp:call[exp:ident(netdev_priv),exp:ident(dev)]]],estmt[exp:call[exp:ident(INIT_LIST_HEAD),exp:&ref:exp:record_ptr[exp:ident(priv),ident(ip_node_list)]]],estmt[exp:call[exp:ident(spin_lock_init),exp:&ref:exp:record_ptr[exp:ident(priv),ident(lock)]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(priv),ident(host)],exp:ident(host)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(priv),ident(local_fifo)],exp:ident(fifo_addr)]],estmt[exp:call[exp:ident(INIT_WORK),exp:&ref:exp:record_ptr[exp:ident(priv),ident(wake)],exp:ident(ether1394_wake_queue)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(priv),ident(wake_dev)],exp:ident(dev)]],estmt[exp:assign[simple_assi(=),exp:ident(hi),exp:call[exp:ident(hpsb_create_hostinfo),exp:&ref:exp:ident(eth1394_highlevel),exp:ident(host),exp:sizeof:exp:*ref:exp:ident(hi)]]],sel_if[exp:binary_logi[logiop(eq),exp:ident(hi),exp:ident(NULL)],{}stmt[estmt[exp:call[exp:ident(ETH1394_PRINT_G),exp:ident(KERN_ERR),exp:const:string(Out of memory\n)]],statem(N/H)],estmt(NONE)],estmt[exp:call[exp:ident(ether1394_reset_priv),exp:ident(dev),exp:const:int(1)]],sel_if[exp:call[exp:ident(register_netdev),exp:ident(dev)],{}stmt[estmt[exp:call[exp:ident(ETH1394_PRINT_G),exp:ident(KERN_ERR),exp:const:string(Cannot register the driver\n)]],statem(N/H)],estmt(NONE)],estmt[exp:call[exp:ident(ETH1394_PRINT),exp:ident(KERN_INFO),exp:record_ptr[exp:ident(dev),ident(name)],exp:const:string(IPv4 over IEEE 1394 (fw-host%d)\n),exp:record_ptr[exp:ident(host),ident(id)]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(hi),ident(host)],exp:ident(host)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(hi),ident(dev)],exp:ident(dev)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(priv),ident(broadcast_channel)],exp:binary_arith[aop(&),exp:record_acc[exp:record_ptr[exp:ident(host),ident(csr)],ident(broadcast_channel)],exp:const:int(0x3f)]]],estmt[exp:call[exp:ident(ether1394_recv_init),exp:ident(priv)]],statem(N/H),statem(N/H),sel_if[exp:ident(hi),estmt[exp:call[exp:ident(hpsb_destroy_hostinfo),exp:&ref:exp:ident(eth1394_highlevel),exp:ident(host)]],estmt(NONE)],estmt[exp:call[exp:ident(hpsb_unregister_addrspace),exp:&ref:exp:ident(eth1394_highlevel),exp:ident(host),exp:ident(fifo_addr)]],estmt[exp:call[exp:ident(hpsb_config_rom_ip1394_remove),exp:ident(host)]]]],def[fname(ether1394_remove_host),funtype[fulltype[ctype[btype(void)]],param[reg(),name(host),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp:assign[simple_assi(=),exp:ident(hi),exp:call[exp:ident(hpsb_get_hostinfo),exp:&ref:exp:ident(eth1394_highlevel),exp:ident(host)]]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:ident(priv),exp:call[exp:ident(netdev_priv),exp:record_ptr[exp:ident(hi),ident(dev)]]]],estmt[exp:call[exp:ident(hpsb_unregister_addrspace),exp:&ref:exp:ident(eth1394_highlevel),exp:ident(host),exp:record_ptr[exp:ident(priv),ident(local_fifo)]]],estmt[exp:call[exp:ident(hpsb_config_rom_ip1394_remove),exp:ident(host)]],sel_if[exp:record_ptr[exp:ident(priv),ident(iso)],estmt[exp:call[exp:ident(hpsb_iso_shutdown),exp:record_ptr[exp:ident(priv),ident(iso)]]],estmt(NONE)],estmt[exp:call[exp:ident(unregister_netdev),exp:record_ptr[exp:ident(hi),ident(dev)]]],estmt[exp:call[exp:ident(free_netdev),exp:record_ptr[exp:ident(hi),ident(dev)]]]]],def[fname(ether1394_host_reset),funtype[fulltype[ctype[btype(void)]],param[reg(),name(host),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp:assign[simple_assi(=),exp:ident(hi),exp:call[exp:ident(hpsb_get_hostinfo),exp:&ref:exp:ident(eth1394_highlevel),exp:ident(host)]]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:ident(dev),exp:record_ptr[exp:ident(hi),ident(dev)]]],estmt[exp:assign[simple_assi(=),exp:ident(priv),exp:call[exp:ident(netdev_priv),exp:ident(dev)]]],estmt[exp:call[exp:ident(netif_stop_queue),exp:ident(dev)]],estmt[exp:call[exp:ident(ether1394_reset_priv),exp:ident(dev),exp:const:int(0)]],statem(N/H),estmt[exp:call[exp:ident(netif_wake_queue),exp:ident(dev)]]]],def[fname(ether1394_header),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(skb),fulltype[typec(N/H)]],param[reg(),name(dev),fulltype[typec(N/H)]],param[reg(),name(type),fulltype[ctype[btype[itype[sgn(unsigned),base(short)]]]]],param[reg(),name(daddr),fulltype[typec(N/H)]],param[reg(),name(saddr),fulltype[typec(N/H)]],param[reg(),name(len),fulltype[ctype[btype[itype[sgn(unsigned),base(int)]]]]]],{}stmt[statem(N/H),estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(eth),ident(h_proto)],exp:call[exp:ident(htons),exp:ident(type)]]],sel_if[exp:binary_arith[aop(&),exp:record_ptr[exp:ident(dev),ident(flags)],exp:binary_arith[aop(|),exp:ident(IFF_LOOPBACK),exp:ident(IFF_NOARP)]],{}stmt[estmt[exp:call[exp:ident(memset),exp:record_ptr[exp:ident(eth),ident(h_dest)],exp:const:int(0),exp:record_ptr[exp:ident(dev),ident(addr_len)]]],st_return[exp:record_ptr[exp:ident(dev),ident(hard_header_len)]]],estmt(NONE)],sel_if[exp:ident(daddr),{}stmt[estmt[exp:call[exp:ident(memcpy),exp:record_ptr[exp:ident(eth),ident(h_dest)],exp:ident(daddr),exp:record_ptr[exp:ident(dev),ident(addr_len)]]],st_return[exp:record_ptr[exp:ident(dev),ident(hard_header_len)]]],estmt(NONE)],st_return[exp:??(N/H)]]],def[fname(ether1394_rebuild_header),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(skb),fulltype[typec(N/H)]]],{}stmt[statem(N/H),sel_if[exp:binary_logi[logiop(eq),exp:record_ptr[exp:ident(eth),ident(h_proto)],exp:call[exp:ident(htons),exp:ident(ETH_P_IP)]],st_return[exp:call[exp:ident(arp_find),exp:??(N/H),exp:ident(skb)]],estmt(NONE)],estmt[exp:call[exp:ident(ETH1394_PRINT),exp:ident(KERN_DEBUG),exp:record_ptr[exp:record_ptr[exp:ident(skb),ident(dev)],ident(name)],exp:const:string(unable to resolve type %04x addresses\n),exp:call[exp:ident(ntohs),exp:record_ptr[exp:ident(eth),ident(h_proto)]]]],st_return[exp:const:int(0)]]],def[fname(ether1394_header_parse),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(skb),fulltype[typec(N/H)]],param[reg(),name(haddr),fulltype[typec(N/H)]]],{}stmt[estmt[exp:call[exp:ident(memcpy),exp:ident(haddr),exp:record_ptr[exp:record_ptr[exp:ident(skb),ident(dev)],ident(dev_addr)],exp:ident(ETH1394_ALEN)]],st_return[exp:ident(ETH1394_ALEN)]]],def[fname(ether1394_header_cache),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(neigh),fulltype[typec(N/H)]],param[reg(),name(hh),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),sel_if[exp:binary_logi[logiop(eq),exp:ident(type),exp:call[exp:ident(htons),exp:ident(ETH_P_802_3)]],st_return[exp:??(N/H)],estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(eth),ident(h_proto)],exp:ident(type)]],estmt[exp:call[exp:ident(memcpy),exp:record_ptr[exp:ident(eth),ident(h_dest)],exp:record_ptr[exp:ident(neigh),ident(ha)],exp:record_ptr[exp:ident(dev),ident(addr_len)]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(hh),ident(hh_len)],exp:ident(ETH1394_HLEN)]],st_return[exp:const:int(0)]]],def[fname(ether1394_header_cache_update),funtype[fulltype[ctype[btype(void)]],param[reg(),name(hh),fulltype[typec(N/H)]],param[reg(),name(dev),fulltype[typec(N/H)]],param[reg(),name(haddr),fulltype[typec(N/H)]]],{}stmt[estmt[exp:call[exp:ident(memcpy),exp:binary_arith[aop(-),exp:binary_arith[aop(+),exp:??(N/H),exp:const:int(16)],exp:ident(ETH1394_HLEN)],exp:ident(haddr),exp:record_ptr[exp:ident(dev),ident(addr_len)]]]]],def[fname(ether1394_type_trans),funtype[fulltype[typec(N/H)],param[reg(),name(skb),fulltype[typec(N/H)]],param[reg(),name(dev),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp:call[exp:ident(skb_reset_mac_header),exp:ident(skb)]],estmt[exp:call[exp:ident(skb_pull),exp:ident(skb),exp:ident(ETH1394_HLEN)]],estmt[exp:assign[simple_assi(=),exp:ident(eth),exp:call[exp:ident(eth1394_hdr),exp:ident(skb)]]],sel_if[exp:binary_arith[aop(&),exp:*ref:exp:record_ptr[exp:ident(eth),ident(h_dest)],exp:const:int(1)],{}stmt[sel_if[exp:binary_logi[logiop(eq),exp:call[exp:ident(memcmp),exp:record_ptr[exp:ident(eth),ident(h_dest)],exp:record_ptr[exp:ident(dev),ident(broadcast)],exp:record_ptr[exp:ident(dev),ident(addr_len)]],exp:const:int(0)],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(skb),ident(pkt_type)],exp:ident(PACKET_BROADCAST)]],estmt(NONE)]],{}stmt[sel_if[exp:call[exp:ident(memcmp),exp:record_ptr[exp:ident(eth),ident(h_dest)],exp:record_ptr[exp:ident(dev),ident(dev_addr)],exp:record_ptr[exp:ident(dev),ident(addr_len)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(skb),ident(pkt_type)],exp:ident(PACKET_OTHERHOST)]],estmt(NONE)]]],sel_if[exp:binary_logi[logiop(??),exp:call[exp:ident(ntohs),exp:record_ptr[exp:ident(eth),ident(h_proto)]],exp:const:int(1536)],st_return[exp:record_ptr[exp:ident(eth),ident(h_proto)]],estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:ident(rawp),exp:record_ptr[exp:ident(skb),ident(data)]]],sel_if[exp:binary_logi[logiop(eq),exp:*ref:exp:??(N/H),exp:const:int(0xFFFF)],st_return[exp:call[exp:ident(htons),exp:ident(ETH_P_802_3)]],estmt(NONE)],st_return[exp:call[exp:ident(htons),exp:ident(ETH_P_802_2)]]]],def[fname(ether1394_parse_encap),funtype[fulltype[typec(N/H)],param[reg(),name(skb),fulltype[typec(N/H)]],param[reg(),name(dev),fulltype[typec(N/H)]],param[reg(),name(srcid),fulltype[typec(N/H)]],param[reg(),name(destid),fulltype[typec(N/H)]],param[reg(),name(ether_type),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),sel_if[exp:binary_logi[logiop(eq),exp:ident(destid),exp:binary_arith[aop(|),exp:ident(LOCAL_BUS),exp:ident(ALL_NODES)]],estmt[exp:assign[simple_assi(=),exp:ident(dest_hw),exp:??(N/H)]],estmt[exp:assign[simple_assi(=),exp:ident(dest_hw),exp:call[exp:ident(cpu_to_be64),exp:binary_arith[aop(|),exp:binary_arith[aop(<<),exp:??(N/H),exp:const:int(32)],exp:record_acc[exp:record_ptr[exp:record_ptr[exp:ident(priv),ident(host)],ident(csr)],ident(guid_lo)]]]]]],sel_if[exp:binary_logi[logiop(eq),exp:ident(ether_type),exp:call[exp:ident(htons),exp:ident(ETH_P_ARP)]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),sel_if[exp:binary_logi[logiop(or),exp:binary_logi[logiop(??),exp:ident(sspd),exp:const:int(5)],exp:binary_logi[logiop(??),exp:ident(sspd),exp:const:int(0)]],estmt[exp:assign[simple_assi(=),exp:ident(sspd),exp:const:int(0)]],estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:ident(maxpayload),exp:call[exp:ident(min),exp:array_acc[exp:ident(eth1394_speedto_maxpayload),exp:ident(sspd)],exp:??(N/H)]]],estmt[exp:assign[simple_assi(=),exp:ident(guid),exp:call[exp:ident(get_unaligned),exp:&ref:exp:record_ptr[exp:ident(arp1394),ident(s_uniq_id)]]]],estmt[exp:assign[simple_assi(=),exp:ident(node),exp:call[exp:ident(eth1394_find_node_guid),exp:&ref:exp:record_ptr[exp:ident(priv),ident(ip_node_list)],exp:call[exp:ident(be64_to_cpu),exp:ident(guid)]]]],sel_if[exp:??(N/H),st_return[exp:const:int(0)],estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:ident(node_info),exp:??(N/H)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(node_info),ident(maxpayload)],exp:ident(maxpayload)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(node_info),ident(sspd)],exp:ident(sspd)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(node_info),ident(fifo)],exp:ident(fifo_addr)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(arp),ident(ar_hln)],exp:const:int(8)]],estmt[exp:assign[op_assi(+=),exp:ident(arp_ptr),exp:record_ptr[exp:ident(arp),ident(ar_hln)]]],estmt[exp:assign[simple_assi(=),exp:*ref:exp:??(N/H),exp:record_ptr[exp:ident(arp1394),ident(sip)]]],estmt[exp:assign[op_assi(+=),exp:ident(arp_ptr),exp:record_ptr[exp:ident(arp),ident(ar_pln)]]],sel_if[exp:binary_logi[logiop(eq),exp:record_ptr[exp:ident(arp),ident(ar_op)],exp:call[exp:ident(htons),exp:ident(ARPOP_REQUEST)]],estmt[exp:call[exp:ident(memset),exp:ident(arp_ptr),exp:const:int(0),exp:sizeoftype:fulltype[typec(N/H)]]],estmt[exp:call[exp:ident(memcpy),exp:ident(arp_ptr),exp:record_ptr[exp:ident(dev),ident(dev_addr)],exp:sizeoftype:fulltype[typec(N/H)]]]]],estmt(NONE)],sel_if[exp:binary_logi[logiop(??),exp:call[exp:ident(dev_hard_header),exp:ident(skb),exp:ident(dev),exp:call[exp:ident(ntohs),exp:ident(ether_type)],exp:&ref:exp:ident(dest_hw),exp:ident(NULL),exp:record_ptr[exp:ident(skb),ident(len)]],exp:const:int(0)],estmt[exp:assign[simple_assi(=),exp:ident(ret),exp:call[exp:ident(ether1394_type_trans),exp:ident(skb),exp:ident(dev)]]],estmt(NONE)],st_return[exp:ident(ret)]]],def[fname(fragment_overlap),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(frag_list),fulltype[typec(N/H)]],param[reg(),name(offset),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(len),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),st_return[exp:const:int(0)]]],def[fname(find_partial_datagram),funtype[fulltype[typec(N/H)],param[reg(),name(pdgl),fulltype[typec(N/H)]],param[reg(),name(dgl),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[statem(N/H),statem(N/H),st_return[exp:ident(NULL)]]],def[fname(new_fragment),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(frag_info),fulltype[typec(N/H)]],param[reg(),name(offset),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(len),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp:assign[simple_assi(=),exp:ident(new),exp:call[exp:ident(kmalloc),exp:sizeof:exp:*ref:exp:ident(new),exp:ident(GFP_ATOMIC)]]],sel_if[exp:??(N/H),st_return[exp:??(N/H)],estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(new),ident(offset)],exp:ident(offset)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(new),ident(len)],exp:ident(len)]],estmt[exp:call[exp:ident(list_add),exp:&ref:exp:record_ptr[exp:ident(new),ident(list)],exp:ident(lh)]],st_return[exp:const:int(0)]]],def[fname(new_partial_datagram),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(dev),fulltype[typec(N/H)]],param[reg(),name(pdgl),fulltype[typec(N/H)]],param[reg(),name(dgl),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(dg_size),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(frag_buf),fulltype[typec(N/H)]],param[reg(),name(frag_off),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(frag_len),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[statem(N/H),estmt[exp:assign[simple_assi(=),exp:ident(new),exp:call[exp:ident(kmalloc),exp:sizeof:exp:*ref:exp:ident(new),exp:ident(GFP_ATOMIC)]]],sel_if[exp:??(N/H),st_return[exp:??(N/H)],estmt(NONE)],estmt[exp:call[exp:ident(INIT_LIST_HEAD),exp:&ref:exp:record_ptr[exp:ident(new),ident(frag_info)]]],sel_if[exp:binary_logi[logiop(??),exp:call[exp:ident(new_fragment),exp:&ref:exp:record_ptr[exp:ident(new),ident(frag_info)],exp:ident(frag_off),exp:ident(frag_len)],exp:const:int(0)],{}stmt[estmt[exp:call[exp:ident(kfree),exp:ident(new)]],st_return[exp:??(N/H)]],estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(new),ident(dgl)],exp:ident(dgl)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(new),ident(dg_size)],exp:ident(dg_size)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(new),ident(skb)],exp:call[exp:ident(dev_alloc_skb),exp:binary_arith[aop(+),exp:binary_arith[aop(+),exp:ident(dg_size),exp:record_ptr[exp:ident(dev),ident(hard_header_len)]],exp:const:int(15)]]]],sel_if[exp:??(N/H),{}stmt[statem(N/H),estmt[exp:call[exp:ident(kfree),exp:ident(fi)]],estmt[exp:call[exp:ident(kfree),exp:ident(new)]],st_return[exp:??(N/H)]],estmt(NONE)],estmt[exp:call[exp:ident(skb_reserve),exp:record_ptr[exp:ident(new),ident(skb)],exp:binary_arith[aop(&),exp:binary_arith[aop(+),exp:record_ptr[exp:ident(dev),ident(hard_header_len)],exp:const:int(15)],exp:??(N/H)]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(new),ident(pbuf)],exp:call[exp:ident(skb_put),exp:record_ptr[exp:ident(new),ident(skb)],exp:ident(dg_size)]]],estmt[exp:call[exp:ident(memcpy),exp:binary_arith[aop(+),exp:record_ptr[exp:ident(new),ident(pbuf)],exp:ident(frag_off)],exp:ident(frag_buf),exp:ident(frag_len)]],estmt[exp:call[exp:ident(list_add),exp:&ref:exp:record_ptr[exp:ident(new),ident(list)],exp:ident(pdgl)]],st_return[exp:const:int(0)]]],def[fname(update_partial_datagram),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(pdgl),fulltype[typec(N/H)]],param[reg(),name(lh),fulltype[typec(N/H)]],param[reg(),name(frag_buf),fulltype[typec(N/H)]],param[reg(),name(frag_off),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(frag_len),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[statem(N/H),sel_if[exp:binary_logi[logiop(??),exp:call[exp:ident(new_fragment),exp:&ref:exp:record_ptr[exp:ident(pd),ident(frag_info)],exp:ident(frag_off),exp:ident(frag_len)],exp:const:int(0)],st_return[exp:??(N/H)],estmt(NONE)],estmt[exp:call[exp:ident(memcpy),exp:binary_arith[aop(+),exp:record_ptr[exp:ident(pd),ident(pbuf)],exp:ident(frag_off)],exp:ident(frag_buf),exp:ident(frag_len)]],estmt[exp:call[exp:ident(list_move),exp:ident(lh),exp:ident(pdgl)]],st_return[exp:const:int(0)]]],def[fname(is_datagram_complete),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(lh),fulltype[typec(N/H)]],param[reg(),name(dg_size),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[statem(N/H),statem(N/H),estmt[exp:assign[simple_assi(=),exp:ident(pd),exp:call[exp:ident(list_entry),exp:ident(lh),argtype(N/H),exp:ident(list)]]],estmt[exp:assign[simple_assi(=),exp:ident(fi),exp:call[exp:ident(list_entry),exp:record_acc[exp:record_ptr[exp:ident(pd),ident(frag_info)],ident(next)],argtype(N/H),exp:ident(list)]]],st_return[exp:binary_logi[logiop(eq),exp:record_ptr[exp:ident(fi),ident(len)],exp:ident(dg_size)]]]],def[fname(ether1394_data_handler),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(dev),fulltype[typec(N/H)]],param[reg(),name(srcid),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(destid),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(buf),fulltype[typec(N/H)]],param[reg(),name(len),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),sel_if[exp:??(N/H),{}stmt[statem(N/H),estmt[exp:assign[simple_assi(=),exp:ident(node),exp:call[exp:ident(eth1394_find_node_nodeid),exp:&ref:exp:record_ptr[exp:ident(priv),ident(ip_node_list)],exp:ident(srcid)]]],sel_if[exp:call[exp:ident(unlikely),exp:??(N/H)],{}stmt[estmt[exp:call[exp:ident(HPSB_PRINT),exp:ident(KERN_ERR),exp:const:other(N/H),exp:call[exp:ident(NODE_BUS_ARGS),exp:record_ptr[exp:ident(priv),ident(host)],exp:ident(srcid)]]],estmt[exp:??(N/H)],st_return[exp:??(N/H)]],estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:ident(ud),exp:record_ptr[exp:ident(node),ident(ud)]]],estmt[exp:assign[simple_assi(=),exp:array_acc[exp:record_ptr[exp:ident(priv),ident(ud_list)],exp:call[exp:ident(NODEID_TO_NODE),exp:ident(srcid)]],exp:ident(ud)]]],estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:ident(node_info),exp:??(N/H)]],estmt[exp:assign[simple_assi(=),exp:record_acc[exp:record_ptr[exp:ident(hdr),ident(words)],ident(word1)],exp:call[exp:ident(ntohs),exp:record_acc[exp:record_ptr[exp:ident(hdr),ident(words)],ident(word1)]]]],estmt[exp:assign[simple_assi(=),exp:ident(hdr_len),exp:array_acc[exp:ident(hdr_type_len),exp:record_acc[exp:record_ptr[exp:ident(hdr),ident(common)],ident(lf)]]]],sel_if[exp:binary_logi[logiop(eq),exp:record_acc[exp:record_ptr[exp:ident(hdr),ident(common)],ident(lf)],exp:ident(ETH1394_HDR_LF_UF)],{}stmt[estmt[exp:assign[simple_assi(=),exp:ident(skb),exp:call[exp:ident(dev_alloc_skb),exp:binary_arith[aop(+),exp:binary_arith[aop(+),exp:ident(len),exp:record_ptr[exp:ident(dev),ident(hard_header_len)]],exp:const:int(15)]]]],sel_if[exp:call[exp:ident(unlikely),exp:??(N/H)],{}stmt[estmt[exp:call[exp:ident(ETH1394_PRINT_G),exp:ident(KERN_ERR),exp:const:string(Out of memory\n)]],estmt[exp:??(N/H)],st_return[exp:??(N/H)]],estmt(NONE)],estmt[exp:call[exp:ident(skb_reserve),exp:ident(skb),exp:binary_arith[aop(&),exp:binary_arith[aop(+),exp:record_ptr[exp:ident(dev),ident(hard_header_len)],exp:const:int(15)],exp:??(N/H)]]],estmt[exp:call[exp:ident(memcpy),exp:call[exp:ident(skb_put),exp:ident(skb),exp:binary_arith[aop(-),exp:ident(len),exp:ident(hdr_len)]],exp:binary_arith[aop(+),exp:ident(buf),exp:ident(hdr_len)],exp:binary_arith[aop(-),exp:ident(len),exp:ident(hdr_len)]]],estmt[exp:assign[simple_assi(=),exp:ident(ether_type),exp:record_acc[exp:record_ptr[exp:ident(hdr),ident(uf)],ident(ether_type)]]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp:assign[simple_assi(=),exp:record_acc[exp:record_ptr[exp:ident(hdr),ident(words)],ident(word3)],exp:call[exp:ident(ntohs),exp:record_acc[exp:record_ptr[exp:ident(hdr),ident(words)],ident(word3)]]]],sel_if[exp:binary_logi[logiop(eq),exp:record_acc[exp:record_ptr[exp:ident(hdr),ident(common)],ident(lf)],exp:ident(ETH1394_HDR_LF_FF)],{}stmt[estmt[exp:assign[simple_assi(=),exp:ident(ether_type),exp:record_acc[exp:record_ptr[exp:ident(hdr),ident(ff)],ident(ether_type)]]],estmt[exp:assign[simple_assi(=),exp:ident(dgl),exp:record_acc[exp:record_ptr[exp:ident(hdr),ident(ff)],ident(dgl)]]],estmt[exp:assign[simple_assi(=),exp:ident(dg_size),exp:binary_arith[aop(+),exp:record_acc[exp:record_ptr[exp:ident(hdr),ident(ff)],ident(dg_size)],exp:const:int(1)]]],estmt[exp:assign[simple_assi(=),exp:ident(fg_off),exp:const:int(0)]]],{}stmt[estmt[exp:assign[simple_assi(=),exp:record_acc[exp:record_ptr[exp:ident(hdr),ident(words)],ident(word2)],exp:call[exp:ident(ntohs),exp:record_acc[exp:record_ptr[exp:ident(hdr),ident(words)],ident(word2)]]]],estmt[exp:assign[simple_assi(=),exp:ident(dgl),exp:record_acc[exp:record_ptr[exp:ident(hdr),ident(sf)],ident(dgl)]]],estmt[exp:assign[simple_assi(=),exp:ident(dg_size),exp:binary_arith[aop(+),exp:record_acc[exp:record_ptr[exp:ident(hdr),ident(sf)],ident(dg_size)],exp:const:int(1)]]],estmt[exp:assign[simple_assi(=),exp:ident(fg_off),exp:record_acc[exp:record_ptr[exp:ident(hdr),ident(sf)],ident(fg_off)]]]]],estmt[exp:call[exp:ident(spin_lock_irqsave),exp:&ref:exp:record_ptr[exp:ident(pdg),ident(lock)],exp:ident(flags)]],estmt[exp:assign[simple_assi(=),exp:ident(pdgl),exp:&ref:exp:record_ptr[exp:ident(pdg),ident(list)]]],estmt[exp:assign[simple_assi(=),exp:ident(lh),exp:call[exp:ident(find_partial_datagram),exp:ident(pdgl),exp:ident(dgl)]]],sel_if[exp:binary_logi[logiop(eq),exp:ident(lh),exp:ident(NULL)],{}stmt[while[exp:binary_logi[logiop(??),exp:record_ptr[exp:ident(pdg),ident(sz)],exp:ident(max_partial_datagrams)],{}stmt[estmt[exp:call[exp:ident(purge_partial_datagram),exp:record_ptr[exp:ident(pdgl),ident(prev)]]],estmt[exp:??(N/H)]]],estmt[exp:assign[simple_assi(=),exp:ident(retval),exp:call[exp:ident(new_partial_datagram),exp:ident(dev),exp:ident(pdgl),exp:ident(dgl),exp:ident(dg_size),exp:binary_arith[aop(+),exp:ident(buf),exp:ident(hdr_len)],exp:ident(fg_off),exp:ident(fg_len)]]],sel_if[exp:binary_logi[logiop(??),exp:ident(retval),exp:const:int(0)],{}stmt[estmt[exp:call[exp:ident(spin_unlock_irqrestore),exp:&ref:exp:record_ptr[exp:ident(pdg),ident(lock)],exp:ident(flags)]],statem(N/H)],estmt(NONE)],estmt[exp:??(N/H)],estmt[exp:assign[simple_assi(=),exp:ident(lh),exp:call[exp:ident(find_partial_datagram),exp:ident(pdgl),exp:ident(dgl)]]]],{}stmt[estmt[exp:assign[simple_assi(=),exp:ident(pd),exp:call[exp:ident(list_entry),exp:ident(lh),argtype(N/H),exp:ident(list)]]],sel_if[exp:call[exp:ident(fragment_overlap),exp:&ref:exp:record_ptr[exp:ident(pd),ident(frag_info)],exp:ident(fg_off),exp:ident(fg_len)],{}stmt[estmt[exp:call[exp:ident(purge_partial_datagram),exp:ident(lh)]],estmt[exp:assign[simple_assi(=),exp:ident(retval),exp:call[exp:ident(new_partial_datagram),exp:ident(dev),exp:ident(pdgl),exp:ident(dgl),exp:ident(dg_size),exp:binary_arith[aop(+),exp:ident(buf),exp:ident(hdr_len)],exp:ident(fg_off),exp:ident(fg_len)]]],sel_if[exp:binary_logi[logiop(??),exp:ident(retval),exp:const:int(0)],{}stmt[estmt[exp:??(N/H)],estmt[exp:call[exp:ident(spin_unlock_irqrestore),exp:&ref:exp:record_ptr[exp:ident(pdg),ident(lock)],exp:ident(flags)]],statem(N/H)],estmt(NONE)]],{}stmt[estmt[exp:assign[simple_assi(=),exp:ident(retval),exp:call[exp:ident(update_partial_datagram),exp:ident(pdgl),exp:ident(lh),exp:binary_arith[aop(+),exp:ident(buf),exp:ident(hdr_len)],exp:ident(fg_off),exp:ident(fg_len)]]],sel_if[exp:binary_logi[logiop(??),exp:ident(retval),exp:const:int(0)],{}stmt[estmt[exp:call[exp:ident(purge_partial_datagram),exp:ident(lh)]],estmt[exp:??(N/H)],estmt[exp:call[exp:ident(spin_unlock_irqrestore),exp:&ref:exp:record_ptr[exp:ident(pdg),ident(lock)],exp:ident(flags)]],statem(N/H)],estmt(NONE)]]]]],estmt[exp:assign[simple_assi(=),exp:ident(pd),exp:call[exp:ident(list_entry),exp:ident(lh),argtype(N/H),exp:ident(list)]]],sel_if[exp:binary_logi[logiop(eq),exp:record_acc[exp:record_ptr[exp:ident(hdr),ident(common)],ident(lf)],exp:ident(ETH1394_HDR_LF_FF)],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(pd),ident(ether_type)],exp:ident(ether_type)]],estmt(NONE)],sel_if[exp:call[exp:ident(is_datagram_complete),exp:ident(lh),exp:ident(dg_size)],{}stmt[estmt[exp:assign[simple_assi(=),exp:ident(ether_type),exp:record_ptr[exp:ident(pd),ident(ether_type)]]],estmt[exp:??(N/H)],estmt[exp:assign[simple_assi(=),exp:ident(skb),exp:call[exp:ident(skb_get),exp:record_ptr[exp:ident(pd),ident(skb)]]]],estmt[exp:call[exp:ident(purge_partial_datagram),exp:ident(lh)]],estmt[exp:call[exp:ident(spin_unlock_irqrestore),exp:&ref:exp:record_ptr[exp:ident(pdg),ident(lock)],exp:ident(flags)]]],{}stmt[estmt[exp:call[exp:ident(spin_unlock_irqrestore),exp:&ref:exp:record_ptr[exp:ident(pdg),ident(lock)],exp:ident(flags)]],st_return[exp:const:int(0)]]]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(skb),ident(dev)],exp:ident(dev)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(skb),ident(ip_summed)],exp:ident(CHECKSUM_UNNECESSARY)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(skb),ident(protocol)],exp:call[exp:ident(ether1394_parse_encap),exp:ident(skb),exp:ident(dev),exp:ident(srcid),exp:ident(destid),exp:ident(ether_type)]]],estmt[exp:call[exp:ident(spin_lock_irqsave),exp:&ref:exp:record_ptr[exp:ident(priv),ident(lock)],exp:ident(flags)]],sel_if[exp:??(N/H),{}stmt[estmt[exp:??(N/H)],estmt[exp:??(N/H)],estmt[exp:call[exp:ident(dev_kfree_skb_any),exp:ident(skb)]]],sel_if[exp:binary_logi[logiop(eq),exp:call[exp:ident(netif_rx),exp:ident(skb)],exp:ident(NET_RX_DROP)],{}stmt[estmt[exp:??(N/H)],estmt[exp:??(N/H)]],{}stmt[estmt[exp:??(N/H)],estmt[exp:assign[op_assi(+=),exp:record_acc[exp:record_ptr[exp:ident(priv),ident(stats)],ident(rx_bytes)],exp:record_ptr[exp:ident(skb),ident(len)]]]]]],estmt[exp:call[exp:ident(spin_unlock_irqrestore),exp:&ref:exp:record_ptr[exp:ident(priv),ident(lock)],exp:ident(flags)]],statem(N/H),estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(dev),ident(last_rx)],exp:ident(jiffies)]],st_return[exp:const:int(0)]]],def[fname(ether1394_write),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(host),fulltype[typec(N/H)]],param[reg(),name(srcid),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(destid),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(data),fulltype[typec(N/H)]],param[reg(),name(addr),fulltype[typec(N/H)]],param[reg(),name(len),fulltype[typec(N/H)]],param[reg(),name(flags),fulltype[typec(N/H)]]],{}stmt[statem(N/H),estmt[exp:assign[simple_assi(=),exp:ident(hi),exp:call[exp:ident(hpsb_get_hostinfo),exp:&ref:exp:ident(eth1394_highlevel),exp:ident(host)]]],sel_if[exp:call[exp:ident(unlikely),exp:??(N/H)],{}stmt[estmt[exp:call[exp:ident(ETH1394_PRINT_G),exp:ident(KERN_ERR),exp:const:string(No net device at fw-host%d\n),exp:record_ptr[exp:ident(host),ident(id)]]],st_return[exp:ident(RCODE_ADDRESS_ERROR)]],estmt(NONE)],sel_if[exp:call[exp:ident(ether1394_data_handler),exp:record_ptr[exp:ident(hi),ident(dev)],exp:ident(srcid),exp:ident(destid),exp:??(N/H),exp:ident(len)],st_return[exp:ident(RCODE_ADDRESS_ERROR)],st_return[exp:ident(RCODE_COMPLETE)]]]],def[fname(ether1394_iso),funtype[fulltype[ctype[btype(void)]],param[reg(),name(iso),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp:assign[simple_assi(=),exp:ident(hi),exp:call[exp:ident(hpsb_get_hostinfo),exp:&ref:exp:ident(eth1394_highlevel),exp:record_ptr[exp:ident(iso),ident(host)]]]],sel_if[exp:call[exp:ident(unlikely),exp:??(N/H)],{}stmt[estmt[exp:call[exp:ident(ETH1394_PRINT_G),exp:ident(KERN_ERR),exp:const:string(No net device at fw-host%d\n),exp:record_ptr[exp:record_ptr[exp:ident(iso),ident(host)],ident(id)]]],statem(N/H)],estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:ident(dev),exp:record_ptr[exp:ident(hi),ident(dev)]]],estmt[exp:assign[simple_assi(=),exp:ident(nready),exp:call[exp:ident(hpsb_iso_n_ready),exp:ident(iso)]]],for[exp:assign[simple_assi(=),exp:ident(i),exp:const:int(0)],exp:binary_logi[logiop(??),exp:ident(i),exp:ident(nready)],exp:??(N/H),{}stmt[statem(N/H),estmt[exp:assign[simple_assi(=),exp:ident(data),exp:??(N/H)]],estmt[exp:assign[simple_assi(=),exp:ident(buf),exp:binary_arith[aop(+),exp:??(N/H),exp:const:int(8)]]],estmt[exp:assign[simple_assi(=),exp:ident(len),exp:binary_arith[aop(-),exp:record_ptr[exp:ident(info),ident(len)],exp:const:int(8)]]],estmt[exp:assign[simple_assi(=),exp:ident(specifier_id),exp:binary_arith[aop(|),exp:binary_arith[aop(<<),exp:binary_arith[aop(&),exp:call[exp:ident(be32_to_cpu),exp:array_acc[exp:ident(data),exp:const:int(0)]],exp:const:int(0xffff)],exp:const:int(8)],exp:binary_arith[aop(>>),exp:binary_arith[aop(&),exp:call[exp:ident(be32_to_cpu),exp:array_acc[exp:ident(data),exp:const:int(1)]],exp:const:int(0xff000000)],exp:const:int(24)]]]],estmt[exp:assign[simple_assi(=),exp:ident(source_id),exp:binary_arith[aop(>>),exp:call[exp:ident(be32_to_cpu),exp:array_acc[exp:ident(data),exp:const:int(0)]],exp:const:int(16)]]],estmt[exp:assign[simple_assi(=),exp:ident(priv),exp:call[exp:ident(netdev_priv),exp:ident(dev)]]],sel_if[exp:binary_logi[logiop(or),exp:binary_logi[logiop(??),exp:record_ptr[exp:ident(info),ident(channel)],exp:binary_arith[aop(&),exp:record_acc[exp:record_ptr[exp:record_ptr[exp:ident(iso),ident(host)],ident(csr)],ident(broadcast_channel)],exp:const:int(0x3f)]],exp:binary_logi[logiop(??),exp:ident(specifier_id),exp:ident(ETHER1394_GASP_SPECIFIER_ID)]],{}stmt[statem(N/H)],estmt(NONE)],estmt[exp:call[exp:ident(ether1394_data_handler),exp:ident(dev),exp:ident(source_id),exp:binary_arith[aop(|),exp:ident(LOCAL_BUS),exp:ident(ALL_NODES)],exp:ident(buf),exp:ident(len)]]]],estmt[exp:call[exp:ident(hpsb_iso_recv_release_packets),exp:ident(iso),exp:ident(i)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(dev),ident(last_rx)],exp:ident(jiffies)]]]],def[fname(ether1394_arp_to_1394arp),funtype[fulltype[ctype[btype(void)]],param[reg(),name(skb),fulltype[typec(N/H)]],param[reg(),name(dev),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(arp1394),ident(hw_addr_len)],exp:const:int(16)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(arp1394),ident(sip)],exp:*ref:exp:??(N/H)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(arp1394),ident(max_rec)],exp:record_acc[exp:record_ptr[exp:record_ptr[exp:ident(priv),ident(host)],ident(csr)],ident(max_rec)]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(arp1394),ident(sspd)],exp:record_acc[exp:record_ptr[exp:record_ptr[exp:ident(priv),ident(host)],ident(csr)],ident(lnk_spd)]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(arp1394),ident(fifo_hi)],exp:call[exp:ident(htons),exp:binary_arith[aop(>>),exp:record_ptr[exp:ident(priv),ident(local_fifo)],exp:const:int(32)]]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(arp1394),ident(fifo_lo)],exp:call[exp:ident(htonl),exp:binary_arith[aop(&),exp:record_ptr[exp:ident(priv),ident(local_fifo)],exp:??(N/H)]]]]]],def[fname(ether1394_encapsulate_prep),funtype[fulltype[ctype[btype[itype[sgn(unsigned),base(int)]]]],param[reg(),name(max_payload),fulltype[ctype[btype[itype[sgn(unsigned),base(int)]]]]],param[reg(),name(proto),fulltype[typec(N/H)]],param[reg(),name(hdr),fulltype[typec(N/H)]],param[reg(),name(dg_size),fulltype[typec(N/H)]],param[reg(),name(dgl),fulltype[typec(N/H)]]],{}stmt[statem(N/H),sel_if[exp:binary_logi[logiop(??),exp:ident(dg_size),exp:ident(adj_max_payload)],{}stmt[estmt[exp:assign[simple_assi(=),exp:record_acc[exp:record_ptr[exp:ident(hdr),ident(uf)],ident(lf)],exp:ident(ETH1394_HDR_LF_UF)]],estmt[exp:assign[simple_assi(=),exp:record_acc[exp:record_ptr[exp:ident(hdr),ident(uf)],ident(ether_type)],exp:ident(proto)]]],{}stmt[estmt[exp:assign[simple_assi(=),exp:record_acc[exp:record_ptr[exp:ident(hdr),ident(ff)],ident(lf)],exp:ident(ETH1394_HDR_LF_FF)]],estmt[exp:assign[simple_assi(=),exp:record_acc[exp:record_ptr[exp:ident(hdr),ident(ff)],ident(ether_type)],exp:ident(proto)]],estmt[exp:assign[simple_assi(=),exp:record_acc[exp:record_ptr[exp:ident(hdr),ident(ff)],ident(dg_size)],exp:binary_arith[aop(-),exp:ident(dg_size),exp:const:int(1)]]],estmt[exp:assign[simple_assi(=),exp:record_acc[exp:record_ptr[exp:ident(hdr),ident(ff)],ident(dgl)],exp:ident(dgl)]],estmt[exp:assign[simple_assi(=),exp:ident(adj_max_payload),exp:binary_arith[aop(-),exp:ident(max_payload),exp:array_acc[exp:ident(hdr_type_len),exp:ident(ETH1394_HDR_LF_FF)]]]]]],st_return[exp:binary_arith[aop(/),exp:binary_arith[aop(-),exp:binary_arith[aop(+),exp:ident(dg_size),exp:ident(adj_max_payload)],exp:const:int(1)],exp:ident(adj_max_payload)]]]],def[fname(ether1394_encapsulate),funtype[fulltype[ctype[btype[itype[sgn(unsigned),base(int)]]]],param[reg(),name(skb),fulltype[typec(N/H)]],param[reg(),name(max_payload),fulltype[ctype[btype[itype[sgn(unsigned),base(int)]]]]],param[reg(),name(hdr),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),st_return[exp:call[exp:ident(min),exp:ident(max_payload),exp:record_ptr[exp:ident(skb),ident(len)]]]]],def[fname(ether1394_alloc_common_packet),funtype[fulltype[typec(N/H)],param[reg(),name(host),fulltype[typec(N/H)]]],{}stmt[statem(N/H),estmt[exp:assign[simple_assi(=),exp:ident(p),exp:call[exp:ident(hpsb_alloc_packet),exp:const:int(0)]]],sel_if[exp:ident(p),{}stmt[estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(p),ident(host)],exp:ident(host)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(p),ident(generation)],exp:call[exp:ident(get_hpsb_generation),exp:ident(host)]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(p),ident(type)],exp:ident(hpsb_async)]]],estmt(NONE)],st_return[exp:ident(p)]]],def[fname(ether1394_prep_write_packet),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(p),fulltype[typec(N/H)]],param[reg(),name(host),fulltype[typec(N/H)]],param[reg(),name(node),fulltype[typec(N/H)]],param[reg(),name(addr),fulltype[typec(N/H)]],param[reg(),name(data),fulltype[typec(N/H)]],param[reg(),name(tx_len),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(p),ident(node_id)],exp:ident(node)]],sel_if[exp:call[exp:ident(hpsb_get_tlabel),exp:ident(p)],st_return[exp:??(N/H)],estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(p),ident(tcode)],exp:ident(TCODE_WRITEB)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(p),ident(header_size)],exp:const:int(16)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(p),ident(expect_response)],exp:const:int(1)]],estmt[exp:assign[simple_assi(=),exp:array_acc[exp:record_ptr[exp:ident(p),ident(header)],exp:const:int(0)],exp:binary_arith[aop(|),exp:binary_arith[aop(|),exp:binary_arith[aop(|),exp:binary_arith[aop(<<),exp:record_ptr[exp:ident(p),ident(node_id)],exp:const:int(16)],exp:binary_arith[aop(<<),exp:record_ptr[exp:ident(p),ident(tlabel)],exp:const:int(10)]],exp:binary_arith[aop(<<),exp:const:int(1),exp:const:int(8)]],exp:binary_arith[aop(<<),exp:ident(TCODE_WRITEB),exp:const:int(4)]]]],estmt[exp:assign[simple_assi(=),exp:array_acc[exp:record_ptr[exp:ident(p),ident(header)],exp:const:int(1)],exp:binary_arith[aop(|),exp:binary_arith[aop(<<),exp:record_ptr[exp:ident(host),ident(node_id)],exp:const:int(16)],exp:binary_arith[aop(>>),exp:ident(addr),exp:const:int(32)]]]],estmt[exp:assign[simple_assi(=),exp:array_acc[exp:record_ptr[exp:ident(p),ident(header)],exp:const:int(2)],exp:binary_arith[aop(&),exp:ident(addr),exp:const:int(0xffffffff)]]],estmt[exp:assign[simple_assi(=),exp:array_acc[exp:record_ptr[exp:ident(p),ident(header)],exp:const:int(3)],exp:binary_arith[aop(<<),exp:ident(tx_len),exp:const:int(16)]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(p),ident(data_size)],exp:binary_arith[aop(&),exp:binary_arith[aop(+),exp:ident(tx_len),exp:const:int(3)],exp:??(N/H)]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(p),ident(data)],exp:ident(data)]],st_return[exp:const:int(0)]]],def[fname(ether1394_prep_gasp_packet),funtype[fulltype[ctype[btype(void)]],param[reg(),name(p),fulltype[typec(N/H)]],param[reg(),name(priv),fulltype[typec(N/H)]],param[reg(),name(skb),fulltype[typec(N/H)]],param[reg(),name(length),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(p),ident(header_size)],exp:const:int(4)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(p),ident(tcode)],exp:ident(TCODE_STREAM_DATA)]],estmt[exp:assign[simple_assi(=),exp:array_acc[exp:record_ptr[exp:ident(p),ident(header)],exp:const:int(0)],exp:binary_arith[aop(|),exp:binary_arith[aop(|),exp:binary_arith[aop(|),exp:binary_arith[aop(<<),exp:ident(length),exp:const:int(16)],exp:binary_arith[aop(<<),exp:const:int(3),exp:const:int(14)]],exp:binary_arith[aop(<<),exp:record_ptr[exp:ident(priv),ident(broadcast_channel)],exp:const:int(8)]],exp:binary_arith[aop(<<),exp:ident(TCODE_STREAM_DATA),exp:const:int(4)]]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(p),ident(data_size)],exp:ident(length)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(p),ident(data)],exp:binary_arith[aop(-),exp:??(N/H),exp:const:int(2)]]],estmt[exp:assign[simple_assi(=),exp:array_acc[exp:record_ptr[exp:ident(p),ident(data)],exp:const:int(0)],exp:call[exp:ident(cpu_to_be32),exp:binary_arith[aop(|),exp:binary_arith[aop(<<),exp:record_ptr[exp:record_ptr[exp:ident(priv),ident(host)],ident(node_id)],exp:const:int(16)],exp:ident(ETHER1394_GASP_SPECIFIER_ID_HI)]]]],estmt[exp:assign[simple_assi(=),exp:array_acc[exp:record_ptr[exp:ident(p),ident(data)],exp:const:int(1)],exp:call[exp:ident(cpu_to_be32),exp:binary_arith[aop(|),exp:binary_arith[aop(<<),exp:ident(ETHER1394_GASP_SPECIFIER_ID_LO),exp:const:int(24)],exp:ident(ETHER1394_GASP_VERSION)]]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(p),ident(speed_code)],exp:record_ptr[exp:ident(priv),ident(bc_sspd)]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(p),ident(node_id)],exp:binary_arith[aop(|),exp:ident(LOCAL_BUS),exp:ident(ALL_NODES)]]]]],def[fname(ether1394_free_packet),funtype[fulltype[ctype[btype(void)]],param[reg(),name(packet),fulltype[typec(N/H)]]],{}stmt[sel_if[exp:binary_logi[logiop(??),exp:record_ptr[exp:ident(packet),ident(tcode)],exp:ident(TCODE_STREAM_DATA)],estmt[exp:call[exp:ident(hpsb_free_tlabel),exp:ident(packet)]],estmt(NONE)],estmt[exp:call[exp:ident(hpsb_free_packet),exp:ident(packet)]]]],decl(N/H),def[fname(ether1394_send_packet),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(ptask),fulltype[typec(N/H)]],param[reg(),name(tx_len),fulltype[ctype[btype[itype[sgn(unsigned),base(int)]]]]]],{}stmt[statem(N/H),statem(N/H),estmt[exp:assign[simple_assi(=),exp:ident(packet),exp:call[exp:ident(ether1394_alloc_common_packet),exp:record_ptr[exp:ident(priv),ident(host)]]]],sel_if[exp:??(N/H),st_return[exp:??(N/H)],estmt(NONE)],sel_if[exp:binary_logi[logiop(eq),exp:record_ptr[exp:ident(ptask),ident(tx_type)],exp:ident(ETH1394_GASP)],{}stmt[statem(N/H),estmt[exp:call[exp:ident(ether1394_prep_gasp_packet),exp:ident(packet),exp:ident(priv),exp:record_ptr[exp:ident(ptask),ident(skb)],exp:ident(length)]]],sel_if[exp:call[exp:ident(ether1394_prep_write_packet),exp:ident(packet),exp:record_ptr[exp:ident(priv),ident(host)],exp:record_ptr[exp:ident(ptask),ident(dest_node)],exp:record_ptr[exp:ident(ptask),ident(addr)],exp:record_ptr[exp:record_ptr[exp:ident(ptask),ident(skb)],ident(data)],exp:ident(tx_len)],{}stmt[estmt[exp:call[exp:ident(hpsb_free_packet),exp:ident(packet)]],st_return[exp:??(N/H)]],estmt(NONE)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(ptask),ident(packet)],exp:ident(packet)]],estmt[exp:call[exp:ident(hpsb_set_packet_complete_task),exp:record_ptr[exp:ident(ptask),ident(packet)],exp:ident(ether1394_complete_cb),exp:ident(ptask)]],sel_if[exp:binary_logi[logiop(??),exp:call[exp:ident(hpsb_send_packet),exp:ident(packet)],exp:const:int(0)],{}stmt[estmt[exp:call[exp:ident(ether1394_free_packet),exp:ident(packet)]],st_return[exp:??(N/H)]],estmt(NONE)],st_return[exp:const:int(0)]]],def[fname(ether1394_dg_complete),funtype[fulltype[ctype[btype(void)]],param[reg(),name(ptask),fulltype[typec(N/H)]],param[reg(),name(fail),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp:call[exp:ident(spin_lock_irqsave),exp:&ref:exp:record_ptr[exp:ident(priv),ident(lock)],exp:ident(flags)]],sel_if[exp:ident(fail),{}stmt[estmt[exp:??(N/H)],estmt[exp:??(N/H)]],{}stmt[estmt[exp:assign[op_assi(+=),exp:record_acc[exp:record_ptr[exp:ident(priv),ident(stats)],ident(tx_bytes)],exp:record_ptr[exp:ident(skb),ident(len)]]],estmt[exp:??(N/H)]]],estmt[exp:call[exp:ident(spin_unlock_irqrestore),exp:&ref:exp:record_ptr[exp:ident(priv),ident(lock)],exp:ident(flags)]],estmt[exp:call[exp:ident(dev_kfree_skb_any),exp:ident(skb)]],estmt[exp:call[exp:ident(kmem_cache_free),exp:ident(packet_task_cache),exp:ident(ptask)]]]],def[fname(ether1394_complete_cb),funtype[fulltype[ctype[btype(void)]],param[reg(),name(__ptask),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),sel_if[exp:binary_logi[logiop(??),exp:record_ptr[exp:ident(packet),ident(tcode)],exp:ident(TCODE_STREAM_DATA)],estmt[exp:assign[simple_assi(=),exp:ident(fail),exp:call[exp:ident(hpsb_packet_success),exp:ident(packet)]]],estmt(NONE)],estmt[exp:call[exp:ident(ether1394_free_packet),exp:ident(packet)]],estmt[exp:??(N/H)],sel_if[exp:binary_logi[logiop(and),exp:binary_logi[logiop(??),exp:record_ptr[exp:ident(ptask),ident(outstanding_pkts)],exp:const:int(0)],exp:??(N/H)],{}stmt[statem(N/H),estmt[exp:assign[simple_assi(=),exp:ident(tx_len),exp:call[exp:ident(ether1394_encapsulate),exp:record_ptr[exp:ident(ptask),ident(skb)],exp:record_ptr[exp:ident(ptask),ident(max_payload)],exp:&ref:exp:record_ptr[exp:ident(ptask),ident(hdr)]]]],estmt[exp:assign[simple_assi(=),exp:ident(err),exp:call[exp:ident(ether1394_send_packet),exp:ident(ptask),exp:ident(tx_len)]]],sel_if[exp:ident(err),{}stmt[sel_if[exp:binary_logi[logiop(eq),exp:ident(err),exp:??(N/H)],estmt[exp:call[exp:ident(ETH1394_PRINT_G),exp:ident(KERN_ERR),exp:const:string(Out of tlabels\n)]],estmt(NONE)],estmt[exp:call[exp:ident(ether1394_dg_complete),exp:ident(ptask),exp:const:int(1)]]],estmt(NONE)]],{}stmt[estmt[exp:call[exp:ident(ether1394_dg_complete),exp:ident(ptask),exp:ident(fail)]]]]]],def[fname(ether1394_tx),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(skb),fulltype[typec(N/H)]],param[reg(),name(dev),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp:assign[simple_assi(=),exp:ident(ptask),exp:call[exp:ident(kmem_cache_alloc),exp:ident(packet_task_cache),exp:ident(GFP_ATOMIC)]]],sel_if[exp:binary_logi[logiop(eq),exp:ident(ptask),exp:ident(NULL)],statem(N/H),estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:ident(skb),exp:call[exp:ident(skb_share_check),exp:ident(skb),exp:ident(GFP_ATOMIC)]]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp:call[exp:ident(memcpy),exp:&ref:exp:ident(hdr_buf),exp:record_ptr[exp:ident(skb),ident(data)],exp:sizeof:exp:ident(hdr_buf)]],estmt[exp:call[exp:ident(skb_pull),exp:ident(skb),exp:ident(ETH1394_HLEN)]],estmt[exp:assign[simple_assi(=),exp:ident(proto),exp:record_acc[exp:ident(hdr_buf),ident(h_proto)]]],estmt[exp:assign[simple_assi(=),exp:ident(dg_size),exp:record_ptr[exp:ident(skb),ident(len)]]],sel_if[exp:binary_logi[logiop(or),exp:binary_logi[logiop(or),exp:binary_logi[logiop(eq),exp:call[exp:ident(memcmp),exp:record_acc[exp:ident(hdr_buf),ident(h_dest)],exp:record_ptr[exp:ident(dev),ident(broadcast)],exp:ident(ETH1394_ALEN)],exp:const:int(0)],exp:binary_logi[logiop(eq),exp:ident(proto),exp:call[exp:ident(htons),exp:ident(ETH_P_ARP)]]],exp:binary_logi[logiop(and),exp:binary_logi[logiop(eq),exp:ident(proto),exp:call[exp:ident(htons),exp:ident(ETH_P_IP)]],exp:call[exp:ident(IN_MULTICAST),exp:call[exp:ident(ntohl),exp:record_ptr[exp:call[exp:ident(ip_hdr),exp:ident(skb)],ident(daddr)]]]]],{}stmt[estmt[exp:assign[simple_assi(=),exp:ident(tx_type),exp:ident(ETH1394_GASP)]],estmt[exp:assign[simple_assi(=),exp:ident(dest_node),exp:binary_arith[aop(|),exp:ident(LOCAL_BUS),exp:ident(ALL_NODES)]]],estmt[exp:assign[simple_assi(=),exp:ident(max_payload),exp:binary_arith[aop(-),exp:record_ptr[exp:ident(priv),ident(bc_maxpayload)],exp:ident(ETHER1394_GASP_OVERHEAD)]]],estmt[exp:call[exp:ident(BUG_ON),exp:binary_logi[logiop(??),exp:ident(max_payload),exp:binary_arith[aop(-),exp:const:int(512),exp:ident(ETHER1394_GASP_OVERHEAD)]]]],estmt[exp:assign[simple_assi(=),exp:ident(dgl),exp:record_ptr[exp:ident(priv),ident(bc_dgl)]]],sel_if[exp:binary_logi[logiop(??),exp:ident(max_payload),exp:binary_arith[aop(+),exp:ident(dg_size),exp:array_acc[exp:ident(hdr_type_len),exp:ident(ETH1394_HDR_LF_UF)]]],estmt[exp:??(N/H)],estmt(NONE)]],{}stmt[statem(N/H),estmt[exp:assign[simple_assi(=),exp:ident(node),exp:call[exp:ident(eth1394_find_node_guid),exp:&ref:exp:record_ptr[exp:ident(priv),ident(ip_node_list)],exp:call[exp:ident(be64_to_cpu),exp:ident(guid)]]]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:ident(node_info),exp:??(N/H)]],sel_if[exp:binary_logi[logiop(eq),exp:record_ptr[exp:ident(node_info),ident(fifo)],exp:ident(CSR1212_INVALID_ADDR_SPACE)],statem(N/H),estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:ident(dest_node),exp:record_ptr[exp:record_ptr[exp:record_ptr[exp:ident(node),ident(ud)],ident(ne)],ident(nodeid)]]],estmt[exp:assign[simple_assi(=),exp:ident(max_payload),exp:record_ptr[exp:ident(node_info),ident(maxpayload)]]],estmt[exp:call[exp:ident(BUG_ON),exp:binary_logi[logiop(??),exp:ident(max_payload),exp:binary_arith[aop(-),exp:const:int(512),exp:ident(ETHER1394_GASP_OVERHEAD)]]]],estmt[exp:assign[simple_assi(=),exp:ident(dgl),exp:record_ptr[exp:ident(node_info),ident(dgl)]]],sel_if[exp:binary_logi[logiop(??),exp:ident(max_payload),exp:binary_arith[aop(+),exp:ident(dg_size),exp:array_acc[exp:ident(hdr_type_len),exp:ident(ETH1394_HDR_LF_UF)]]],estmt[exp:??(N/H)],estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:ident(tx_type),exp:ident(ETH1394_WRREQ)]]]],sel_if[exp:binary_logi[logiop(eq),exp:ident(proto),exp:call[exp:ident(htons),exp:ident(ETH_P_ARP)]],estmt[exp:call[exp:ident(ether1394_arp_to_1394arp),exp:ident(skb),exp:ident(dev)]],estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:record_acc[exp:record_acc[exp:record_ptr[exp:ident(ptask),ident(hdr)],ident(words)],ident(word1)],exp:const:int(0)]],estmt[exp:assign[simple_assi(=),exp:record_acc[exp:record_acc[exp:record_ptr[exp:ident(ptask),ident(hdr)],ident(words)],ident(word2)],exp:const:int(0)]],estmt[exp:assign[simple_assi(=),exp:record_acc[exp:record_acc[exp:record_ptr[exp:ident(ptask),ident(hdr)],ident(words)],ident(word3)],exp:const:int(0)]],estmt[exp:assign[simple_assi(=),exp:record_acc[exp:record_acc[exp:record_ptr[exp:ident(ptask),ident(hdr)],ident(words)],ident(word4)],exp:const:int(0)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(ptask),ident(skb)],exp:ident(skb)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(ptask),ident(priv)],exp:ident(priv)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(ptask),ident(tx_type)],exp:ident(tx_type)]],sel_if[exp:binary_logi[logiop(??),exp:ident(tx_type),exp:ident(ETH1394_GASP)],{}stmt[statem(N/H),estmt[exp:call[exp:ident(spin_lock_irqsave),exp:&ref:exp:record_ptr[exp:ident(priv),ident(lock)],exp:ident(flags)]],estmt[exp:assign[simple_assi(=),exp:ident(addr),exp:record_ptr[exp:ident(node_info),ident(fifo)]]],estmt[exp:call[exp:ident(spin_unlock_irqrestore),exp:&ref:exp:record_ptr[exp:ident(priv),ident(lock)],exp:ident(flags)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(ptask),ident(addr)],exp:ident(addr)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(ptask),ident(dest_node)],exp:ident(dest_node)]]],estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(ptask),ident(tx_type)],exp:ident(tx_type)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(ptask),ident(max_payload)],exp:ident(max_payload)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(ptask),ident(outstanding_pkts)],exp:call[exp:ident(ether1394_encapsulate_prep),exp:ident(max_payload),exp:ident(proto),exp:&ref:exp:record_ptr[exp:ident(ptask),ident(hdr)],exp:ident(dg_size),exp:ident(dgl)]]],estmt[exp:assign[simple_assi(=),exp:ident(tx_len),exp:call[exp:ident(ether1394_encapsulate),exp:ident(skb),exp:ident(max_payload),exp:&ref:exp:record_ptr[exp:ident(ptask),ident(hdr)]]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(dev),ident(trans_start)],exp:ident(jiffies)]],sel_if[exp:call[exp:ident(ether1394_send_packet),exp:ident(ptask),exp:ident(tx_len)],{}stmt[sel_if[exp:binary_logi[logiop(eq),exp:ident(dest_node),exp:binary_arith[aop(|),exp:ident(LOCAL_BUS),exp:ident(ALL_NODES)]],statem(N/H),estmt(NONE)],estmt[exp:call[exp:ident(skb_pull),exp:ident(skb),exp:const:int(4)]],estmt[exp:call[exp:ident(ether1394_header),exp:ident(skb),exp:ident(dev),exp:call[exp:ident(ntohs),exp:record_acc[exp:ident(hdr_buf),ident(h_proto)]],exp:record_acc[exp:ident(hdr_buf),ident(h_dest)],exp:ident(NULL),exp:const:int(0)]],estmt[exp:call[exp:ident(netif_stop_queue),exp:ident(dev)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(priv),ident(wake_node)],exp:ident(dest_node)]],estmt[exp:call[exp:ident(schedule_work),exp:&ref:exp:record_ptr[exp:ident(priv),ident(wake)]]],estmt[exp:call[exp:ident(kmem_cache_free),exp:ident(packet_task_cache),exp:ident(ptask)]],st_return[exp:ident(NETDEV_TX_BUSY)]],estmt(NONE)],st_return[exp:ident(NETDEV_TX_OK)],statem(N/H),sel_if[exp:binary_logi[logiop(??),exp:ident(skb),exp:ident(NULL)],estmt[exp:call[exp:ident(dev_kfree_skb),exp:ident(skb)]],estmt(NONE)],estmt[exp:call[exp:ident(spin_lock_irqsave),exp:&ref:exp:record_ptr[exp:ident(priv),ident(lock)],exp:ident(flags)]],estmt[exp:??(N/H)],estmt[exp:??(N/H)],estmt[exp:call[exp:ident(spin_unlock_irqrestore),exp:&ref:exp:record_ptr[exp:ident(priv),ident(lock)],exp:ident(flags)]],st_return[exp:ident(NETDEV_TX_OK)]]],def[fname(ether1394_get_drvinfo),funtype[fulltype[ctype[btype(void)]],param[reg(),name(dev),fulltype[typec(N/H)]],param[reg(),name(info),fulltype[typec(N/H)]]],{}stmt[estmt[exp:call[exp:ident(strcpy),exp:record_ptr[exp:ident(info),ident(driver)],exp:ident(driver_name)]],estmt[exp:call[exp:ident(strcpy),exp:record_ptr[exp:ident(info),ident(bus_info)],exp:const:string(ieee1394)]]]],decl(N/H),NCP(N/H),NCP(N/H),mtop(N/H),mtop(N/H)]
prg2[includeN[inc_elem(linux),inc_elem(module.h)],includeN[inc_elem(linux),inc_elem(kernel.h)],includeN[inc_elem(linux),inc_elem(version.h)],includeN[inc_elem(linux),inc_elem(pci.h)],includeN[inc_elem(linux),inc_elem(ioport.h)],includeN[inc_elem(linux),inc_elem(init.h)],includeN[inc_elem(linux),inc_elem(if.h)],includeN[inc_elem(linux),inc_elem(hdlc.h)],includeN[inc_elem(asm),inc_elem(io.h)],includeN[inc_elem(asm),inc_elem(uaccess.h)],includeL[inc_elem(farsync.h)],mtop(N/H),mtop(N/H),mtop(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),mtop(N/H),mtop(N/H),mtop(N/H),mtop(N/H),mtop(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),decl(N/H),decl(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),decl(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),decl(N/H),define(N/H),decl(N/H),NCP(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),decl(N/H),NCP(N/H),define(N/H),define(N/H),define(N/H),define(N/H),NCP(N/H),mtop(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),def[fname(fst_q_work_item),funtype[fulltype[ctype[btype(void)]],param[reg(),name(queue),fulltype[typec(N/H)]],param[reg(),name(card_index),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[statem(N/H),statem(N/H),estmt[exp:call[exp:ident(spin_lock_irqsave),exp:&ref:exp:ident(fst_work_q_lock),exp:ident(flags)]],estmt[exp:assign[simple_assi(=),exp:ident(mask),exp:binary_arith[aop(<<),exp:const:int(1),exp:ident(card_index)]]],estmt[exp:assign[op_assi(|=),exp:*ref:exp:ident(queue),exp:ident(mask)]],estmt[exp:call[exp:ident(spin_unlock_irqrestore),exp:&ref:exp:ident(fst_work_q_lock),exp:ident(flags)]]]],def[fname(fst_process_tx_work_q),funtype[fulltype[ctype[btype(void)]],param[reg(),name(work_q),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp:call[exp:ident(dbg),exp:ident(DBG_TX),exp:const:string(fst_process_tx_work_q\n)]],estmt[exp:call[exp:ident(spin_lock_irqsave),exp:&ref:exp:ident(fst_work_q_lock),exp:ident(flags)]],estmt[exp:assign[simple_assi(=),exp:ident(work_txq),exp:ident(fst_work_txq)]],estmt[exp:assign[simple_assi(=),exp:ident(fst_work_txq),exp:const:int(0)]],estmt[exp:call[exp:ident(spin_unlock_irqrestore),exp:&ref:exp:ident(fst_work_q_lock),exp:ident(flags)]],for[exp:assign[simple_assi(=),exp:ident(i),exp:const:int(0)],exp:binary_logi[logiop(??),exp:ident(i),exp:ident(FST_MAX_CARDS)],exp:??(N/H),{}stmt[sel_if[exp:binary_arith[aop(&),exp:ident(work_txq),exp:const:int(0x01)],{}stmt[sel_if[exp:binary_logi[logiop(??),exp:array_acc[exp:ident(fst_card_array),exp:ident(i)],exp:ident(NULL)],{}stmt[estmt[exp:call[exp:ident(dbg),exp:ident(DBG_TX),exp:const:string(Calling tx bh for card %d\n),exp:ident(i)]],estmt[exp:call[exp:ident(do_bottom_half_tx),exp:array_acc[exp:ident(fst_card_array),exp:ident(i)]]]],estmt(NONE)]],estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:ident(work_txq),exp:binary_arith[aop(>>),exp:ident(work_txq),exp:const:int(1)]]]]]]],def[fname(fst_process_int_work_q),funtype[fulltype[ctype[btype(void)]],param[reg(),name(work_q),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp:call[exp:ident(dbg),exp:ident(DBG_INTR),exp:const:string(fst_process_int_work_q\n)]],estmt[exp:call[exp:ident(spin_lock_irqsave),exp:&ref:exp:ident(fst_work_q_lock),exp:ident(flags)]],estmt[exp:assign[simple_assi(=),exp:ident(work_intq),exp:ident(fst_work_intq)]],estmt[exp:assign[simple_assi(=),exp:ident(fst_work_intq),exp:const:int(0)]],estmt[exp:call[exp:ident(spin_unlock_irqrestore),exp:&ref:exp:ident(fst_work_q_lock),exp:ident(flags)]],for[exp:assign[simple_assi(=),exp:ident(i),exp:const:int(0)],exp:binary_logi[logiop(??),exp:ident(i),exp:ident(FST_MAX_CARDS)],exp:??(N/H),{}stmt[sel_if[exp:binary_arith[aop(&),exp:ident(work_intq),exp:const:int(0x01)],{}stmt[sel_if[exp:binary_logi[logiop(??),exp:array_acc[exp:ident(fst_card_array),exp:ident(i)],exp:ident(NULL)],{}stmt[estmt[exp:call[exp:ident(dbg),exp:ident(DBG_INTR),exp:const:string(Calling rx & tx bh for card %d\n),exp:ident(i)]],estmt[exp:call[exp:ident(do_bottom_half_rx),exp:array_acc[exp:ident(fst_card_array),exp:ident(i)]]],estmt[exp:call[exp:ident(do_bottom_half_tx),exp:array_acc[exp:ident(fst_card_array),exp:ident(i)]]]],estmt(NONE)]],estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:ident(work_intq),exp:binary_arith[aop(>>),exp:ident(work_intq),exp:const:int(1)]]]]]]],def[fname(fst_cpureset),funtype[fulltype[ctype[btype(void)]],param[reg(),name(card),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),sel_if[exp:binary_logi[logiop(eq),exp:record_ptr[exp:ident(card),ident(family)],exp:ident(FST_FAMILY_TXU)],{}stmt[sel_if[exp:call[exp:ident(pci_read_config_byte),exp:record_ptr[exp:ident(card),ident(device)],exp:ident(PCI_INTERRUPT_LINE),exp:&ref:exp:ident(interrupt_line_register)],{}stmt[estmt[exp:call[exp:ident(dbg),exp:ident(DBG_ASS),exp:const:string(Error in reading interrupt line register\n)]]],estmt(NONE)],estmt[exp:call[exp:ident(outw),exp:const:int(0x440f),exp:binary_arith[aop(+),exp:binary_arith[aop(+),exp:record_ptr[exp:ident(card),ident(pci_conf)],exp:ident(CNTRL_9054)],exp:const:int(2)]]],estmt[exp:call[exp:ident(outw),exp:const:int(0x040f),exp:binary_arith[aop(+),exp:binary_arith[aop(+),exp:record_ptr[exp:ident(card),ident(pci_conf)],exp:ident(CNTRL_9054)],exp:const:int(2)]]],estmt[exp:assign[simple_assi(=),exp:ident(j),exp:binary_arith[aop(+),exp:ident(jiffies),exp:const:int(1)]]],while[exp:binary_logi[logiop(??),exp:ident(jiffies),exp:ident(j)],estmt(NONE)],estmt[exp:call[exp:ident(outw),exp:const:int(0x240f),exp:binary_arith[aop(+),exp:binary_arith[aop(+),exp:record_ptr[exp:ident(card),ident(pci_conf)],exp:ident(CNTRL_9054)],exp:const:int(2)]]],estmt[exp:assign[simple_assi(=),exp:ident(j),exp:binary_arith[aop(+),exp:ident(jiffies),exp:const:int(1)]]],while[exp:binary_logi[logiop(??),exp:ident(jiffies),exp:ident(j)],estmt(NONE)],estmt[exp:call[exp:ident(outw),exp:const:int(0x040f),exp:binary_arith[aop(+),exp:binary_arith[aop(+),exp:record_ptr[exp:ident(card),ident(pci_conf)],exp:ident(CNTRL_9054)],exp:const:int(2)]]],sel_if[exp:call[exp:ident(pci_write_config_byte),exp:record_ptr[exp:ident(card),ident(device)],exp:ident(PCI_INTERRUPT_LINE),exp:ident(interrupt_line_register)],{}stmt[estmt[exp:call[exp:ident(dbg),exp:ident(DBG_ASS),exp:const:string(Error in writing interrupt line register\n)]]],estmt(NONE)]],{}stmt[estmt[exp:assign[simple_assi(=),exp:ident(regval),exp:call[exp:ident(inl),exp:binary_arith[aop(+),exp:record_ptr[exp:ident(card),ident(pci_conf)],exp:ident(CNTRL_9052)]]]],estmt[exp:call[exp:ident(outl),exp:binary_arith[aop(|),exp:ident(regval),exp:const:int(0x40000000)],exp:binary_arith[aop(+),exp:record_ptr[exp:ident(card),ident(pci_conf)],exp:ident(CNTRL_9052)]]],estmt[exp:call[exp:ident(outl),exp:binary_arith[aop(&),exp:ident(regval),exp:??(N/H)],exp:binary_arith[aop(+),exp:record_ptr[exp:ident(card),ident(pci_conf)],exp:ident(CNTRL_9052)]]]]]]],def[fname(fst_cpurelease),funtype[fulltype[ctype[btype(void)]],param[reg(),name(card),fulltype[typec(N/H)]]],{}stmt[sel_if[exp:binary_logi[logiop(eq),exp:record_ptr[exp:ident(card),ident(family)],exp:ident(FST_FAMILY_TXU)],{}stmt[estmt[exp:??(N/H)],estmt[exp:call[exp:ident(outw),exp:const:int(0x040e),exp:binary_arith[aop(+),exp:binary_arith[aop(+),exp:record_ptr[exp:ident(card),ident(pci_conf)],exp:ident(CNTRL_9054)],exp:const:int(2)]]],estmt[exp:call[exp:ident(outw),exp:const:int(0x040f),exp:binary_arith[aop(+),exp:binary_arith[aop(+),exp:record_ptr[exp:ident(card),ident(pci_conf)],exp:ident(CNTRL_9054)],exp:const:int(2)]]]],{}stmt[estmt[exp:??(N/H)]]]]],def[fname(fst_clear_intr),funtype[fulltype[ctype[btype(void)]],param[reg(),name(card),fulltype[typec(N/H)]]],{}stmt[sel_if[exp:binary_logi[logiop(eq),exp:record_ptr[exp:ident(card),ident(family)],exp:ident(FST_FAMILY_TXU)],{}stmt[estmt[exp:??(N/H)]],{}stmt[estmt[exp:call[exp:ident(outw),exp:const:int(0x0543),exp:binary_arith[aop(+),exp:record_ptr[exp:ident(card),ident(pci_conf)],exp:ident(INTCSR_9052)]]]]]]],def[fname(fst_enable_intr),funtype[fulltype[ctype[btype(void)]],param[reg(),name(card),fulltype[typec(N/H)]]],{}stmt[sel_if[exp:binary_logi[logiop(eq),exp:record_ptr[exp:ident(card),ident(family)],exp:ident(FST_FAMILY_TXU)],{}stmt[estmt[exp:call[exp:ident(outl),exp:const:int(0x0f0c0900),exp:binary_arith[aop(+),exp:record_ptr[exp:ident(card),ident(pci_conf)],exp:ident(INTCSR_9054)]]]],{}stmt[estmt[exp:call[exp:ident(outw),exp:const:int(0x0543),exp:binary_arith[aop(+),exp:record_ptr[exp:ident(card),ident(pci_conf)],exp:ident(INTCSR_9052)]]]]]]],def[fname(fst_disable_intr),funtype[fulltype[ctype[btype(void)]],param[reg(),name(card),fulltype[typec(N/H)]]],{}stmt[sel_if[exp:binary_logi[logiop(eq),exp:record_ptr[exp:ident(card),ident(family)],exp:ident(FST_FAMILY_TXU)],{}stmt[estmt[exp:call[exp:ident(outl),exp:const:int(0x00000000),exp:binary_arith[aop(+),exp:record_ptr[exp:ident(card),ident(pci_conf)],exp:ident(INTCSR_9054)]]]],{}stmt[estmt[exp:call[exp:ident(outw),exp:const:int(0x0000),exp:binary_arith[aop(+),exp:record_ptr[exp:ident(card),ident(pci_conf)],exp:ident(INTCSR_9052)]]]]]]],def[fname(fst_process_rx_status),funtype[fulltype[ctype[btype(void)]],param[reg(),name(rx_status),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(name),fulltype[typec(N/H)]]],{}stmt[statem(N/H)]],def[fname(fst_init_dma),funtype[fulltype[ctype[btype(void)]],param[reg(),name(card),fulltype[typec(N/H)]]],{}stmt[sel_if[exp:binary_logi[logiop(eq),exp:record_ptr[exp:ident(card),ident(family)],exp:ident(FST_FAMILY_TXU)],{}stmt[estmt[exp:call[exp:ident(pci_set_master),exp:record_ptr[exp:ident(card),ident(device)]]],estmt[exp:call[exp:ident(outl),exp:const:int(0x00020441),exp:binary_arith[aop(+),exp:record_ptr[exp:ident(card),ident(pci_conf)],exp:ident(DMAMODE0)]]],estmt[exp:call[exp:ident(outl),exp:const:int(0x00020441),exp:binary_arith[aop(+),exp:record_ptr[exp:ident(card),ident(pci_conf)],exp:ident(DMAMODE1)]]],estmt[exp:call[exp:ident(outl),exp:const:int(0x0),exp:binary_arith[aop(+),exp:record_ptr[exp:ident(card),ident(pci_conf)],exp:ident(DMATHR)]]]],estmt(NONE)]]],def[fname(fst_tx_dma_complete),funtype[fulltype[ctype[btype(void)]],param[reg(),name(card),fulltype[typec(N/H)]],param[reg(),name(port),fulltype[typec(N/H)]],param[reg(),name(len),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(txpos),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[statem(N/H),statem(N/H),estmt[exp:call[exp:ident(dbg),exp:ident(DBG_TX),exp:const:string(fst_tx_dma_complete\n)]],estmt[exp:call[exp:ident(FST_WRB),exp:ident(card),exp:record_acc[exp:array_acc[exp:array_acc[exp:ident(txDescrRing),exp:record_ptr[exp:ident(port),ident(index)]],exp:ident(txpos)],ident(bits)],exp:binary_arith[aop(|),exp:binary_arith[aop(|),exp:ident(DMA_OWN),exp:ident(TX_STP)],exp:ident(TX_ENP)]]],estmt[exp:??(N/H)],estmt[exp:assign[op_assi(+=),exp:record_ptr[exp:ident(stats),ident(tx_bytes)],exp:ident(len)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(dev),ident(trans_start)],exp:ident(jiffies)]]]],def[fname(farsync_type_trans),funtype[fulltype[typec(N/H)],param[reg(),name(skb),fulltype[typec(N/H)]],param[reg(),name(dev),fulltype[typec(N/H)]]],{}stmt[estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(skb),ident(dev)],exp:ident(dev)]],estmt[exp:call[exp:ident(skb_reset_mac_header),exp:ident(skb)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(skb),ident(pkt_type)],exp:ident(PACKET_HOST)]],st_return[exp:call[exp:ident(htons),exp:ident(ETH_P_CUST)]]]],def[fname(fst_rx_dma_complete),funtype[fulltype[ctype[btype(void)]],param[reg(),name(card),fulltype[typec(N/H)]],param[reg(),name(port),fulltype[typec(N/H)]],param[reg(),name(len),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(skb),fulltype[typec(N/H)]],param[reg(),name(rxp),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp:call[exp:ident(dbg),exp:ident(DBG_TX),exp:const:string(fst_rx_dma_complete\n)]],estmt[exp:assign[simple_assi(=),exp:ident(pi),exp:record_ptr[exp:ident(port),ident(index)]]],estmt[exp:call[exp:ident(memcpy),exp:call[exp:ident(skb_put),exp:ident(skb),exp:ident(len)],exp:record_ptr[exp:ident(card),ident(rx_dma_handle_host)],exp:ident(len)]],estmt[exp:call[exp:ident(FST_WRB),exp:ident(card),exp:record_acc[exp:array_acc[exp:array_acc[exp:ident(rxDescrRing),exp:ident(pi)],exp:ident(rxp)],ident(bits)],exp:ident(DMA_OWN)]],estmt[exp:??(N/H)],estmt[exp:assign[op_assi(+=),exp:record_ptr[exp:ident(stats),ident(rx_bytes)],exp:ident(len)]],estmt[exp:call[exp:ident(dbg),exp:ident(DBG_RX),exp:const:string(Pushing the frame up the stack\n)]],sel_if[exp:binary_logi[logiop(eq),exp:record_ptr[exp:ident(port),ident(mode)],exp:ident(FST_RAW)],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(skb),ident(protocol)],exp:call[exp:ident(farsync_type_trans),exp:ident(skb),exp:ident(dev)]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(skb),ident(protocol)],exp:call[exp:ident(hdlc_type_trans),exp:ident(skb),exp:ident(dev)]]]],estmt[exp:assign[simple_assi(=),exp:ident(rx_status),exp:call[exp:ident(netif_rx),exp:ident(skb)]]],estmt[exp:call[exp:ident(fst_process_rx_status),exp:ident(rx_status),exp:record_ptr[exp:call[exp:ident(port_to_dev),exp:ident(port)],ident(name)]]],sel_if[exp:binary_logi[logiop(eq),exp:ident(rx_status),exp:ident(NET_RX_DROP)],estmt[exp:??(N/H)],estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(dev),ident(last_rx)],exp:ident(jiffies)]]]],def[fname(fst_rx_dma),funtype[fulltype[ctype[btype(void)]],param[reg(),name(card),fulltype[typec(N/H)]],param[reg(),name(skb),fulltype[typec(N/H)]],param[reg(),name(mem),fulltype[typec(N/H)]],param[reg(),name(len),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[estmt[exp:call[exp:ident(dbg),exp:ident(DBG_RX),exp:const:string(In fst_rx_dma %p %p %d\n),exp:ident(skb),exp:ident(mem),exp:ident(len)]],sel_if[exp:record_ptr[exp:ident(card),ident(dmarx_in_progress)],{}stmt[estmt[exp:call[exp:ident(dbg),exp:ident(DBG_ASS),exp:const:string(In fst_rx_dma while dma in progress\n)]]],estmt(NONE)],estmt[exp:call[exp:ident(outl),exp:??(N/H),exp:binary_arith[aop(+),exp:record_ptr[exp:ident(card),ident(pci_conf)],exp:ident(DMAPADR0)]]],estmt[exp:call[exp:ident(outl),exp:??(N/H),exp:binary_arith[aop(+),exp:record_ptr[exp:ident(card),ident(pci_conf)],exp:ident(DMALADR0)]]],estmt[exp:call[exp:ident(outl),exp:ident(len),exp:binary_arith[aop(+),exp:record_ptr[exp:ident(card),ident(pci_conf)],exp:ident(DMASIZ0)]]],estmt[exp:call[exp:ident(outl),exp:const:int(0x00000000c),exp:binary_arith[aop(+),exp:record_ptr[exp:ident(card),ident(pci_conf)],exp:ident(DMADPR0)]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(card),ident(dmarx_in_progress)],exp:const:int(1)]],estmt[exp:call[exp:ident(outb),exp:const:int(0x03),exp:binary_arith[aop(+),exp:record_ptr[exp:ident(card),ident(pci_conf)],exp:ident(DMACSR0)]]]]],def[fname(fst_tx_dma),funtype[fulltype[ctype[btype(void)]],param[reg(),name(card),fulltype[typec(N/H)]],param[reg(),name(skb),fulltype[typec(N/H)]],param[reg(),name(mem),fulltype[typec(N/H)]],param[reg(),name(len),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[estmt[exp:call[exp:ident(dbg),exp:ident(DBG_TX),exp:const:string(In fst_tx_dma %p %p %d\n),exp:ident(skb),exp:ident(mem),exp:ident(len)]],sel_if[exp:record_ptr[exp:ident(card),ident(dmatx_in_progress)],{}stmt[estmt[exp:call[exp:ident(dbg),exp:ident(DBG_ASS),exp:const:string(In fst_tx_dma while dma in progress\n)]]],estmt(NONE)],estmt[exp:call[exp:ident(outl),exp:??(N/H),exp:binary_arith[aop(+),exp:record_ptr[exp:ident(card),ident(pci_conf)],exp:ident(DMAPADR1)]]],estmt[exp:call[exp:ident(outl),exp:??(N/H),exp:binary_arith[aop(+),exp:record_ptr[exp:ident(card),ident(pci_conf)],exp:ident(DMALADR1)]]],estmt[exp:call[exp:ident(outl),exp:ident(len),exp:binary_arith[aop(+),exp:record_ptr[exp:ident(card),ident(pci_conf)],exp:ident(DMASIZ1)]]],estmt[exp:call[exp:ident(outl),exp:const:int(0x000000004),exp:binary_arith[aop(+),exp:record_ptr[exp:ident(card),ident(pci_conf)],exp:ident(DMADPR1)]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(card),ident(dmatx_in_progress)],exp:const:int(1)]],estmt[exp:call[exp:ident(outb),exp:const:int(0x03),exp:binary_arith[aop(+),exp:record_ptr[exp:ident(card),ident(pci_conf)],exp:ident(DMACSR1)]]]]],def[fname(fst_issue_cmd),funtype[fulltype[ctype[btype(void)]],param[reg(),name(port),fulltype[typec(N/H)]],param[reg(),name(cmd),fulltype[ctype[btype[itype[sgn(unsigned),base(short)]]]]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp:assign[simple_assi(=),exp:ident(card),exp:record_ptr[exp:ident(port),ident(card)]]],estmt[exp:call[exp:ident(spin_lock_irqsave),exp:&ref:exp:record_ptr[exp:ident(card),ident(card_lock)],exp:ident(flags)]],estmt[exp:assign[simple_assi(=),exp:ident(mbval),exp:call[exp:ident(FST_RDW),exp:ident(card),exp:array_acc[exp:array_acc[exp:ident(portMailbox),exp:record_ptr[exp:ident(port),ident(index)]],exp:const:int(0)]]]],estmt[exp:assign[simple_assi(=),exp:ident(safety),exp:const:int(0)]],while[exp:binary_logi[logiop(??),exp:ident(mbval),exp:ident(NAK)],{}stmt[estmt[exp:call[exp:ident(spin_unlock_irqrestore),exp:&ref:exp:record_ptr[exp:ident(card),ident(card_lock)],exp:ident(flags)]],estmt[exp:call[exp:ident(schedule_timeout_uninterruptible),exp:const:int(1)]],estmt[exp:call[exp:ident(spin_lock_irqsave),exp:&ref:exp:record_ptr[exp:ident(card),ident(card_lock)],exp:ident(flags)]],sel_if[exp:binary_logi[logiop(??),exp:??(N/H),exp:const:int(2000)],{}stmt[estmt[exp:call[exp:ident(printk_err),exp:const:string(Mailbox safety timeout\n)]],statem(N/H)],estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:ident(mbval),exp:call[exp:ident(FST_RDW),exp:ident(card),exp:array_acc[exp:array_acc[exp:ident(portMailbox),exp:record_ptr[exp:ident(port),ident(index)]],exp:const:int(0)]]]]]],sel_if[exp:binary_logi[logiop(??),exp:ident(safety),exp:const:int(0)],{}stmt[estmt[exp:call[exp:ident(dbg),exp:ident(DBG_CMD),exp:const:string(Mailbox clear after %d jiffies\n),exp:ident(safety)]]],estmt(NONE)],sel_if[exp:binary_logi[logiop(eq),exp:ident(mbval),exp:ident(NAK)],{}stmt[estmt[exp:call[exp:ident(dbg),exp:ident(DBG_CMD),exp:const:string(issue_cmd: previous command was NAK'd\n)]]],estmt(NONE)],estmt[exp:call[exp:ident(FST_WRW),exp:ident(card),exp:array_acc[exp:array_acc[exp:ident(portMailbox),exp:record_ptr[exp:ident(port),ident(index)]],exp:const:int(0)],exp:ident(cmd)]],sel_if[exp:binary_logi[logiop(or),exp:binary_logi[logiop(eq),exp:ident(cmd),exp:ident(ABORTTX)],exp:binary_logi[logiop(eq),exp:ident(cmd),exp:ident(STARTPORT)]],{}stmt[estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(port),ident(txpos)],exp:const:int(0)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(port),ident(txipos)],exp:const:int(0)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(port),ident(start)],exp:const:int(0)]]],estmt(NONE)],estmt[exp:call[exp:ident(spin_unlock_irqrestore),exp:&ref:exp:record_ptr[exp:ident(card),ident(card_lock)],exp:ident(flags)]]]],def[fname(fst_op_raise),funtype[fulltype[ctype[btype(void)]],param[reg(),name(port),fulltype[typec(N/H)]],param[reg(),name(outputs),fulltype[ctype[btype[itype[sgn(unsigned),base(int)]]]]]],{}stmt[estmt[exp:assign[op_assi(|=),exp:ident(outputs),exp:call[exp:ident(FST_RDL),exp:record_ptr[exp:ident(port),ident(card)],exp:array_acc[exp:ident(v24OpSts),exp:record_ptr[exp:ident(port),ident(index)]]]]],estmt[exp:call[exp:ident(FST_WRL),exp:record_ptr[exp:ident(port),ident(card)],exp:array_acc[exp:ident(v24OpSts),exp:record_ptr[exp:ident(port),ident(index)]],exp:ident(outputs)]],sel_if[exp:record_ptr[exp:ident(port),ident(run)],estmt[exp:call[exp:ident(fst_issue_cmd),exp:ident(port),exp:ident(SETV24O)]],estmt(NONE)]]],def[fname(fst_op_lower),funtype[fulltype[ctype[btype(void)]],param[reg(),name(port),fulltype[typec(N/H)]],param[reg(),name(outputs),fulltype[ctype[btype[itype[sgn(unsigned),base(int)]]]]]],{}stmt[estmt[exp:assign[simple_assi(=),exp:ident(outputs),exp:binary_arith[aop(&),exp:??(N/H),exp:call[exp:ident(FST_RDL),exp:record_ptr[exp:ident(port),ident(card)],exp:array_acc[exp:ident(v24OpSts),exp:record_ptr[exp:ident(port),ident(index)]]]]]],estmt[exp:call[exp:ident(FST_WRL),exp:record_ptr[exp:ident(port),ident(card)],exp:array_acc[exp:ident(v24OpSts),exp:record_ptr[exp:ident(port),ident(index)]],exp:ident(outputs)]],sel_if[exp:record_ptr[exp:ident(port),ident(run)],estmt[exp:call[exp:ident(fst_issue_cmd),exp:ident(port),exp:ident(SETV24O)]],estmt(NONE)]]],def[fname(fst_rx_config),funtype[fulltype[ctype[btype(void)]],param[reg(),name(port),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp:assign[simple_assi(=),exp:ident(pi),exp:record_ptr[exp:ident(port),ident(index)]]],estmt[exp:assign[simple_assi(=),exp:ident(card),exp:record_ptr[exp:ident(port),ident(card)]]],estmt[exp:call[exp:ident(spin_lock_irqsave),exp:&ref:exp:record_ptr[exp:ident(card),ident(card_lock)],exp:ident(flags)]],for[exp:assign[simple_assi(=),exp:ident(i),exp:const:int(0)],exp:binary_logi[logiop(??),exp:ident(i),exp:ident(NUM_RX_BUFFER)],exp:??(N/H),{}stmt[estmt[exp:assign[simple_assi(=),exp:ident(offset),exp:call[exp:ident(BUF_OFFSET),exp:array_acc[exp:array_acc[exp:array_acc[exp:ident(rxBuffer),exp:ident(pi)],exp:ident(i)],exp:const:int(0)]]]],estmt[exp:call[exp:ident(FST_WRW),exp:ident(card),exp:record_acc[exp:array_acc[exp:array_acc[exp:ident(rxDescrRing),exp:ident(pi)],exp:ident(i)],ident(ladr)],exp:??(N/H)]],estmt[exp:call[exp:ident(FST_WRB),exp:ident(card),exp:record_acc[exp:array_acc[exp:array_acc[exp:ident(rxDescrRing),exp:ident(pi)],exp:ident(i)],ident(hadr)],exp:??(N/H)]],estmt[exp:call[exp:ident(FST_WRW),exp:ident(card),exp:record_acc[exp:array_acc[exp:array_acc[exp:ident(rxDescrRing),exp:ident(pi)],exp:ident(i)],ident(bcnt)],exp:call[exp:ident(cnv_bcnt),exp:ident(LEN_RX_BUFFER)]]],estmt[exp:call[exp:ident(FST_WRW),exp:ident(card),exp:record_acc[exp:array_acc[exp:array_acc[exp:ident(rxDescrRing),exp:ident(pi)],exp:ident(i)],ident(mcnt)],exp:ident(LEN_RX_BUFFER)]],estmt[exp:call[exp:ident(FST_WRB),exp:ident(card),exp:record_acc[exp:array_acc[exp:array_acc[exp:ident(rxDescrRing),exp:ident(pi)],exp:ident(i)],ident(bits)],exp:ident(DMA_OWN)]]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(port),ident(rxpos)],exp:const:int(0)]],estmt[exp:call[exp:ident(spin_unlock_irqrestore),exp:&ref:exp:record_ptr[exp:ident(card),ident(card_lock)],exp:ident(flags)]]]],def[fname(fst_tx_config),funtype[fulltype[ctype[btype(void)]],param[reg(),name(port),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp:assign[simple_assi(=),exp:ident(pi),exp:record_ptr[exp:ident(port),ident(index)]]],estmt[exp:assign[simple_assi(=),exp:ident(card),exp:record_ptr[exp:ident(port),ident(card)]]],estmt[exp:call[exp:ident(spin_lock_irqsave),exp:&ref:exp:record_ptr[exp:ident(card),ident(card_lock)],exp:ident(flags)]],for[exp:assign[simple_assi(=),exp:ident(i),exp:const:int(0)],exp:binary_logi[logiop(??),exp:ident(i),exp:ident(NUM_TX_BUFFER)],exp:??(N/H),{}stmt[estmt[exp:assign[simple_assi(=),exp:ident(offset),exp:call[exp:ident(BUF_OFFSET),exp:array_acc[exp:array_acc[exp:array_acc[exp:ident(txBuffer),exp:ident(pi)],exp:ident(i)],exp:const:int(0)]]]],estmt[exp:call[exp:ident(FST_WRW),exp:ident(card),exp:record_acc[exp:array_acc[exp:array_acc[exp:ident(txDescrRing),exp:ident(pi)],exp:ident(i)],ident(ladr)],exp:??(N/H)]],estmt[exp:call[exp:ident(FST_WRB),exp:ident(card),exp:record_acc[exp:array_acc[exp:array_acc[exp:ident(txDescrRing),exp:ident(pi)],exp:ident(i)],ident(hadr)],exp:??(N/H)]],estmt[exp:call[exp:ident(FST_WRW),exp:ident(card),exp:record_acc[exp:array_acc[exp:array_acc[exp:ident(txDescrRing),exp:ident(pi)],exp:ident(i)],ident(bcnt)],exp:const:int(0)]],estmt[exp:call[exp:ident(FST_WRB),exp:ident(card),exp:record_acc[exp:array_acc[exp:array_acc[exp:ident(txDescrRing),exp:ident(pi)],exp:ident(i)],ident(bits)],exp:const:int(0)]]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(port),ident(txpos)],exp:const:int(0)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(port),ident(txipos)],exp:const:int(0)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(port),ident(start)],exp:const:int(0)]],estmt[exp:call[exp:ident(spin_unlock_irqrestore),exp:&ref:exp:record_ptr[exp:ident(card),ident(card_lock)],exp:ident(flags)]]]],def[fname(fst_intr_te1_alarm),funtype[fulltype[ctype[btype(void)]],param[reg(),name(card),fulltype[typec(N/H)]],param[reg(),name(port),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp:assign[simple_assi(=),exp:ident(los),exp:call[exp:ident(FST_RDB),exp:ident(card),exp:record_acc[exp:ident(suStatus),ident(lossOfSignal)]]]],estmt[exp:assign[simple_assi(=),exp:ident(rra),exp:call[exp:ident(FST_RDB),exp:ident(card),exp:record_acc[exp:ident(suStatus),ident(receiveRemoteAlarm)]]]],estmt[exp:assign[simple_assi(=),exp:ident(ais),exp:call[exp:ident(FST_RDB),exp:ident(card),exp:record_acc[exp:ident(suStatus),ident(alarmIndicationSignal)]]]],sel_if[exp:ident(los),{}stmt[sel_if[exp:call[exp:ident(netif_carrier_ok),exp:call[exp:ident(port_to_dev),exp:ident(port)]],{}stmt[estmt[exp:call[exp:ident(dbg),exp:ident(DBG_INTR),exp:const:string(Net carrier off\n)]],estmt[exp:call[exp:ident(netif_carrier_off),exp:call[exp:ident(port_to_dev),exp:ident(port)]]]],estmt(NONE)]],{}stmt[sel_if[exp:??(N/H),{}stmt[estmt[exp:call[exp:ident(dbg),exp:ident(DBG_INTR),exp:const:string(Net carrier on\n)]],estmt[exp:call[exp:ident(netif_carrier_on),exp:call[exp:ident(port_to_dev),exp:ident(port)]]]],estmt(NONE)]]],sel_if[exp:ident(los),estmt[exp:call[exp:ident(dbg),exp:ident(DBG_INTR),exp:const:string(Assert LOS Alarm\n)]],estmt[exp:call[exp:ident(dbg),exp:ident(DBG_INTR),exp:const:string(De-assert LOS Alarm\n)]]],sel_if[exp:ident(rra),estmt[exp:call[exp:ident(dbg),exp:ident(DBG_INTR),exp:const:string(Assert RRA Alarm\n)]],estmt[exp:call[exp:ident(dbg),exp:ident(DBG_INTR),exp:const:string(De-assert RRA Alarm\n)]]],sel_if[exp:ident(ais),estmt[exp:call[exp:ident(dbg),exp:ident(DBG_INTR),exp:const:string(Assert AIS Alarm\n)]],estmt[exp:call[exp:ident(dbg),exp:ident(DBG_INTR),exp:const:string(De-assert AIS Alarm\n)]]]]],def[fname(fst_intr_ctlchg),funtype[fulltype[ctype[btype(void)]],param[reg(),name(card),fulltype[typec(N/H)]],param[reg(),name(port),fulltype[typec(N/H)]]],{}stmt[statem(N/H),estmt[exp:assign[simple_assi(=),exp:ident(signals),exp:call[exp:ident(FST_RDL),exp:ident(card),exp:array_acc[exp:ident(v24DebouncedSts),exp:record_ptr[exp:ident(port),ident(index)]]]]],sel_if[exp:binary_arith[aop(&),exp:ident(signals),exp:cond3[exp:binary_logi[logiop(or),exp:binary_logi[logiop(eq),exp:record_ptr[exp:ident(port),ident(hwif)],exp:ident(X21)],exp:binary_logi[logiop(eq),exp:record_ptr[exp:ident(port),ident(hwif)],exp:ident(X21D)]],exp:ident(IPSTS_INDICATE),exp:ident(IPSTS_DCD)]],{}stmt[sel_if[exp:??(N/H),{}stmt[estmt[exp:call[exp:ident(dbg),exp:ident(DBG_INTR),exp:const:string(DCD active\n)]],estmt[exp:call[exp:ident(netif_carrier_on),exp:call[exp:ident(port_to_dev),exp:ident(port)]]]],estmt(NONE)]],{}stmt[sel_if[exp:call[exp:ident(netif_carrier_ok),exp:call[exp:ident(port_to_dev),exp:ident(port)]],{}stmt[estmt[exp:call[exp:ident(dbg),exp:ident(DBG_INTR),exp:const:string(DCD lost\n)]],estmt[exp:call[exp:ident(netif_carrier_off),exp:call[exp:ident(port_to_dev),exp:ident(port)]]]],estmt(NONE)]]]]],def[fname(fst_log_rx_error),funtype[fulltype[ctype[btype(void)]],param[reg(),name(card),fulltype[typec(N/H)]],param[reg(),name(port),fulltype[typec(N/H)]],param[reg(),name(dmabits),fulltype[ctype[btype[itype[sgn(unsigned),base(char2)]]]]],param[reg(),name(rxp),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(len),fulltype[ctype[btype[itype[sgn(unsigned),base(short)]]]]]],{}stmt[statem(N/H),statem(N/H),estmt[exp:??(N/H)],sel_if[exp:binary_arith[aop(&),exp:ident(dmabits),exp:ident(RX_OFLO)],{}stmt[estmt[exp:??(N/H)],estmt[exp:call[exp:ident(dbg),exp:ident(DBG_ASS),exp:const:string(Rx fifo error on card %d port %d buffer %d\n),exp:record_ptr[exp:ident(card),ident(card_no)],exp:record_ptr[exp:ident(port),ident(index)],exp:ident(rxp)]]],estmt(NONE)],sel_if[exp:binary_arith[aop(&),exp:ident(dmabits),exp:ident(RX_CRC)],{}stmt[estmt[exp:??(N/H)],estmt[exp:call[exp:ident(dbg),exp:ident(DBG_ASS),exp:const:string(Rx crc error on card %d port %d\n),exp:record_ptr[exp:ident(card),ident(card_no)],exp:record_ptr[exp:ident(port),ident(index)]]]],estmt(NONE)],sel_if[exp:binary_arith[aop(&),exp:ident(dmabits),exp:ident(RX_FRAM)],{}stmt[estmt[exp:??(N/H)],estmt[exp:call[exp:ident(dbg),exp:ident(DBG_ASS),exp:const:string(Rx frame error on card %d port %d\n),exp:record_ptr[exp:ident(card),ident(card_no)],exp:record_ptr[exp:ident(port),ident(index)]]]],estmt(NONE)],sel_if[exp:binary_logi[logiop(eq),exp:ident(dmabits),exp:binary_arith[aop(|),exp:ident(RX_STP),exp:ident(RX_ENP)]],{}stmt[estmt[exp:??(N/H)],estmt[exp:call[exp:ident(dbg),exp:ident(DBG_ASS),exp:const:string(Rx length error (%d) on card %d port %d\n),exp:ident(len),exp:record_ptr[exp:ident(card),ident(card_no)],exp:record_ptr[exp:ident(port),ident(index)]]]],estmt(NONE)]]],def[fname(fst_recover_rx_error),funtype[fulltype[ctype[btype(void)]],param[reg(),name(card),fulltype[typec(N/H)]],param[reg(),name(port),fulltype[typec(N/H)]],param[reg(),name(dmabits),fulltype[ctype[btype[itype[sgn(unsigned),base(char2)]]]]],param[reg(),name(rxp),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(len),fulltype[ctype[btype[itype[sgn(unsigned),base(short)]]]]]],{}stmt[statem(N/H),statem(N/H),estmt[exp:assign[simple_assi(=),exp:ident(pi),exp:record_ptr[exp:ident(port),ident(index)]]],estmt[exp:assign[simple_assi(=),exp:ident(i),exp:const:int(0)]],while[exp:binary_logi[logiop(eq),exp:binary_arith[aop(&),exp:ident(dmabits),exp:binary_arith[aop(|),exp:ident(DMA_OWN),exp:ident(RX_STP)]],exp:const:int(0)],{}stmt[estmt[exp:call[exp:ident(FST_WRB),exp:ident(card),exp:record_acc[exp:array_acc[exp:array_acc[exp:ident(rxDescrRing),exp:ident(pi)],exp:ident(rxp)],ident(bits)],exp:ident(DMA_OWN)]],estmt[exp:assign[simple_assi(=),exp:ident(rxp),exp:binary_arith[aop(%),exp:binary_arith[aop(+),exp:ident(rxp),exp:const:int(1)],exp:ident(NUM_RX_BUFFER)]]],sel_if[exp:binary_logi[logiop(??),exp:??(N/H),exp:ident(NUM_RX_BUFFER)],{}stmt[estmt[exp:call[exp:ident(dbg),exp:ident(DBG_ASS),exp:const:other(N/H)]],statem(N/H)],estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:ident(dmabits),exp:call[exp:ident(FST_RDB),exp:ident(card),exp:record_acc[exp:array_acc[exp:array_acc[exp:ident(rxDescrRing),exp:ident(pi)],exp:ident(rxp)],ident(bits)]]]],estmt[exp:call[exp:ident(dbg),exp:ident(DBG_ASS),exp:const:string(DMA Bits of next buffer was %x\n),exp:ident(dmabits)]]]],estmt[exp:call[exp:ident(dbg),exp:ident(DBG_ASS),exp:const:string(There were %d subsequent buffers in error\n),exp:ident(i)]],sel_if[exp:??(N/H),{}stmt[estmt[exp:call[exp:ident(FST_WRB),exp:ident(card),exp:record_acc[exp:array_acc[exp:array_acc[exp:ident(rxDescrRing),exp:ident(pi)],exp:ident(rxp)],ident(bits)],exp:ident(DMA_OWN)]],estmt[exp:assign[simple_assi(=),exp:ident(rxp),exp:binary_arith[aop(%),exp:binary_arith[aop(+),exp:ident(rxp),exp:const:int(1)],exp:ident(NUM_RX_BUFFER)]]]],estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(port),ident(rxpos)],exp:ident(rxp)]],statem(N/H)]],def[fname(fst_intr_rx),funtype[fulltype[ctype[btype(void)]],param[reg(),name(card),fulltype[typec(N/H)]],param[reg(),name(port),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp:assign[simple_assi(=),exp:ident(pi),exp:record_ptr[exp:ident(port),ident(index)]]],estmt[exp:assign[simple_assi(=),exp:ident(rxp),exp:record_ptr[exp:ident(port),ident(rxpos)]]],estmt[exp:assign[simple_assi(=),exp:ident(dmabits),exp:call[exp:ident(FST_RDB),exp:ident(card),exp:record_acc[exp:array_acc[exp:array_acc[exp:ident(rxDescrRing),exp:ident(pi)],exp:ident(rxp)],ident(bits)]]]],sel_if[exp:binary_arith[aop(&),exp:ident(dmabits),exp:ident(DMA_OWN)],{}stmt[estmt[exp:call[exp:ident(dbg),exp:binary_arith[aop(|),exp:ident(DBG_RX),exp:ident(DBG_INTR)],exp:const:string(intr_rx: No buffer port %d pos %d\n),exp:ident(pi),exp:ident(rxp)]],statem(N/H)],estmt(NONE)],sel_if[exp:record_ptr[exp:ident(card),ident(dmarx_in_progress)],{}stmt[statem(N/H)],estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:ident(len),exp:call[exp:ident(FST_RDW),exp:ident(card),exp:record_acc[exp:array_acc[exp:array_acc[exp:ident(rxDescrRing),exp:ident(pi)],exp:ident(rxp)],ident(mcnt)]]]],estmt[exp:assign[op_assi(-=),exp:ident(len),exp:const:int(2)]],sel_if[exp:binary_logi[logiop(eq),exp:ident(len),exp:const:int(0)],{}stmt[estmt[exp:call[exp:ident(printk_err),exp:const:string(Frame received with 0 length. Card %d Port %d\n),exp:record_ptr[exp:ident(card),ident(card_no)],exp:record_ptr[exp:ident(port),ident(index)]]],estmt[exp:call[exp:ident(FST_WRB),exp:ident(card),exp:record_acc[exp:array_acc[exp:array_acc[exp:ident(rxDescrRing),exp:ident(pi)],exp:ident(rxp)],ident(bits)],exp:ident(DMA_OWN)]],estmt[exp:assign[simple_assi(=),exp:ident(rxp),exp:binary_arith[aop(%),exp:binary_arith[aop(+),exp:ident(rxp),exp:const:int(1)],exp:ident(NUM_RX_BUFFER)]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(port),ident(rxpos)],exp:ident(rxp)]],statem(N/H)],estmt(NONE)],estmt[exp:call[exp:ident(dbg),exp:ident(DBG_RX),exp:const:string(intr_rx: %d,%d: flags %x len %d\n),exp:ident(pi),exp:ident(rxp),exp:ident(dmabits),exp:ident(len)]],sel_if[exp:binary_logi[logiop(or),exp:binary_logi[logiop(??),exp:ident(dmabits),exp:binary_arith[aop(|),exp:ident(RX_STP),exp:ident(RX_ENP)]],exp:binary_logi[logiop(??),exp:ident(len),exp:binary_arith[aop(-),exp:ident(LEN_RX_BUFFER),exp:const:int(2)]]],{}stmt[estmt[exp:call[exp:ident(fst_log_rx_error),exp:ident(card),exp:ident(port),exp:ident(dmabits),exp:ident(rxp),exp:ident(len)]],estmt[exp:call[exp:ident(fst_recover_rx_error),exp:ident(card),exp:ident(port),exp:ident(dmabits),exp:ident(rxp),exp:ident(len)]],statem(N/H)],estmt(NONE)],sel_if[exp:binary_logi[logiop(eq),exp:assign[simple_assi(=),exp:ident(skb),exp:call[exp:ident(dev_alloc_skb),exp:ident(len)]],exp:ident(NULL)],{}stmt[estmt[exp:call[exp:ident(dbg),exp:ident(DBG_RX),exp:const:string(intr_rx: can't allocate buffer\n)]],estmt[exp:??(N/H)],estmt[exp:call[exp:ident(FST_WRB),exp:ident(card),exp:record_acc[exp:array_acc[exp:array_acc[exp:ident(rxDescrRing),exp:ident(pi)],exp:ident(rxp)],ident(bits)],exp:ident(DMA_OWN)]],estmt[exp:assign[simple_assi(=),exp:ident(rxp),exp:binary_arith[aop(%),exp:binary_arith[aop(+),exp:ident(rxp),exp:const:int(1)],exp:ident(NUM_RX_BUFFER)]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(port),ident(rxpos)],exp:ident(rxp)]],statem(N/H)],estmt(NONE)],sel_if[exp:binary_logi[logiop(or),exp:binary_logi[logiop(??),exp:ident(len),exp:ident(FST_MIN_DMA_LEN)],exp:binary_logi[logiop(eq),exp:record_ptr[exp:ident(card),ident(family)],exp:ident(FST_FAMILY_TXP)]],{}stmt[estmt[exp:call[exp:ident(memcpy_fromio),exp:call[exp:ident(skb_put),exp:ident(skb),exp:ident(len)],exp:binary_arith[aop(+),exp:record_ptr[exp:ident(card),ident(mem)],exp:call[exp:ident(BUF_OFFSET),exp:array_acc[exp:array_acc[exp:array_acc[exp:ident(rxBuffer),exp:ident(pi)],exp:ident(rxp)],exp:const:int(0)]]],exp:ident(len)]],estmt[exp:call[exp:ident(FST_WRB),exp:ident(card),exp:record_acc[exp:array_acc[exp:array_acc[exp:ident(rxDescrRing),exp:ident(pi)],exp:ident(rxp)],ident(bits)],exp:ident(DMA_OWN)]],estmt[exp:??(N/H)],estmt[exp:assign[op_assi(+=),exp:record_ptr[exp:ident(stats),ident(rx_bytes)],exp:ident(len)]],estmt[exp:call[exp:ident(dbg),exp:ident(DBG_RX),exp:const:string(Pushing frame up the stack\n)]],sel_if[exp:binary_logi[logiop(eq),exp:record_ptr[exp:ident(port),ident(mode)],exp:ident(FST_RAW)],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(skb),ident(protocol)],exp:call[exp:ident(farsync_type_trans),exp:ident(skb),exp:ident(dev)]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(skb),ident(protocol)],exp:call[exp:ident(hdlc_type_trans),exp:ident(skb),exp:ident(dev)]]]],estmt[exp:assign[simple_assi(=),exp:ident(rx_status),exp:call[exp:ident(netif_rx),exp:ident(skb)]]],estmt[exp:call[exp:ident(fst_process_rx_status),exp:ident(rx_status),exp:record_ptr[exp:call[exp:ident(port_to_dev),exp:ident(port)],ident(name)]]],sel_if[exp:binary_logi[logiop(eq),exp:ident(rx_status),exp:ident(NET_RX_DROP)],{}stmt[estmt[exp:??(N/H)]],estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(dev),ident(last_rx)],exp:ident(jiffies)]]],{}stmt[estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(card),ident(dma_skb_rx)],exp:ident(skb)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(card),ident(dma_port_rx)],exp:ident(port)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(card),ident(dma_len_rx)],exp:ident(len)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(card),ident(dma_rxpos)],exp:ident(rxp)]],estmt[exp:call[exp:ident(fst_rx_dma),exp:ident(card),exp:??(N/H),exp:??(N/H),exp:ident(len)]]]],sel_if[exp:binary_logi[logiop(??),exp:ident(rxp),exp:record_ptr[exp:ident(port),ident(rxpos)]],{}stmt[estmt[exp:call[exp:ident(dbg),exp:ident(DBG_ASS),exp:const:string(About to increment rxpos by more than 1\n)]],estmt[exp:call[exp:ident(dbg),exp:ident(DBG_ASS),exp:const:string(rxp = %d rxpos = %d\n),exp:ident(rxp),exp:record_ptr[exp:ident(port),ident(rxpos)]]]],estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:ident(rxp),exp:binary_arith[aop(%),exp:binary_arith[aop(+),exp:ident(rxp),exp:const:int(1)],exp:ident(NUM_RX_BUFFER)]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(port),ident(rxpos)],exp:ident(rxp)]]]],def[fname(do_bottom_half_tx),funtype[fulltype[ctype[btype(void)]],param[reg(),name(card),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp:call[exp:ident(dbg),exp:ident(DBG_TX),exp:const:string(do_bottom_half_tx\n)]],for[exp:??(N/H),exp:binary_logi[logiop(??),exp:ident(pi),exp:record_ptr[exp:ident(card),ident(nports)]],exp:??(N/H),{}stmt[sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:ident(dev),exp:call[exp:ident(port_to_dev),exp:ident(port)]]],estmt[exp:assign[simple_assi(=),exp:ident(stats),exp:call[exp:ident(hdlc_stats),exp:ident(dev)]]],while[exp:binary_logi[logiop(and),exp:??(N/H),exp:??(N/H)],{}stmt[estmt[exp:call[exp:ident(spin_lock_irqsave),exp:&ref:exp:record_ptr[exp:ident(card),ident(card_lock)],exp:ident(flags)]],sel_if[exp:binary_logi[logiop(??),exp:assign[simple_assi(=),exp:ident(txq_length),exp:binary_arith[aop(-),exp:record_ptr[exp:ident(port),ident(txqe)],exp:record_ptr[exp:ident(port),ident(txqs)]]],exp:const:int(0)],{}stmt[estmt[exp:assign[simple_assi(=),exp:ident(txq_length),exp:binary_arith[aop(+),exp:ident(txq_length),exp:ident(FST_TXQ_DEPTH)]]]],estmt(NONE)],estmt[exp:call[exp:ident(spin_unlock_irqrestore),exp:&ref:exp:record_ptr[exp:ident(card),ident(card_lock)],exp:ident(flags)]],sel_if[exp:binary_logi[logiop(??),exp:ident(txq_length),exp:const:int(0)],{}stmt[estmt[exp:call[exp:ident(spin_lock_irqsave),exp:&ref:exp:record_ptr[exp:ident(card),ident(card_lock)],exp:ident(flags)]],estmt[exp:assign[simple_assi(=),exp:ident(skb),exp:array_acc[exp:record_ptr[exp:ident(port),ident(txq)],exp:record_ptr[exp:ident(port),ident(txqs)]]]],estmt[exp:??(N/H)],sel_if[exp:binary_logi[logiop(eq),exp:record_ptr[exp:ident(port),ident(txqs)],exp:ident(FST_TXQ_DEPTH)],{}stmt[estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(port),ident(txqs)],exp:const:int(0)]]],estmt(NONE)],estmt[exp:call[exp:ident(spin_unlock_irqrestore),exp:&ref:exp:record_ptr[exp:ident(card),ident(card_lock)],exp:ident(flags)]],estmt[exp:call[exp:ident(FST_WRW),exp:ident(card),exp:record_acc[exp:array_acc[exp:array_acc[exp:ident(txDescrRing),exp:ident(pi)],exp:record_ptr[exp:ident(port),ident(txpos)]],ident(bcnt)],exp:call[exp:ident(cnv_bcnt),exp:record_ptr[exp:ident(skb),ident(len)]]]],sel_if[exp:binary_logi[logiop(or),exp:binary_logi[logiop(??),exp:record_ptr[exp:ident(skb),ident(len)],exp:ident(FST_MIN_DMA_LEN)],exp:binary_logi[logiop(eq),exp:record_ptr[exp:ident(card),ident(family)],exp:ident(FST_FAMILY_TXP)]],{}stmt[estmt[exp:call[exp:ident(memcpy_toio),exp:binary_arith[aop(+),exp:record_ptr[exp:ident(card),ident(mem)],exp:call[exp:ident(BUF_OFFSET),exp:array_acc[exp:array_acc[exp:array_acc[exp:ident(txBuffer),exp:ident(pi)],exp:record_ptr[exp:ident(port),ident(txpos)]],exp:const:int(0)]]],exp:record_ptr[exp:ident(skb),ident(data)],exp:record_ptr[exp:ident(skb),ident(len)]]],estmt[exp:call[exp:ident(FST_WRB),exp:ident(card),exp:record_acc[exp:array_acc[exp:array_acc[exp:ident(txDescrRing),exp:ident(pi)],exp:record_ptr[exp:ident(port),ident(txpos)]],ident(bits)],exp:binary_arith[aop(|),exp:binary_arith[aop(|),exp:ident(DMA_OWN),exp:ident(TX_STP)],exp:ident(TX_ENP)]]],estmt[exp:??(N/H)],estmt[exp:assign[op_assi(+=),exp:record_ptr[exp:ident(stats),ident(tx_bytes)],exp:record_ptr[exp:ident(skb),ident(len)]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(dev),ident(trans_start)],exp:ident(jiffies)]]],{}stmt[estmt[exp:call[exp:ident(memcpy),exp:record_ptr[exp:ident(card),ident(tx_dma_handle_host)],exp:record_ptr[exp:ident(skb),ident(data)],exp:record_ptr[exp:ident(skb),ident(len)]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(card),ident(dma_port_tx)],exp:ident(port)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(card),ident(dma_len_tx)],exp:record_ptr[exp:ident(skb),ident(len)]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(card),ident(dma_txpos)],exp:record_ptr[exp:ident(port),ident(txpos)]]],estmt[exp:call[exp:ident(fst_tx_dma),exp:ident(card),exp:??(N/H),exp:??(N/H),exp:record_ptr[exp:ident(skb),ident(len)]]]]],sel_if[exp:binary_logi[logiop(??),exp:??(N/H),exp:ident(NUM_TX_BUFFER)],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(port),ident(txpos)],exp:const:int(0)]],estmt(NONE)],sel_if[exp:record_ptr[exp:ident(port),ident(start)],{}stmt[sel_if[exp:binary_logi[logiop(??),exp:ident(txq_length),exp:ident(fst_txq_low)],{}stmt[estmt[exp:call[exp:ident(netif_wake_queue),exp:call[exp:ident(port_to_dev),exp:ident(port)]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(port),ident(start)],exp:const:int(0)]]],estmt(NONE)]],estmt(NONE)],estmt[exp:call[exp:ident(dev_kfree_skb),exp:ident(skb)]]],{}stmt[statem(N/H)]]]]]]]],def[fname(do_bottom_half_rx),funtype[fulltype[ctype[btype(void)]],param[reg(),name(card),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp:call[exp:ident(dbg),exp:ident(DBG_RX),exp:const:string(do_bottom_half_rx\n)]],for[exp:??(N/H),exp:binary_logi[logiop(??),exp:ident(pi),exp:record_ptr[exp:ident(card),ident(nports)]],exp:??(N/H),{}stmt[sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],while[exp:binary_logi[logiop(and),exp:??(N/H),exp:??(N/H)],{}stmt[sel_if[exp:binary_logi[logiop(??),exp:ident(rx_count),exp:ident(fst_max_reads)],{}stmt[estmt[exp:call[exp:ident(fst_q_work_item),exp:&ref:exp:ident(fst_work_intq),exp:record_ptr[exp:ident(card),ident(card_no)]]],estmt[exp:call[exp:ident(tasklet_schedule),exp:&ref:exp:ident(fst_int_task)]],statem(N/H)],estmt(NONE)],estmt[exp:call[exp:ident(fst_intr_rx),exp:ident(card),exp:ident(port)]],estmt[exp:??(N/H)]]]]]]],def[fname(fst_intr),funtype[fulltype[typec(N/H)],param[reg(),name(irq),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(dev_id),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),sel_if[exp:binary_logi[logiop(eq),exp:assign[simple_assi(=),exp:ident(card),exp:ident(dev_id)],exp:ident(NULL)],{}stmt[estmt[exp:call[exp:ident(dbg),exp:ident(DBG_INTR),exp:const:string(intr: spurious %d\n),exp:ident(irq)]],st_return[exp:ident(IRQ_NONE)]],estmt(NONE)],estmt[exp:call[exp:ident(dbg),exp:ident(DBG_INTR),exp:const:string(intr: %d %p\n),exp:ident(irq),exp:ident(card)]],sel_if[exp:binary_logi[logiop(??),exp:record_ptr[exp:ident(card),ident(state)],exp:ident(FST_RUNNING)],{}stmt[estmt[exp:call[exp:ident(printk_err),exp:const:string(Interrupt received for card %d in a non running state (%d)\n),exp:record_ptr[exp:ident(card),ident(card_no)],exp:record_ptr[exp:ident(card),ident(state)]]],estmt[exp:call[exp:ident(fst_clear_intr),exp:ident(card)]],st_return[exp:ident(IRQ_HANDLED)]],estmt(NONE)],estmt[exp:call[exp:ident(fst_clear_intr),exp:ident(card)]],estmt[exp:assign[simple_assi(=),exp:ident(do_card_interrupt),exp:const:int(0)]],sel_if[exp:binary_logi[logiop(eq),exp:call[exp:ident(FST_RDB),exp:ident(card),exp:ident(interruptHandshake)],exp:const:int(1)],{}stmt[estmt[exp:assign[op_assi(+=),exp:ident(do_card_interrupt),exp:ident(FST_CARD_INT)]],estmt[exp:call[exp:ident(FST_WRB),exp:ident(card),exp:ident(interruptHandshake),exp:const:int(0xEE)]]],estmt(NONE)],sel_if[exp:binary_logi[logiop(eq),exp:record_ptr[exp:ident(card),ident(family)],exp:ident(FST_FAMILY_TXU)],{}stmt[estmt[exp:assign[simple_assi(=),exp:ident(dma_intcsr),exp:call[exp:ident(inl),exp:binary_arith[aop(+),exp:record_ptr[exp:ident(card),ident(pci_conf)],exp:ident(INTCSR_9054)]]]],sel_if[exp:binary_arith[aop(&),exp:ident(dma_intcsr),exp:const:int(0x00200000)],{}stmt[estmt[exp:call[exp:ident(dbg),exp:ident(DBG_RX),exp:const:string(DMA Rx xfer complete\n)]],estmt[exp:call[exp:ident(outb),exp:const:int(0x8),exp:binary_arith[aop(+),exp:record_ptr[exp:ident(card),ident(pci_conf)],exp:ident(DMACSR0)]]],estmt[exp:call[exp:ident(fst_rx_dma_complete),exp:ident(card),exp:record_ptr[exp:ident(card),ident(dma_port_rx)],exp:record_ptr[exp:ident(card),ident(dma_len_rx)],exp:record_ptr[exp:ident(card),ident(dma_skb_rx)],exp:record_ptr[exp:ident(card),ident(dma_rxpos)]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(card),ident(dmarx_in_progress)],exp:const:int(0)]],estmt[exp:assign[op_assi(+=),exp:ident(do_card_interrupt),exp:ident(FST_RX_DMA_INT)]]],estmt(NONE)],sel_if[exp:binary_arith[aop(&),exp:ident(dma_intcsr),exp:const:int(0x00400000)],{}stmt[estmt[exp:call[exp:ident(dbg),exp:ident(DBG_TX),exp:const:string(DMA Tx xfer complete\n)]],estmt[exp:call[exp:ident(outb),exp:const:int(0x8),exp:binary_arith[aop(+),exp:record_ptr[exp:ident(card),ident(pci_conf)],exp:ident(DMACSR1)]]],estmt[exp:call[exp:ident(fst_tx_dma_complete),exp:ident(card),exp:record_ptr[exp:ident(card),ident(dma_port_tx)],exp:record_ptr[exp:ident(card),ident(dma_len_tx)],exp:record_ptr[exp:ident(card),ident(dma_txpos)]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(card),ident(dmatx_in_progress)],exp:const:int(0)]],estmt[exp:assign[op_assi(+=),exp:ident(do_card_interrupt),exp:ident(FST_TX_DMA_INT)]]],estmt(NONE)]],estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:ident(int_retry_count),exp:call[exp:ident(FST_RDL),exp:ident(card),exp:ident(interruptRetryCount)]]],sel_if[exp:ident(int_retry_count),{}stmt[estmt[exp:call[exp:ident(dbg),exp:ident(DBG_ASS),exp:const:string(Card %d int_retry_count is  %d\n),exp:record_ptr[exp:ident(card),ident(card_no)],exp:ident(int_retry_count)]],estmt[exp:call[exp:ident(FST_WRL),exp:ident(card),exp:ident(interruptRetryCount),exp:const:int(0)]]],estmt(NONE)],sel_if[exp:??(N/H),{}stmt[st_return[exp:ident(IRQ_HANDLED)]],estmt(NONE)],estmt[exp:call[exp:ident(fst_q_work_item),exp:&ref:exp:ident(fst_work_intq),exp:record_ptr[exp:ident(card),ident(card_no)]]],estmt[exp:call[exp:ident(tasklet_schedule),exp:&ref:exp:ident(fst_int_task)]],estmt[exp:assign[simple_assi(=),exp:ident(rdidx),exp:binary_arith[aop(&),exp:call[exp:ident(FST_RDB),exp:ident(card),exp:record_acc[exp:ident(interruptEvent),ident(rdindex)]],exp:const:int(0x1f)]]],estmt[exp:assign[simple_assi(=),exp:ident(wridx),exp:binary_arith[aop(&),exp:call[exp:ident(FST_RDB),exp:ident(card),exp:record_acc[exp:ident(interruptEvent),ident(wrindex)]],exp:const:int(0x1f)]]],while[exp:binary_logi[logiop(??),exp:ident(rdidx),exp:ident(wridx)],{}stmt[estmt[exp:assign[simple_assi(=),exp:ident(event),exp:call[exp:ident(FST_RDB),exp:ident(card),exp:array_acc[exp:record_acc[exp:ident(interruptEvent),ident(evntbuff)],exp:ident(rdidx)]]]],estmt[exp:assign[simple_assi(=),exp:ident(port),exp:&ref:exp:array_acc[exp:record_ptr[exp:ident(card),ident(ports)],exp:binary_arith[aop(&),exp:ident(event),exp:const:int(0x03)]]]],estmt[exp:call[exp:ident(dbg),exp:ident(DBG_INTR),exp:const:string(Processing Interrupt event: %x\n),exp:ident(event)]],statem(N/H),sel_if[exp:binary_logi[logiop(??),exp:??(N/H),exp:ident(MAX_CIRBUFF)],estmt[exp:assign[simple_assi(=),exp:ident(rdidx),exp:const:int(0)]],estmt(NONE)]]],estmt[exp:call[exp:ident(FST_WRB),exp:ident(card),exp:record_acc[exp:ident(interruptEvent),ident(rdindex)],exp:ident(rdidx)]],st_return[exp:ident(IRQ_HANDLED)]]],def[fname(check_started_ok),funtype[fulltype[ctype[btype(void)]],param[reg(),name(card),fulltype[typec(N/H)]]],{}stmt[statem(N/H),sel_if[exp:binary_logi[logiop(??),exp:call[exp:ident(FST_RDW),exp:ident(card),exp:ident(smcVersion)],exp:ident(SMC_VERSION)],{}stmt[estmt[exp:call[exp:ident(printk_err),exp:const:string(Bad shared memory version %d expected %d\n),exp:call[exp:ident(FST_RDW),exp:ident(card),exp:ident(smcVersion)],exp:ident(SMC_VERSION)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(card),ident(state)],exp:ident(FST_BADVERSION)]],statem(N/H)],estmt(NONE)],sel_if[exp:binary_logi[logiop(??),exp:call[exp:ident(FST_RDL),exp:ident(card),exp:ident(endOfSmcSignature)],exp:ident(END_SIG)],{}stmt[estmt[exp:call[exp:ident(printk_err),exp:const:string(Missing shared memory signature\n)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(card),ident(state)],exp:ident(FST_BADVERSION)]],statem(N/H)],estmt(NONE)],sel_if[exp:binary_logi[logiop(eq),exp:assign[simple_assi(=),exp:ident(i),exp:call[exp:ident(FST_RDB),exp:ident(card),exp:ident(taskStatus)]],exp:const:int(0x01)],{}stmt[estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(card),ident(state)],exp:ident(FST_RUNNING)]]],sel_if[exp:binary_logi[logiop(eq),exp:ident(i),exp:const:int(0xFF)],{}stmt[estmt[exp:call[exp:ident(printk_err),exp:const:string(Firmware initialisation failed. Card halted\n)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(card),ident(state)],exp:ident(FST_HALTED)]],statem(N/H)],sel_if[exp:binary_logi[logiop(??),exp:ident(i),exp:const:int(0x00)],{}stmt[estmt[exp:call[exp:ident(printk_err),exp:const:string(Unknown firmware status 0x%x\n),exp:ident(i)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(card),ident(state)],exp:ident(FST_HALTED)]],statem(N/H)],estmt(NONE)]]],sel_if[exp:binary_logi[logiop(??),exp:call[exp:ident(FST_RDL),exp:ident(card),exp:ident(numberOfPorts)],exp:record_ptr[exp:ident(card),ident(nports)]],{}stmt[estmt[exp:call[exp:ident(printk_warn),exp:const:other(N/H),exp:record_ptr[exp:ident(card),ident(card_no)],exp:call[exp:ident(FST_RDL),exp:ident(card),exp:ident(numberOfPorts)],exp:record_ptr[exp:ident(card),ident(nports)]]]],estmt(NONE)]]],def[fname(set_conf_from_info),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(card),fulltype[typec(N/H)]],param[reg(),name(port),fulltype[typec(N/H)]],param[reg(),name(info),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp:assign[simple_assi(=),exp:ident(err),exp:const:int(0)]],sel_if[exp:binary_arith[aop(&),exp:record_ptr[exp:ident(info),ident(valid)],exp:ident(FSTVAL_PROTO)],{}stmt[sel_if[exp:binary_logi[logiop(eq),exp:record_ptr[exp:ident(info),ident(proto)],exp:ident(FST_RAW)],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(port),ident(mode)],exp:ident(FST_RAW)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(port),ident(mode)],exp:ident(FST_GEN_HDLC)]]]],estmt(NONE)],sel_if[exp:binary_arith[aop(&),exp:record_ptr[exp:ident(info),ident(valid)],exp:ident(FSTVAL_CABLE)],estmt[exp:assign[simple_assi(=),exp:ident(err),exp:??(N/H)]],estmt(NONE)],sel_if[exp:binary_arith[aop(&),exp:record_ptr[exp:ident(info),ident(valid)],exp:ident(FSTVAL_SPEED)],estmt[exp:assign[simple_assi(=),exp:ident(err),exp:??(N/H)]],estmt(NONE)],sel_if[exp:binary_arith[aop(&),exp:record_ptr[exp:ident(info),ident(valid)],exp:ident(FSTVAL_PHASE)],estmt[exp:call[exp:ident(FST_WRB),exp:ident(card),exp:record_acc[exp:array_acc[exp:ident(portConfig),exp:record_ptr[exp:ident(port),ident(index)]],ident(invertClock)],exp:record_ptr[exp:ident(info),ident(invertClock)]]],estmt(NONE)],sel_if[exp:binary_arith[aop(&),exp:record_ptr[exp:ident(info),ident(valid)],exp:ident(FSTVAL_MODE)],estmt[exp:call[exp:ident(FST_WRW),exp:ident(card),exp:ident(cardMode),exp:record_ptr[exp:ident(info),ident(cardMode)]]],estmt(NONE)],sel_if[exp:binary_arith[aop(&),exp:record_ptr[exp:ident(info),ident(valid)],exp:ident(FSTVAL_TE1)],{}stmt[estmt[exp:call[exp:ident(FST_WRL),exp:ident(card),exp:record_acc[exp:ident(suConfig),ident(dataRate)],exp:record_ptr[exp:ident(info),ident(lineSpeed)]]],estmt[exp:call[exp:ident(FST_WRB),exp:ident(card),exp:record_acc[exp:ident(suConfig),ident(clocking)],exp:record_ptr[exp:ident(info),ident(clockSource)]]],estmt[exp:assign[simple_assi(=),exp:ident(my_framing),exp:ident(FRAMING_E1)]],sel_if[exp:binary_logi[logiop(eq),exp:record_ptr[exp:ident(info),ident(framing)],exp:ident(E1)],estmt[exp:assign[simple_assi(=),exp:ident(my_framing),exp:ident(FRAMING_E1)]],estmt(NONE)],sel_if[exp:binary_logi[logiop(eq),exp:record_ptr[exp:ident(info),ident(framing)],exp:ident(T1)],estmt[exp:assign[simple_assi(=),exp:ident(my_framing),exp:ident(FRAMING_T1)]],estmt(NONE)],sel_if[exp:binary_logi[logiop(eq),exp:record_ptr[exp:ident(info),ident(framing)],exp:ident(J1)],estmt[exp:assign[simple_assi(=),exp:ident(my_framing),exp:ident(FRAMING_J1)]],estmt(NONE)],estmt[exp:call[exp:ident(FST_WRB),exp:ident(card),exp:record_acc[exp:ident(suConfig),ident(framing)],exp:ident(my_framing)]],estmt[exp:call[exp:ident(FST_WRB),exp:ident(card),exp:record_acc[exp:ident(suConfig),ident(structure)],exp:record_ptr[exp:ident(info),ident(structure)]]],estmt[exp:call[exp:ident(FST_WRB),exp:ident(card),exp:record_acc[exp:ident(suConfig),ident(interface)],exp:record_ptr[exp:ident(info),ident(interface)]]],estmt[exp:call[exp:ident(FST_WRB),exp:ident(card),exp:record_acc[exp:ident(suConfig),ident(coding)],exp:record_ptr[exp:ident(info),ident(coding)]]],estmt[exp:call[exp:ident(FST_WRB),exp:ident(card),exp:record_acc[exp:ident(suConfig),ident(lineBuildOut)],exp:record_ptr[exp:ident(info),ident(lineBuildOut)]]],estmt[exp:call[exp:ident(FST_WRB),exp:ident(card),exp:record_acc[exp:ident(suConfig),ident(equalizer)],exp:record_ptr[exp:ident(info),ident(equalizer)]]],estmt[exp:call[exp:ident(FST_WRB),exp:ident(card),exp:record_acc[exp:ident(suConfig),ident(transparentMode)],exp:record_ptr[exp:ident(info),ident(transparentMode)]]],estmt[exp:call[exp:ident(FST_WRB),exp:ident(card),exp:record_acc[exp:ident(suConfig),ident(loopMode)],exp:record_ptr[exp:ident(info),ident(loopMode)]]],estmt[exp:call[exp:ident(FST_WRB),exp:ident(card),exp:record_acc[exp:ident(suConfig),ident(range)],exp:record_ptr[exp:ident(info),ident(range)]]],estmt[exp:call[exp:ident(FST_WRB),exp:ident(card),exp:record_acc[exp:ident(suConfig),ident(txBufferMode)],exp:record_ptr[exp:ident(info),ident(txBufferMode)]]],estmt[exp:call[exp:ident(FST_WRB),exp:ident(card),exp:record_acc[exp:ident(suConfig),ident(rxBufferMode)],exp:record_ptr[exp:ident(info),ident(rxBufferMode)]]],estmt[exp:call[exp:ident(FST_WRB),exp:ident(card),exp:record_acc[exp:ident(suConfig),ident(startingSlot)],exp:record_ptr[exp:ident(info),ident(startingSlot)]]],estmt[exp:call[exp:ident(FST_WRB),exp:ident(card),exp:record_acc[exp:ident(suConfig),ident(losThreshold)],exp:record_ptr[exp:ident(info),ident(losThreshold)]]],sel_if[exp:record_ptr[exp:ident(info),ident(idleCode)],estmt[exp:call[exp:ident(FST_WRB),exp:ident(card),exp:record_acc[exp:ident(suConfig),ident(enableIdleCode)],exp:const:int(1)]],estmt[exp:call[exp:ident(FST_WRB),exp:ident(card),exp:record_acc[exp:ident(suConfig),ident(enableIdleCode)],exp:const:int(0)]]],estmt[exp:call[exp:ident(FST_WRB),exp:ident(card),exp:record_acc[exp:ident(suConfig),ident(idleCode)],exp:record_ptr[exp:ident(info),ident(idleCode)]]],sel_if[exp:binary_arith[aop(&),exp:record_ptr[exp:ident(info),ident(valid)],exp:ident(FSTVAL_TE1)],{}stmt[estmt[exp:call[exp:ident(printk),exp:const:string(Setting TE1 data\n)]],estmt[exp:call[exp:ident(printk),exp:const:string(Line Speed = %d\n),exp:record_ptr[exp:ident(info),ident(lineSpeed)]]],estmt[exp:call[exp:ident(printk),exp:const:string(Start slot = %d\n),exp:record_ptr[exp:ident(info),ident(startingSlot)]]],estmt[exp:call[exp:ident(printk),exp:const:string(Clock source = %d\n),exp:record_ptr[exp:ident(info),ident(clockSource)]]],estmt[exp:call[exp:ident(printk),exp:const:string(Framing = %d\n),exp:ident(my_framing)]],estmt[exp:call[exp:ident(printk),exp:const:string(Structure = %d\n),exp:record_ptr[exp:ident(info),ident(structure)]]],estmt[exp:call[exp:ident(printk),exp:const:string(interface = %d\n),exp:record_ptr[exp:ident(info),ident(interface)]]],estmt[exp:call[exp:ident(printk),exp:const:string(Coding = %d\n),exp:record_ptr[exp:ident(info),ident(coding)]]],estmt[exp:call[exp:ident(printk),exp:const:string(Line build out = %d\n),exp:record_ptr[exp:ident(info),ident(lineBuildOut)]]],estmt[exp:call[exp:ident(printk),exp:const:string(Equaliser = %d\n),exp:record_ptr[exp:ident(info),ident(equalizer)]]],estmt[exp:call[exp:ident(printk),exp:const:string(Transparent mode = %d\n),exp:record_ptr[exp:ident(info),ident(transparentMode)]]],estmt[exp:call[exp:ident(printk),exp:const:string(Loop mode = %d\n),exp:record_ptr[exp:ident(info),ident(loopMode)]]],estmt[exp:call[exp:ident(printk),exp:const:string(Range = %d\n),exp:record_ptr[exp:ident(info),ident(range)]]],estmt[exp:call[exp:ident(printk),exp:const:string(Tx Buffer mode = %d\n),exp:record_ptr[exp:ident(info),ident(txBufferMode)]]],estmt[exp:call[exp:ident(printk),exp:const:string(Rx Buffer mode = %d\n),exp:record_ptr[exp:ident(info),ident(rxBufferMode)]]],estmt[exp:call[exp:ident(printk),exp:const:string(LOS Threshold = %d\n),exp:record_ptr[exp:ident(info),ident(losThreshold)]]],estmt[exp:call[exp:ident(printk),exp:const:string(Idle Code = %d\n),exp:record_ptr[exp:ident(info),ident(idleCode)]]]],estmt(NONE)]],estmt(NONE)],sel_if[exp:binary_arith[aop(&),exp:record_ptr[exp:ident(info),ident(valid)],exp:ident(FSTVAL_DEBUG)],{}stmt[estmt[exp:assign[simple_assi(=),exp:ident(fst_debug_mask),exp:record_ptr[exp:ident(info),ident(debug)]]]],estmt(NONE)],st_return[exp:ident(err)]]],def[fname(gather_conf_info),funtype[fulltype[ctype[btype(void)]],param[reg(),name(card),fulltype[typec(N/H)]],param[reg(),name(port),fulltype[typec(N/H)]],param[reg(),name(info),fulltype[typec(N/H)]]],{}stmt[statem(N/H),estmt[exp:call[exp:ident(memset),exp:ident(info),exp:const:int(0),exp:sizeoftype:fulltype[typec(N/H)]]],estmt[exp:assign[simple_assi(=),exp:ident(i),exp:record_ptr[exp:ident(port),ident(index)]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(info),ident(kernelVersion)],exp:ident(LINUX_VERSION_CODE)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(info),ident(nports)],exp:record_ptr[exp:ident(card),ident(nports)]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(info),ident(type)],exp:record_ptr[exp:ident(card),ident(type)]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(info),ident(state)],exp:record_ptr[exp:ident(card),ident(state)]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(info),ident(proto)],exp:ident(FST_GEN_HDLC)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(info),ident(index)],exp:ident(i)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(info),ident(debug)],exp:ident(fst_debug_mask)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(info),ident(valid)],exp:binary_arith[aop(|),exp:cond3[exp:binary_logi[logiop(eq),exp:record_ptr[exp:ident(card),ident(state)],exp:ident(FST_RUNNING)],exp:ident(FSTVAL_ALL),exp:ident(FSTVAL_CARD)],exp:ident(FSTVAL_DEBUG)]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(info),ident(lineInterface)],exp:call[exp:ident(FST_RDW),exp:ident(card),exp:record_acc[exp:array_acc[exp:ident(portConfig),exp:ident(i)],ident(lineInterface)]]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(info),ident(internalClock)],exp:call[exp:ident(FST_RDB),exp:ident(card),exp:record_acc[exp:array_acc[exp:ident(portConfig),exp:ident(i)],ident(internalClock)]]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(info),ident(lineSpeed)],exp:call[exp:ident(FST_RDL),exp:ident(card),exp:record_acc[exp:array_acc[exp:ident(portConfig),exp:ident(i)],ident(lineSpeed)]]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(info),ident(invertClock)],exp:call[exp:ident(FST_RDB),exp:ident(card),exp:record_acc[exp:array_acc[exp:ident(portConfig),exp:ident(i)],ident(invertClock)]]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(info),ident(v24IpSts)],exp:call[exp:ident(FST_RDL),exp:ident(card),exp:array_acc[exp:ident(v24IpSts),exp:ident(i)]]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(info),ident(v24OpSts)],exp:call[exp:ident(FST_RDL),exp:ident(card),exp:array_acc[exp:ident(v24OpSts),exp:ident(i)]]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(info),ident(clockStatus)],exp:call[exp:ident(FST_RDW),exp:ident(card),exp:array_acc[exp:ident(clockStatus),exp:ident(i)]]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(info),ident(cableStatus)],exp:call[exp:ident(FST_RDW),exp:ident(card),exp:ident(cableStatus)]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(info),ident(cardMode)],exp:call[exp:ident(FST_RDW),exp:ident(card),exp:ident(cardMode)]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(info),ident(smcFirmwareVersion)],exp:call[exp:ident(FST_RDL),exp:ident(card),exp:ident(smcFirmwareVersion)]]],sel_if[exp:binary_logi[logiop(eq),exp:record_ptr[exp:ident(card),ident(family)],exp:ident(FST_FAMILY_TXU)],{}stmt[sel_if[exp:binary_logi[logiop(eq),exp:record_ptr[exp:ident(port),ident(index)],exp:const:int(0)],{}stmt[estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(info),ident(cableStatus)],exp:binary_arith[aop(&),exp:record_ptr[exp:ident(info),ident(cableStatus)],exp:const:int(1)]]]],{}stmt[estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(info),ident(cableStatus)],exp:binary_arith[aop(>>),exp:record_ptr[exp:ident(info),ident(cableStatus)],exp:const:int(1)]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(info),ident(cableStatus)],exp:binary_arith[aop(&),exp:record_ptr[exp:ident(info),ident(cableStatus)],exp:const:int(1)]]]]]],estmt(NONE)],sel_if[exp:binary_logi[logiop(eq),exp:record_ptr[exp:ident(card),ident(type)],exp:ident(FST_TYPE_TE1)],{}stmt[estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(info),ident(lineSpeed)],exp:call[exp:ident(FST_RDL),exp:ident(card),exp:record_acc[exp:ident(suConfig),ident(dataRate)]]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(info),ident(clockSource)],exp:call[exp:ident(FST_RDB),exp:ident(card),exp:record_acc[exp:ident(suConfig),ident(clocking)]]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(info),ident(framing)],exp:call[exp:ident(FST_RDB),exp:ident(card),exp:record_acc[exp:ident(suConfig),ident(framing)]]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(info),ident(structure)],exp:call[exp:ident(FST_RDB),exp:ident(card),exp:record_acc[exp:ident(suConfig),ident(structure)]]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(info),ident(interface)],exp:call[exp:ident(FST_RDB),exp:ident(card),exp:record_acc[exp:ident(suConfig),ident(interface)]]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(info),ident(coding)],exp:call[exp:ident(FST_RDB),exp:ident(card),exp:record_acc[exp:ident(suConfig),ident(coding)]]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(info),ident(lineBuildOut)],exp:call[exp:ident(FST_RDB),exp:ident(card),exp:record_acc[exp:ident(suConfig),ident(lineBuildOut)]]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(info),ident(equalizer)],exp:call[exp:ident(FST_RDB),exp:ident(card),exp:record_acc[exp:ident(suConfig),ident(equalizer)]]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(info),ident(loopMode)],exp:call[exp:ident(FST_RDB),exp:ident(card),exp:record_acc[exp:ident(suConfig),ident(loopMode)]]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(info),ident(range)],exp:call[exp:ident(FST_RDB),exp:ident(card),exp:record_acc[exp:ident(suConfig),ident(range)]]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(info),ident(txBufferMode)],exp:call[exp:ident(FST_RDB),exp:ident(card),exp:record_acc[exp:ident(suConfig),ident(txBufferMode)]]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(info),ident(rxBufferMode)],exp:call[exp:ident(FST_RDB),exp:ident(card),exp:record_acc[exp:ident(suConfig),ident(rxBufferMode)]]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(info),ident(startingSlot)],exp:call[exp:ident(FST_RDB),exp:ident(card),exp:record_acc[exp:ident(suConfig),ident(startingSlot)]]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(info),ident(losThreshold)],exp:call[exp:ident(FST_RDB),exp:ident(card),exp:record_acc[exp:ident(suConfig),ident(losThreshold)]]]],sel_if[exp:call[exp:ident(FST_RDB),exp:ident(card),exp:record_acc[exp:ident(suConfig),ident(enableIdleCode)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(info),ident(idleCode)],exp:call[exp:ident(FST_RDB),exp:ident(card),exp:record_acc[exp:ident(suConfig),ident(idleCode)]]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(info),ident(idleCode)],exp:const:int(0)]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(info),ident(receiveBufferDelay)],exp:call[exp:ident(FST_RDL),exp:ident(card),exp:record_acc[exp:ident(suStatus),ident(receiveBufferDelay)]]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(info),ident(framingErrorCount)],exp:call[exp:ident(FST_RDL),exp:ident(card),exp:record_acc[exp:ident(suStatus),ident(framingErrorCount)]]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(info),ident(codeViolationCount)],exp:call[exp:ident(FST_RDL),exp:ident(card),exp:record_acc[exp:ident(suStatus),ident(codeViolationCount)]]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(info),ident(crcErrorCount)],exp:call[exp:ident(FST_RDL),exp:ident(card),exp:record_acc[exp:ident(suStatus),ident(crcErrorCount)]]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(info),ident(lineAttenuation)],exp:call[exp:ident(FST_RDL),exp:ident(card),exp:record_acc[exp:ident(suStatus),ident(lineAttenuation)]]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(info),ident(lossOfSignal)],exp:call[exp:ident(FST_RDB),exp:ident(card),exp:record_acc[exp:ident(suStatus),ident(lossOfSignal)]]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(info),ident(receiveRemoteAlarm)],exp:call[exp:ident(FST_RDB),exp:ident(card),exp:record_acc[exp:ident(suStatus),ident(receiveRemoteAlarm)]]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(info),ident(alarmIndicationSignal)],exp:call[exp:ident(FST_RDB),exp:ident(card),exp:record_acc[exp:ident(suStatus),ident(alarmIndicationSignal)]]]]],estmt(NONE)]]],def[fname(fst_set_iface),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(card),fulltype[typec(N/H)]],param[reg(),name(port),fulltype[typec(N/H)]],param[reg(),name(ifr),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp:binary_logi[logiop(??),exp:record_acc[exp:record_ptr[exp:ident(ifr),ident(ifr_settings)],ident(size)],exp:sizeof:exp:ident(sync)],{}stmt[st_return[exp:??(N/H)]],estmt(NONE)],sel_if[exp:call[exp:ident(copy_from_user),exp:&ref:exp:ident(sync),exp:record_acc[exp:record_acc[exp:record_ptr[exp:ident(ifr),ident(ifr_settings)],ident(ifs_ifsu)],ident(sync)],exp:sizeof:exp:ident(sync)],{}stmt[st_return[exp:??(N/H)]],estmt(NONE)],sel_if[exp:record_acc[exp:ident(sync),ident(loopback)],st_return[exp:??(N/H)],estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:ident(i),exp:record_ptr[exp:ident(port),ident(index)]]],statem(N/H),statem(N/H),estmt[exp:call[exp:ident(FST_WRL),exp:ident(card),exp:record_acc[exp:array_acc[exp:ident(portConfig),exp:ident(i)],ident(lineSpeed)],exp:record_acc[exp:ident(sync),ident(clock_rate)]]],st_return[exp:const:int(0)]]],def[fname(fst_get_iface),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(card),fulltype[typec(N/H)]],param[reg(),name(port),fulltype[typec(N/H)]],param[reg(),name(ifr),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),sel_if[exp:binary_logi[logiop(eq),exp:record_acc[exp:record_ptr[exp:ident(ifr),ident(ifr_settings)],ident(size)],exp:const:int(0)],{}stmt[st_return[exp:const:int(0)]],estmt(NONE)],sel_if[exp:binary_logi[logiop(??),exp:record_acc[exp:record_ptr[exp:ident(ifr),ident(ifr_settings)],ident(size)],exp:sizeof:exp:ident(sync)],{}stmt[st_return[exp:??(N/H)]],estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:ident(i),exp:record_ptr[exp:ident(port),ident(index)]]],estmt[exp:assign[simple_assi(=),exp:record_acc[exp:ident(sync),ident(clock_rate)],exp:call[exp:ident(FST_RDL),exp:ident(card),exp:record_acc[exp:array_acc[exp:ident(portConfig),exp:ident(i)],ident(lineSpeed)]]]],estmt[exp:assign[simple_assi(=),exp:record_acc[exp:ident(sync),ident(clock_type)],exp:cond3[exp:binary_logi[logiop(eq),exp:call[exp:ident(FST_RDB),exp:ident(card),exp:record_acc[exp:array_acc[exp:ident(portConfig),exp:ident(i)],ident(internalClock)]],exp:ident(INTCLK)],exp:ident(CLOCK_INT),exp:ident(CLOCK_EXT)]]],estmt[exp:assign[simple_assi(=),exp:record_acc[exp:ident(sync),ident(loopback)],exp:const:int(0)]],sel_if[exp:call[exp:ident(copy_to_user),exp:record_acc[exp:record_acc[exp:record_ptr[exp:ident(ifr),ident(ifr_settings)],ident(ifs_ifsu)],ident(sync)],exp:&ref:exp:ident(sync),exp:sizeof:exp:ident(sync)],{}stmt[st_return[exp:??(N/H)]],estmt(NONE)],estmt[exp:assign[simple_assi(=),exp:record_acc[exp:record_ptr[exp:ident(ifr),ident(ifr_settings)],ident(size)],exp:sizeof:exp:ident(sync)]],st_return[exp:const:int(0)]]],def[fname(fst_ioctl),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(dev),fulltype[typec(N/H)]],param[reg(),name(ifr),fulltype[typec(N/H)]],param[reg(),name(cmd),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp:call[exp:ident(dbg),exp:ident(DBG_IOCTL),exp:const:string(ioctl: %x, %p\n),exp:ident(cmd),exp:record_ptr[exp:ident(ifr),ident(ifr_data)]]],estmt[exp:assign[simple_assi(=),exp:ident(port),exp:call[exp:ident(dev_to_port),exp:ident(dev)]]],estmt[exp:assign[simple_assi(=),exp:ident(card),exp:record_ptr[exp:ident(port),ident(card)]]],sel_if[exp:??(N/H),st_return[exp:??(N/H)],estmt(NONE)],statem(N/H)]],def[fname(fst_openport),funtype[fulltype[ctype[btype(void)]],param[reg(),name(port),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp:binary_logi[logiop(eq),exp:record_ptr[exp:record_ptr[exp:ident(port),ident(card)],ident(state)],exp:ident(FST_RUNNING)],{}stmt[sel_if[exp:record_ptr[exp:ident(port),ident(run)],{}stmt[estmt[exp:call[exp:ident(dbg),exp:ident(DBG_OPEN),exp:const:string(open: found port already running\n)]],estmt[exp:call[exp:ident(fst_issue_cmd),exp:ident(port),exp:ident(STOPPORT)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(port),ident(run)],exp:const:int(0)]]],estmt(NONE)],estmt[exp:call[exp:ident(fst_rx_config),exp:ident(port)]],estmt[exp:call[exp:ident(fst_tx_config),exp:ident(port)]],estmt[exp:call[exp:ident(fst_op_raise),exp:ident(port),exp:binary_arith[aop(|),exp:ident(OPSTS_RTS),exp:ident(OPSTS_DTR)]]],estmt[exp:call[exp:ident(fst_issue_cmd),exp:ident(port),exp:ident(STARTPORT)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(port),ident(run)],exp:const:int(1)]],estmt[exp:assign[simple_assi(=),exp:ident(signals),exp:call[exp:ident(FST_RDL),exp:record_ptr[exp:ident(port),ident(card)],exp:array_acc[exp:ident(v24DebouncedSts),exp:record_ptr[exp:ident(port),ident(index)]]]]],sel_if[exp:binary_arith[aop(&),exp:ident(signals),exp:cond3[exp:binary_logi[logiop(or),exp:binary_logi[logiop(eq),exp:record_ptr[exp:ident(port),ident(hwif)],exp:ident(X21)],exp:binary_logi[logiop(eq),exp:record_ptr[exp:ident(port),ident(hwif)],exp:ident(X21D)]],exp:ident(IPSTS_INDICATE),exp:ident(IPSTS_DCD)]],estmt[exp:call[exp:ident(netif_carrier_on),exp:call[exp:ident(port_to_dev),exp:ident(port)]]],estmt[exp:call[exp:ident(netif_carrier_off),exp:call[exp:ident(port_to_dev),exp:ident(port)]]]],estmt[exp:assign[simple_assi(=),exp:ident(txq_length),exp:binary_arith[aop(-),exp:record_ptr[exp:ident(port),ident(txqe)],exp:record_ptr[exp:ident(port),ident(txqs)]]]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(port),ident(txqe)],exp:const:int(0)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(port),ident(txqs)],exp:const:int(0)]]],estmt(NONE)]]],def[fname(fst_closeport),funtype[fulltype[ctype[btype(void)]],param[reg(),name(port),fulltype[typec(N/H)]]],{}stmt[sel_if[exp:binary_logi[logiop(eq),exp:record_ptr[exp:record_ptr[exp:ident(port),ident(card)],ident(state)],exp:ident(FST_RUNNING)],{}stmt[sel_if[exp:record_ptr[exp:ident(port),ident(run)],{}stmt[estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(port),ident(run)],exp:const:int(0)]],estmt[exp:call[exp:ident(fst_op_lower),exp:ident(port),exp:binary_arith[aop(|),exp:ident(OPSTS_RTS),exp:ident(OPSTS_DTR)]]],estmt[exp:call[exp:ident(fst_issue_cmd),exp:ident(port),exp:ident(STOPPORT)]]],{}stmt[estmt[exp:call[exp:ident(dbg),exp:ident(DBG_OPEN),exp:const:string(close: port not running\n)]]]]],estmt(NONE)]]],def[fname(fst_open),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(dev),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp:assign[simple_assi(=),exp:ident(port),exp:call[exp:ident(dev_to_port),exp:ident(dev)]]],sel_if[exp:??(N/H),st_return[exp:??(N/H)],estmt(NONE)],sel_if[exp:binary_logi[logiop(??),exp:record_ptr[exp:ident(port),ident(mode)],exp:ident(FST_RAW)],{}stmt[estmt[exp:assign[simple_assi(=),exp:ident(err),exp:call[exp:ident(hdlc_open),exp:ident(dev)]]],sel_if[exp:ident(err),st_return[exp:ident(err)],estmt(NONE)]],estmt(NONE)],estmt[exp:call[exp:ident(fst_openport),exp:ident(port)]],estmt[exp:call[exp:ident(netif_wake_queue),exp:ident(dev)]],st_return[exp:const:int(0)]]],def[fname(fst_close),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(dev),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp:assign[simple_assi(=),exp:ident(port),exp:call[exp:ident(dev_to_port),exp:ident(dev)]]],estmt[exp:assign[simple_assi(=),exp:ident(card),exp:record_ptr[exp:ident(port),ident(card)]]],estmt[exp:assign[simple_assi(=),exp:ident(tx_dma_done),exp:call[exp:ident(inb),exp:binary_arith[aop(+),exp:record_ptr[exp:ident(card),ident(pci_conf)],exp:ident(DMACSR1)]]]],estmt[exp:assign[simple_assi(=),exp:ident(rx_dma_done),exp:call[exp:ident(inb),exp:binary_arith[aop(+),exp:record_ptr[exp:ident(card),ident(pci_conf)],exp:ident(DMACSR0)]]]],estmt[exp:call[exp:ident(dbg),exp:ident(DBG_OPEN),exp:const:string(Port Close: tx_dma_in_progress = %d (%x) rx_dma_in_progress = %d (%x)\n),exp:record_ptr[exp:ident(card),ident(dmatx_in_progress)],exp:ident(tx_dma_done),exp:record_ptr[exp:ident(card),ident(dmarx_in_progress)],exp:ident(rx_dma_done)]],estmt[exp:call[exp:ident(netif_stop_queue),exp:ident(dev)]],estmt[exp:call[exp:ident(fst_closeport),exp:call[exp:ident(dev_to_port),exp:ident(dev)]]],sel_if[exp:binary_logi[logiop(??),exp:record_ptr[exp:ident(port),ident(mode)],exp:ident(FST_RAW)],{}stmt[estmt[exp:call[exp:ident(hdlc_close),exp:ident(dev)]]],estmt(NONE)],estmt[exp:call[exp:ident(module_put),exp:ident(THIS_MODULE)]],st_return[exp:const:int(0)]]],def[fname(fst_attach),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(dev),fulltype[typec(N/H)]],param[reg(),name(encoding),fulltype[ctype[btype[itype[sgn(unsigned),base(short)]]]]],param[reg(),name(parity),fulltype[ctype[btype[itype[sgn(unsigned),base(short)]]]]]],{}stmt[sel_if[exp:binary_logi[logiop(or),exp:binary_logi[logiop(??),exp:ident(encoding),exp:ident(ENCODING_NRZ)],exp:binary_logi[logiop(??),exp:ident(parity),exp:ident(PARITY_CRC16_PR1_CCITT)]],st_return[exp:??(N/H)],estmt(NONE)],st_return[exp:const:int(0)]]],def[fname(fst_tx_timeout),funtype[fulltype[ctype[btype(void)]],param[reg(),name(dev),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp:assign[simple_assi(=),exp:ident(port),exp:call[exp:ident(dev_to_port),exp:ident(dev)]]],estmt[exp:assign[simple_assi(=),exp:ident(card),exp:record_ptr[exp:ident(port),ident(card)]]],estmt[exp:??(N/H)],estmt[exp:??(N/H)],estmt[exp:call[exp:ident(dbg),exp:ident(DBG_ASS),exp:const:string(Tx timeout card %d port %d\n),exp:record_ptr[exp:ident(card),ident(card_no)],exp:record_ptr[exp:ident(port),ident(index)]]],estmt[exp:call[exp:ident(fst_issue_cmd),exp:ident(port),exp:ident(ABORTTX)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(dev),ident(trans_start)],exp:ident(jiffies)]],estmt[exp:call[exp:ident(netif_wake_queue),exp:ident(dev)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(port),ident(start)],exp:const:int(0)]]]],def[fname(fst_start_xmit),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(skb),fulltype[typec(N/H)]],param[reg(),name(dev),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp:assign[simple_assi(=),exp:ident(port),exp:call[exp:ident(dev_to_port),exp:ident(dev)]]],estmt[exp:assign[simple_assi(=),exp:ident(card),exp:record_ptr[exp:ident(port),ident(card)]]],estmt[exp:call[exp:ident(dbg),exp:ident(DBG_TX),exp:const:string(fst_start_xmit: length = %d\n),exp:record_ptr[exp:ident(skb),ident(len)]]],sel_if[exp:??(N/H),{}stmt[estmt[exp:call[exp:ident(dev_kfree_skb),exp:ident(skb)]],estmt[exp:??(N/H)],estmt[exp:??(N/H)],estmt[exp:call[exp:ident(dbg),exp:ident(DBG_ASS),exp:const:string(Tried to transmit but no carrier on card %d port %d\n),exp:record_ptr[exp:ident(card),ident(card_no)],exp:record_ptr[exp:ident(port),ident(index)]]],st_return[exp:const:int(0)]],estmt(NONE)],sel_if[exp:binary_logi[logiop(??),exp:record_ptr[exp:ident(skb),ident(len)],exp:ident(LEN_TX_BUFFER)],{}stmt[estmt[exp:call[exp:ident(dbg),exp:ident(DBG_ASS),exp:const:string(Packet too large %d vs %d\n),exp:record_ptr[exp:ident(skb),ident(len)],exp:ident(LEN_TX_BUFFER)]],estmt[exp:call[exp:ident(dev_kfree_skb),exp:ident(skb)]],estmt[exp:??(N/H)],st_return[exp:const:int(0)]],estmt(NONE)],estmt[exp:call[exp:ident(spin_lock_irqsave),exp:&ref:exp:record_ptr[exp:ident(card),ident(card_lock)],exp:ident(flags)]],sel_if[exp:binary_logi[logiop(??),exp:assign[simple_assi(=),exp:ident(txq_length),exp:binary_arith[aop(-),exp:record_ptr[exp:ident(port),ident(txqe)],exp:record_ptr[exp:ident(port),ident(txqs)]]],exp:const:int(0)],{}stmt[estmt[exp:assign[simple_assi(=),exp:ident(txq_length),exp:binary_arith[aop(+),exp:ident(txq_length),exp:ident(FST_TXQ_DEPTH)]]]],estmt(NONE)],estmt[exp:call[exp:ident(spin_unlock_irqrestore),exp:&ref:exp:record_ptr[exp:ident(card),ident(card_lock)],exp:ident(flags)]],sel_if[exp:binary_logi[logiop(??),exp:ident(txq_length),exp:ident(fst_txq_high)],{}stmt[estmt[exp:call[exp:ident(netif_stop_queue),exp:ident(dev)]],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(port),ident(start)],exp:const:int(1)]]],estmt(NONE)],sel_if[exp:binary_logi[logiop(eq),exp:ident(txq_length),exp:binary_arith[aop(-),exp:ident(FST_TXQ_DEPTH),exp:const:int(1)]],{}stmt[estmt[exp:call[exp:ident(dev_kfree_skb),exp:ident(skb)]],estmt[exp:??(N/H)],estmt[exp:call[exp:ident(dbg),exp:ident(DBG_ASS),exp:const:string(Tx queue overflow card %d port %d\n),exp:record_ptr[exp:ident(card),ident(card_no)],exp:record_ptr[exp:ident(port),ident(index)]]],st_return[exp:const:int(0)]],estmt(NONE)],estmt[exp:call[exp:ident(spin_lock_irqsave),exp:&ref:exp:record_ptr[exp:ident(card),ident(card_lock)],exp:ident(flags)]],estmt[exp:assign[simple_assi(=),exp:array_acc[exp:record_ptr[exp:ident(port),ident(txq)],exp:record_ptr[exp:ident(port),ident(txqe)]],exp:ident(skb)]],estmt[exp:??(N/H)],sel_if[exp:binary_logi[logiop(eq),exp:record_ptr[exp:ident(port),ident(txqe)],exp:ident(FST_TXQ_DEPTH)],estmt[exp:assign[simple_assi(=),exp:record_ptr[exp:ident(port),ident(txqe)],exp:const:int(0)]],estmt(NONE)],estmt[exp:call[exp:ident(spin_unlock_irqrestore),exp:&ref:exp:record_ptr[exp:ident(card),ident(card_lock)],exp:ident(flags)]],estmt[exp:call[exp:ident(fst_q_work_item),exp:&ref:exp:ident(fst_work_txq),exp:record_ptr[exp:ident(card),ident(card_no)]]],estmt[exp:call[exp:ident(tasklet_schedule),exp:&ref:exp:ident(fst_tx_task)]],st_return[exp:const:int(0)]]],NCP(N/H),NCP(N/H),NCP(N/H),NCP(N/H),decl(N/H),NCP(N/H),NCP(N/H),mtop(N/H),mtop(N/H)]
mtop(N/H) NCP(N/H) decl(N/H) ident(name) estmt(NONE) exp:ident(i) exp:??(N/H) logiop(??) exp:assign[simple_assi(=),exp:ident(i),exp:const:int(0)] exp:const:int(0) simple_assi(=) exp:sizeoftype:fulltype[typec(N/H)] typec(N/H) exp:const:int(2) estmt[exp:call[exp:ident(dev_kfree_skb),exp:ident(skb)]] exp:call[exp:ident(dev_kfree_skb),exp:ident(skb)] exp:ident(skb) exp:ident(dev_kfree_skb) exp:ident(NULL) exp:record_ptr[exp:ident(skb),ident(data)] ident(data) aop(-) statem(N/H) fulltype[typec(N/H)] reg() fulltype[ctype[btype(void)]] ctype[btype(void)] btype(void) aop(&) aop(|) funtype[fulltype[ctype[btype(void)]],param[reg(),name(dev),fulltype[typec(N/H)]]] param[reg(),name(dev),fulltype[typec(N/H)]] name(dev) st_return[exp:const:int(0)] st_return[exp:??(N/H)] fulltype[ctype[btype[itype[sgn(signed),base(int)]]]] ctype[btype[itype[sgn(signed),base(int)]]] btype[itype[sgn(signed),base(int)]] itype[sgn(signed),base(int)] base(int) sgn(signed) aop(+) exp:const:int(1) exp:const:other(N/H) exp:ident(flags) exp:ident(spin_unlock_irqrestore) aop(<<) exp:ident(spin_lock_irqsave) aop(>>) estmt[exp:??(N/H)] logiop(and) op_assi(+=) sel_if[exp:??(N/H),statem(N/H),estmt(NONE)] exp:ident(memcpy) {}stmt[statem(N/H)] logiop(eq) logiop(or) exp:ident(jiffies) sgn(unsigned) fulltype[ctype[btype[itype[sgn(unsigned),base(int)]]]] ctype[btype[itype[sgn(unsigned),base(int)]]] btype[itype[sgn(unsigned),base(int)]] itype[sgn(unsigned),base(int)] exp:ident(skb_put) exp:ident(dev_alloc_skb) param[reg(),name(skb),fulltype[typec(N/H)]] name(skb) exp:ident(err) exp:ident(dev) ident(len) exp:record_ptr[exp:ident(skb),ident(len)] exp:ident(memset) exp:ident(len) ident(trans_start) exp:ident(offset) define(N/H) inc_elem(asm) includeN[inc_elem(asm),inc_elem(uaccess.h)] inc_elem(uaccess.h) inc_elem(linux) includeN[inc_elem(linux),inc_elem(init.h)] inc_elem(init.h) includeN[inc_elem(linux),inc_elem(kernel.h)] inc_elem(kernel.h) includeN[inc_elem(linux),inc_elem(module.h)] inc_elem(module.h) 
[Main] Constructing all safe parts for 3 term pairs
[Main] Making safe parts for pair 1
[Main] terms that changed: exp:ident(memcpy) 
[Main] Making safe parts for pair 2
[Main] terms that changed: exp:record_ptr[exp:ident(skb),ident(data)] exp:ident(memcpy) 
[Main] Making safe parts for pair 3
[Main] terms that changed: ident(data) exp:ident(skb) exp:record_ptr[exp:ident(skb),ident(data)] exp:ident(memcpy) 
[Main] generating solutions...
[Main] solution #1
{{{
	exp:call[exp:ident(memcpy),meta(X0),exp:record_ptr[meta(X1),ident(data)],meta(X2)] ==> exp:call[exp:ident(skb_copy_from_linear_data),meta(X1),meta(X0),meta(X2)]
}}}

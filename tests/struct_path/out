Spec. file is: specfile
Parsed two: inode.c.orig, inode.c
Parsed two: mntpt.c.orig, mntpt.c
Parsed two: mconsole_kern.c.orig, mconsole_kern.c
Reading file pair mconsole_kern.c.orig mconsole_kern.c
Reading file pair mntpt.c.orig mntpt.c
Reading file pair inode.c.orig inode.c
funtype[void,param[,,void]] ini[NULL] param[,,void] const || && size  EBUSY EBUSY -[EBUSY] -[EBUSY] size err ret ret EINVAL EINVAL -[EINVAL] -[EINVAL] err err name spin_unlock spin_unlock spin_lock spin_lock out break stmt[break] GFP_KERNEL GFP_KERNEL out stmt[out] - TYPEDEXP[signed int] TYPEDEXP[*char] pointer[char] *char char btype[char] char none stmt[none] 1 1 1 NULL NULL == TYPEDEXP[*void] unknown list_empty list_empty flags nosto storage[nosto,notinline] notinline static storage[static,notinline] 0 0 0 void void pointer[void] *void long unsigned unsigned long btype[unsigned long] unsigned long  int signed signed int btype[signed int] signed int init.h slab.h includeN[linux,slab.h] module.h includeN[linux,module.h] linux 
[Main] Constructing all safe parts for 3 term pairs
[Main] Making safe parts for pair 1
[Main] terms that changed: 
[Main] abstracted one pair
[Main] Making safe parts for pair 2
[Main] terms that changed: 
[Main] abstracted one pair
[Main] Making safe parts for pair 3
[Main] terms that changed: 
[Main] abstracted one pair
[Main] filtering all safe patches.
[Main] Finding unit patches with minimum support at least: 2
[Main] generating solutions...
[Main] min sup = 2
[Main] found 1 solutions
[Main] solution #1
{{{
@@
*struct nameidata X0;
identifier/field? X1;
@@
- X0->X1
+ X0->path.X1
}}}

Spec. file is: specfile
Parsed two: dn_rtmsg.c.orig, dn_rtmsg.c.new
Parsed two: ax25_in.c.orig, ax25_in.c.new
Parsed two: xpnet.c.orig, xpnet.c.new
Parsed two: atmtcp.c.orig, atmtcp.c.new
Parsed two: nicstar.c.orig, nicstar.c.new
Parsed two: bfusb.c.orig, bfusb.c.new
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Reading file pair bfusb.c.orig bfusb.c.new
Reading file pair nicstar.c.orig nicstar.c.new
Reading file pair atmtcp.c.orig atmtcp.c.new
Reading file pair xpnet.c.orig xpnet.c.new
Reading file pair ax25_in.c.orig ax25_in.c.new
Reading file pair dn_rtmsg.c.orig dn_rtmsg.c.new
TYPEDEXP[int] int btype[int] int int signed no  void void stmt[none] none 0 0 0 (NULL:*N/A) NULL TYPEDEXP[*N/A] *N/A pointer[void] storage[nosto,no] nosto data = param[,skb,*N/A] *N/A pointer[N/A] N/A sk_buff skb dev || len memcpy memcpy GFP_ATOMIC GFP_ATOMIC ini[0] (skb:*N/A) skb TYPEDEXP[*N/A] == record_ptr[(skb:*N/A),data] record_ptr[(skb:*N/A),data] record_ptr[(skb:*N/A),len] record_ptr[(skb:*N/A),len] stmt[break] break & && linux 
[Main] Constructing all safe parts for 6 term pairs
[Main] Making safe parts for pair 1
[Main] terms that changed: 
[Main] abstracted one pair
[Main] Making safe parts for pair 2
[Main] terms that changed: record_ptr[(skb:*N/A),data] memcpy memcpy 
[Main] abstracted one pair
[Main] Making safe parts for pair 3
[Main] terms that changed: record_ptr[(skb:*N/A),data] record_ptr[(skb:*N/A),data] memcpy memcpy 

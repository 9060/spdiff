Spec. file is: specfile
Parsed two: md.c.orig, md.c.new
Comment
Comment
Parsed two: nommu.c.orig, nommu.c.new
Comment
Comment
Comment
Parsed two: mempolicy.c.orig, mempolicy.c.new
Comment
Reading file pair mempolicy.c.orig mempolicy.c.new
Reading file pair nommu.c.orig nommu.c.new
Reading file pair md.c.orig md.c.new
\n \n \n dentry mnt f_path seq_path seq_path TYPEDEXP[*struct file] file seq_printf seq_printf file struct file pointer[struct file] *struct file file v m TYPEDEXP[*struct seq_file] m v param[,v,*void] seq_file struct seq_file pointer[struct seq_file] *struct seq_file N/H PAGE_SHIFT PAGE_SHIFT N/H len ini[NULL] < next next flags & TYPEDEXP[unsigned long] long unsigned unsigned long btype[unsigned long] unsigned long v == - NULL pointer[void] *void TYPEDEXP[*void] NULL * + break break; TYPEDEXP[signed int] none none; return[0] return[0]; int signed signed int btype[signed int] signed int unknown const  void void 1 1 1 nosto storage[nosto,notinline] 0 0 0 ini[0] notinline static storage[static,notinline] asm init.h includeN[linux,init.h] module.h includeN[linux,module.h] kernel.h includeN[linux,kernel.h] linux 
[Main] Constructing all safe parts for 3 term pairs
[Main] Making safe parts for pair 1
[Main] terms that changed: 
[Diff] getting concrete parts
[Diff] filtering safe parts

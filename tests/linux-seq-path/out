Spec. file is: specfile
Comment
Comment
Parsed two: export.c.orig, export.c.new
Comment
Parsed two: task_mmu.c.orig, task_mmu.c.new
Comment
Comment
Parsed two: mempolicy.c.orig, mempolicy.c.new
Parsed two: swapfile.c.orig, swapfile.c.new
Reading file pair swapfile.c.orig swapfile.c.new
Reading file pair mempolicy.c.orig mempolicy.c.new
Reading file pair task_mmu.c.orig task_mmu.c.new
Reading file pair export.c.orig export.c.new
[Main] Common subterms: [Diff] making all subterms for :
	prg2[includeN[inc_elem(linux),inc_elem(mm.h)],includeN[inc_elem(linux),inc_elem(hugetlb.h)],includeN[inc_elem(linux),inc_elem(mman.h)],includeN[inc_elem(linux),inc_elem(slab.h)],includeN[inc_elem(linux),inc_elem(kernel_stat.h)],includeN[inc_elem(linux),inc_elem(swap.h)],includeN[inc_elem(linux),inc_elem(vmalloc.h)],includeN[inc_elem(linux),inc_elem(pagemap.h)],includeN[inc_elem(linux),inc_elem(namei.h)],includeN[inc_elem(linux),inc_elem(shm.h)],includeN[inc_elem(linux),inc_elem(blkdev.h)],includeN[inc_elem(linux),inc_elem(writeback.h)],includeN[inc_elem(linux),inc_elem(proc_fs.h)],includeN[inc_elem(linux),inc_elem(seq_file.h)],includeN[inc_elem(linux),inc_elem(init.h)],includeN[inc_elem(linux),inc_elem(module.h)],includeN[inc_elem(linux),inc_elem(rmap.h)],includeN[inc_elem(linux),inc_elem(security.h)],includeN[inc_elem(linux),inc_elem(backing-dev.h)],includeN[inc_elem(linux),inc_elem(mutex.h)],includeN[inc_elem(linux),inc_elem(capability.h)],includeN[inc_elem(linux),inc_elem(syscalls.h)],includeN[inc_elem(linux),inc_elem(memcontrol.h)],includeN[inc_elem(asm),inc_elem(pgtable.h)],includeN[inc_elem(asm),inc_elem(tlbflush.h)],includeN[inc_elem(linux),inc_elem(swapops.h)],mtop(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),def[fname(swap_unplug_io_fn),funtype[fulltype[ctype[btype(void)]],param[reg(),name(unused_bdi),fulltype[typec(N/H)]],param[reg(),name(page),fulltype[typec(N/H)]]],{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(down_read),exp:&ref:exp:ident(swap_unplug_sem)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(entry),ident(val)],exp[grammar(call),exp:ident(page_private),exp:ident(page)]]],sel_if[exp[grammar(call),exp:ident(PageSwapCache),exp:ident(page)],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(WARN_ON),exp[grammar(binary_logi),logiop(??),exp[grammar(call),exp:ident(page_count),exp:ident(page)],exp:const:int(1)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(bdi),exp[grammar(record_ptr),exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(bdev),ident(bd_inode)],ident(i_mapping)],ident(backing_dev_info)]]],estmt[exp[grammar(call),exp:ident(blk_run_backing_dev),exp:ident(bdi),exp:ident(page)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(up_read),exp:&ref:exp:ident(swap_unplug_sem)]]]],define(N/H),define(N/H),def[fname(scan_swap_map),funtype[fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]],param[reg(),name(si),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),op_assi(+=),exp[grammar(record_ptr),exp:ident(si),ident(flags)],exp:ident(SWP_SCANNING)]],sel_if[exp[grammar(call),exp:ident(unlikely),exp:??(N/H)],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(si),ident(cluster_nr)],exp[grammar(binary_arith),aop(-),exp:ident(SWAPFILE_CLUSTER),exp:const:int(1)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(binary_arith),aop(-),exp[grammar(record_ptr),exp:ident(si),ident(pages)],exp[grammar(record_ptr),exp:ident(si),ident(inuse_pages)]],exp:ident(SWAPFILE_CLUSTER)],statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(offset),exp[grammar(record_ptr),exp:ident(si),ident(lowest_bit)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(last_in_cluster),exp[grammar(binary_arith),aop(-),exp[grammar(binary_arith),aop(+),exp:ident(offset),exp:ident(SWAPFILE_CLUSTER)],exp:const:int(1)]]],for[expr(NONE),exp[grammar(binary_logi),logiop(??),exp:ident(last_in_cluster),exp[grammar(record_ptr),exp:ident(si),ident(highest_bit)]],exp:??(N/H),{}stmt[sel_if[exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(si),ident(swap_map)],exp:ident(offset)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(last_in_cluster),exp[grammar(binary_arith),aop(+),exp:ident(offset),exp:ident(SWAPFILE_CLUSTER)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(offset),exp:ident(last_in_cluster)],{}stmt[estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(swap_lock)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(si),ident(cluster_next)],exp[grammar(binary_arith),aop(+),exp[grammar(binary_arith),aop(-),exp:ident(offset),exp:ident(SWAPFILE_CLUSTER)],exp:const:int(1)]]],statem(N/H)],estmt(NONE)]],sel_if[exp[grammar(call),exp:ident(unlikely),exp[grammar(binary_logi),logiop(??),exp:??(N/H),exp:const:int(0)]],{}stmt[estmt[exp[grammar(call),exp:ident(cond_resched)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(latency_ration),exp:ident(LATENCY_LIMIT)]]],estmt(NONE)]]],estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(swap_lock)]],statem(N/H)],estmt(NONE)],estmt[exp:??(N/H)],statem(N/H),sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(offset),exp[grammar(record_ptr),exp:ident(si),ident(highest_bit)]],statem(N/H),estmt(NONE)],statem(N/H),sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],sel_if[exp:??(N/H),{}stmt[sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(offset),exp[grammar(record_ptr),exp:ident(si),ident(lowest_bit)]],estmt[exp:??(N/H)],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(offset),exp[grammar(record_ptr),exp:ident(si),ident(highest_bit)]],estmt[exp:??(N/H)],estmt(NONE)],estmt[exp:??(N/H)],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(si),ident(inuse_pages)],exp[grammar(record_ptr),exp:ident(si),ident(pages)]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(si),ident(lowest_bit)],exp[grammar(record_ptr),exp:ident(si),ident(max)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(si),ident(highest_bit)],exp:const:int(0)]]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(si),ident(swap_map)],exp:ident(offset)],exp:const:int(1)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(si),ident(cluster_next)],exp[grammar(binary_arith),aop(+),exp:ident(offset),exp:const:int(1)]]],estmt[exp[grammar(assign),op_assi(-=),exp[grammar(record_ptr),exp:ident(si),ident(flags)],exp:ident(SWP_SCANNING)]],st_return[exp:ident(offset)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]],while[exp[grammar(binary_logi),logiop(??),exp:??(N/H),exp[grammar(record_ptr),exp:ident(si),ident(highest_bit)]],{}stmt[sel_if[exp:??(N/H),{}stmt[estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(swap_lock)]],statem(N/H)],estmt(NONE)],sel_if[exp[grammar(call),exp:ident(unlikely),exp[grammar(binary_logi),logiop(??),exp:??(N/H),exp:const:int(0)]],{}stmt[estmt[exp[grammar(call),exp:ident(cond_resched)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(latency_ration),exp:ident(LATENCY_LIMIT)]]],estmt(NONE)]]],estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(swap_lock)]],statem(N/H),statem(N/H),st_return[exp:const:int(0)]]],def[fname(get_swap_page),funtype[fulltype[typec(N/H)],param[reg(),name(),fulltype[ctype[btype(void)]]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(swap_lock)]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(nr_swap_pages),exp:const:int(0)],statem(N/H),estmt(NONE)],estmt[exp:??(N/H)],for[exp[grammar(assign),simple_assi(=),exp:ident(type),exp[grammar(record_acc),exp:ident(swap_list),ident(next)]],exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp:ident(type),exp:const:int(0)],exp[grammar(binary_logi),logiop(??),exp:ident(wrapped),exp:const:int(2)]],exp[grammar(assign),simple_assi(=),exp:ident(type),exp:ident(next)],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(si),exp[grammar(binary_arith),aop(+),exp:ident(swap_info),exp:ident(type)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(next),exp[grammar(record_ptr),exp:ident(si),ident(next)]]],sel_if[exp[grammar(binary_logi),logiop(or),exp[grammar(binary_logi),logiop(??),exp:ident(next),exp:const:int(0)],exp[grammar(binary_logi),logiop(and),exp:??(N/H),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(si),ident(prio)],exp[grammar(record_acc),exp[grammar(array_acc),exp:ident(swap_info),exp:ident(next)],ident(prio)]]]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(next),exp[grammar(record_acc),exp:ident(swap_list),ident(head)]]],estmt[exp:??(N/H)]],estmt(NONE)],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(swap_list),ident(next)],exp:ident(next)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(offset),exp[grammar(call),exp:ident(scan_swap_map),exp:ident(si)]]],sel_if[exp:ident(offset),{}stmt[estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]],st_return[exp[grammar(call),exp:ident(swp_entry),exp:ident(type),exp:ident(offset)]]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(next),exp[grammar(record_acc),exp:ident(swap_list),ident(next)]]]]],estmt[exp:??(N/H)],statem(N/H),st_return[exp:??(N/H)]]],def[fname(get_swap_page_of_type),funtype[fulltype[typec(N/H)],param[reg(),name(type),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(swap_lock)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(si),exp[grammar(binary_arith),aop(+),exp:ident(swap_info),exp:ident(type)]]],sel_if[exp[grammar(binary_arith),aop(&),exp[grammar(record_ptr),exp:ident(si),ident(flags)],exp:ident(SWP_WRITEOK)],{}stmt[estmt[exp:??(N/H)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(offset),exp[grammar(call),exp:ident(scan_swap_map),exp:ident(si)]]],sel_if[exp:ident(offset),{}stmt[estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]],st_return[exp[grammar(call),exp:ident(swp_entry),exp:ident(type),exp:ident(offset)]]],estmt(NONE)],estmt[exp:??(N/H)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]],st_return[exp:??(N/H)]]],def[fname(swap_info_get),funtype[fulltype[typec(N/H)],param[reg(),name(entry),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(type),exp[grammar(call),exp:ident(swp_type),exp:ident(entry)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(type),exp:ident(nr_swapfiles)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(p),exp[grammar(&ref),grammar(exp),grammar(array_acc),exp:ident(swap_info),exp:ident(type)]]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(offset),exp[grammar(call),exp:ident(swp_offset),exp:ident(entry)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(offset),exp[grammar(record_ptr),exp:ident(p),ident(max)]],statem(N/H),estmt(NONE)],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(swap_lock)]],st_return[exp:ident(p)],statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H)]],def[fname(swap_entry_free),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(p),fulltype[typec(N/H)]],param[reg(),name(offset),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]]],{}stmt[statem(N/H),sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(count),exp:ident(SWAP_MAP_MAX)],{}stmt[estmt[exp:??(N/H)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(p),ident(swap_map)],exp:ident(offset)],exp:ident(count)]],sel_if[exp:??(N/H),{}stmt[sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(offset),exp[grammar(record_ptr),exp:ident(p),ident(lowest_bit)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(p),ident(lowest_bit)],exp:ident(offset)]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(offset),exp[grammar(record_ptr),exp:ident(p),ident(highest_bit)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(p),ident(highest_bit)],exp:ident(offset)]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(p),ident(prio)],exp[grammar(record_acc),exp[grammar(array_acc),exp:ident(swap_info),exp[grammar(record_acc),exp:ident(swap_list),ident(next)]],ident(prio)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(swap_list),ident(next)],exp[grammar(binary_arith),aop(-),exp:ident(p),exp:ident(swap_info)]]],estmt(NONE)],estmt[exp:??(N/H)],estmt[exp:??(N/H)]],estmt(NONE)]],estmt(NONE)],st_return[exp:ident(count)]]],def[fname(swap_free),funtype[fulltype[ctype[btype(void)]],param[reg(),name(entry),fulltype[typec(N/H)]]],{}stmt[statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(p),exp[grammar(call),exp:ident(swap_info_get),exp:ident(entry)]]],sel_if[exp:ident(p),{}stmt[estmt[exp[grammar(call),exp:ident(swap_entry_free),exp:ident(p),exp[grammar(call),exp:ident(swp_offset),exp:ident(entry)]]],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]]],estmt(NONE)]]],def[fname(page_swapcount),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(page),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(entry),ident(val)],exp[grammar(call),exp:ident(page_private),exp:ident(page)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(p),exp[grammar(call),exp:ident(swap_info_get),exp:ident(entry)]]],sel_if[exp:ident(p),{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(count),exp[grammar(binary_arith),aop(-),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(p),ident(swap_map)],exp[grammar(call),exp:ident(swp_offset),exp:ident(entry)]],exp:const:int(1)]]],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]]],estmt(NONE)],st_return[exp:ident(count)]]],def[fname(can_share_swap_page),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(page),fulltype[typec(N/H)]]],{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(BUG_ON),exp:??(N/H)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(count),exp[grammar(call),exp:ident(page_mapcount),exp:ident(page)]]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp:ident(count),exp:const:int(1)],exp[grammar(call),exp:ident(PageSwapCache),exp:ident(page)]],estmt[exp[grammar(assign),op_assi(+=),exp:ident(count),exp[grammar(call),exp:ident(page_swapcount),exp:ident(page)]]],estmt(NONE)],st_return[exp[grammar(binary_logi),logiop(eq),exp:ident(count),exp:const:int(1)]]]],def[fname(remove_exclusive_swap_page),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(page),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(BUG_ON),exp[grammar(call),exp:ident(PagePrivate),exp:ident(page)]]],estmt[exp[grammar(call),exp:ident(BUG_ON),exp:??(N/H)]],sel_if[exp:??(N/H),st_return[exp:const:int(0)],estmt(NONE)],sel_if[exp[grammar(call),exp:ident(PageWriteback),exp:ident(page)],st_return[exp:const:int(0)],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(call),exp:ident(page_count),exp:ident(page)],exp:const:int(2)],st_return[exp:const:int(0)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(entry),ident(val)],exp[grammar(call),exp:ident(page_private),exp:ident(page)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(p),exp[grammar(call),exp:ident(swap_info_get),exp:ident(entry)]]],sel_if[exp:??(N/H),st_return[exp:const:int(0)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(retval),exp:const:int(0)]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(p),ident(swap_map)],exp[grammar(call),exp:ident(swp_offset),exp:ident(entry)]],exp:const:int(1)],{}stmt[estmt[exp[grammar(call),exp:ident(write_lock_irq),exp[grammar(&ref),grammar(exp),grammar(record_acc),exp:ident(swapper_space),ident(tree_lock)]]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(eq),exp[grammar(call),exp:ident(page_count),exp:ident(page)],exp:const:int(2)],exp:??(N/H)],{}stmt[estmt[exp[grammar(call),exp:ident(__delete_from_swap_cache),exp:ident(page)]],estmt[exp[grammar(call),exp:ident(SetPageDirty),exp:ident(page)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(retval),exp:const:int(1)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(write_unlock_irq),exp[grammar(&ref),grammar(exp),grammar(record_acc),exp:ident(swapper_space),ident(tree_lock)]]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]],sel_if[exp:ident(retval),{}stmt[estmt[exp[grammar(call),exp:ident(swap_free),exp:ident(entry)]],estmt[exp[grammar(call),exp:ident(page_cache_release),exp:ident(page)]]],estmt(NONE)],st_return[exp:ident(retval)]]],def[fname(free_swap_and_cache),funtype[fulltype[ctype[btype(void)]],param[reg(),name(entry),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp[grammar(call),exp:ident(is_migration_entry),exp:ident(entry)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(p),exp[grammar(call),exp:ident(swap_info_get),exp:ident(entry)]]],sel_if[exp:ident(p),{}stmt[sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(call),exp:ident(swap_entry_free),exp:ident(p),exp[grammar(call),exp:ident(swp_offset),exp:ident(entry)]],exp:const:int(1)],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(page),exp[grammar(call),exp:ident(find_get_page),exp:&ref:exp:ident(swapper_space),exp[grammar(record_acc),exp:ident(entry),ident(val)]]]],sel_if[exp[grammar(binary_logi),logiop(and),exp:ident(page),exp[grammar(call),exp:ident(unlikely),exp[grammar(call),exp:ident(TestSetPageLocked),exp:ident(page)]]],{}stmt[estmt[exp[grammar(call),exp:ident(page_cache_release),exp:ident(page)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(page),exp:ident(NULL)]]],estmt(NONE)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]]],estmt(NONE)],sel_if[exp:ident(page),{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(BUG_ON),exp[grammar(call),exp:ident(PagePrivate),exp:ident(page)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(one_user),exp[grammar(binary_logi),logiop(eq),exp[grammar(call),exp:ident(page_count),exp:ident(page)],exp:const:int(2)]]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(and),exp[grammar(call),exp:ident(PageSwapCache),exp:ident(page)],exp:??(N/H)],exp[grammar(binary_logi),logiop(or),exp:ident(one_user),exp[grammar(call),exp:ident(vm_swap_full)]]],{}stmt[estmt[exp[grammar(call),exp:ident(delete_from_swap_cache),exp:ident(page)]],estmt[exp[grammar(call),exp:ident(SetPageDirty),exp:ident(page)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(unlock_page),exp:ident(page)]],estmt[exp[grammar(call),exp:ident(page_cache_release),exp:ident(page)]]],estmt(NONE)]]],def[fname(swap_type_of),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(device),fulltype[typec(N/H)]],param[reg(),name(offset),fulltype[typec(N/H)]],param[reg(),name(bdev_p),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp:ident(device),estmt[exp[grammar(assign),simple_assi(=),exp:ident(bdev),exp[grammar(call),exp:ident(bdget),exp:ident(device)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(swap_lock)]],for[exp[grammar(assign),simple_assi(=),exp:ident(i),exp:const:int(0)],exp[grammar(binary_logi),logiop(??),exp:ident(i),exp:ident(nr_swapfiles)],exp:??(N/H),{}stmt[statem(N/H),sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],sel_if[exp:??(N/H),{}stmt[sel_if[exp:ident(bdev_p),estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(bdev_p),exp[grammar(record_ptr),exp:ident(sis),ident(bdev)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]],st_return[exp:ident(i)]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(bdev),exp[grammar(record_ptr),exp:ident(sis),ident(bdev)]],{}stmt[statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(se),exp[grammar(call),exp:ident(list_entry),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(sis),ident(extent_list)],ident(next)],argtype(N/H),exp:ident(list)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(se),ident(start_block)],exp:ident(offset)],{}stmt[sel_if[exp:ident(bdev_p),estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(bdev_p),exp[grammar(record_ptr),exp:ident(sis),ident(bdev)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]],estmt[exp[grammar(call),exp:ident(bdput),exp:ident(bdev)]],st_return[exp:ident(i)]],estmt(NONE)]],estmt(NONE)]]],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]],sel_if[exp:ident(bdev),estmt[exp[grammar(call),exp:ident(bdput),exp:ident(bdev)]],estmt(NONE)],st_return[exp:??(N/H)]]],def[fname(count_swap_pages),funtype[fulltype[ctype[btype[itype[sgn(unsigned),base(int)]]]],param[reg(),name(type),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(free),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[statem(N/H),sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(type),exp:ident(nr_swapfiles)],{}stmt[estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(swap_lock)]],sel_if[exp[grammar(binary_arith),aop(&),exp[grammar(record_acc),exp[grammar(array_acc),exp:ident(swap_info),exp:ident(type)],ident(flags)],exp:ident(SWP_WRITEOK)],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(n),exp[grammar(record_acc),exp[grammar(array_acc),exp:ident(swap_info),exp:ident(type)],ident(pages)]]],sel_if[exp:ident(free),estmt[exp[grammar(assign),op_assi(-=),exp:ident(n),exp[grammar(record_acc),exp[grammar(array_acc),exp:ident(swap_info),exp:ident(type)],ident(inuse_pages)]]],estmt(NONE)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]]],estmt(NONE)],st_return[exp:ident(n)]]],def[fname(unuse_pte),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(vma),fulltype[typec(N/H)]],param[reg(),name(pmd),fulltype[typec(N/H)]],param[reg(),name(addr),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(entry),fulltype[typec(N/H)]],param[reg(),name(page),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),sel_if[exp[grammar(call),exp:ident(mem_cgroup_charge),exp:ident(page),exp[grammar(record_ptr),exp:ident(vma),ident(vm_mm)],exp:ident(GFP_KERNEL)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ret),exp:??(N/H)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(pte),exp[grammar(call),exp:ident(pte_offset_map_lock),exp[grammar(record_ptr),exp:ident(vma),ident(vm_mm)],exp:ident(pmd),exp:ident(addr),exp:&ref:exp:ident(ptl)]]],sel_if[exp[grammar(call),exp:ident(unlikely),exp:??(N/H)],{}stmt[sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(ret),exp:const:int(0)],estmt[exp[grammar(call),exp:ident(mem_cgroup_uncharge_page),exp:ident(page)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ret),exp:const:int(0)]],statem(N/H)],estmt(NONE)],estmt[exp[grammar(call),exp:ident(inc_mm_counter),exp[grammar(record_ptr),exp:ident(vma),ident(vm_mm)],exp:ident(anon_rss)]],estmt[exp[grammar(call),exp:ident(get_page),exp:ident(page)]],estmt[exp[grammar(call),exp:ident(set_pte_at),exp[grammar(record_ptr),exp:ident(vma),ident(vm_mm)],exp:ident(addr),exp:ident(pte),exp[grammar(call),exp:ident(pte_mkold),exp[grammar(call),exp:ident(mk_pte),exp:ident(page),exp[grammar(record_ptr),exp:ident(vma),ident(vm_page_prot)]]]]],estmt[exp[grammar(call),exp:ident(page_add_anon_rmap),exp:ident(page),exp:ident(vma),exp:ident(addr)]],estmt[exp[grammar(call),exp:ident(swap_free),exp:ident(entry)]],estmt[exp[grammar(call),exp:ident(activate_page),exp:ident(page)]],statem(N/H),st_return[exp:ident(ret)]]],def[fname(unuse_pte_range),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(vma),fulltype[typec(N/H)]],param[reg(),name(pmd),fulltype[typec(N/H)]],param[reg(),name(addr),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(end),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(entry),fulltype[typec(N/H)]],param[reg(),name(page),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(pte),exp[grammar(call),exp:ident(pte_offset_map),exp:ident(pmd),exp:ident(addr)]]],statem(N/H),estmt[exp[grammar(call),exp:ident(pte_unmap),exp[grammar(binary_arith),aop(-),exp:ident(pte),exp:const:int(1)]]],statem(N/H)]],def[fname(unuse_pmd_range),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(vma),fulltype[typec(N/H)]],param[reg(),name(pud),fulltype[typec(N/H)]],param[reg(),name(addr),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(end),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(entry),fulltype[typec(N/H)]],param[reg(),name(page),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(pmd),exp[grammar(call),exp:ident(pmd_offset),exp:ident(pud),exp:ident(addr)]]],statem(N/H),st_return[exp:const:int(0)]]],def[fname(unuse_pud_range),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(vma),fulltype[typec(N/H)]],param[reg(),name(pgd),fulltype[typec(N/H)]],param[reg(),name(addr),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(end),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(entry),fulltype[typec(N/H)]],param[reg(),name(page),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(pud),exp[grammar(call),exp:ident(pud_offset),exp:ident(pgd),exp:ident(addr)]]],statem(N/H),st_return[exp:const:int(0)]]],def[fname(unuse_vma),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(vma),fulltype[typec(N/H)]],param[reg(),name(entry),fulltype[typec(N/H)]],param[reg(),name(page),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),sel_if[exp[grammar(record_ptr),exp:ident(page),ident(mapping)],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(addr),exp[grammar(call),exp:ident(page_address_in_vma),exp:ident(page),exp:ident(vma)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(addr),exp:??(N/H)],st_return[exp:const:int(0)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(end),exp[grammar(binary_arith),aop(+),exp:ident(addr),exp:ident(PAGE_SIZE)]]]]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(addr),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(end),exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)]]]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(pgd),exp[grammar(call),exp:ident(pgd_offset),exp[grammar(record_ptr),exp:ident(vma),ident(vm_mm)],exp:ident(addr)]]],statem(N/H),st_return[exp:const:int(0)]]],def[fname(unuse_mm),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(mm),fulltype[typec(N/H)]],param[reg(),name(entry),fulltype[typec(N/H)]],param[reg(),name(page),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp:??(N/H),{}stmt[estmt[exp[grammar(call),exp:ident(activate_page),exp:ident(page)]],estmt[exp[grammar(call),exp:ident(unlock_page),exp:ident(page)]],estmt[exp[grammar(call),exp:ident(down_read),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(mm),ident(mmap_sem)]]],estmt[exp[grammar(call),exp:ident(lock_page),exp:ident(page)]]],estmt(NONE)],for[exp[grammar(assign),simple_assi(=),exp:ident(vma),exp[grammar(record_ptr),exp:ident(mm),ident(mmap)]],exp:ident(vma),exp[grammar(assign),simple_assi(=),exp:ident(vma),exp[grammar(record_ptr),exp:ident(vma),ident(vm_next)]],{}stmt[sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(record_ptr),exp:ident(vma),ident(anon_vma)],exp[grammar(assign),simple_assi(=),exp:ident(ret),exp[grammar(call),exp:ident(unuse_vma),exp:ident(vma),exp:ident(entry),exp:ident(page)]]],statem(N/H),estmt(NONE)]]],estmt[exp[grammar(call),exp:ident(up_read),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(mm),ident(mmap_sem)]]],st_return[exp[grammar(cond3),exp[grammar(binary_logi),logiop(??),exp:ident(ret),exp:const:int(0)],exp:ident(ret),exp:const:int(0)]]]],def[fname(find_next_to_unuse),funtype[fulltype[ctype[btype[itype[sgn(unsigned),base(int)]]]],param[reg(),name(si),fulltype[typec(N/H)]],param[reg(),name(prev),fulltype[ctype[btype[itype[sgn(unsigned),base(int)]]]]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),for[expr(NONE),expr(NONE),expr(NONE),{}stmt[sel_if[exp[grammar(binary_logi),logiop(??),exp:??(N/H),exp:ident(max)],{}stmt[sel_if[exp:??(N/H),{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(i),exp:const:int(0)]],statem(N/H)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(max),exp[grammar(binary_arith),aop(+),exp:ident(prev),exp:const:int(1)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(prev),exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(i),exp:const:int(1)]]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(count),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(si),ident(swap_map)],exp:ident(i)]]],sel_if[exp[grammar(binary_logi),logiop(and),exp:ident(count),exp[grammar(binary_logi),logiop(??),exp:ident(count),exp:ident(SWAP_MAP_BAD)]],statem(N/H),estmt(NONE)]]],st_return[exp:ident(i)]]],def[fname(try_to_unuse),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(type),fulltype[ctype[btype[itype[sgn(unsigned),base(int)]]]]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(start_mm),exp:&ref:exp:ident(init_mm)]],estmt[exp[grammar(call),exp:ident(atomic_inc),exp[grammar(&ref),grammar(exp),grammar(record_acc),exp:ident(init_mm),ident(mm_users)]]],while[exp[grammar(binary_logi),logiop(??),exp[grammar(assign),simple_assi(=),exp:ident(i),exp[grammar(call),exp:ident(find_next_to_unuse),exp:ident(si),exp:ident(i)]],exp:const:int(0)],{}stmt[sel_if[exp[grammar(call),exp:ident(signal_pending),exp:ident(current)],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(retval),exp:??(N/H)]],statem(N/H)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(swap_map),exp[grammar(&ref),grammar(exp),grammar(array_acc),exp[grammar(record_ptr),exp:ident(si),ident(swap_map)],exp:ident(i)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(entry),exp[grammar(call),exp:ident(swp_entry),exp:ident(type),exp:ident(i)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(page),exp[grammar(call),exp:ident(read_swap_cache_async),exp:ident(entry),exp:ident(GFP_HIGHUSER_MOVABLE),exp:ident(NULL),exp:const:int(0)]]],sel_if[exp:??(N/H),{}stmt[sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(retval),exp:??(N/H)]],statem(N/H)],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(call),exp:ident(atomic_read),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(start_mm),ident(mm_users)]],exp:const:int(1)],{}stmt[estmt[exp[grammar(call),exp:ident(mmput),exp:ident(start_mm)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(start_mm),exp:&ref:exp:ident(init_mm)]],estmt[exp[grammar(call),exp:ident(atomic_inc),exp[grammar(&ref),grammar(exp),grammar(record_acc),exp:ident(init_mm),ident(mm_users)]]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(wait_on_page_locked),exp:ident(page)]],estmt[exp[grammar(call),exp:ident(wait_on_page_writeback),exp:ident(page)]],estmt[exp[grammar(call),exp:ident(lock_page),exp:ident(page)]],estmt[exp[grammar(call),exp:ident(wait_on_page_writeback),exp:ident(page)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(shmem),exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(swcount),exp:*ref:exp:ident(swap_map)]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(swcount),exp:const:int(1)],{}stmt[sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(start_mm),exp:&ref:exp:ident(init_mm)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(shmem),exp[grammar(call),exp:ident(shmem_unuse),exp:ident(entry),exp:ident(page)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(retval),exp[grammar(call),exp:ident(unuse_mm),exp:ident(start_mm),exp:ident(entry),exp:ident(page)]]]]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp:*ref:exp:ident(swap_map),exp:const:int(1)],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(atomic_inc),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(new_start_mm),ident(mm_users)]]],estmt[exp[grammar(call),exp:ident(atomic_inc),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(prev_mm),ident(mm_users)]]],estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(mmlist_lock)]],while[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp:*ref:exp:ident(swap_map),exp:const:int(1)],exp:??(N/H)],exp:??(N/H)],exp[grammar(binary_logi),logiop(??),exp[grammar(assign),simple_assi(=),exp:ident(p),exp[grammar(record_ptr),exp:ident(p),ident(next)]],exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(start_mm),ident(mmlist)]]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(mm),exp[grammar(call),exp:ident(list_entry),exp:ident(p),argtype(N/H),exp:ident(mmlist)]]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(mmlist_lock)]],estmt[exp[grammar(call),exp:ident(mmput),exp:ident(prev_mm)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(prev_mm),exp:ident(mm)]],estmt[exp[grammar(call),exp:ident(cond_resched)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(swcount),exp:*ref:exp:ident(swap_map)]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(swcount),exp:const:int(1)],estmt(NONE),sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(mm),exp:&ref:exp:ident(init_mm)],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(set_start_mm),exp:const:int(1)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(shmem),exp[grammar(call),exp:ident(shmem_unuse),exp:ident(entry),exp:ident(page)]]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(retval),exp[grammar(call),exp:ident(unuse_mm),exp:ident(mm),exp:ident(entry),exp:ident(page)]]]]],sel_if[exp[grammar(binary_logi),logiop(and),exp:ident(set_start_mm),exp[grammar(binary_logi),logiop(??),exp:*ref:exp:ident(swap_map),exp:ident(swcount)]],{}stmt[estmt[exp[grammar(call),exp:ident(mmput),exp:ident(new_start_mm)]],estmt[exp[grammar(call),exp:ident(atomic_inc),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(mm),ident(mm_users)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(new_start_mm),exp:ident(mm)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(set_start_mm),exp:const:int(0)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(mmlist_lock)]]]],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(mmlist_lock)]],estmt[exp[grammar(call),exp:ident(mmput),exp:ident(prev_mm)]],estmt[exp[grammar(call),exp:ident(mmput),exp:ident(start_mm)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(start_mm),exp:ident(new_start_mm)]]],estmt(NONE)],sel_if[exp:ident(shmem),{}stmt[sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(shmem),exp:const:int(0)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(retval),exp:ident(shmem)]],statem(N/H)],estmt(NONE)],sel_if[exp:ident(retval),{}stmt[estmt[exp[grammar(call),exp:ident(unlock_page),exp:ident(page)]],estmt[exp[grammar(call),exp:ident(page_cache_release),exp:ident(page)]],statem(N/H)],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(eq),exp:*ref:exp:ident(swap_map),exp:ident(SWAP_MAP_MAX)],{}stmt[estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(swap_lock)]],estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(swap_map),exp:const:int(1)]],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(reset_overflow),exp:const:int(1)]]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp:*ref:exp:ident(swap_map),exp:const:int(1)],exp[grammar(call),exp:ident(PageDirty),exp:ident(page)]],exp[grammar(call),exp:ident(PageSwapCache),exp:ident(page)]],{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(swap_writepage),exp:ident(page),exp:&ref:exp:ident(wbc)]],estmt[exp[grammar(call),exp:ident(lock_page),exp:ident(page)]],estmt[exp[grammar(call),exp:ident(wait_on_page_writeback),exp:ident(page)]]],estmt(NONE)],sel_if[exp[grammar(call),exp:ident(PageSwapCache),exp:ident(page)],estmt[exp[grammar(call),exp:ident(delete_from_swap_cache),exp:ident(page)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(SetPageDirty),exp:ident(page)]],estmt[exp[grammar(call),exp:ident(unlock_page),exp:ident(page)]],estmt[exp[grammar(call),exp:ident(page_cache_release),exp:ident(page)]],estmt[exp[grammar(call),exp:ident(cond_resched)]]]],estmt[exp[grammar(call),exp:ident(mmput),exp:ident(start_mm)]],sel_if[exp:ident(reset_overflow),{}stmt[estmt[exp[grammar(call),exp:ident(printk),exp:const:other(N/H)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(swap_overflow),exp:const:int(0)]]],estmt(NONE)],st_return[exp:ident(retval)]]],def[fname(drain_mmlist),funtype[fulltype[ctype[btype(void)]],param[reg(),name(),fulltype[ctype[btype(void)]]]],{}stmt[statem(N/H),statem(N/H),for[exp[grammar(assign),simple_assi(=),exp:ident(i),exp:const:int(0)],exp[grammar(binary_logi),logiop(??),exp:ident(i),exp:ident(nr_swapfiles)],exp:??(N/H),sel_if[exp[grammar(record_acc),exp[grammar(array_acc),exp:ident(swap_info),exp:ident(i)],ident(inuse_pages)],statem(N/H),estmt(NONE)]],estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(mmlist_lock)]],statem(N/H),estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(mmlist_lock)]]]],def[fname(map_swap_page),funtype[fulltype[typec(N/H)],param[reg(),name(sis),fulltype[typec(N/H)]],param[reg(),name(offset),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),for[expr(NONE),expr(NONE),expr(NONE),{}stmt[statem(N/H),sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(se),ident(start_page)],exp:ident(offset)],exp[grammar(binary_logi),logiop(??),exp:ident(offset),exp[grammar(binary_arith),aop(+),exp[grammar(record_ptr),exp:ident(se),ident(start_page)],exp[grammar(record_ptr),exp:ident(se),ident(nr_pages)]]]],{}stmt[st_return[exp[grammar(binary_arith),aop(+),exp[grammar(record_ptr),exp:ident(se),ident(start_block)],exp[grammar(binary_arith),aop(-),exp:ident(offset),exp[grammar(record_ptr),exp:ident(se),ident(start_page)]]]]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(lh),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(se),ident(list)],ident(next)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(lh),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(sis),ident(extent_list)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(lh),exp[grammar(record_ptr),exp:ident(lh),ident(next)]]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(se),exp[grammar(call),exp:ident(list_entry),exp:ident(lh),argtype(N/H),exp:ident(list)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(sis),ident(curr_swap_extent)],exp:ident(se)]],estmt[exp[grammar(call),exp:ident(BUG_ON),exp[grammar(binary_logi),logiop(eq),exp:ident(se),exp:ident(start_se)]]]]]]],def[fname(swapdev_block),funtype[fulltype[typec(N/H)],param[reg(),name(swap_type),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(offset),fulltype[typec(N/H)]]],{}stmt[statem(N/H),sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(swap_type),exp:ident(nr_swapfiles)],st_return[exp:const:int(0)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(sis),exp[grammar(binary_arith),aop(+),exp:ident(swap_info),exp:ident(swap_type)]]],st_return[exp[grammar(cond3),exp[grammar(binary_arith),aop(&),exp[grammar(record_ptr),exp:ident(sis),ident(flags)],exp:ident(SWP_WRITEOK)],exp[grammar(call),exp:ident(map_swap_page),exp:ident(sis),exp:ident(offset)],exp:const:int(0)]]]],def[fname(destroy_swap_extents),funtype[fulltype[ctype[btype(void)]],param[reg(),name(sis),fulltype[typec(N/H)]]],{}stmt[while[exp:??(N/H),{}stmt[statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(se),exp[grammar(call),exp:ident(list_entry),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(sis),ident(extent_list)],ident(next)],argtype(N/H),exp:ident(list)]]],estmt[exp[grammar(call),exp:ident(list_del),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(se),ident(list)]]],estmt[exp[grammar(call),exp:ident(kfree),exp:ident(se)]]]]]],def[fname(add_swap_extent),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(sis),fulltype[typec(N/H)]],param[reg(),name(start_page),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(nr_pages),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(start_block),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(lh),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(sis),ident(extent_list)],ident(prev)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(lh),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(sis),ident(extent_list)]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(se),exp[grammar(call),exp:ident(list_entry),exp:ident(lh),argtype(N/H),exp:ident(list)]]],estmt[exp[grammar(call),exp:ident(BUG_ON),exp[grammar(binary_logi),logiop(??),exp[grammar(binary_arith),aop(+),exp[grammar(record_ptr),exp:ident(se),ident(start_page)],exp[grammar(record_ptr),exp:ident(se),ident(nr_pages)]],exp:ident(start_page)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(binary_arith),aop(+),exp[grammar(record_ptr),exp:ident(se),ident(start_block)],exp[grammar(record_ptr),exp:ident(se),ident(nr_pages)]],exp:ident(start_block)],{}stmt[estmt[exp[grammar(assign),op_assi(+=),exp[grammar(record_ptr),exp:ident(se),ident(nr_pages)],exp:ident(nr_pages)]],st_return[exp:const:int(0)]],estmt(NONE)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(new_se),exp[grammar(call),exp:ident(kmalloc),exp:sizeof:exp:*ref:exp:ident(se),exp:ident(GFP_KERNEL)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(new_se),exp:ident(NULL)],st_return[exp:??(N/H)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(new_se),ident(start_page)],exp:ident(start_page)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(new_se),ident(nr_pages)],exp:ident(nr_pages)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(new_se),ident(start_block)],exp:ident(start_block)]],estmt[exp[grammar(call),exp:ident(list_add_tail),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(new_se),ident(list)],exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(sis),ident(extent_list)]]],st_return[exp:const:int(1)]]],def[fname(setup_swap_extents),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(sis),fulltype[typec(N/H)]],param[reg(),name(span),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(inode),exp[grammar(record_ptr),exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(sis),ident(swap_file)],ident(f_mapping)],ident(host)]]],sel_if[exp[grammar(call),exp:ident(S_ISBLK),exp[grammar(record_ptr),exp:ident(inode),ident(i_mode)]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(ret),exp[grammar(call),exp:ident(add_swap_extent),exp:ident(sis),exp:const:int(0),exp[grammar(record_ptr),exp:ident(sis),ident(max)],exp:const:int(0)]]],estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(span),exp[grammar(record_ptr),exp:ident(sis),ident(pages)]]],statem(N/H)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(blkbits),exp[grammar(record_ptr),exp:ident(inode),ident(i_blkbits)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(blocks_per_page),exp[grammar(binary_arith),aop(>>),exp:ident(PAGE_SIZE),exp:ident(blkbits)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(probe_block),exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(page_no),exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(last_block),exp[grammar(binary_arith),aop(>>),exp[grammar(call),exp:ident(i_size_read),exp:ident(inode)],exp:ident(blkbits)]]],while[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp[grammar(binary_arith),aop(+),exp:ident(probe_block),exp:ident(blocks_per_page)],exp:ident(last_block)],exp[grammar(binary_logi),logiop(??),exp:ident(page_no),exp[grammar(record_ptr),exp:ident(sis),ident(max)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(first_block),exp[grammar(call),exp:ident(bmap),exp:ident(inode),exp:ident(probe_block)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(first_block),exp:const:int(0)],statem(N/H),estmt(NONE)],sel_if[exp[grammar(binary_arith),aop(&),exp:ident(first_block),exp[grammar(binary_arith),aop(-),exp:ident(blocks_per_page),exp:const:int(1)]],{}stmt[estmt[exp:??(N/H)],statem(N/H)],estmt(NONE)],for[exp[grammar(assign),simple_assi(=),exp:ident(block_in_page),exp:const:int(1)],exp[grammar(binary_logi),logiop(??),exp:ident(block_in_page),exp:ident(blocks_per_page)],exp:??(N/H),{}stmt[statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(block),exp[grammar(call),exp:ident(bmap),exp:ident(inode),exp[grammar(binary_arith),aop(+),exp:ident(probe_block),exp:ident(block_in_page)]]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(block),exp:const:int(0)],statem(N/H),estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(block),exp[grammar(binary_arith),aop(+),exp:ident(first_block),exp:ident(block_in_page)]],{}stmt[estmt[exp:??(N/H)],statem(N/H)],estmt(NONE)]]],estmt[exp[grammar(assign),op_assi(N/H),exp:ident(first_block),exp[grammar(binary_arith),aop(-),exp:ident(PAGE_SHIFT),exp:ident(blkbits)]]],sel_if[exp:ident(page_no),{}stmt[sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(first_block),exp:ident(lowest_block)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(lowest_block),exp:ident(first_block)]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(first_block),exp:ident(highest_block)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(highest_block),exp:ident(first_block)]],estmt(NONE)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ret),exp[grammar(call),exp:ident(add_swap_extent),exp:ident(sis),exp:ident(page_no),exp:const:int(1),exp:ident(first_block)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(ret),exp:const:int(0)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),op_assi(+=),exp:ident(nr_extents),exp:ident(ret)]],estmt[exp:??(N/H)],estmt[exp[grammar(assign),op_assi(+=),exp:ident(probe_block),exp:ident(blocks_per_page)]],statem(N/H)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ret),exp:ident(nr_extents)]],estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(span),exp[grammar(binary_arith),aop(-),exp[grammar(binary_arith),aop(+),exp:const:int(1),exp:ident(highest_block)],exp:ident(lowest_block)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(page_no),exp:const:int(0)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(page_no),exp:const:int(1)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(sis),ident(max)],exp:ident(page_no)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(sis),ident(pages)],exp[grammar(binary_arith),aop(-),exp:ident(page_no),exp:const:int(1)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(sis),ident(highest_bit)],exp[grammar(binary_arith),aop(-),exp:ident(page_no),exp:const:int(1)]]],statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(ret),exp:??(N/H)]],statem(N/H)]],includeN[inc_elem(linux),inc_elem(backing-dev.h)],def[fname(page_queue_congested),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(page),fulltype[typec(N/H)]]],{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(BUG_ON),exp:??(N/H)]],sel_if[exp[grammar(call),exp:ident(PageSwapCache),exp:ident(page)],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(sis),exp[grammar(call),exp:ident(get_swap_info_struct),exp[grammar(call),exp:ident(swp_type),exp:ident(entry)]]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(bdi),exp[grammar(record_ptr),exp[grammar(record_ptr),exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(sis),ident(bdev)],ident(bd_inode)],ident(i_mapping)],ident(backing_dev_info)]]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(bdi),exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(page),ident(mapping)],ident(backing_dev_info)]]]],st_return[exp[grammar(call),exp:ident(bdi_write_congested),exp:ident(bdi)]]]],NCP(N/H),def[fname(swap_start),funtype[fulltype[typec(N/H)],param[reg(),name(swap),fulltype[typec(N/H)]],param[reg(),name(pos),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(mutex_lock),exp:&ref:exp:ident(swapon_mutex)]],sel_if[exp:??(N/H),st_return[exp:ident(SEQ_START_TOKEN)],estmt(NONE)],for[exp[grammar(assign),simple_assi(=),exp:ident(i),exp:const:int(0)],exp[grammar(binary_logi),logiop(??),exp:ident(i),exp:ident(nr_swapfiles)],exp:??(N/H),{}stmt[sel_if[exp[grammar(binary_logi),logiop(or),exp:??(N/H),exp:??(N/H)],statem(N/H),estmt(NONE)],sel_if[exp:??(N/H),st_return[exp:ident(ptr)],estmt(NONE)]]],st_return[exp:ident(NULL)]]],def[fname(swap_next),funtype[fulltype[typec(N/H)],param[reg(),name(swap),fulltype[typec(N/H)]],param[reg(),name(v),fulltype[typec(N/H)]],param[reg(),name(pos),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(v),exp:ident(SEQ_START_TOKEN)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ptr),exp:ident(swap_info)]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(ptr),exp:ident(v)]],estmt[exp:??(N/H)]]],for[expr(NONE),exp[grammar(binary_logi),logiop(??),exp:ident(ptr),exp:ident(endptr)],exp:??(N/H),{}stmt[sel_if[exp[grammar(binary_logi),logiop(or),exp:??(N/H),exp:??(N/H)],statem(N/H),estmt(NONE)],estmt[exp:??(N/H)],st_return[exp:ident(ptr)]]],st_return[exp:ident(NULL)]]],def[fname(swap_stop),funtype[fulltype[ctype[btype(void)]],param[reg(),name(swap),fulltype[typec(N/H)]],param[reg(),name(v),fulltype[typec(N/H)]]],{}stmt[estmt[exp[grammar(call),exp:ident(mutex_unlock),exp:&ref:exp:ident(swapon_mutex)]]]],def[fname(swap_show),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(swap),fulltype[typec(N/H)]],param[reg(),name(v),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(ptr),exp:ident(SEQ_START_TOKEN)],{}stmt[estmt[exp[grammar(call),exp:ident(seq_puts),exp:ident(swap),exp:const:string(Filename\t\t\t\tType\t\tSize\tUsed\tPriority\n)]],st_return[exp:const:int(0)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(file),exp[grammar(record_ptr),exp:ident(ptr),ident(swap_file)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(len),exp[grammar(call),exp:ident(seq_path),exp:ident(swap),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(file),ident(f_path)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(file),ident(f_path)],ident(dentry)],exp:const:string( \t\n\\)]]],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(swap),exp:const:string(%*s%s\t%u\t%u\t%d\n),exp[grammar(cond3),exp[grammar(binary_logi),logiop(??),exp:ident(len),exp:const:int(40)],exp[grammar(binary_arith),aop(-),exp:const:int(40),exp:ident(len)],exp:const:int(1)],exp:const:string( ),exp[grammar(cond3),exp[grammar(call),exp:ident(S_ISBLK),exp[grammar(record_ptr),exp[grammar(record_ptr),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(file),ident(f_path)],ident(dentry)],ident(d_inode)],ident(i_mode)]],exp:const:string(partition),exp:const:string(file\t)],exp[grammar(binary_arith),aop(<<),exp[grammar(record_ptr),exp:ident(ptr),ident(pages)],exp[grammar(binary_arith),aop(-),exp:ident(PAGE_SHIFT),exp:const:int(10)]],exp[grammar(binary_arith),aop(<<),exp[grammar(record_ptr),exp:ident(ptr),ident(inuse_pages)],exp[grammar(binary_arith),aop(-),exp:ident(PAGE_SHIFT),exp:const:int(10)]],exp[grammar(record_ptr),exp:ident(ptr),ident(prio)]]],st_return[exp:const:int(0)]]],decl(N/H),def[fname(swaps_open),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(inode),fulltype[typec(N/H)]],param[reg(),name(file),fulltype[typec(N/H)]]],{}stmt[st_return[exp[grammar(call),exp:ident(seq_open),exp:ident(file),exp:&ref:exp:ident(swaps_op)]]]],decl(N/H),NCP(N/H),mtop(N/H),NCP(N/H),def[fname(si_swapinfo),funtype[fulltype[ctype[btype(void)]],param[reg(),name(val),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(swap_lock)]],for[exp[grammar(assign),simple_assi(=),exp:ident(i),exp:const:int(0)],exp[grammar(binary_logi),logiop(??),exp:ident(i),exp:ident(nr_swapfiles)],exp:??(N/H),{}stmt[sel_if[exp[grammar(binary_logi),logiop(or),exp:??(N/H),exp[grammar(binary_arith),aop(&),exp[grammar(record_acc),exp[grammar(array_acc),exp:ident(swap_info),exp:ident(i)],ident(flags)],exp:ident(SWP_WRITEOK)]],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),op_assi(+=),exp:ident(nr_to_be_unused),exp[grammar(record_acc),exp[grammar(array_acc),exp:ident(swap_info),exp:ident(i)],ident(inuse_pages)]]]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(val),ident(freeswap)],exp[grammar(binary_arith),aop(+),exp:ident(nr_swap_pages),exp:ident(nr_to_be_unused)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(val),ident(totalswap)],exp[grammar(binary_arith),aop(+),exp:ident(total_swap_pages),exp:ident(nr_to_be_unused)]]],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]]]],def[fname(swap_duplicate),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(entry),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),sel_if[exp[grammar(call),exp:ident(is_migration_entry),exp:ident(entry)],st_return[exp:const:int(1)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(type),exp[grammar(call),exp:ident(swp_type),exp:ident(entry)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(type),exp:ident(nr_swapfiles)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(p),exp[grammar(binary_arith),aop(+),exp:ident(type),exp:ident(swap_info)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(offset),exp[grammar(call),exp:ident(swp_offset),exp:ident(entry)]]],estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(swap_lock)]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp:ident(offset),exp[grammar(record_ptr),exp:ident(p),ident(max)]],exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(p),ident(swap_map)],exp:ident(offset)]],{}stmt[sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(p),ident(swap_map)],exp:ident(offset)],exp[grammar(binary_arith),aop(-),exp:ident(SWAP_MAP_MAX),exp:const:int(1)]],{}stmt[estmt[exp:??(N/H)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(result),exp:const:int(1)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(p),ident(swap_map)],exp:ident(offset)],exp:ident(SWAP_MAP_MAX)],{}stmt[sel_if[exp[grammar(binary_logi),logiop(??),exp:??(N/H),exp:const:int(5)],estmt[exp[grammar(call),exp:ident(printk),exp:const:other(N/H)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(p),ident(swap_map)],exp:ident(offset)],exp:ident(SWAP_MAP_MAX)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(result),exp:const:int(1)]]],estmt(NONE)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]],statem(N/H),statem(N/H),statem(N/H)]],def[fname(get_swap_info_struct),funtype[fulltype[typec(N/H)],param[reg(),name(type),fulltype[ctype[btype[itype[sgn(unsigned),base(int)]]]]]],{}stmt[st_return[exp[grammar(&ref),grammar(exp),grammar(array_acc),exp:ident(swap_info),exp:ident(type)]]]],def[fname(valid_swaphandles),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(entry),fulltype[typec(N/H)]],param[reg(),name(offset),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),sel_if[exp:??(N/H),st_return[exp:const:int(0)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(si),exp[grammar(&ref),grammar(exp),grammar(array_acc),exp:ident(swap_info),exp[grammar(call),exp:ident(swp_type),exp:ident(entry)]]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(target),exp[grammar(call),exp:ident(swp_offset),exp:ident(entry)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(base),exp[grammar(binary_arith),aop(<<),exp[grammar(binary_arith),aop(>>),exp:ident(target),exp:ident(our_page_cluster)],exp:ident(our_page_cluster)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(end),exp[grammar(binary_arith),aop(+),exp:ident(base),exp[grammar(binary_arith),aop(<<),exp:const:int(1),exp:ident(our_page_cluster)]]]],sel_if[exp:??(N/H),estmt[exp:??(N/H)],estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(swap_lock)]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(end),exp[grammar(record_ptr),exp:ident(si),ident(max)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(end),exp[grammar(record_ptr),exp:ident(si),ident(max)]]],estmt(NONE)],for[exp[grammar(assign),simple_assi(=),exp:ident(toff),exp:ident(target)],exp[grammar(binary_logi),logiop(??),exp:??(N/H),exp:ident(end)],exp:??(N/H),{}stmt[sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(si),ident(swap_map)],exp:ident(toff)],exp:ident(SWAP_MAP_BAD)],statem(N/H),estmt(NONE)]]],for[exp[grammar(assign),simple_assi(=),exp:ident(toff),exp:ident(target)],exp[grammar(binary_logi),logiop(??),exp:??(N/H),exp:ident(base)],exp:??(N/H),{}stmt[sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(si),ident(swap_map)],exp:ident(toff)],exp:ident(SWAP_MAP_BAD)],statem(N/H),estmt(NONE)]]],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]],estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(offset),exp:??(N/H)]],st_return[exp[grammar(cond3),exp:ident(nr_pages),exp:??(N/H),exp:const:int(0)]]]]]
[Diff] making all subterms for :
	prg2[includeN[inc_elem(linux),inc_elem(mempolicy.h)],includeN[inc_elem(linux),inc_elem(mm.h)],includeN[inc_elem(linux),inc_elem(highmem.h)],includeN[inc_elem(linux),inc_elem(hugetlb.h)],includeN[inc_elem(linux),inc_elem(kernel.h)],includeN[inc_elem(linux),inc_elem(sched.h)],includeN[inc_elem(linux),inc_elem(nodemask.h)],includeN[inc_elem(linux),inc_elem(cpuset.h)],includeN[inc_elem(linux),inc_elem(gfp.h)],includeN[inc_elem(linux),inc_elem(slab.h)],includeN[inc_elem(linux),inc_elem(string.h)],includeN[inc_elem(linux),inc_elem(module.h)],includeN[inc_elem(linux),inc_elem(nsproxy.h)],includeN[inc_elem(linux),inc_elem(interrupt.h)],includeN[inc_elem(linux),inc_elem(init.h)],includeN[inc_elem(linux),inc_elem(compat.h)],includeN[inc_elem(linux),inc_elem(swap.h)],includeN[inc_elem(linux),inc_elem(seq_file.h)],includeN[inc_elem(linux),inc_elem(proc_fs.h)],includeN[inc_elem(linux),inc_elem(migrate.h)],includeN[inc_elem(linux),inc_elem(rmap.h)],includeN[inc_elem(linux),inc_elem(security.h)],includeN[inc_elem(linux),inc_elem(syscalls.h)],includeN[inc_elem(asm),inc_elem(tlbflush.h)],includeN[inc_elem(asm),inc_elem(uaccess.h)],define(N/H),define(N/H),define(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),def[fname(mpol_check_policy),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(mode),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(nodes),fulltype[typec(N/H)]]],{}stmt[statem(N/H),sel_if[exp:??(N/H),st_return[exp:const:int(0)],estmt(NONE)],estmt[exp[grammar(call),exp:ident(cpuset_update_task_memory_state)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(is_empty),exp[grammar(assign),simple_assi(=),exp:ident(was_empty),exp[grammar(call),exp:ident(nodes_empty),exp:*ref:exp:ident(nodes)]]]],sel_if[exp:??(N/H),{}stmt[estmt[exp[grammar(call),exp:ident(nodes_and),exp:*ref:exp:ident(nodes),exp:*ref:exp:ident(nodes),exp:ident(cpuset_current_mems_allowed)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(is_empty),exp[grammar(call),exp:ident(nodes_empty),exp:*ref:exp:ident(nodes)]]]],estmt(NONE)],statem(N/H),st_return[exp:const:int(0)]]],def[fname(bind_zonelist),funtype[fulltype[typec(N/H)],param[reg(),name(nodes),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(max),exp[grammar(binary_arith),aop(+),exp:const:int(1),exp[grammar(binary_arith),aop(*),exp:ident(MAX_NR_ZONES),exp[grammar(call),exp:ident(nodes_weight),exp:*ref:exp:ident(nodes)]]]]],estmt[exp:??(N/H)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(zl),exp[grammar(call),exp:ident(kmalloc),exp[grammar(binary_arith),aop(*),exp[grammar(sizeoftype),grammar(fulltype),typec(N/H)],exp:ident(max)],exp:ident(GFP_KERNEL)]]],sel_if[exp:??(N/H),st_return[exp[grammar(call),exp:ident(ERR_PTR),exp:??(N/H)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(zl),ident(zlcache_ptr)],exp:ident(NULL)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(num),exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(k),exp[grammar(binary_arith),aop(-),exp:ident(MAX_NR_ZONES),exp:const:int(1)]]],while[exp:const:int(1),{}stmt[statem(N/H),sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(k),exp:const:int(0)],statem(N/H),estmt(NONE)],estmt[exp:??(N/H)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(num),exp:const:int(0)],{}stmt[estmt[exp[grammar(call),exp:ident(kfree),exp:ident(zl)]],st_return[exp[grammar(call),exp:ident(ERR_PTR),exp:??(N/H)]]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(zl),ident(zones)],exp:ident(num)],exp:ident(NULL)]],st_return[exp:ident(zl)]]],def[fname(mpol_new),funtype[fulltype[typec(N/H)],param[reg(),name(mode),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(nodes),fulltype[typec(N/H)]]],{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(pr_debug),exp:const:string(setting mode %d nodes[0] %lx\n),exp:ident(mode),exp[grammar(cond3),exp:ident(nodes),exp[grammar(array_acc),exp[grammar(call),exp:ident(nodes_addr),exp:*ref:exp:ident(nodes)],exp:const:int(0)],exp:??(N/H)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(mode),exp:ident(MPOL_DEFAULT)],st_return[exp:ident(NULL)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(policy),exp[grammar(call),exp:ident(kmem_cache_alloc),exp:ident(policy_cache),exp:ident(GFP_KERNEL)]]],sel_if[exp:??(N/H),st_return[exp[grammar(call),exp:ident(ERR_PTR),exp:??(N/H)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(atomic_set),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(policy),ident(refcnt)],exp:const:int(1)]],statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(policy),ident(policy)],exp:ident(mode)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(policy),ident(cpuset_mems_allowed)],exp[grammar(call),exp:ident(cpuset_mems_allowed),exp:ident(current)]]],st_return[exp:ident(policy)]]],decl(N/H),decl(N/H),def[fname(check_pte_range),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(vma),fulltype[typec(N/H)]],param[reg(),name(pmd),fulltype[typec(N/H)]],param[reg(),name(addr),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(end),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(nodes),fulltype[typec(N/H)]],param[reg(),name(flags),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(private),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(orig_pte),exp[grammar(assign),simple_assi(=),exp:ident(pte),exp[grammar(call),exp:ident(pte_offset_map_lock),exp[grammar(record_ptr),exp:ident(vma),ident(vm_mm)],exp:ident(pmd),exp:ident(addr),exp:&ref:exp:ident(ptl)]]]],statem(N/H),estmt[exp[grammar(call),exp:ident(pte_unmap_unlock),exp:ident(orig_pte),exp:ident(ptl)]],st_return[exp[grammar(binary_logi),logiop(??),exp:ident(addr),exp:ident(end)]]]],def[fname(check_pmd_range),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(vma),fulltype[typec(N/H)]],param[reg(),name(pud),fulltype[typec(N/H)]],param[reg(),name(addr),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(end),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(nodes),fulltype[typec(N/H)]],param[reg(),name(flags),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(private),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(pmd),exp[grammar(call),exp:ident(pmd_offset),exp:ident(pud),exp:ident(addr)]]],statem(N/H),st_return[exp:const:int(0)]]],def[fname(check_pud_range),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(vma),fulltype[typec(N/H)]],param[reg(),name(pgd),fulltype[typec(N/H)]],param[reg(),name(addr),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(end),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(nodes),fulltype[typec(N/H)]],param[reg(),name(flags),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(private),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(pud),exp[grammar(call),exp:ident(pud_offset),exp:ident(pgd),exp:ident(addr)]]],statem(N/H),st_return[exp:const:int(0)]]],def[fname(check_pgd_range),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(vma),fulltype[typec(N/H)]],param[reg(),name(addr),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(end),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(nodes),fulltype[typec(N/H)]],param[reg(),name(flags),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(private),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(pgd),exp[grammar(call),exp:ident(pgd_offset),exp[grammar(record_ptr),exp:ident(vma),ident(vm_mm)],exp:ident(addr)]]],statem(N/H),st_return[exp:const:int(0)]]],def[fname(check_range),funtype[fulltype[typec(N/H)],param[reg(),name(mm),fulltype[typec(N/H)]],param[reg(),name(start),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(end),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(nodes),fulltype[typec(N/H)]],param[reg(),name(flags),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(private),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp[grammar(binary_arith),aop(&),exp:ident(flags),exp[grammar(binary_arith),aop(|),exp:ident(MPOL_MF_MOVE),exp:ident(MPOL_MF_MOVE_ALL)]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(migrate_prep)]]],sel_if[exp:ident(err),st_return[exp[grammar(call),exp:ident(ERR_PTR),exp:ident(err)]],estmt(NONE)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(first),exp[grammar(call),exp:ident(find_vma),exp:ident(mm),exp:ident(start)]]],sel_if[exp:??(N/H),st_return[exp[grammar(call),exp:ident(ERR_PTR),exp:??(N/H)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(prev),exp:ident(NULL)]],for[exp[grammar(assign),simple_assi(=),exp:ident(vma),exp:ident(first)],exp[grammar(binary_logi),logiop(and),exp:ident(vma),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp:ident(end)]],exp[grammar(assign),simple_assi(=),exp:ident(vma),exp[grammar(record_ptr),exp:ident(vma),ident(vm_next)]],{}stmt[sel_if[exp:??(N/H),{}stmt[sel_if[exp[grammar(binary_logi),logiop(and),exp:??(N/H),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp:ident(end)]],st_return[exp[grammar(call),exp:ident(ERR_PTR),exp:??(N/H)]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(and),exp:ident(prev),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(prev),ident(vm_end)],exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)]]],st_return[exp[grammar(call),exp:ident(ERR_PTR),exp:??(N/H)]],estmt(NONE)]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(and),exp:??(N/H),exp[grammar(binary_logi),logiop(or),exp[grammar(binary_arith),aop(&),exp:ident(flags),exp:ident(MPOL_MF_STRICT)],exp[grammar(binary_logi),logiop(and),exp[grammar(binary_arith),aop(&),exp:ident(flags),exp[grammar(binary_arith),aop(|),exp:ident(MPOL_MF_MOVE),exp:ident(MPOL_MF_MOVE_ALL)]],exp[grammar(call),exp:ident(vma_migratable),exp:ident(vma)]]]],{}stmt[statem(N/H),sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(endvma),exp:ident(end)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(endvma),exp:ident(end)]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp:ident(start)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(start),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)]]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(check_pgd_range),exp:ident(vma),exp:ident(start),exp:ident(endvma),exp:ident(nodes),exp:ident(flags),exp:ident(private)]]],sel_if[exp:ident(err),{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(first),exp[grammar(call),exp:ident(ERR_PTR),exp:ident(err)]]],statem(N/H)],estmt(NONE)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(prev),exp:ident(vma)]]]],st_return[exp:ident(first)]]],def[fname(policy_vma),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(vma),fulltype[typec(N/H)]],param[reg(),name(new),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(pr_debug),exp:const:string(vma %lx-%lx/%lx vm_ops %p vm_file %p set_policy %p\n),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp[grammar(record_ptr),exp:ident(vma),ident(vm_pgoff)],exp[grammar(record_ptr),exp:ident(vma),ident(vm_ops)],exp[grammar(record_ptr),exp:ident(vma),ident(vm_file)],exp[grammar(cond3),exp[grammar(record_ptr),exp:ident(vma),ident(vm_ops)],exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(vma),ident(vm_ops)],ident(set_policy)],exp:ident(NULL)]]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(record_ptr),exp:ident(vma),ident(vm_ops)],exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(vma),ident(vm_ops)],ident(set_policy)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(vma),ident(vm_ops)],ident(set_policy)],exp:ident(vma),exp:ident(new)]]],estmt(NONE)],sel_if[exp:??(N/H),{}stmt[estmt[exp[grammar(call),exp:ident(mpol_get),exp:ident(new)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(vma),ident(vm_policy)],exp:ident(new)]],estmt[exp[grammar(call),exp:ident(mpol_free),exp:ident(old)]]],estmt(NONE)],st_return[exp:ident(err)]]],def[fname(mbind_range),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(vma),fulltype[typec(N/H)]],param[reg(),name(start),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(end),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(new),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:const:int(0)]],for[expr(NONE),exp[grammar(binary_logi),logiop(and),exp:ident(vma),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp:ident(end)]],exp[grammar(assign),simple_assi(=),exp:ident(vma),exp:ident(next)],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(next),exp[grammar(record_ptr),exp:ident(vma),ident(vm_next)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp:ident(start)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(split_vma),exp[grammar(record_ptr),exp:ident(vma),ident(vm_mm)],exp:ident(vma),exp:ident(start),exp:const:int(1)]]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(and),exp:??(N/H),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp:ident(end)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(split_vma),exp[grammar(record_ptr),exp:ident(vma),ident(vm_mm)],exp:ident(vma),exp:ident(end),exp:const:int(0)]]],estmt(NONE)],sel_if[exp:??(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(policy_vma),exp:ident(vma),exp:ident(new)]]],estmt(NONE)],sel_if[exp:ident(err),statem(N/H),estmt(NONE)]]],st_return[exp:ident(err)]]],def[fname(mpol_fix_fork_child_flag),funtype[fulltype[ctype[btype(void)]],param[reg(),name(p),fulltype[typec(N/H)]]],{}stmt[sel_if[exp[grammar(record_ptr),exp:ident(p),ident(mempolicy)],estmt[exp[grammar(assign),op_assi(|=),exp[grammar(record_ptr),exp:ident(p),ident(flags)],exp:ident(PF_MEMPOLICY)]],estmt[exp[grammar(assign),op_assi(&=),exp[grammar(record_ptr),exp:ident(p),ident(flags)],exp:??(N/H)]]]]],def[fname(mpol_set_task_struct_flag),funtype[fulltype[ctype[btype(void)]],param[reg(),name(),fulltype[ctype[btype(void)]]]],{}stmt[estmt[exp[grammar(call),exp:ident(mpol_fix_fork_child_flag),exp:ident(current)]]]],def[fname(do_set_mempolicy),funtype[fulltype[ctype[btype[itype[sgn(signed),base(long)]]]],param[reg(),name(mode),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(nodes),fulltype[typec(N/H)]]],{}stmt[statem(N/H),sel_if[exp[grammar(call),exp:ident(mpol_check_policy),exp:ident(mode),exp:ident(nodes)],st_return[exp:??(N/H)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(new),exp[grammar(call),exp:ident(mpol_new),exp:ident(mode),exp:ident(nodes)]]],sel_if[exp[grammar(call),exp:ident(IS_ERR),exp:ident(new)],st_return[exp[grammar(call),exp:ident(PTR_ERR),exp:ident(new)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(mpol_free),exp[grammar(record_ptr),exp:ident(current),ident(mempolicy)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(current),ident(mempolicy)],exp:ident(new)]],estmt[exp[grammar(call),exp:ident(mpol_set_task_struct_flag)]],sel_if[exp[grammar(binary_logi),logiop(and),exp:ident(new),exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(new),ident(policy)],exp:ident(MPOL_INTERLEAVE)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(current),ident(il_next)],exp[grammar(call),exp:ident(first_node),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(new),ident(v)],ident(nodes)]]]],estmt(NONE)],st_return[exp:const:int(0)]]],def[fname(get_zonemask),funtype[fulltype[ctype[btype(void)]],param[reg(),name(p),fulltype[typec(N/H)]],param[reg(),name(nodes),fulltype[typec(N/H)]]],{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(nodes_clear),exp:*ref:exp:ident(nodes)]],statem(N/H)]],def[fname(lookup_node),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(mm),fulltype[typec(N/H)]],param[reg(),name(addr),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(get_user_pages),exp:ident(current),exp:ident(mm),exp[grammar(binary_arith),aop(&),exp:ident(addr),exp:ident(PAGE_MASK)],exp:const:int(1),exp:const:int(0),exp:const:int(0),exp:&ref:exp:ident(p),exp:ident(NULL)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(err),exp:const:int(0)],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(page_to_nid),exp:ident(p)]]],estmt[exp[grammar(call),exp:ident(put_page),exp:ident(p)]]],estmt(NONE)],st_return[exp:ident(err)]]],def[fname(do_get_mempolicy),funtype[fulltype[ctype[btype[itype[sgn(signed),base(long)]]]],param[reg(),name(policy),fulltype[typec(N/H)]],param[reg(),name(nmask),fulltype[typec(N/H)]],param[reg(),name(addr),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(flags),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(cpuset_update_task_memory_state)]],sel_if[exp[grammar(binary_arith),aop(&),exp:ident(flags),exp:??(N/H)],st_return[exp:??(N/H)],estmt(NONE)],sel_if[exp[grammar(binary_arith),aop(&),exp:ident(flags),exp:ident(MPOL_F_MEMS_ALLOWED)],{}stmt[sel_if[exp[grammar(binary_arith),aop(&),exp:ident(flags),exp[grammar(binary_arith),aop(|),exp:ident(MPOL_F_NODE),exp:ident(MPOL_F_ADDR)]],st_return[exp:??(N/H)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(policy),exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(nmask),exp:ident(cpuset_current_mems_allowed)]],st_return[exp:const:int(0)]],estmt(NONE)],sel_if[exp[grammar(binary_arith),aop(&),exp:ident(flags),exp:ident(MPOL_F_ADDR)],{}stmt[estmt[exp[grammar(call),exp:ident(down_read),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(mm),ident(mmap_sem)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(vma),exp[grammar(call),exp:ident(find_vma_intersection),exp:ident(mm),exp:ident(addr),exp[grammar(binary_arith),aop(+),exp:ident(addr),exp:const:int(1)]]]],sel_if[exp:??(N/H),{}stmt[estmt[exp[grammar(call),exp:ident(up_read),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(mm),ident(mmap_sem)]]],st_return[exp:??(N/H)]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(record_ptr),exp:ident(vma),ident(vm_ops)],exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(vma),ident(vm_ops)],ident(get_policy)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(pol),exp[grammar(call),exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(vma),ident(vm_ops)],ident(get_policy)],exp:ident(vma),exp:ident(addr)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(pol),exp[grammar(record_ptr),exp:ident(vma),ident(vm_policy)]]]]],sel_if[exp:ident(addr),st_return[exp:??(N/H)],estmt(NONE)]],sel_if[exp:??(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(pol),exp:&ref:exp:ident(default_policy)]],estmt(NONE)],sel_if[exp[grammar(binary_arith),aop(&),exp:ident(flags),exp:ident(MPOL_F_NODE)],{}stmt[sel_if[exp[grammar(binary_arith),aop(&),exp:ident(flags),exp:ident(MPOL_F_ADDR)],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(lookup_node),exp:ident(mm),exp:ident(addr)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(err),exp:const:int(0)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(policy),exp:ident(err)]]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(eq),exp:ident(pol),exp[grammar(record_ptr),exp:ident(current),ident(mempolicy)]],exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(pol),ident(policy)],exp:ident(MPOL_INTERLEAVE)]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(policy),exp[grammar(record_ptr),exp:ident(current),ident(il_next)]]]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],statem(N/H)]]]],estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(policy),exp[grammar(record_ptr),exp:ident(pol),ident(policy)]]]],sel_if[exp:ident(vma),{}stmt[estmt[exp[grammar(call),exp:ident(up_read),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp[grammar(record_ptr),exp:ident(current),ident(mm)],ident(mmap_sem)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(vma),exp:ident(NULL)]]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:const:int(0)]],sel_if[exp:ident(nmask),estmt[exp[grammar(call),exp:ident(get_zonemask),exp:ident(pol),exp:ident(nmask)]],estmt(NONE)],statem(N/H),st_return[exp:ident(err)]]],def[fname(migrate_page_add),funtype[fulltype[ctype[btype(void)]],param[reg(),name(page),fulltype[typec(N/H)]],param[reg(),name(pagelist),fulltype[typec(N/H)]],param[reg(),name(flags),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]]],{}stmt[sel_if[exp[grammar(binary_logi),logiop(or),exp[grammar(binary_arith),aop(&),exp:ident(flags),exp:ident(MPOL_MF_MOVE_ALL)],exp[grammar(binary_logi),logiop(eq),exp[grammar(call),exp:ident(page_mapcount),exp:ident(page)],exp:const:int(1)]],estmt[exp[grammar(call),exp:ident(isolate_lru_page),exp:ident(page),exp:ident(pagelist)]],estmt(NONE)]]],def[fname(new_node_page),funtype[fulltype[typec(N/H)],param[reg(),name(page),fulltype[typec(N/H)]],param[reg(),name(node),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(x),fulltype[typec(N/H)]]],{}stmt[st_return[exp[grammar(call),exp:ident(alloc_pages_node),exp:ident(node),exp:ident(GFP_HIGHUSER_MOVABLE),exp:const:int(0)]]]],def[fname(migrate_to_node),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(mm),fulltype[typec(N/H)]],param[reg(),name(source),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(dest),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(flags),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(LIST_HEAD),exp:ident(pagelist)]],statem(N/H),estmt[exp[grammar(call),exp:ident(nodes_clear),exp:ident(nmask)]],estmt[exp[grammar(call),exp:ident(node_set),exp:ident(source),exp:ident(nmask)]],estmt[exp[grammar(call),exp:ident(check_range),exp:ident(mm),exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(mm),ident(mmap)],ident(vm_start)],exp:ident(TASK_SIZE),exp:&ref:exp:ident(nmask),exp[grammar(binary_arith),aop(|),exp:ident(flags),exp:ident(MPOL_MF_DISCONTIG_OK)],exp:&ref:exp:ident(pagelist)]],sel_if[exp:??(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(migrate_pages),exp:&ref:exp:ident(pagelist),exp:ident(new_node_page),exp:ident(dest)]]],estmt(NONE)],st_return[exp:ident(err)]]],def[fname(do_migrate_pages),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(mm),fulltype[typec(N/H)]],param[reg(),name(from_nodes),fulltype[typec(N/H)]],param[reg(),name(to_nodes),fulltype[typec(N/H)]],param[reg(),name(flags),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[estmt[exp[grammar(call),exp:ident(LIST_HEAD),exp:ident(pagelist)]],statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(down_read),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(mm),ident(mmap_sem)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(migrate_vmas),exp:ident(mm),exp:ident(from_nodes),exp:ident(to_nodes),exp:ident(flags)]]],sel_if[exp:ident(err),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(tmp),exp:*ref:exp:ident(from_nodes)]],while[exp:??(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(source),exp:??(N/H)],statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(node_clear),exp:ident(source),exp:ident(tmp)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(migrate_to_node),exp:ident(mm),exp:ident(source),exp:ident(dest),exp:ident(flags)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(err),exp:const:int(0)],estmt[exp[grammar(assign),op_assi(+=),exp:ident(busy),exp:ident(err)]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(err),exp:const:int(0)],statem(N/H),estmt(NONE)]]],statem(N/H),sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(err),exp:const:int(0)],st_return[exp:ident(err)],estmt(NONE)],st_return[exp:ident(busy)]]],NCP(N/H),def[fname(migrate_page_add),funtype[fulltype[ctype[btype(void)]],param[reg(),name(page),fulltype[typec(N/H)]],param[reg(),name(pagelist),fulltype[typec(N/H)]],param[reg(),name(flags),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]]],{}stmt[]],def[fname(do_migrate_pages),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(mm),fulltype[typec(N/H)]],param[reg(),name(from_nodes),fulltype[typec(N/H)]],param[reg(),name(to_nodes),fulltype[typec(N/H)]],param[reg(),name(flags),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[st_return[exp:??(N/H)]]],def[fname(new_vma_page),funtype[fulltype[typec(N/H)],param[reg(),name(page),fulltype[typec(N/H)]],param[reg(),name(private),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(x),fulltype[typec(N/H)]]],{}stmt[st_return[exp:ident(NULL)]]],def[fname(do_mbind),funtype[fulltype[ctype[btype[itype[sgn(signed),base(long)]]]],param[reg(),name(start),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(len),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(mode),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(nmask),fulltype[typec(N/H)]],param[reg(),name(flags),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(LIST_HEAD),exp:ident(pagelist)]],sel_if[exp[grammar(binary_logi),logiop(or),exp[grammar(binary_arith),aop(&),exp:ident(flags),exp:??(N/H)],exp[grammar(binary_logi),logiop(??),exp:ident(mode),exp:ident(MPOL_MAX)]],st_return[exp:??(N/H)],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_arith),aop(&),exp:ident(flags),exp:ident(MPOL_MF_MOVE_ALL)],exp:??(N/H)],st_return[exp:??(N/H)],estmt(NONE)],sel_if[exp[grammar(binary_arith),aop(&),exp:ident(start),exp:??(N/H)],st_return[exp:??(N/H)],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(mode),exp:ident(MPOL_DEFAULT)],estmt[exp[grammar(assign),op_assi(&=),exp:ident(flags),exp:??(N/H)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(len),exp[grammar(binary_arith),aop(&),exp[grammar(binary_arith),aop(-),exp[grammar(binary_arith),aop(+),exp:ident(len),exp:ident(PAGE_SIZE)],exp:const:int(1)],exp:ident(PAGE_MASK)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(end),exp[grammar(binary_arith),aop(+),exp:ident(start),exp:ident(len)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(end),exp:ident(start)],st_return[exp:??(N/H)],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(end),exp:ident(start)],st_return[exp:const:int(0)],estmt(NONE)],sel_if[exp[grammar(call),exp:ident(mpol_check_policy),exp:ident(mode),exp:ident(nmask)],st_return[exp:??(N/H)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(new),exp[grammar(call),exp:ident(mpol_new),exp:ident(mode),exp:ident(nmask)]]],sel_if[exp[grammar(call),exp:ident(IS_ERR),exp:ident(new)],st_return[exp[grammar(call),exp:ident(PTR_ERR),exp:ident(new)]],estmt(NONE)],sel_if[exp:??(N/H),estmt[exp[grammar(assign),op_assi(|=),exp:ident(flags),exp:ident(MPOL_MF_DISCONTIG_OK)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(pr_debug),exp:const:string(mbind %lx-%lx mode:%ld nodes:%lx\n),exp:ident(start),exp[grammar(binary_arith),aop(+),exp:ident(start),exp:ident(len)],exp:ident(mode),exp[grammar(cond3),exp:ident(nmask),exp[grammar(array_acc),exp[grammar(call),exp:ident(nodes_addr),exp:*ref:exp:ident(nmask)],exp:const:int(0)],exp:??(N/H)]]],estmt[exp[grammar(call),exp:ident(down_write),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(mm),ident(mmap_sem)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(vma),exp[grammar(call),exp:ident(check_range),exp:ident(mm),exp:ident(start),exp:ident(end),exp:ident(nmask),exp[grammar(binary_arith),aop(|),exp:ident(flags),exp:ident(MPOL_MF_INVERT)],exp:&ref:exp:ident(pagelist)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(PTR_ERR),exp:ident(vma)]]],sel_if[exp:??(N/H),{}stmt[statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(mbind_range),exp:ident(vma),exp:ident(start),exp:ident(end),exp:ident(new)]]],sel_if[exp:??(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(nr_failed),exp[grammar(call),exp:ident(migrate_pages),exp:&ref:exp:ident(pagelist),exp:ident(new_vma_page),exp:??(N/H)]]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(and),exp:??(N/H),exp:ident(nr_failed)],exp[grammar(binary_arith),aop(&),exp:ident(flags),exp:ident(MPOL_MF_STRICT)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],estmt(NONE)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(up_write),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(mm),ident(mmap_sem)]]],estmt[exp[grammar(call),exp:ident(mpol_free),exp:ident(new)]],st_return[exp:ident(err)]]],NCP(N/H),NCP(N/H),NCP(N/H),NCP(N/H),NCP(N/H),NCP(N/H),NCP(N/H),NCP(N/H),NCP(N/H),def[fname(get_vma_policy),funtype[fulltype[typec(N/H)],param[reg(),name(task),fulltype[typec(N/H)]],param[reg(),name(vma),fulltype[typec(N/H)]],param[reg(),name(addr),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp:ident(vma),{}stmt[sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(record_ptr),exp:ident(vma),ident(vm_ops)],exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(vma),ident(vm_ops)],ident(get_policy)]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(pol),exp[grammar(call),exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(vma),ident(vm_ops)],ident(get_policy)],exp:ident(vma),exp:ident(addr)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(shared_pol),exp:const:int(1)]]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(record_ptr),exp:ident(vma),ident(vm_policy)],exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(vma),ident(vm_policy)],ident(policy)],exp:ident(MPOL_DEFAULT)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(pol),exp[grammar(record_ptr),exp:ident(vma),ident(vm_policy)]]],estmt(NONE)]]],estmt(NONE)],sel_if[exp:??(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(pol),exp:&ref:exp:ident(default_policy)]],sel_if[exp[grammar(binary_logi),logiop(and),exp:??(N/H),exp[grammar(binary_logi),logiop(??),exp:ident(pol),exp[grammar(record_ptr),exp:ident(current),ident(mempolicy)]]],estmt[exp[grammar(call),exp:ident(mpol_get),exp:ident(pol)]],estmt(NONE)]],st_return[exp:ident(pol)]]],def[fname(zonelist_policy),funtype[fulltype[typec(N/H)],param[reg(),name(gfp),fulltype[typec(N/H)]],param[reg(),name(policy),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),st_return[exp[grammar(binary_arith),aop(+),exp[grammar(record_ptr),exp[grammar(call),exp:ident(NODE_DATA),exp:ident(nd)],ident(node_zonelists)],exp[grammar(call),exp:ident(gfp_zone),exp:ident(gfp)]]]]],def[fname(interleave_nodes),funtype[fulltype[ctype[btype[itype[sgn(unsigned),base(int)]]]],param[reg(),name(policy),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(nid),exp[grammar(record_ptr),exp:ident(me),ident(il_next)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(next),exp[grammar(call),exp:ident(next_node),exp:ident(nid),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(policy),ident(v)],ident(nodes)]]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(next),exp:ident(MAX_NUMNODES)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(next),exp[grammar(call),exp:ident(first_node),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(policy),ident(v)],ident(nodes)]]]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(me),ident(il_next)],exp:ident(next)]],st_return[exp:ident(nid)]]],def[fname(slab_node),funtype[fulltype[ctype[btype[itype[sgn(unsigned),base(int)]]]],param[reg(),name(policy),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H)]],def[fname(offset_il_node),funtype[fulltype[ctype[btype[itype[sgn(unsigned),base(int)]]]],param[reg(),name(pol),fulltype[typec(N/H)]],param[reg(),name(vma),fulltype[typec(N/H)]],param[reg(),name(off),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(c),exp:const:int(0)]],statem(N/H),st_return[exp:ident(nid)]]],def[fname(interleave_nid),funtype[fulltype[ctype[btype[itype[sgn(unsigned),base(int)]]]],param[reg(),name(pol),fulltype[typec(N/H)]],param[reg(),name(vma),fulltype[typec(N/H)]],param[reg(),name(addr),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(shift),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[sel_if[exp:ident(vma),{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(BUG_ON),exp[grammar(binary_logi),logiop(??),exp:ident(shift),exp:ident(PAGE_SHIFT)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(off),exp[grammar(binary_arith),aop(>>),exp[grammar(record_ptr),exp:ident(vma),ident(vm_pgoff)],exp[grammar(binary_arith),aop(-),exp:ident(shift),exp:ident(PAGE_SHIFT)]]]],estmt[exp[grammar(assign),op_assi(+=),exp:ident(off),exp[grammar(binary_arith),aop(>>),exp[grammar(binary_arith),aop(-),exp:ident(addr),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)]],exp:ident(shift)]]],st_return[exp[grammar(call),exp:ident(offset_il_node),exp:ident(pol),exp:ident(vma),exp:ident(off)]]],st_return[exp[grammar(call),exp:ident(interleave_nodes),exp:ident(pol)]]]]],def[fname(huge_zonelist),funtype[fulltype[typec(N/H)],param[reg(),name(vma),fulltype[typec(N/H)]],param[reg(),name(addr),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(gfp_flags),fulltype[typec(N/H)]],param[reg(),name(mpol),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(mpol),exp:ident(NULL)]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(pol),ident(policy)],exp:ident(MPOL_INTERLEAVE)],{}stmt[statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(nid),exp[grammar(call),exp:ident(interleave_nid),exp:ident(pol),exp:ident(vma),exp:ident(addr),exp:ident(HPAGE_SHIFT)]]],estmt[exp[grammar(call),exp:ident(__mpol_free),exp:ident(pol)]],st_return[exp[grammar(binary_arith),aop(+),exp[grammar(record_ptr),exp[grammar(call),exp:ident(NODE_DATA),exp:ident(nid)],ident(node_zonelists)],exp[grammar(call),exp:ident(gfp_zone),exp:ident(gfp_flags)]]]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(zl),exp[grammar(call),exp:ident(zonelist_policy),exp:ident(GFP_HIGHUSER),exp:ident(pol)]]],sel_if[exp[grammar(call),exp:ident(unlikely),exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp:ident(pol),exp:&ref:exp:ident(default_policy)],exp[grammar(binary_logi),logiop(??),exp:ident(pol),exp[grammar(record_ptr),exp:ident(current),ident(mempolicy)]]]],{}stmt[sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(pol),ident(policy)],exp:ident(MPOL_BIND)],estmt[exp[grammar(call),exp:ident(__mpol_free),exp:ident(pol)]],estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(mpol),exp:ident(pol)]]]],estmt(NONE)],st_return[exp:ident(zl)]]],def[fname(alloc_page_interleave),funtype[fulltype[typec(N/H)],param[reg(),name(gfp),fulltype[typec(N/H)]],param[reg(),name(order),fulltype[ctype[btype[itype[sgn(unsigned),base(int)]]]]],param[reg(),name(nid),fulltype[ctype[btype[itype[sgn(unsigned),base(int)]]]]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(zl),exp[grammar(binary_arith),aop(+),exp[grammar(record_ptr),exp[grammar(call),exp:ident(NODE_DATA),exp:ident(nid)],ident(node_zonelists)],exp[grammar(call),exp:ident(gfp_zone),exp:ident(gfp)]]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(page),exp[grammar(call),exp:ident(__alloc_pages),exp:ident(gfp),exp:ident(order),exp:ident(zl)]]],sel_if[exp[grammar(binary_logi),logiop(and),exp:ident(page),exp[grammar(binary_logi),logiop(eq),exp[grammar(call),exp:ident(page_zone),exp:ident(page)],exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(zl),ident(zones)],exp:const:int(0)]]],estmt[exp[grammar(call),exp:ident(inc_zone_page_state),exp:ident(page),exp:ident(NUMA_INTERLEAVE_HIT)]],estmt(NONE)],st_return[exp:ident(page)]]],def[fname(alloc_page_vma),funtype[fulltype[typec(N/H)],param[reg(),name(gfp),fulltype[typec(N/H)]],param[reg(),name(vma),fulltype[typec(N/H)]],param[reg(),name(addr),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(cpuset_update_task_memory_state)]],sel_if[exp[grammar(call),exp:ident(unlikely),exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(pol),ident(policy)],exp:ident(MPOL_INTERLEAVE)]],{}stmt[statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(nid),exp[grammar(call),exp:ident(interleave_nid),exp:ident(pol),exp:ident(vma),exp:ident(addr),exp:ident(PAGE_SHIFT)]]],st_return[exp[grammar(call),exp:ident(alloc_page_interleave),exp:ident(gfp),exp:const:int(0),exp:ident(nid)]]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(zl),exp[grammar(call),exp:ident(zonelist_policy),exp:ident(gfp),exp:ident(pol)]]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp:ident(pol),exp:&ref:exp:ident(default_policy)],exp[grammar(binary_logi),logiop(??),exp:ident(pol),exp[grammar(record_ptr),exp:ident(current),ident(mempolicy)]]],{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(__mpol_free),exp:ident(pol)]],st_return[exp:ident(page)]],estmt(NONE)],st_return[exp[grammar(call),exp:ident(__alloc_pages),exp:ident(gfp),exp:const:int(0),exp:ident(zl)]]]],def[fname(alloc_pages_current),funtype[fulltype[typec(N/H)],param[reg(),name(gfp),fulltype[typec(N/H)]],param[reg(),name(order),fulltype[ctype[btype[itype[sgn(unsigned),base(int)]]]]]],{}stmt[statem(N/H),sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_arith),aop(&),exp:ident(gfp),exp:ident(__GFP_WAIT)],exp:??(N/H)],estmt[exp[grammar(call),exp:ident(cpuset_update_task_memory_state)]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(or),exp[grammar(binary_logi),logiop(or),exp:??(N/H),exp[grammar(call),exp:ident(in_interrupt)]],exp[grammar(binary_arith),aop(&),exp:ident(gfp),exp:ident(__GFP_THISNODE)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(pol),exp:&ref:exp:ident(default_policy)]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(pol),ident(policy)],exp:ident(MPOL_INTERLEAVE)],st_return[exp[grammar(call),exp:ident(alloc_page_interleave),exp:ident(gfp),exp:ident(order),exp[grammar(call),exp:ident(interleave_nodes),exp:ident(pol)]]],estmt(NONE)],st_return[exp[grammar(call),exp:ident(__alloc_pages),exp:ident(gfp),exp:ident(order),exp[grammar(call),exp:ident(zonelist_policy),exp:ident(gfp),exp:ident(pol)]]]]],mtop(N/H),def[fname(__mpol_copy),funtype[fulltype[typec(N/H)],param[reg(),name(old),fulltype[typec(N/H)]]],{}stmt[statem(N/H),sel_if[exp:??(N/H),st_return[exp[grammar(call),exp:ident(ERR_PTR),exp:??(N/H)]],estmt(NONE)],sel_if[exp[grammar(call),exp:ident(current_cpuset_is_being_rebound)],{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(mpol_rebind_policy),exp:ident(old),exp:&ref:exp:ident(mems)]]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(new),exp:*ref:exp:ident(old)]],estmt[exp[grammar(call),exp:ident(atomic_set),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(new),ident(refcnt)],exp:const:int(1)]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(new),ident(policy)],exp:ident(MPOL_BIND)],{}stmt[statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(new),ident(v)],ident(zonelist)],exp[grammar(call),exp:ident(kmemdup),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(old),ident(v)],ident(zonelist)],exp:ident(sz),exp:ident(GFP_KERNEL)]]],sel_if[exp:??(N/H),{}stmt[estmt[exp[grammar(call),exp:ident(kmem_cache_free),exp:ident(policy_cache),exp:ident(new)]],st_return[exp[grammar(call),exp:ident(ERR_PTR),exp:??(N/H)]]],estmt(NONE)]],estmt(NONE)],st_return[exp:ident(new)]]],def[fname(__mpol_equal),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(a),fulltype[typec(N/H)]],param[reg(),name(b),fulltype[typec(N/H)]]],{}stmt[sel_if[exp[grammar(binary_logi),logiop(or),exp:??(N/H),exp:??(N/H)],st_return[exp:const:int(0)],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(a),ident(policy)],exp[grammar(record_ptr),exp:ident(b),ident(policy)]],st_return[exp:const:int(0)],estmt(NONE)],statem(N/H)]],def[fname(__mpol_free),funtype[fulltype[ctype[btype(void)]],param[reg(),name(p),fulltype[typec(N/H)]]],{}stmt[sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(p),ident(policy)],exp:ident(MPOL_BIND)],estmt[exp[grammar(call),exp:ident(kfree),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(p),ident(v)],ident(zonelist)]]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(p),ident(policy)],exp:ident(MPOL_DEFAULT)]],estmt[exp[grammar(call),exp:ident(kmem_cache_free),exp:ident(policy_cache),exp:ident(p)]]]],def[fname(sp_lookup),funtype[fulltype[typec(N/H)],param[reg(),name(sp),fulltype[typec(N/H)]],param[reg(),name(start),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(end),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]]],{}stmt[statem(N/H),while[exp:ident(n),{}stmt[statem(N/H),sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(start),exp[grammar(record_ptr),exp:ident(p),ident(end)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(n),exp[grammar(record_ptr),exp:ident(n),ident(rb_right)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(end),exp[grammar(record_ptr),exp:ident(p),ident(start)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(n),exp[grammar(record_ptr),exp:ident(n),ident(rb_left)]]],statem(N/H)]]]],sel_if[exp:??(N/H),st_return[exp:ident(NULL)],estmt(NONE)],for[expr(NONE),expr(NONE),expr(NONE),{}stmt[statem(N/H),statem(N/H),sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(w),exp[grammar(call),exp:ident(rb_entry),exp:ident(prev),argtype(N/H),exp:ident(nd)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(w),ident(end)],exp:ident(start)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(n),exp:ident(prev)]]]],st_return[exp[grammar(call),exp:ident(rb_entry),exp:ident(n),argtype(N/H),exp:ident(nd)]]]],def[fname(sp_insert),funtype[fulltype[ctype[btype(void)]],param[reg(),name(sp),fulltype[typec(N/H)]],param[reg(),name(new),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),while[exp:*ref:exp:ident(p),{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(parent),exp:*ref:exp:ident(p)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(nd),exp[grammar(call),exp:ident(rb_entry),exp:ident(parent),argtype(N/H),exp:ident(nd)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(new),ident(start)],exp[grammar(record_ptr),exp:ident(nd),ident(start)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(p),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:*ref:exp:ident(p),ident(rb_left)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(new),ident(end)],exp[grammar(record_ptr),exp:ident(nd),ident(end)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(p),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:*ref:exp:ident(p),ident(rb_right)]]],estmt[exp[grammar(call),exp:ident(BUG)]]]]]],estmt[exp[grammar(call),exp:ident(rb_link_node),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(new),ident(nd)],exp:ident(parent),exp:ident(p)]],estmt[exp[grammar(call),exp:ident(rb_insert_color),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(new),ident(nd)],exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(sp),ident(root)]]],estmt[exp[grammar(call),exp:ident(pr_debug),exp:const:string(inserting %lx-%lx: %d\n),exp[grammar(record_ptr),exp:ident(new),ident(start)],exp[grammar(record_ptr),exp:ident(new),ident(end)],exp[grammar(cond3),exp[grammar(record_ptr),exp:ident(new),ident(policy)],exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(new),ident(policy)],ident(policy)],exp:const:int(0)]]]]],def[fname(mpol_shared_policy_lookup),funtype[fulltype[typec(N/H)],param[reg(),name(sp),fulltype[typec(N/H)]],param[reg(),name(idx),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp:??(N/H),st_return[exp:ident(NULL)],estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_lock),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(sp),ident(lock)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(sn),exp[grammar(call),exp:ident(sp_lookup),exp:ident(sp),exp:ident(idx),exp[grammar(binary_arith),aop(+),exp:ident(idx),exp:const:int(1)]]]],sel_if[exp:ident(sn),{}stmt[estmt[exp[grammar(call),exp:ident(mpol_get),exp[grammar(record_ptr),exp:ident(sn),ident(policy)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(pol),exp[grammar(record_ptr),exp:ident(sn),ident(policy)]]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_unlock),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(sp),ident(lock)]]],st_return[exp:ident(pol)]]],def[fname(sp_delete),funtype[fulltype[ctype[btype(void)]],param[reg(),name(sp),fulltype[typec(N/H)]],param[reg(),name(n),fulltype[typec(N/H)]]],{}stmt[estmt[exp[grammar(call),exp:ident(pr_debug),exp:const:string(deleting %lx-l%lx\n),exp[grammar(record_ptr),exp:ident(n),ident(start)],exp[grammar(record_ptr),exp:ident(n),ident(end)]]],estmt[exp[grammar(call),exp:ident(rb_erase),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(n),ident(nd)],exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(sp),ident(root)]]],estmt[exp[grammar(call),exp:ident(mpol_free),exp[grammar(record_ptr),exp:ident(n),ident(policy)]]],estmt[exp[grammar(call),exp:ident(kmem_cache_free),exp:ident(sn_cache),exp:ident(n)]]]],def[fname(sp_alloc),funtype[fulltype[typec(N/H)],param[reg(),name(start),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(end),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(pol),fulltype[typec(N/H)]]],{}stmt[statem(N/H),sel_if[exp:??(N/H),st_return[exp:ident(NULL)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(n),ident(start)],exp:ident(start)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(n),ident(end)],exp:ident(end)]],estmt[exp[grammar(call),exp:ident(mpol_get),exp:ident(pol)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(n),ident(policy)],exp:ident(pol)]],st_return[exp:ident(n)]]],def[fname(shared_policy_replace),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(sp),fulltype[typec(N/H)]],param[reg(),name(start),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(end),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(new),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(n),exp[grammar(call),exp:ident(sp_lookup),exp:ident(sp),exp:ident(start),exp:ident(end)]]],while[exp[grammar(binary_logi),logiop(and),exp:ident(n),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(n),ident(start)],exp:ident(end)]],{}stmt[statem(N/H),sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(n),ident(start)],exp:ident(start)],{}stmt[sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(n),ident(end)],exp:ident(end)],estmt[exp[grammar(call),exp:ident(sp_delete),exp:ident(sp),exp:ident(n)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(n),ident(start)],exp:ident(end)]]]],{}stmt[sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(n),ident(end)],exp:ident(end)],{}stmt[sel_if[exp:??(N/H),{}stmt[estmt[exp[grammar(call),exp:ident(spin_unlock),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(sp),ident(lock)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(new2),exp[grammar(call),exp:ident(sp_alloc),exp:ident(end),exp[grammar(record_ptr),exp:ident(n),ident(end)],exp[grammar(record_ptr),exp:ident(n),ident(policy)]]]],sel_if[exp:??(N/H),st_return[exp:??(N/H)],estmt(NONE)],statem(N/H)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(n),ident(end)],exp:ident(start)]],estmt[exp[grammar(call),exp:ident(sp_insert),exp:ident(sp),exp:ident(new2)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(new2),exp:ident(NULL)]],statem(N/H)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(n),ident(end)],exp:ident(start)]]]]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(n),exp[grammar(call),exp:ident(rb_entry),exp:ident(next),argtype(N/H),exp:ident(nd)]]]]],sel_if[exp:ident(new),estmt[exp[grammar(call),exp:ident(sp_insert),exp:ident(sp),exp:ident(new)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_unlock),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(sp),ident(lock)]]],sel_if[exp:ident(new2),{}stmt[estmt[exp[grammar(call),exp:ident(mpol_free),exp[grammar(record_ptr),exp:ident(new2),ident(policy)]]],estmt[exp[grammar(call),exp:ident(kmem_cache_free),exp:ident(sn_cache),exp:ident(new2)]]],estmt(NONE)],st_return[exp:const:int(0)]]],def[fname(mpol_shared_policy_init),funtype[fulltype[ctype[btype(void)]],param[reg(),name(info),fulltype[typec(N/H)]],param[reg(),name(policy),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(policy_nodes),fulltype[typec(N/H)]]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(info),ident(root)],exp:ident(RB_ROOT)]],estmt[exp[grammar(call),exp:ident(spin_lock_init),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(info),ident(lock)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(policy),exp:ident(MPOL_DEFAULT)],{}stmt[statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(newpol),exp[grammar(call),exp:ident(mpol_new),exp:ident(policy),exp:ident(policy_nodes)]]],sel_if[exp:??(N/H),{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(memset),exp:&ref:exp:ident(pvma),exp:const:int(0),exp[grammar(sizeoftype),grammar(fulltype),typec(N/H)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(pvma),ident(vm_end)],exp:ident(TASK_SIZE)]],estmt[exp[grammar(call),exp:ident(mpol_set_shared_policy),exp:ident(info),exp:&ref:exp:ident(pvma),exp:ident(newpol)]],estmt[exp[grammar(call),exp:ident(mpol_free),exp:ident(newpol)]]],estmt(NONE)]],estmt(NONE)]]],def[fname(mpol_set_shared_policy),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(info),fulltype[typec(N/H)]],param[reg(),name(vma),fulltype[typec(N/H)]],param[reg(),name(npol),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(pr_debug),exp:const:string(set_shared_policy %lx sz %lu %d %lx\n),exp[grammar(record_ptr),exp:ident(vma),ident(vm_pgoff)],exp:ident(sz),exp[grammar(cond3),exp:ident(npol),exp[grammar(record_ptr),exp:ident(npol),ident(policy)],exp:??(N/H)],exp[grammar(cond3),exp:ident(npol),exp[grammar(array_acc),exp[grammar(call),exp:ident(nodes_addr),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(npol),ident(v)],ident(nodes)]],exp:const:int(0)],exp:??(N/H)]]],sel_if[exp:ident(npol),{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(new),exp[grammar(call),exp:ident(sp_alloc),exp[grammar(record_ptr),exp:ident(vma),ident(vm_pgoff)],exp[grammar(binary_arith),aop(+),exp[grammar(record_ptr),exp:ident(vma),ident(vm_pgoff)],exp:ident(sz)],exp:ident(npol)]]],sel_if[exp:??(N/H),st_return[exp:??(N/H)],estmt(NONE)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(shared_policy_replace),exp:ident(info),exp[grammar(record_ptr),exp:ident(vma),ident(vm_pgoff)],exp[grammar(binary_arith),aop(+),exp[grammar(record_ptr),exp:ident(vma),ident(vm_pgoff)],exp:ident(sz)],exp:ident(new)]]],sel_if[exp[grammar(binary_logi),logiop(and),exp:ident(err),exp:ident(new)],estmt[exp[grammar(call),exp:ident(kmem_cache_free),exp:ident(sn_cache),exp:ident(new)]],estmt(NONE)],st_return[exp:ident(err)]]],def[fname(mpol_free_shared_policy),funtype[fulltype[ctype[btype(void)]],param[reg(),name(p),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_lock),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(p),ident(lock)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(next),exp[grammar(call),exp:ident(rb_first),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(p),ident(root)]]]],while[exp:ident(next),{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(n),exp[grammar(call),exp:ident(rb_entry),exp:ident(next),argtype(N/H),exp:ident(nd)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(next),exp[grammar(call),exp:ident(rb_next),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(n),ident(nd)]]]],estmt[exp[grammar(call),exp:ident(rb_erase),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(n),ident(nd)],exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(p),ident(root)]]],estmt[exp[grammar(call),exp:ident(mpol_free),exp[grammar(record_ptr),exp:ident(n),ident(policy)]]],estmt[exp[grammar(call),exp:ident(kmem_cache_free),exp:ident(sn_cache),exp:ident(n)]]]],estmt[exp[grammar(call),exp:ident(spin_unlock),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(p),ident(lock)]]]]],NCP(N/H),def[fname(numa_default_policy),funtype[fulltype[ctype[btype(void)]],param[reg(),name(),fulltype[ctype[btype(void)]]]],{}stmt[estmt[exp[grammar(call),exp:ident(do_set_mempolicy),exp:ident(MPOL_DEFAULT),exp:ident(NULL)]]]],def[fname(mpol_rebind_policy),funtype[fulltype[ctype[btype(void)]],param[reg(),name(pol),fulltype[typec(N/H)]],param[reg(),name(newmask),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(mpolmask),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(pol),ident(cpuset_mems_allowed)]]],sel_if[exp[grammar(call),exp:ident(nodes_equal),exp:*ref:exp:ident(mpolmask),exp:*ref:exp:ident(newmask)],statem(N/H),estmt(NONE)],statem(N/H)]],def[fname(mpol_rebind_task),funtype[fulltype[ctype[btype(void)]],param[reg(),name(tsk),fulltype[typec(N/H)]],param[reg(),name(new),fulltype[typec(N/H)]]],{}stmt[estmt[exp[grammar(call),exp:ident(mpol_rebind_policy),exp[grammar(record_ptr),exp:ident(tsk),ident(mempolicy)],exp:ident(new)]]]],def[fname(mpol_rebind_mm),funtype[fulltype[ctype[btype(void)]],param[reg(),name(mm),fulltype[typec(N/H)]],param[reg(),name(new),fulltype[typec(N/H)]]],{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(down_write),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(mm),ident(mmap_sem)]]],for[exp[grammar(assign),simple_assi(=),exp:ident(vma),exp[grammar(record_ptr),exp:ident(mm),ident(mmap)]],exp:ident(vma),exp[grammar(assign),simple_assi(=),exp:ident(vma),exp[grammar(record_ptr),exp:ident(vma),ident(vm_next)]],estmt[exp[grammar(call),exp:ident(mpol_rebind_policy),exp[grammar(record_ptr),exp:ident(vma),ident(vm_policy)],exp:ident(new)]]],estmt[exp[grammar(call),exp:ident(up_write),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(mm),ident(mmap_sem)]]]]],decl(N/H),def[fname(mpol_to_str),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(buffer),fulltype[typec(N/H)]],param[reg(),name(maxlen),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(pol),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(l),exp[grammar(call),exp:ident(strlen),exp[grammar(array_acc),exp:ident(policy_types),exp:ident(mode)]]]],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(binary_arith),aop(+),exp:ident(buffer),exp:ident(maxlen)],exp[grammar(binary_arith),aop(+),exp[grammar(binary_arith),aop(+),exp:ident(p),exp:ident(l)],exp:const:int(1)]],st_return[exp:??(N/H)],estmt(NONE)],estmt[exp[grammar(call),exp:ident(strcpy),exp:ident(p),exp[grammar(array_acc),exp:ident(policy_types),exp:ident(mode)]]],estmt[exp[grammar(assign),op_assi(+=),exp:ident(p),exp:ident(l)]],sel_if[exp:??(N/H),{}stmt[sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(binary_arith),aop(+),exp:ident(buffer),exp:ident(maxlen)],exp[grammar(binary_arith),aop(+),exp:ident(p),exp:const:int(2)]],st_return[exp:??(N/H)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:??(N/H),exp:const:other(N/H)]],estmt[exp[grammar(assign),op_assi(+=),exp:ident(p),exp[grammar(call),exp:ident(nodelist_scnprintf),exp:ident(p),exp[grammar(binary_arith),aop(-),exp[grammar(binary_arith),aop(+),exp:ident(buffer),exp:ident(maxlen)],exp:ident(p)],exp:ident(nodes)]]]],estmt(NONE)],st_return[exp[grammar(binary_arith),aop(-),exp:ident(p),exp:ident(buffer)]]]],decl(N/H),def[fname(gather_stats),funtype[fulltype[ctype[btype(void)]],param[reg(),name(page),fulltype[typec(N/H)]],param[reg(),name(private),fulltype[typec(N/H)]],param[reg(),name(pte_dirty),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[statem(N/H),statem(N/H),estmt[exp:??(N/H)],sel_if[exp[grammar(binary_logi),logiop(or),exp:ident(pte_dirty),exp[grammar(call),exp:ident(PageDirty),exp:ident(page)]],estmt[exp:??(N/H)],estmt(NONE)],sel_if[exp[grammar(call),exp:ident(PageSwapCache),exp:ident(page)],estmt[exp:??(N/H)],estmt(NONE)],sel_if[exp[grammar(call),exp:ident(PageActive),exp:ident(page)],estmt[exp:??(N/H)],estmt(NONE)],sel_if[exp[grammar(call),exp:ident(PageWriteback),exp:ident(page)],estmt[exp:??(N/H)],estmt(NONE)],sel_if[exp[grammar(call),exp:ident(PageAnon),exp:ident(page)],estmt[exp:??(N/H)],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(count),exp[grammar(record_ptr),exp:ident(md),ident(mapcount_max)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(md),ident(mapcount_max)],exp:ident(count)]],estmt(NONE)],estmt[exp:??(N/H)]]],def[fname(check_huge_range),funtype[fulltype[ctype[btype(void)]],param[reg(),name(vma),fulltype[typec(N/H)]],param[reg(),name(start),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(end),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(md),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),for[exp[grammar(assign),simple_assi(=),exp:ident(addr),exp:ident(start)],exp[grammar(binary_logi),logiop(??),exp:ident(addr),exp:ident(end)],exp[grammar(assign),op_assi(+=),exp:ident(addr),exp:ident(HPAGE_SIZE)],{}stmt[statem(N/H),statem(N/H),sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(pte),exp:*ref:exp:ident(ptep)]],sel_if[exp[grammar(call),exp:ident(pte_none),exp:ident(pte)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(page),exp[grammar(call),exp:ident(pte_page),exp:ident(pte)]]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(gather_stats),exp:ident(page),exp:ident(md),exp[grammar(call),exp:ident(pte_dirty),exp:*ref:exp:ident(ptep)]]]]]]],def[fname(check_huge_range),funtype[fulltype[ctype[btype(void)]],param[reg(),name(vma),fulltype[typec(N/H)]],param[reg(),name(start),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(end),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(md),fulltype[typec(N/H)]]],{}stmt[]],def[fname(show_numa_map),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(v),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),sel_if[exp:??(N/H),st_return[exp:const:int(0)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(md),exp[grammar(call),exp:ident(kzalloc),exp[grammar(sizeoftype),grammar(fulltype),typec(N/H)],exp:ident(GFP_KERNEL)]]],sel_if[exp:??(N/H),st_return[exp:const:int(0)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(pol),exp[grammar(call),exp:ident(get_vma_policy),exp[grammar(record_ptr),exp:ident(priv),ident(task)],exp:ident(vma),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)]]]],estmt[exp[grammar(call),exp:ident(mpol_to_str),exp:ident(buffer),exp:sizeof:exp:ident(buffer),exp:ident(pol)]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp:ident(pol),exp:&ref:exp:ident(default_policy)],exp[grammar(binary_logi),logiop(??),exp:ident(pol),exp[grammar(record_ptr),exp:ident(current),ident(mempolicy)]]],estmt[exp[grammar(call),exp:ident(__mpol_free),exp:ident(pol)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(%08lx %s),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp:ident(buffer)]],sel_if[exp:ident(file),{}stmt[estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( file=)]],estmt[exp[grammar(call),exp:ident(seq_path),exp:ident(m),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(file),ident(f_path)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(file),ident(f_path)],ident(dentry)],exp:const:string(\n\t= )]]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp[grammar(record_ptr),exp:ident(mm),ident(brk)]],exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp[grammar(record_ptr),exp:ident(mm),ident(start_brk)]]],{}stmt[estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( heap)]]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp[grammar(record_ptr),exp:ident(mm),ident(start_stack)]],exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp[grammar(record_ptr),exp:ident(mm),ident(start_stack)]]],{}stmt[estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( stack)]]],estmt(NONE)]]],sel_if[exp[grammar(call),exp:ident(is_vm_hugetlb_page),exp:ident(vma)],{}stmt[estmt[exp[grammar(call),exp:ident(check_huge_range),exp:ident(vma),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp:ident(md)]],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( huge)]]],{}stmt[estmt[exp[grammar(call),exp:ident(check_pgd_range),exp:ident(vma),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp[grammar(&ref),grammar(exp),grammar(array_acc),exp:ident(node_states),exp:ident(N_HIGH_MEMORY)],exp:ident(MPOL_MF_STATS),exp:ident(md)]]]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],sel_if[exp[grammar(record_ptr),exp:ident(md),ident(anon)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( anon=%lu),exp[grammar(record_ptr),exp:ident(md),ident(anon)]]],estmt(NONE)],sel_if[exp[grammar(record_ptr),exp:ident(md),ident(dirty)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( dirty=%lu),exp[grammar(record_ptr),exp:ident(md),ident(dirty)]]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(md),ident(pages)],exp[grammar(record_ptr),exp:ident(md),ident(anon)]],exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(md),ident(pages)],exp[grammar(record_ptr),exp:ident(md),ident(dirty)]]],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( mapped=%lu),exp[grammar(record_ptr),exp:ident(md),ident(pages)]]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(md),ident(mapcount_max)],exp:const:int(1)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( mapmax=%lu),exp[grammar(record_ptr),exp:ident(md),ident(mapcount_max)]]],estmt(NONE)],sel_if[exp[grammar(record_ptr),exp:ident(md),ident(swapcache)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( swapcache=%lu),exp[grammar(record_ptr),exp:ident(md),ident(swapcache)]]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(md),ident(active)],exp[grammar(record_ptr),exp:ident(md),ident(pages)]],exp:??(N/H)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( active=%lu),exp[grammar(record_ptr),exp:ident(md),ident(active)]]],estmt(NONE)],sel_if[exp[grammar(record_ptr),exp:ident(md),ident(writeback)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( writeback=%lu),exp[grammar(record_ptr),exp:ident(md),ident(writeback)]]],estmt(NONE)],statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(kfree),exp:ident(md)]],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(m),ident(count)],exp[grammar(record_ptr),exp:ident(m),ident(size)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(m),ident(version)],exp[grammar(cond3),exp[grammar(binary_logi),logiop(??),exp:ident(vma),exp[grammar(record_ptr),exp:ident(priv),ident(tail_vma)]],exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp:const:int(0)]]],estmt(NONE)],st_return[exp:const:int(0)]]]]
[Diff] making all subterms for :
	prg2[includeN[inc_elem(linux),inc_elem(mm.h)],includeN[inc_elem(linux),inc_elem(hugetlb.h)],includeN[inc_elem(linux),inc_elem(mount.h)],includeN[inc_elem(linux),inc_elem(seq_file.h)],includeN[inc_elem(linux),inc_elem(highmem.h)],includeN[inc_elem(linux),inc_elem(ptrace.h)],includeN[inc_elem(linux),inc_elem(pagemap.h)],includeN[inc_elem(linux),inc_elem(ptrace.h)],includeN[inc_elem(linux),inc_elem(mempolicy.h)],includeN[inc_elem(linux),inc_elem(swap.h)],includeN[inc_elem(linux),inc_elem(swapops.h)],includeN[inc_elem(linux),inc_elem(seq_file.h)],includeN[inc_elem(asm),inc_elem(elf.h)],includeN[inc_elem(asm),inc_elem(uaccess.h)],includeN[inc_elem(asm),inc_elem(tlbflush.h)],includeL[inc_elem(internal.h)],def[fname(task_mem),funtype[fulltype[ctype[btype(void)]],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(mm),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(hiwater_vm),exp[grammar(assign),simple_assi(=),exp:ident(total_vm),exp[grammar(record_ptr),exp:ident(mm),ident(total_vm)]]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(hiwater_vm),exp[grammar(record_ptr),exp:ident(mm),ident(hiwater_vm)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(hiwater_vm),exp[grammar(record_ptr),exp:ident(mm),ident(hiwater_vm)]]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(hiwater_rss),exp[grammar(assign),simple_assi(=),exp:ident(total_rss),exp[grammar(call),exp:ident(get_mm_rss),exp:ident(mm)]]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(hiwater_rss),exp[grammar(record_ptr),exp:ident(mm),ident(hiwater_rss)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(hiwater_rss),exp[grammar(record_ptr),exp:ident(mm),ident(hiwater_rss)]]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(data),exp[grammar(binary_arith),aop(-),exp[grammar(binary_arith),aop(-),exp[grammar(record_ptr),exp:ident(mm),ident(total_vm)],exp[grammar(record_ptr),exp:ident(mm),ident(shared_vm)]],exp[grammar(record_ptr),exp:ident(mm),ident(stack_vm)]]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(text),exp[grammar(binary_arith),aop(>>),exp[grammar(binary_arith),aop(-),exp[grammar(call),exp:ident(PAGE_ALIGN),exp[grammar(record_ptr),exp:ident(mm),ident(end_code)]],exp[grammar(binary_arith),aop(&),exp[grammar(record_ptr),exp:ident(mm),ident(start_code)],exp:ident(PAGE_MASK)]],exp:const:int(10)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(lib),exp[grammar(binary_arith),aop(-),exp[grammar(binary_arith),aop(<<),exp[grammar(record_ptr),exp:ident(mm),ident(exec_vm)],exp[grammar(binary_arith),aop(-),exp:ident(PAGE_SHIFT),exp:const:int(10)]],exp:ident(text)]]],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:other(N/H),exp[grammar(binary_arith),aop(<<),exp:ident(hiwater_vm),exp[grammar(binary_arith),aop(-),exp:ident(PAGE_SHIFT),exp:const:int(10)]],exp[grammar(binary_arith),aop(<<),exp[grammar(binary_arith),aop(-),exp:ident(total_vm),exp[grammar(record_ptr),exp:ident(mm),ident(reserved_vm)]],exp[grammar(binary_arith),aop(-),exp:ident(PAGE_SHIFT),exp:const:int(10)]],exp[grammar(binary_arith),aop(<<),exp[grammar(record_ptr),exp:ident(mm),ident(locked_vm)],exp[grammar(binary_arith),aop(-),exp:ident(PAGE_SHIFT),exp:const:int(10)]],exp[grammar(binary_arith),aop(<<),exp:ident(hiwater_rss),exp[grammar(binary_arith),aop(-),exp:ident(PAGE_SHIFT),exp:const:int(10)]],exp[grammar(binary_arith),aop(<<),exp:ident(total_rss),exp[grammar(binary_arith),aop(-),exp:ident(PAGE_SHIFT),exp:const:int(10)]],exp[grammar(binary_arith),aop(<<),exp:ident(data),exp[grammar(binary_arith),aop(-),exp:ident(PAGE_SHIFT),exp:const:int(10)]],exp[grammar(binary_arith),aop(<<),exp[grammar(record_ptr),exp:ident(mm),ident(stack_vm)],exp[grammar(binary_arith),aop(-),exp:ident(PAGE_SHIFT),exp:const:int(10)]],exp:ident(text),exp:ident(lib),exp[grammar(binary_arith),aop(>>),exp[grammar(binary_arith),aop(*),exp[grammar(binary_arith),aop(*),exp:ident(PTRS_PER_PTE),exp[grammar(sizeoftype),grammar(fulltype),typec(N/H)]],exp[grammar(record_ptr),exp:ident(mm),ident(nr_ptes)]],exp:const:int(10)]]]]],def[fname(task_vsize),funtype[fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]],param[reg(),name(mm),fulltype[typec(N/H)]]],{}stmt[st_return[exp[grammar(binary_arith),aop(*),exp:ident(PAGE_SIZE),exp[grammar(record_ptr),exp:ident(mm),ident(total_vm)]]]]],def[fname(task_statm),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(mm),fulltype[typec(N/H)]],param[reg(),name(shared),fulltype[typec(N/H)]],param[reg(),name(text),fulltype[typec(N/H)]],param[reg(),name(data),fulltype[typec(N/H)]],param[reg(),name(resident),fulltype[typec(N/H)]]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(shared),exp[grammar(call),exp:ident(get_mm_counter),exp:ident(mm),exp:ident(file_rss)]]],estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(text),exp[grammar(binary_arith),aop(>>),exp[grammar(binary_arith),aop(-),exp[grammar(call),exp:ident(PAGE_ALIGN),exp[grammar(record_ptr),exp:ident(mm),ident(end_code)]],exp[grammar(binary_arith),aop(&),exp[grammar(record_ptr),exp:ident(mm),ident(start_code)],exp:ident(PAGE_MASK)]],exp:ident(PAGE_SHIFT)]]],estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(data),exp[grammar(binary_arith),aop(-),exp[grammar(record_ptr),exp:ident(mm),ident(total_vm)],exp[grammar(record_ptr),exp:ident(mm),ident(shared_vm)]]]],estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(resident),exp[grammar(binary_arith),aop(+),exp:*ref:exp:ident(shared),exp[grammar(call),exp:ident(get_mm_counter),exp:ident(mm),exp:ident(anon_rss)]]]],st_return[exp[grammar(record_ptr),exp:ident(mm),ident(total_vm)]]]],def[fname(proc_exe_link),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(inode),fulltype[typec(N/H)]],param[reg(),name(path),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),sel_if[exp:ident(task),{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(mm),exp[grammar(call),exp:ident(get_task_mm),exp:ident(task)]]],estmt[exp[grammar(call),exp:ident(put_task_struct),exp:ident(task)]]],estmt(NONE)],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(down_read),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(mm),ident(mmap_sem)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(vma),exp[grammar(record_ptr),exp:ident(mm),ident(mmap)]]],while[exp:ident(vma),{}stmt[sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_arith),aop(&),exp[grammar(record_ptr),exp:ident(vma),ident(vm_flags)],exp:ident(VM_EXECUTABLE)],exp[grammar(record_ptr),exp:ident(vma),ident(vm_file)]],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(vma),exp[grammar(record_ptr),exp:ident(vma),ident(vm_next)]]]]],sel_if[exp:ident(vma),{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(path),exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(vma),ident(vm_file)],ident(f_path)]]],estmt[exp[grammar(call),exp:ident(path_get),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp[grammar(record_ptr),exp:ident(vma),ident(vm_file)],ident(f_path)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(result),exp:const:int(0)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(up_read),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(mm),ident(mmap_sem)]]],estmt[exp[grammar(call),exp:ident(mmput),exp:ident(mm)]],statem(N/H)]],def[fname(pad_len_spaces),funtype[fulltype[ctype[btype(void)]],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(len),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(len),exp[grammar(binary_arith),aop(-),exp[grammar(binary_arith),aop(+),exp:const:int(25),exp[grammar(binary_arith),aop(*),exp[grammar(sizeoftype),grammar(fulltype),typec(N/H)],exp:const:int(6)]],exp:ident(len)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(len),exp:const:int(1)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(len),exp:const:int(1)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(%*c),exp:ident(len),exp:const:other(N/H)]]]],def[fname(vma_stop),funtype[fulltype[ctype[btype(void)]],param[reg(),name(priv),fulltype[typec(N/H)]],param[reg(),name(vma),fulltype[typec(N/H)]]],{}stmt[sel_if[exp[grammar(binary_logi),logiop(and),exp:ident(vma),exp[grammar(binary_logi),logiop(??),exp:ident(vma),exp[grammar(record_ptr),exp:ident(priv),ident(tail_vma)]]],{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(up_read),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(mm),ident(mmap_sem)]]],estmt[exp[grammar(call),exp:ident(mmput),exp:ident(mm)]]],estmt(NONE)]]],def[fname(m_start),funtype[fulltype[typec(N/H)],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(pos),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(priv),ident(task)],exp:ident(NULL)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(priv),ident(tail_vma)],exp:ident(NULL)]],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(last_addr),exp:??(N/H)],st_return[exp:ident(NULL)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(priv),ident(task)],exp[grammar(call),exp:ident(get_pid_task),exp[grammar(record_ptr),exp:ident(priv),ident(pid)],exp:ident(PIDTYPE_PID)]]],sel_if[exp:??(N/H),st_return[exp:ident(NULL)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(mm),exp[grammar(call),exp:ident(mm_for_maps),exp[grammar(record_ptr),exp:ident(priv),ident(task)]]]],sel_if[exp:??(N/H),st_return[exp:ident(NULL)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(tail_vma),exp[grammar(call),exp:ident(get_gate_vma),exp[grammar(record_ptr),exp:ident(priv),ident(task)]]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(priv),ident(tail_vma)],exp:ident(tail_vma)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(vma),exp[grammar(call),exp:ident(find_vma),exp:ident(mm),exp:ident(last_addr)]]],sel_if[exp[grammar(binary_logi),logiop(and),exp:ident(last_addr),exp:ident(vma)],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(vma),exp[grammar(record_ptr),exp:ident(vma),ident(vm_next)]]],statem(N/H)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(vma),exp:ident(NULL)]],sel_if[exp[grammar(binary_logi),logiop(??),exp:??(N/H),exp[grammar(record_ptr),exp:ident(mm),ident(map_count)]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(vma),exp[grammar(record_ptr),exp:ident(mm),ident(mmap)]]],while[exp[grammar(binary_logi),logiop(and),exp:??(N/H),exp:ident(vma)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(vma),exp[grammar(record_ptr),exp:ident(vma),ident(vm_next)]]]],statem(N/H)],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(l),exp[grammar(record_ptr),exp:ident(mm),ident(map_count)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(tail_vma),exp:ident(NULL)]],estmt(NONE)],statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(m),ident(version)],exp[grammar(cond3),exp[grammar(binary_logi),logiop(??),exp:ident(tail_vma),exp:ident(NULL)],exp:const:int(0),exp:??(N/H)]]],estmt[exp[grammar(call),exp:ident(up_read),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(mm),ident(mmap_sem)]]],estmt[exp[grammar(call),exp:ident(mmput),exp:ident(mm)]],st_return[exp:ident(tail_vma)]]],def[fname(m_next),funtype[fulltype[typec(N/H)],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(v),fulltype[typec(N/H)]],param[reg(),name(pos),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp:??(N/H)],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(and),exp:ident(vma),exp[grammar(binary_logi),logiop(??),exp:ident(vma),exp:ident(tail_vma)]],exp[grammar(record_ptr),exp:ident(vma),ident(vm_next)]],st_return[exp[grammar(record_ptr),exp:ident(vma),ident(vm_next)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(vma_stop),exp:ident(priv),exp:ident(vma)]],st_return[exp[grammar(cond3),exp[grammar(binary_logi),logiop(??),exp:ident(vma),exp:ident(tail_vma)],exp:ident(tail_vma),exp:ident(NULL)]]]],def[fname(m_stop),funtype[fulltype[ctype[btype(void)]],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(v),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(vma_stop),exp:ident(priv),exp:ident(vma)]],sel_if[exp[grammar(record_ptr),exp:ident(priv),ident(task)],estmt[exp[grammar(call),exp:ident(put_task_struct),exp[grammar(record_ptr),exp:ident(priv),ident(task)]]],estmt(NONE)]]],def[fname(do_maps_open),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(inode),fulltype[typec(N/H)]],param[reg(),name(file),fulltype[typec(N/H)]],param[reg(),name(ops),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(priv),exp[grammar(call),exp:ident(kzalloc),exp:sizeof:exp:*ref:exp:ident(priv),exp:ident(GFP_KERNEL)]]],sel_if[exp:ident(priv),{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(priv),ident(pid)],exp[grammar(call),exp:ident(proc_pid),exp:ident(inode)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ret),exp[grammar(call),exp:ident(seq_open),exp:ident(file),exp:ident(ops)]]],sel_if[exp:??(N/H),{}stmt[statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(m),ident(private)],exp:ident(priv)]]],{}stmt[estmt[exp[grammar(call),exp:ident(kfree),exp:ident(priv)]]]]],estmt(NONE)],st_return[exp:ident(ret)]]],def[fname(show_map),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(v),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),sel_if[exp[grammar(binary_logi),logiop(and),exp:ident(maps_protect),exp:??(N/H)],st_return[exp:??(N/H)],estmt(NONE)],sel_if[exp:ident(file),{}stmt[statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(dev),exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(inode),ident(i_sb)],ident(s_dev)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ino),exp[grammar(record_ptr),exp:ident(inode),ident(i_ino)]]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(%08lx-%08lx %c%c%c%c %08lx %02x:%02x %lu %n),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp[grammar(cond3),exp[grammar(binary_arith),aop(&),exp:ident(flags),exp:ident(VM_READ)],exp:const:other(N/H),exp:const:other(N/H)],exp[grammar(cond3),exp[grammar(binary_arith),aop(&),exp:ident(flags),exp:ident(VM_WRITE)],exp:const:other(N/H),exp:const:other(N/H)],exp[grammar(cond3),exp[grammar(binary_arith),aop(&),exp:ident(flags),exp:ident(VM_EXEC)],exp:const:other(N/H),exp:const:other(N/H)],exp[grammar(cond3),exp[grammar(binary_arith),aop(&),exp:ident(flags),exp:ident(VM_MAYSHARE)],exp:const:other(N/H),exp:const:other(N/H)],exp[grammar(binary_arith),aop(<<),exp[grammar(record_ptr),exp:ident(vma),ident(vm_pgoff)],exp:ident(PAGE_SHIFT)],exp[grammar(call),exp:ident(MAJOR),exp:ident(dev)],exp[grammar(call),exp:ident(MINOR),exp:ident(dev)],exp:ident(ino),exp:&ref:exp:ident(len)]],sel_if[exp:ident(file),{}stmt[estmt[exp[grammar(call),exp:ident(pad_len_spaces),exp:ident(m),exp:ident(len)]],estmt[exp[grammar(call),exp:ident(seq_path),exp:ident(m),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(file),ident(f_path)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(file),ident(f_path)],ident(dentry)],exp:const:string(\n)]]],{}stmt[statem(N/H),sel_if[exp:??(N/H),{}stmt[sel_if[exp:ident(mm),{}stmt[sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp[grammar(record_ptr),exp:ident(mm),ident(start_brk)]],exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp[grammar(record_ptr),exp:ident(mm),ident(brk)]]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(name),exp:const:string([heap])]]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp[grammar(record_ptr),exp:ident(mm),ident(start_stack)]],exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp[grammar(record_ptr),exp:ident(mm),ident(start_stack)]]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(name),exp:const:string([stack])]]],estmt(NONE)]]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(name),exp:const:string([vdso])]]]]],estmt(NONE)],sel_if[exp:ident(name),{}stmt[estmt[exp[grammar(call),exp:ident(pad_len_spaces),exp:ident(m),exp:ident(len)]],estmt[exp[grammar(call),exp:ident(seq_puts),exp:ident(m),exp:ident(name)]]],estmt(NONE)]]],estmt[exp[grammar(call),exp:ident(seq_putc),exp:ident(m),exp:const:other(N/H)]],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(m),ident(count)],exp[grammar(record_ptr),exp:ident(m),ident(size)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(m),ident(version)],exp[grammar(cond3),exp[grammar(binary_logi),logiop(??),exp:ident(vma),exp[grammar(call),exp:ident(get_gate_vma),exp:ident(task)]],exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp:const:int(0)]]],estmt(NONE)],st_return[exp:const:int(0)]]],decl(N/H),def[fname(maps_open),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(inode),fulltype[typec(N/H)]],param[reg(),name(file),fulltype[typec(N/H)]]],{}stmt[st_return[exp[grammar(call),exp:ident(do_maps_open),exp:ident(inode),exp:ident(file),exp:&ref:exp:ident(proc_pid_maps_op)]]]],decl(N/H),define(N/H),decl(N/H),def[fname(smaps_pte_range),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(pmd),fulltype[typec(N/H)]],param[reg(),name(addr),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(end),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(private),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(pte),exp[grammar(call),exp:ident(pte_offset_map_lock),exp[grammar(record_ptr),exp:ident(vma),ident(vm_mm)],exp:ident(pmd),exp:ident(addr),exp:&ref:exp:ident(ptl)]]],for[expr(NONE),exp[grammar(binary_logi),logiop(??),exp:ident(addr),exp:ident(end)],exp:??(N/H),{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(ptent),exp:*ref:exp:ident(pte)]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),op_assi(+=),exp[grammar(record_ptr),exp:ident(mss),ident(resident)],exp:ident(PAGE_SIZE)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(page),exp[grammar(call),exp:ident(vm_normal_page),exp:ident(vma),exp:ident(addr),exp:ident(ptent)]]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(or),exp[grammar(call),exp:ident(pte_young),exp:ident(ptent)],exp[grammar(call),exp:ident(PageReferenced),exp:ident(page)]],estmt[exp[grammar(assign),op_assi(+=),exp[grammar(record_ptr),exp:ident(mss),ident(referenced)],exp:ident(PAGE_SIZE)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(mapcount),exp[grammar(call),exp:ident(page_mapcount),exp:ident(page)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(mapcount),exp:const:int(2)],{}stmt[sel_if[exp[grammar(call),exp:ident(pte_dirty),exp:ident(ptent)],estmt[exp[grammar(assign),op_assi(+=),exp[grammar(record_ptr),exp:ident(mss),ident(shared_dirty)],exp:ident(PAGE_SIZE)]],estmt[exp[grammar(assign),op_assi(+=),exp[grammar(record_ptr),exp:ident(mss),ident(shared_clean)],exp:ident(PAGE_SIZE)]]],estmt[exp[grammar(assign),op_assi(+=),exp[grammar(record_ptr),exp:ident(mss),ident(pss)],exp[grammar(binary_arith),aop(/),exp[grammar(binary_arith),aop(<<),exp:ident(PAGE_SIZE),exp:ident(PSS_SHIFT)],exp:ident(mapcount)]]]],{}stmt[sel_if[exp[grammar(call),exp:ident(pte_dirty),exp:ident(ptent)],estmt[exp[grammar(assign),op_assi(+=),exp[grammar(record_ptr),exp:ident(mss),ident(private_dirty)],exp:ident(PAGE_SIZE)]],estmt[exp[grammar(assign),op_assi(+=),exp[grammar(record_ptr),exp:ident(mss),ident(private_clean)],exp:ident(PAGE_SIZE)]]],estmt[exp[grammar(assign),op_assi(+=),exp[grammar(record_ptr),exp:ident(mss),ident(pss)],exp[grammar(binary_arith),aop(<<),exp:ident(PAGE_SIZE),exp:ident(PSS_SHIFT)]]]]]]],estmt[exp[grammar(call),exp:ident(pte_unmap_unlock),exp[grammar(binary_arith),aop(-),exp:ident(pte),exp:const:int(1)],exp:ident(ptl)]],estmt[exp[grammar(call),exp:ident(cond_resched)]],st_return[exp:const:int(0)]]],decl(N/H),def[fname(show_smap),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(v),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(memset),exp:&ref:exp:ident(mss),exp:const:int(0),exp:sizeof:exp:ident(mss)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(mss),ident(vma)],exp:ident(vma)]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(record_ptr),exp:ident(vma),ident(vm_mm)],exp:??(N/H)],estmt[exp[grammar(call),exp:ident(walk_page_range),exp[grammar(record_ptr),exp:ident(vma),ident(vm_mm)],exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp:&ref:exp:ident(smaps_walk),exp:&ref:exp:ident(mss)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ret),exp[grammar(call),exp:ident(show_map),exp:ident(m),exp:ident(v)]]],sel_if[exp:ident(ret),st_return[exp:ident(ret)],estmt(NONE)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:other(N/H),exp[grammar(binary_arith),aop(>>),exp[grammar(binary_arith),aop(-),exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)]],exp:const:int(10)],exp[grammar(binary_arith),aop(>>),exp[grammar(record_acc),exp:ident(mss),ident(resident)],exp:const:int(10)],exp:??(N/H),exp[grammar(binary_arith),aop(>>),exp[grammar(record_acc),exp:ident(mss),ident(shared_clean)],exp:const:int(10)],exp[grammar(binary_arith),aop(>>),exp[grammar(record_acc),exp:ident(mss),ident(shared_dirty)],exp:const:int(10)],exp[grammar(binary_arith),aop(>>),exp[grammar(record_acc),exp:ident(mss),ident(private_clean)],exp:const:int(10)],exp[grammar(binary_arith),aop(>>),exp[grammar(record_acc),exp:ident(mss),ident(private_dirty)],exp:const:int(10)],exp[grammar(binary_arith),aop(>>),exp[grammar(record_acc),exp:ident(mss),ident(referenced)],exp:const:int(10)]]],st_return[exp:ident(ret)]]],decl(N/H),def[fname(smaps_open),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(inode),fulltype[typec(N/H)]],param[reg(),name(file),fulltype[typec(N/H)]]],{}stmt[st_return[exp[grammar(call),exp:ident(do_maps_open),exp:ident(inode),exp:ident(file),exp:&ref:exp:ident(proc_pid_smaps_op)]]]],decl(N/H),def[fname(clear_refs_pte_range),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(pmd),fulltype[typec(N/H)]],param[reg(),name(addr),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(end),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(private),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(pte),exp[grammar(call),exp:ident(pte_offset_map_lock),exp[grammar(record_ptr),exp:ident(vma),ident(vm_mm)],exp:ident(pmd),exp:ident(addr),exp:&ref:exp:ident(ptl)]]],for[expr(NONE),exp[grammar(binary_logi),logiop(??),exp:ident(addr),exp:ident(end)],exp:??(N/H),{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(ptent),exp:*ref:exp:ident(pte)]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(page),exp[grammar(call),exp:ident(vm_normal_page),exp:ident(vma),exp:ident(addr),exp:ident(ptent)]]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(ptep_test_and_clear_young),exp:ident(vma),exp:ident(addr),exp:ident(pte)]],estmt[exp[grammar(call),exp:ident(ClearPageReferenced),exp:ident(page)]]]],estmt[exp[grammar(call),exp:ident(pte_unmap_unlock),exp[grammar(binary_arith),aop(-),exp:ident(pte),exp:const:int(1)],exp:ident(ptl)]],estmt[exp[grammar(call),exp:ident(cond_resched)]],st_return[exp:const:int(0)]]],decl(N/H),NCP(N/H),decl(N/H),NCP(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),def[fname(add_to_pagemap),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(addr),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(pfn),fulltype[typec(N/H)]],param[reg(),name(pm),fulltype[typec(N/H)]]],{}stmt[sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(binary_arith),aop(+),exp[grammar(record_ptr),exp:ident(pm),ident(out)],exp:ident(PM_ENTRY_BYTES)],exp[grammar(record_ptr),exp:ident(pm),ident(end)]],{}stmt[sel_if[exp[grammar(call),exp:ident(copy_to_user),exp[grammar(record_ptr),exp:ident(pm),ident(out)],exp:&ref:exp:ident(pfn),exp[grammar(binary_arith),aop(-),exp[grammar(record_ptr),exp:ident(pm),ident(end)],exp[grammar(record_ptr),exp:ident(pm),ident(out)]]],st_return[exp:??(N/H)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(pm),ident(out)],exp[grammar(record_ptr),exp:ident(pm),ident(end)]]],st_return[exp:ident(PM_END_OF_BUFFER)]],estmt(NONE)],sel_if[exp[grammar(call),exp:ident(put_user),exp:ident(pfn),exp[grammar(record_ptr),exp:ident(pm),ident(out)]],st_return[exp:??(N/H)],estmt(NONE)],estmt[exp[grammar(assign),op_assi(+=),exp[grammar(record_ptr),exp:ident(pm),ident(out)],exp:ident(PM_ENTRY_BYTES)]],st_return[exp:const:int(0)]]],def[fname(pagemap_pte_hole),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(start),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(end),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(private),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),for[exp[grammar(assign),simple_assi(=),exp:ident(addr),exp:ident(start)],exp[grammar(binary_logi),logiop(??),exp:ident(addr),exp:ident(end)],exp[grammar(assign),op_assi(+=),exp:ident(addr),exp:ident(PAGE_SIZE)],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(add_to_pagemap),exp:ident(addr),exp:ident(PM_NOT_PRESENT),exp:ident(pm)]]],sel_if[exp:ident(err),statem(N/H),estmt(NONE)]]],st_return[exp:ident(err)]]],def[fname(swap_pte_to_pagemap_entry),funtype[fulltype[typec(N/H)],param[reg(),name(pte),fulltype[typec(N/H)]]],{}stmt[statem(N/H),st_return[exp[grammar(binary_arith),aop(|),exp[grammar(binary_arith),aop(|),exp:ident(PM_SWAP),exp[grammar(call),exp:ident(swp_type),exp:ident(e)]],exp[grammar(binary_arith),aop(<<),exp[grammar(call),exp:ident(swp_offset),exp:ident(e)],exp:ident(MAX_SWAPFILES_SHIFT)]]]]],def[fname(pagemap_pte_range),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(pmd),fulltype[typec(N/H)]],param[reg(),name(addr),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(end),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(private),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),for[expr(NONE),exp[grammar(binary_logi),logiop(??),exp:ident(addr),exp:ident(end)],exp[grammar(assign),op_assi(+=),exp:ident(addr),exp:ident(PAGE_SIZE)],{}stmt[statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(pte),exp[grammar(call),exp:ident(pte_offset_map),exp:ident(pmd),exp:ident(addr)]]],sel_if[exp[grammar(call),exp:ident(is_swap_pte),exp:*ref:exp:ident(pte)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(pfn),exp[grammar(call),exp:ident(swap_pte_to_pagemap_entry),exp:*ref:exp:ident(pte)]]],sel_if[exp[grammar(call),exp:ident(pte_present),exp:*ref:exp:ident(pte)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(pfn),exp[grammar(call),exp:ident(pte_pfn),exp:*ref:exp:ident(pte)]]],estmt(NONE)]],estmt[exp[grammar(call),exp:ident(pte_unmap),exp:ident(pte)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(add_to_pagemap),exp:ident(addr),exp:ident(pfn),exp:ident(pm)]]],sel_if[exp:ident(err),st_return[exp:ident(err)],estmt(NONE)]]],estmt[exp[grammar(call),exp:ident(cond_resched)]],st_return[exp:ident(err)]]],decl(N/H),NCP(N/H),decl(N/H),decl(N/H),def[fname(show_numa_map_checked),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(v),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp[grammar(binary_logi),logiop(and),exp:ident(maps_protect),exp:??(N/H)],st_return[exp:??(N/H)],estmt(NONE)],st_return[exp[grammar(call),exp:ident(show_numa_map),exp:ident(m),exp:ident(v)]]]],decl(N/H),def[fname(numa_maps_open),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(inode),fulltype[typec(N/H)]],param[reg(),name(file),fulltype[typec(N/H)]]],{}stmt[st_return[exp[grammar(call),exp:ident(do_maps_open),exp:ident(inode),exp:ident(file),exp:&ref:exp:ident(proc_pid_numa_maps_op)]]]],decl(N/H)]
[Diff] making all subterms for :
	prg2[define(N/H),includeN[inc_elem(linux),inc_elem(unistd.h)],includeN[inc_elem(linux),inc_elem(slab.h)],includeN[inc_elem(linux),inc_elem(stat.h)],includeN[inc_elem(linux),inc_elem(in.h)],includeN[inc_elem(linux),inc_elem(seq_file.h)],includeN[inc_elem(linux),inc_elem(syscalls.h)],includeN[inc_elem(linux),inc_elem(rwsem.h)],includeN[inc_elem(linux),inc_elem(dcache.h)],includeN[inc_elem(linux),inc_elem(namei.h)],includeN[inc_elem(linux),inc_elem(mount.h)],includeN[inc_elem(linux),inc_elem(hash.h)],includeN[inc_elem(linux),inc_elem(module.h)],includeN[inc_elem(linux),inc_elem(exportfs.h)],includeN[inc_elem(linux),inc_elem(sunrpc),inc_elem(svc.h)],includeN[inc_elem(linux),inc_elem(nfsd),inc_elem(nfsd.h)],includeN[inc_elem(linux),inc_elem(nfsd),inc_elem(nfsfh.h)],includeN[inc_elem(linux),inc_elem(nfsd),inc_elem(syscall.h)],includeN[inc_elem(linux),inc_elem(lockd),inc_elem(bind.h)],includeN[inc_elem(linux),inc_elem(sunrpc),inc_elem(msg_prot.h)],includeN[inc_elem(linux),inc_elem(sunrpc),inc_elem(gss_api.h)],define(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),define(N/H),define(N/H),define(N/H),decl(N/H),def[fname(expkey_put),funtype[fulltype[ctype[btype(void)]],param[reg(),name(ref),fulltype[typec(N/H)]]],{}stmt[statem(N/H),sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(call),exp:ident(test_bit),exp:ident(CACHE_VALID),exp[grammar(&ref),grammar(exp),grammar(record_acc),exp[grammar(record_ptr),exp:ident(key),ident(h)],ident(flags)]],exp:??(N/H)],estmt[exp[grammar(call),exp:ident(path_put),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(key),ident(ek_path)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(auth_domain_put),exp[grammar(record_ptr),exp:ident(key),ident(ek_client)]]],estmt[exp[grammar(call),exp:ident(kfree),exp:ident(key)]]]],def[fname(expkey_request),funtype[fulltype[ctype[btype(void)]],param[reg(),name(cd),fulltype[typec(N/H)]],param[reg(),name(h),fulltype[typec(N/H)]],param[reg(),name(bpp),fulltype[typec(N/H)]],param[reg(),name(blen),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(qword_add),exp:ident(bpp),exp:ident(blen),exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(ek),ident(ek_client)],ident(name)]]],estmt[exp[grammar(call),exp:ident(snprintf),exp:ident(type),exp:const:int(5),exp:const:string(%d),exp[grammar(record_ptr),exp:ident(ek),ident(ek_fsidtype)]]],estmt[exp[grammar(call),exp:ident(qword_add),exp:ident(bpp),exp:ident(blen),exp:ident(type)]],estmt[exp[grammar(call),exp:ident(qword_addhex),exp:ident(bpp),exp:ident(blen),exp:??(N/H),exp[grammar(call),exp:ident(key_len),exp[grammar(record_ptr),exp:ident(ek),ident(ek_fsidtype)]]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(array_acc),exp:*ref:exp:ident(bpp),exp:??(N/H)],exp:const:other(N/H)]]]],decl(N/H),decl(N/H),decl(N/H),def[fname(expkey_parse),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(cd),fulltype[typec(N/H)]],param[reg(),name(mesg),fulltype[typec(N/H)]],param[reg(),name(mlen),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(array_acc),exp:ident(mesg),exp[grammar(binary_arith),aop(-),exp:ident(mlen),exp:const:int(1)]],exp:const:other(N/H)],st_return[exp:??(N/H)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(array_acc),exp:ident(mesg),exp[grammar(binary_arith),aop(-),exp:ident(mlen),exp:const:int(1)]],exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(buf),exp[grammar(call),exp:ident(kmalloc),exp:ident(PAGE_SIZE),exp:ident(GFP_KERNEL)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(assign),simple_assi(=),exp:ident(len),exp[grammar(call),exp:ident(qword_get),exp:&ref:exp:ident(mesg),exp:ident(buf),exp:ident(PAGE_SIZE)]],exp:const:int(0)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(dom),exp[grammar(call),exp:ident(auth_domain_find),exp:ident(buf)]]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(dprintk),exp:const:string(found domain %s\n),exp:ident(buf)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(assign),simple_assi(=),exp:ident(len),exp[grammar(call),exp:ident(qword_get),exp:&ref:exp:ident(mesg),exp:ident(buf),exp:ident(PAGE_SIZE)]],exp:const:int(0)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(fsidtype),exp[grammar(call),exp:ident(simple_strtoul),exp:ident(buf),exp:&ref:exp:ident(ep),exp:const:int(10)]]],sel_if[exp:*ref:exp:ident(ep),statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(dprintk),exp:const:string(found fsidtype %d\n),exp:ident(fsidtype)]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(call),exp:ident(key_len),exp:ident(fsidtype)],exp:const:int(0)],statem(N/H),estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(assign),simple_assi(=),exp:ident(len),exp[grammar(call),exp:ident(qword_get),exp:&ref:exp:ident(mesg),exp:ident(buf),exp:ident(PAGE_SIZE)]],exp:const:int(0)],statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(dprintk),exp:const:string(found fsid length %d\n),exp:ident(len)]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(len),exp[grammar(call),exp:ident(key_len),exp:ident(fsidtype)]],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(key),ident(h)],ident(flags)],exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(key),ident(h)],ident(expiry_time)],exp[grammar(call),exp:ident(get_expiry),exp:&ref:exp:ident(mesg)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(key),ident(h)],ident(expiry_time)],exp:const:int(0)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(key),ident(ek_client)],exp:ident(dom)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(key),ident(ek_fsidtype)],exp:ident(fsidtype)]],estmt[exp[grammar(call),exp:ident(memcpy),exp[grammar(record_acc),exp:ident(key),ident(ek_fsid)],exp:ident(buf),exp:ident(len)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ek),exp[grammar(call),exp:ident(svc_expkey_lookup),exp:&ref:exp:ident(key)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(assign),simple_assi(=),exp:ident(len),exp[grammar(call),exp:ident(qword_get),exp:&ref:exp:ident(mesg),exp:ident(buf),exp:ident(PAGE_SIZE)]],exp:const:int(0)],statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(dprintk),exp:const:string(Path seems to be <%s>\n),exp:ident(buf)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:const:int(0)]],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(len),exp:const:int(0)],{}stmt[estmt[exp[grammar(call),exp:ident(set_bit),exp:ident(CACHE_NEGATIVE),exp[grammar(&ref),grammar(exp),grammar(record_acc),exp[grammar(record_acc),exp:ident(key),ident(h)],ident(flags)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ek),exp[grammar(call),exp:ident(svc_expkey_update),exp:&ref:exp:ident(key),exp:ident(ek)]]],sel_if[exp:ident(ek),estmt[exp[grammar(call),exp:ident(cache_put),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(ek),ident(h)],exp:&ref:exp:ident(svc_expkey_cache)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]]]],{}stmt[statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(path_lookup),exp:ident(buf),exp:const:int(0),exp:&ref:exp:ident(nd)]]],sel_if[exp:ident(err),statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(dprintk),exp:const:string(Found the path %s\n),exp:ident(buf)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(key),ident(ek_path)],exp[grammar(record_acc),exp:ident(nd),ident(path)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ek),exp[grammar(call),exp:ident(svc_expkey_update),exp:&ref:exp:ident(key),exp:ident(ek)]]],sel_if[exp:ident(ek),estmt[exp[grammar(call),exp:ident(cache_put),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(ek),ident(h)],exp:&ref:exp:ident(svc_expkey_cache)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]]],estmt[exp[grammar(call),exp:ident(path_put),exp[grammar(&ref),grammar(exp),grammar(record_acc),exp:ident(nd),ident(path)]]]]],estmt[exp[grammar(call),exp:ident(cache_flush)]],statem(N/H),estmt[exp[grammar(call),exp:ident(kfree),exp:ident(buf)]],st_return[exp:ident(err)]]],def[fname(expkey_show),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(cd),fulltype[typec(N/H)]],param[reg(),name(h),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(h),exp:ident(NULL)],{}stmt[estmt[exp[grammar(call),exp:ident(seq_puts),exp:ident(m),exp:const:string(#domain fsidtype fsid [path]\n)]],st_return[exp:const:int(0)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ek),exp[grammar(call),exp:ident(container_of),exp:ident(h),argtype(N/H),exp:ident(h)]]],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(%s %d 0x),exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(ek),ident(ek_client)],ident(name)],exp[grammar(record_ptr),exp:ident(ek),ident(ek_fsidtype)]]],for[exp[grammar(assign),simple_assi(=),exp:ident(i),exp:const:int(0)],exp[grammar(binary_logi),logiop(??),exp:ident(i),exp[grammar(binary_arith),aop(/),exp[grammar(call),exp:ident(key_len),exp[grammar(record_ptr),exp:ident(ek),ident(ek_fsidtype)]],exp:const:int(4)]],exp:??(N/H),estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(%08x),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(ek),ident(ek_fsid)],exp:ident(i)]]]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(call),exp:ident(test_bit),exp:ident(CACHE_VALID),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(h),ident(flags)]],exp:??(N/H)],{}stmt[estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( )]],estmt[exp[grammar(call),exp:ident(seq_path),exp:ident(m),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(ek),ident(ek_path)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(ek),ident(ek_path)],ident(dentry)],exp:const:string(\\ \t\n)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(\n)]],st_return[exp:const:int(0)]]],def[fname(expkey_match),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(a),fulltype[typec(N/H)]],param[reg(),name(b),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp[grammar(binary_logi),logiop(or),exp[grammar(binary_logi),logiop(or),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(orig),ident(ek_fsidtype)],exp[grammar(record_ptr),exp:ident(new),ident(ek_fsidtype)]],exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(orig),ident(ek_client)],exp[grammar(record_ptr),exp:ident(new),ident(ek_client)]]],exp[grammar(binary_logi),logiop(??),exp[grammar(call),exp:ident(memcmp),exp[grammar(record_ptr),exp:ident(orig),ident(ek_fsid)],exp[grammar(record_ptr),exp:ident(new),ident(ek_fsid)],exp[grammar(call),exp:ident(key_len),exp[grammar(record_ptr),exp:ident(orig),ident(ek_fsidtype)]]],exp:const:int(0)]],st_return[exp:const:int(0)],estmt(NONE)],st_return[exp:const:int(1)]]],def[fname(expkey_init),funtype[fulltype[ctype[btype(void)]],param[reg(),name(cnew),fulltype[typec(N/H)]],param[reg(),name(citem),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(kref_get),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp[grammar(record_ptr),exp:ident(item),ident(ek_client)],ident(ref)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(new),ident(ek_client)],exp[grammar(record_ptr),exp:ident(item),ident(ek_client)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(new),ident(ek_fsidtype)],exp[grammar(record_ptr),exp:ident(item),ident(ek_fsidtype)]]],estmt[exp[grammar(call),exp:ident(memcpy),exp[grammar(record_ptr),exp:ident(new),ident(ek_fsid)],exp[grammar(record_ptr),exp:ident(item),ident(ek_fsid)],exp[grammar(sizeof),grammar(exp),grammar(record_ptr),exp:ident(new),ident(ek_fsid)]]]]],def[fname(expkey_update),funtype[fulltype[ctype[btype(void)]],param[reg(),name(cnew),fulltype[typec(N/H)]],param[reg(),name(citem),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(new),ident(ek_path)],exp[grammar(record_ptr),exp:ident(item),ident(ek_path)]]],estmt[exp[grammar(call),exp:ident(path_get),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(item),ident(ek_path)]]]]],def[fname(expkey_alloc),funtype[fulltype[typec(N/H)],param[reg(),name(),fulltype[ctype[btype(void)]]]],{}stmt[statem(N/H),sel_if[exp:ident(i),st_return[exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(i),ident(h)]],st_return[exp:ident(NULL)]]]],decl(N/H),def[fname(svc_expkey_lookup),funtype[fulltype[typec(N/H)],param[reg(),name(item),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),op_assi(x=),exp:ident(hash),exp[grammar(call),exp:ident(hash_mem),exp:ident(cp),exp:ident(len),exp:ident(EXPKEY_HASHBITS)]]],estmt[exp[grammar(assign),op_assi(x=),exp:ident(hash),exp[grammar(call),exp:ident(hash_ptr),exp[grammar(record_ptr),exp:ident(item),ident(ek_client)],exp:ident(EXPKEY_HASHBITS)]]],estmt[exp[grammar(assign),op_assi(&=),exp:ident(hash),exp:ident(EXPKEY_HASHMASK)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ch),exp[grammar(call),exp:ident(sunrpc_cache_lookup),exp:&ref:exp:ident(svc_expkey_cache),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(item),ident(h)],exp:ident(hash)]]],sel_if[exp:ident(ch),st_return[exp[grammar(call),exp:ident(container_of),exp:ident(ch),argtype(N/H),exp:ident(h)]],st_return[exp:ident(NULL)]]]],def[fname(svc_expkey_update),funtype[fulltype[typec(N/H)],param[reg(),name(new),fulltype[typec(N/H)]],param[reg(),name(old),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),op_assi(x=),exp:ident(hash),exp[grammar(call),exp:ident(hash_mem),exp:ident(cp),exp:ident(len),exp:ident(EXPKEY_HASHBITS)]]],estmt[exp[grammar(assign),op_assi(x=),exp:ident(hash),exp[grammar(call),exp:ident(hash_ptr),exp[grammar(record_ptr),exp:ident(new),ident(ek_client)],exp:ident(EXPKEY_HASHBITS)]]],estmt[exp[grammar(assign),op_assi(&=),exp:ident(hash),exp:ident(EXPKEY_HASHMASK)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ch),exp[grammar(call),exp:ident(sunrpc_cache_update),exp:&ref:exp:ident(svc_expkey_cache),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(new),ident(h)],exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(old),ident(h)],exp:ident(hash)]]],sel_if[exp:ident(ch),st_return[exp[grammar(call),exp:ident(container_of),exp:ident(ch),argtype(N/H),exp:ident(h)]],st_return[exp:ident(NULL)]]]],define(N/H),define(N/H),define(N/H),decl(N/H),def[fname(nfsd4_fslocs_free),funtype[fulltype[ctype[btype(void)]],param[reg(),name(fsloc),fulltype[typec(N/H)]]],{}stmt[statem(N/H),for[exp[grammar(assign),simple_assi(=),exp:ident(i),exp:const:int(0)],exp[grammar(binary_logi),logiop(??),exp:ident(i),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations_count)]],exp:??(N/H),{}stmt[estmt[exp[grammar(call),exp:ident(kfree),exp[grammar(record_acc),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations)],exp:ident(i)],ident(path)]]],estmt[exp[grammar(call),exp:ident(kfree),exp[grammar(record_acc),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations)],exp:ident(i)],ident(hosts)]]]]],estmt[exp[grammar(call),exp:ident(kfree),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations)]]]]],def[fname(svc_export_put),funtype[fulltype[ctype[btype(void)]],param[reg(),name(ref),fulltype[typec(N/H)]]],{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(path_put),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(exp),ident(ex_path)]]],estmt[exp[grammar(call),exp:ident(auth_domain_put),exp[grammar(record_ptr),exp:ident(exp),ident(ex_client)]]],estmt[exp[grammar(call),exp:ident(kfree),exp[grammar(record_ptr),exp:ident(exp),ident(ex_pathname)]]],estmt[exp[grammar(call),exp:ident(nfsd4_fslocs_free),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(exp),ident(ex_fslocs)]]],estmt[exp[grammar(call),exp:ident(kfree),exp:ident(exp)]]]],def[fname(svc_export_request),funtype[fulltype[ctype[btype(void)]],param[reg(),name(cd),fulltype[typec(N/H)]],param[reg(),name(h),fulltype[typec(N/H)]],param[reg(),name(bpp),fulltype[typec(N/H)]],param[reg(),name(blen),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(qword_add),exp:ident(bpp),exp:ident(blen),exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(exp),ident(ex_client)],ident(name)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(pth),exp[grammar(call),exp:ident(d_path),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(exp),ident(ex_path)],ident(dentry)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(exp),ident(ex_path)],ident(mnt)],exp:*ref:exp:ident(bpp),exp:*ref:exp:ident(blen)]]],sel_if[exp[grammar(call),exp:ident(IS_ERR),exp:ident(pth)],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp[grammar(array_acc),exp:*ref:exp:ident(bpp),exp:const:int(0)],exp:const:other(N/H)]],statem(N/H)],estmt(NONE)],estmt[exp[grammar(call),exp:ident(qword_add),exp:ident(bpp),exp:ident(blen),exp:ident(pth)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(array_acc),exp:*ref:exp:ident(bpp),exp:??(N/H)],exp:const:other(N/H)]]]],decl(N/H),decl(N/H),def[fname(check_export),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(inode),fulltype[typec(N/H)]],param[reg(),name(flags),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(uuid),fulltype[typec(N/H)]]],{}stmt[sel_if[exp[grammar(binary_logi),logiop(and),exp:??(N/H),exp:??(N/H)],st_return[exp:??(N/H)],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(and),exp:??(N/H),exp:??(N/H)],exp[grammar(binary_logi),logiop(eq),exp:ident(uuid),exp:ident(NULL)]],{}stmt[estmt[exp[grammar(call),exp:ident(dprintk),exp:const:string(exp_export: export of non-dev fs without fsid\n)]],st_return[exp:??(N/H)]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(or),exp:??(N/H),exp:??(N/H)],{}stmt[estmt[exp[grammar(call),exp:ident(dprintk),exp:const:string(exp_export: export of invalid fs type.\n)]],st_return[exp:??(N/H)]],estmt(NONE)],st_return[exp:const:int(0)]]],def[fname(fsloc_parse),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(mesg),fulltype[typec(N/H)]],param[reg(),name(buf),fulltype[typec(N/H)]],param[reg(),name(fsloc),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(get_int),exp:ident(mesg),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(fsloc),ident(locations_count)]]]],sel_if[exp:ident(err),st_return[exp:ident(err)],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations_count)],exp:ident(MAX_FS_LOCATIONS)],st_return[exp:??(N/H)],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations_count)],exp:const:int(0)],st_return[exp:const:int(0)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations)],exp[grammar(call),exp:ident(kzalloc),exp[grammar(binary_arith),aop(*),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations_count)],exp[grammar(sizeoftype),grammar(fulltype),typec(N/H)]],exp:ident(GFP_KERNEL)]]],sel_if[exp:??(N/H),st_return[exp:??(N/H)],estmt(NONE)],for[exp[grammar(assign),simple_assi(=),exp:ident(i),exp:const:int(0)],exp[grammar(binary_logi),logiop(??),exp:ident(i),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations_count)]],exp:??(N/H),{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(len),exp[grammar(call),exp:ident(qword_get),exp:ident(mesg),exp:ident(buf),exp:ident(PAGE_SIZE)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(len),exp:const:int(0)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations)],exp:ident(i)],ident(hosts)],exp[grammar(call),exp:ident(kstrdup),exp:ident(buf),exp:ident(GFP_KERNEL)]]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(len),exp[grammar(call),exp:ident(qword_get),exp:ident(mesg),exp:ident(buf),exp:ident(PAGE_SIZE)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(len),exp:const:int(0)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations)],exp:ident(i)],ident(path)],exp[grammar(call),exp:ident(kstrdup),exp:ident(buf),exp:ident(GFP_KERNEL)]]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(get_int),exp:ident(mesg),exp:&ref:exp:ident(migrated)]]],sel_if[exp:ident(err),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],sel_if[exp[grammar(binary_logi),logiop(or),exp[grammar(binary_logi),logiop(??),exp:ident(migrated),exp:const:int(0)],exp[grammar(binary_logi),logiop(??),exp:ident(migrated),exp:const:int(1)]],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(fsloc),ident(migrated)],exp:ident(migrated)]],st_return[exp:const:int(0)],statem(N/H),st_return[exp:ident(err)]]],def[fname(secinfo_parse),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(mesg),fulltype[typec(N/H)]],param[reg(),name(buf),fulltype[typec(N/H)]],param[reg(),name(exp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(get_int),exp:ident(mesg),exp:&ref:exp:ident(listsize)]]],sel_if[exp:ident(err),st_return[exp:ident(err)],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(or),exp[grammar(binary_logi),logiop(??),exp:ident(listsize),exp:const:int(0)],exp[grammar(binary_logi),logiop(??),exp:ident(listsize),exp:ident(MAX_SECINFO_LIST)]],st_return[exp:??(N/H)],estmt(NONE)],for[exp[grammar(assign),simple_assi(=),exp:ident(f),exp[grammar(record_ptr),exp:ident(exp),ident(ex_flavors)]],exp[grammar(binary_logi),logiop(??),exp:ident(f),exp[grammar(binary_arith),aop(+),exp[grammar(record_ptr),exp:ident(exp),ident(ex_flavors)],exp:ident(listsize)]],exp:??(N/H),{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(get_int),exp:ident(mesg),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(f),ident(pseudoflavor)]]]],sel_if[exp:ident(err),st_return[exp:ident(err)],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(f),ident(pseudoflavor)],exp:const:int(0)],st_return[exp:??(N/H)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(get_int),exp:ident(mesg),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(f),ident(flags)]]]],sel_if[exp:ident(err),st_return[exp:ident(err)],estmt(NONE)],sel_if[exp[grammar(binary_arith),aop(&),exp:??(N/H),exp[grammar(binary_arith),aop(N/H),exp[grammar(record_ptr),exp:ident(f),ident(flags)],exp[grammar(record_ptr),exp:ident(exp),ident(ex_flags)]]],st_return[exp:??(N/H)],estmt(NONE)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(exp),ident(ex_nflavors)],exp:ident(listsize)]],st_return[exp:const:int(0)]]],def[fname(fsloc_parse),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(mesg),fulltype[typec(N/H)]],param[reg(),name(buf),fulltype[typec(N/H)]],param[reg(),name(fsloc),fulltype[typec(N/H)]]],{}stmt[st_return[exp:const:int(0)]]],def[fname(secinfo_parse),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(mesg),fulltype[typec(N/H)]],param[reg(),name(buf),fulltype[typec(N/H)]],param[reg(),name(exp),fulltype[typec(N/H)]]],{}stmt[st_return[exp:const:int(0)]]],def[fname(svc_export_parse),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(cd),fulltype[typec(N/H)]],param[reg(),name(mesg),fulltype[typec(N/H)]],param[reg(),name(mlen),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(dentry)],exp:ident(NULL)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(exp),ident(ex_pathname)],exp:ident(NULL)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(exp),ident(ex_fslocs)],ident(locations)],exp:ident(NULL)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(exp),ident(ex_fslocs)],ident(locations_count)],exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(exp),ident(ex_fslocs)],ident(migrated)],exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(exp),ident(ex_uuid)],exp:ident(NULL)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(exp),ident(ex_nflavors)],exp:const:int(0)]],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(array_acc),exp:ident(mesg),exp[grammar(binary_arith),aop(-),exp:ident(mlen),exp:const:int(1)]],exp:const:other(N/H)],st_return[exp:??(N/H)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(array_acc),exp:ident(mesg),exp[grammar(binary_arith),aop(-),exp:ident(mlen),exp:const:int(1)]],exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(buf),exp[grammar(call),exp:ident(kmalloc),exp:ident(PAGE_SIZE),exp:ident(GFP_KERNEL)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(len),exp[grammar(call),exp:ident(qword_get),exp:&ref:exp:ident(mesg),exp:ident(buf),exp:ident(PAGE_SIZE)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(len),exp:const:int(0)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(dom),exp[grammar(call),exp:ident(auth_domain_find),exp:ident(buf)]]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(assign),simple_assi(=),exp:ident(len),exp[grammar(call),exp:ident(qword_get),exp:&ref:exp:ident(mesg),exp:ident(buf),exp:ident(PAGE_SIZE)]],exp:const:int(0)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(path_lookup),exp:ident(buf),exp:const:int(0),exp:&ref:exp:ident(nd)]]],sel_if[exp:ident(err),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(exp),ident(h)],ident(flags)],exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(exp),ident(ex_client)],exp:ident(dom)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(exp),ident(ex_path)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(mnt)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(exp),ident(ex_path)],ident(dentry)],exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(dentry)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(exp),ident(ex_pathname)],exp[grammar(call),exp:ident(kstrdup),exp:ident(buf),exp:ident(GFP_KERNEL)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(exp),ident(h)],ident(expiry_time)],exp[grammar(call),exp:ident(get_expiry),exp:&ref:exp:ident(mesg)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(exp),ident(h)],ident(expiry_time)],exp:const:int(0)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(get_int),exp:&ref:exp:ident(mesg),exp:&ref:exp:ident(an_int)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(err),exp:??(N/H)],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:const:int(0)]],estmt[exp[grammar(call),exp:ident(set_bit),exp:ident(CACHE_NEGATIVE),exp[grammar(&ref),grammar(exp),grammar(record_acc),exp[grammar(record_acc),exp:ident(exp),ident(h)],ident(flags)]]]],{}stmt[sel_if[exp[grammar(binary_logi),logiop(or),exp:ident(err),exp[grammar(binary_logi),logiop(??),exp:ident(an_int),exp:const:int(0)]],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(exp),ident(ex_flags)],exp:ident(an_int)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(get_int),exp:&ref:exp:ident(mesg),exp:&ref:exp:ident(an_int)]]],sel_if[exp:ident(err),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(exp),ident(ex_anon_uid)],exp:ident(an_int)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(get_int),exp:&ref:exp:ident(mesg),exp:&ref:exp:ident(an_int)]]],sel_if[exp:ident(err),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(exp),ident(ex_anon_gid)],exp:ident(an_int)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(get_int),exp:&ref:exp:ident(mesg),exp:&ref:exp:ident(an_int)]]],sel_if[exp:ident(err),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(exp),ident(ex_fsid)],exp:ident(an_int)]],while[exp[grammar(binary_logi),logiop(??),exp[grammar(assign),simple_assi(=),exp:ident(len),exp[grammar(call),exp:ident(qword_get),exp:&ref:exp:ident(mesg),exp:ident(buf),exp:ident(PAGE_SIZE)]],exp:const:int(0)],{}stmt[sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(call),exp:ident(strcmp),exp:ident(buf),exp:const:string(fsloc)],exp:const:int(0)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(fsloc_parse),exp:&ref:exp:ident(mesg),exp:ident(buf),exp[grammar(&ref),grammar(exp),grammar(record_acc),exp:ident(exp),ident(ex_fslocs)]]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(call),exp:ident(strcmp),exp:ident(buf),exp:const:string(uuid)],exp:const:int(0)],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(len),exp[grammar(call),exp:ident(qword_get),exp:&ref:exp:ident(mesg),exp:ident(buf),exp:ident(PAGE_SIZE)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(len),exp:const:int(16)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(exp),ident(ex_uuid)],exp[grammar(call),exp:ident(kmemdup),exp:ident(buf),exp:const:int(16),exp:ident(GFP_KERNEL)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(record_acc),exp:ident(exp),ident(ex_uuid)],exp:ident(NULL)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],estmt(NONE)]]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(call),exp:ident(strcmp),exp:ident(buf),exp:const:string(secinfo)],exp:const:int(0)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(secinfo_parse),exp:&ref:exp:ident(mesg),exp:ident(buf),exp:&ref:exp:ident(exp)]]],statem(N/H)]]],sel_if[exp:ident(err),statem(N/H),estmt(NONE)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(check_export),exp[grammar(record_ptr),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(dentry)],ident(d_inode)],exp[grammar(record_acc),exp:ident(exp),ident(ex_flags)],exp[grammar(record_acc),exp:ident(exp),ident(ex_uuid)]]]],sel_if[exp:ident(err),statem(N/H),estmt(NONE)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(expp),exp[grammar(call),exp:ident(svc_export_lookup),exp:&ref:exp:ident(exp)]]],sel_if[exp:ident(expp),estmt[exp[grammar(assign),simple_assi(=),exp:ident(expp),exp[grammar(call),exp:ident(svc_export_update),exp:&ref:exp:ident(exp),exp:ident(expp)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]]],estmt[exp[grammar(call),exp:ident(cache_flush)]],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(expp),exp:ident(NULL)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],estmt[exp[grammar(call),exp:ident(exp_put),exp:ident(expp)]]],statem(N/H),estmt[exp[grammar(call),exp:ident(kfree),exp[grammar(record_acc),exp:ident(exp),ident(ex_uuid)]]],estmt[exp[grammar(call),exp:ident(kfree),exp[grammar(record_acc),exp:ident(exp),ident(ex_pathname)]]],sel_if[exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(dentry)],estmt[exp[grammar(call),exp:ident(path_put),exp[grammar(&ref),grammar(exp),grammar(record_acc),exp:ident(nd),ident(path)]]],estmt(NONE)],statem(N/H),estmt[exp[grammar(call),exp:ident(kfree),exp:ident(buf)]],st_return[exp:ident(err)]]],decl(N/H),decl(N/H),def[fname(svc_export_show),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(cd),fulltype[typec(N/H)]],param[reg(),name(h),fulltype[typec(N/H)]]],{}stmt[statem(N/H),sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(h),exp:ident(NULL)],{}stmt[estmt[exp[grammar(call),exp:ident(seq_puts),exp:ident(m),exp:const:string(#path domain(flags)\n)]],st_return[exp:const:int(0)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(container_of),exp:ident(h),argtype(N/H),exp:ident(h)]]],estmt[exp[grammar(call),exp:ident(seq_path),exp:ident(m),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(exp),ident(ex_path)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(exp),ident(ex_path)],ident(dentry)],exp:const:string( \t\n\\)]],estmt[exp[grammar(call),exp:ident(seq_putc),exp:ident(m),exp:const:other(N/H)]],estmt[exp[grammar(call),exp:ident(seq_escape),exp:ident(m),exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(exp),ident(ex_client)],ident(name)],exp:const:string( \t\n\\)]],estmt[exp[grammar(call),exp:ident(seq_putc),exp:ident(m),exp:const:other(N/H)]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(call),exp:ident(test_bit),exp:ident(CACHE_VALID),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(h),ident(flags)]],exp:??(N/H)],{}stmt[estmt[exp[grammar(call),exp:ident(exp_flags),exp:ident(m),exp[grammar(record_ptr),exp:ident(exp),ident(ex_flags)],exp[grammar(record_ptr),exp:ident(exp),ident(ex_fsid)],exp[grammar(record_ptr),exp:ident(exp),ident(ex_anon_uid)],exp[grammar(record_ptr),exp:ident(exp),ident(ex_anon_gid)],exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(exp),ident(ex_fslocs)]]],sel_if[exp[grammar(record_ptr),exp:ident(exp),ident(ex_uuid)],{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(seq_puts),exp:ident(m),exp:const:string(,uuid=)]],for[exp[grammar(assign),simple_assi(=),exp:ident(i),exp:const:int(0)],exp[grammar(binary_logi),logiop(??),exp:ident(i),exp:const:int(16)],exp:??(N/H),{}stmt[sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(eq),exp[grammar(binary_arith),aop(&),exp:ident(i),exp:const:int(3)],exp:const:int(0)],exp:ident(i)],estmt[exp[grammar(call),exp:ident(seq_putc),exp:ident(m),exp:const:other(N/H)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(%02x),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(exp),ident(ex_uuid)],exp:ident(i)]]]]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(show_secinfo),exp:ident(m),exp:ident(exp)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(seq_puts),exp:ident(m),exp:const:string()\n)]],st_return[exp:const:int(0)]]],def[fname(svc_export_match),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(a),fulltype[typec(N/H)]],param[reg(),name(b),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),st_return[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(orig),ident(ex_client)],exp[grammar(record_ptr),exp:ident(new),ident(ex_client)]],exp[grammar(binary_logi),logiop(eq),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(orig),ident(ex_path)],ident(dentry)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(new),ident(ex_path)],ident(dentry)]]],exp[grammar(binary_logi),logiop(eq),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(orig),ident(ex_path)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(new),ident(ex_path)],ident(mnt)]]]]]],def[fname(svc_export_init),funtype[fulltype[ctype[btype(void)]],param[reg(),name(cnew),fulltype[typec(N/H)]],param[reg(),name(citem),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(kref_get),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp[grammar(record_ptr),exp:ident(item),ident(ex_client)],ident(ref)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(new),ident(ex_client)],exp[grammar(record_ptr),exp:ident(item),ident(ex_client)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(new),ident(ex_path)],ident(dentry)],exp[grammar(call),exp:ident(dget),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(item),ident(ex_path)],ident(dentry)]]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(new),ident(ex_path)],ident(mnt)],exp[grammar(call),exp:ident(mntget),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(item),ident(ex_path)],ident(mnt)]]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(new),ident(ex_pathname)],exp:ident(NULL)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(new),ident(ex_fslocs)],ident(locations)],exp:ident(NULL)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(new),ident(ex_fslocs)],ident(locations_count)],exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(new),ident(ex_fslocs)],ident(migrated)],exp:const:int(0)]]]],def[fname(export_update),funtype[fulltype[ctype[btype(void)]],param[reg(),name(cnew),fulltype[typec(N/H)]],param[reg(),name(citem),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(new),ident(ex_flags)],exp[grammar(record_ptr),exp:ident(item),ident(ex_flags)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(new),ident(ex_anon_uid)],exp[grammar(record_ptr),exp:ident(item),ident(ex_anon_uid)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(new),ident(ex_anon_gid)],exp[grammar(record_ptr),exp:ident(item),ident(ex_anon_gid)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(new),ident(ex_fsid)],exp[grammar(record_ptr),exp:ident(item),ident(ex_fsid)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(new),ident(ex_uuid)],exp[grammar(record_ptr),exp:ident(item),ident(ex_uuid)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(item),ident(ex_uuid)],exp:ident(NULL)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(new),ident(ex_pathname)],exp[grammar(record_ptr),exp:ident(item),ident(ex_pathname)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(item),ident(ex_pathname)],exp:ident(NULL)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(new),ident(ex_fslocs)],ident(locations)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(item),ident(ex_fslocs)],ident(locations)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(item),ident(ex_fslocs)],ident(locations)],exp:ident(NULL)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(new),ident(ex_fslocs)],ident(locations_count)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(item),ident(ex_fslocs)],ident(locations_count)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(item),ident(ex_fslocs)],ident(locations_count)],exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(new),ident(ex_fslocs)],ident(migrated)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(item),ident(ex_fslocs)],ident(migrated)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(item),ident(ex_fslocs)],ident(migrated)],exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(new),ident(ex_nflavors)],exp[grammar(record_ptr),exp:ident(item),ident(ex_nflavors)]]],for[exp[grammar(assign),simple_assi(=),exp:ident(i),exp:const:int(0)],exp[grammar(binary_logi),logiop(??),exp:ident(i),exp:ident(MAX_SECINFO_LIST)],exp:??(N/H),{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(new),ident(ex_flavors)],exp:ident(i)],exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(item),ident(ex_flavors)],exp:ident(i)]]]]]]],def[fname(svc_export_alloc),funtype[fulltype[typec(N/H)],param[reg(),name(),fulltype[ctype[btype(void)]]]],{}stmt[statem(N/H),sel_if[exp:ident(i),st_return[exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(i),ident(h)]],st_return[exp:ident(NULL)]]]],decl(N/H),def[fname(svc_export_lookup),funtype[fulltype[typec(N/H)],param[reg(),name(exp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(hash),exp[grammar(call),exp:ident(hash_ptr),exp[grammar(record_ptr),exp:ident(exp),ident(ex_client)],exp:ident(EXPORT_HASHBITS)]]],estmt[exp[grammar(assign),op_assi(x=),exp:ident(hash),exp[grammar(call),exp:ident(hash_ptr),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(exp),ident(ex_path)],ident(dentry)],exp:ident(EXPORT_HASHBITS)]]],estmt[exp[grammar(assign),op_assi(x=),exp:ident(hash),exp[grammar(call),exp:ident(hash_ptr),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(exp),ident(ex_path)],ident(mnt)],exp:ident(EXPORT_HASHBITS)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ch),exp[grammar(call),exp:ident(sunrpc_cache_lookup),exp:&ref:exp:ident(svc_export_cache),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(exp),ident(h)],exp:ident(hash)]]],sel_if[exp:ident(ch),st_return[exp[grammar(call),exp:ident(container_of),exp:ident(ch),argtype(N/H),exp:ident(h)]],st_return[exp:ident(NULL)]]]],def[fname(svc_export_update),funtype[fulltype[typec(N/H)],param[reg(),name(new),fulltype[typec(N/H)]],param[reg(),name(old),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(hash),exp[grammar(call),exp:ident(hash_ptr),exp[grammar(record_ptr),exp:ident(old),ident(ex_client)],exp:ident(EXPORT_HASHBITS)]]],estmt[exp[grammar(assign),op_assi(x=),exp:ident(hash),exp[grammar(call),exp:ident(hash_ptr),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(old),ident(ex_path)],ident(dentry)],exp:ident(EXPORT_HASHBITS)]]],estmt[exp[grammar(assign),op_assi(x=),exp:ident(hash),exp[grammar(call),exp:ident(hash_ptr),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(old),ident(ex_path)],ident(mnt)],exp:ident(EXPORT_HASHBITS)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ch),exp[grammar(call),exp:ident(sunrpc_cache_update),exp:&ref:exp:ident(svc_export_cache),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(new),ident(h)],exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(old),ident(h)],exp:ident(hash)]]],sel_if[exp:ident(ch),st_return[exp[grammar(call),exp:ident(container_of),exp:ident(ch),argtype(N/H),exp:ident(h)]],st_return[exp:ident(NULL)]]]],def[fname(exp_find_key),funtype[fulltype[typec(N/H)],param[reg(),name(clp),fulltype[typec(N/H)]],param[reg(),name(fsid_type),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(fsidv),fulltype[typec(N/H)]],param[reg(),name(reqp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp:??(N/H),st_return[exp[grammar(call),exp:ident(ERR_PTR),exp:??(N/H)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(key),ident(ek_client)],exp:ident(clp)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(key),ident(ek_fsidtype)],exp:ident(fsid_type)]],estmt[exp[grammar(call),exp:ident(memcpy),exp[grammar(record_acc),exp:ident(key),ident(ek_fsid)],exp:ident(fsidv),exp[grammar(call),exp:ident(key_len),exp:ident(fsid_type)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ek),exp[grammar(call),exp:ident(svc_expkey_lookup),exp:&ref:exp:ident(key)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(ek),exp:ident(NULL)],st_return[exp[grammar(call),exp:ident(ERR_PTR),exp:??(N/H)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(cache_check),exp:&ref:exp:ident(svc_expkey_cache),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(ek),ident(h)],exp:ident(reqp)]]],sel_if[exp:ident(err),st_return[exp[grammar(call),exp:ident(ERR_PTR),exp:ident(err)]],estmt(NONE)],st_return[exp:ident(ek)]]],def[fname(exp_set_key),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(clp),fulltype[typec(N/H)]],param[reg(),name(fsid_type),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(fsidv),fulltype[typec(N/H)]],param[reg(),name(exp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(key),ident(ek_client)],exp:ident(clp)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(key),ident(ek_fsidtype)],exp:ident(fsid_type)]],estmt[exp[grammar(call),exp:ident(memcpy),exp[grammar(record_acc),exp:ident(key),ident(ek_fsid)],exp:ident(fsidv),exp[grammar(call),exp:ident(key_len),exp:ident(fsid_type)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(key),ident(ek_path)],exp[grammar(record_ptr),exp:ident(exp),ident(ex_path)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(key),ident(h)],ident(expiry_time)],exp:ident(NEVER)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(key),ident(h)],ident(flags)],exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ek),exp[grammar(call),exp:ident(svc_expkey_lookup),exp:&ref:exp:ident(key)]]],sel_if[exp:ident(ek),estmt[exp[grammar(assign),simple_assi(=),exp:ident(ek),exp[grammar(call),exp:ident(svc_expkey_update),exp:&ref:exp:ident(key),exp:ident(ek)]]],estmt(NONE)],sel_if[exp:ident(ek),{}stmt[estmt[exp[grammar(call),exp:ident(cache_put),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(ek),ident(h)],exp:&ref:exp:ident(svc_expkey_cache)]],st_return[exp:const:int(0)]],estmt(NONE)],st_return[exp:??(N/H)]]],def[fname(exp_get_key),funtype[fulltype[typec(N/H)],param[reg(),name(clp),fulltype[typec(N/H)]],param[reg(),name(dev),fulltype[typec(N/H)]],param[reg(),name(ino),fulltype[typec(N/H)]]],{}stmt[statem(N/H),sel_if[exp[grammar(call),exp:ident(old_valid_dev),exp:ident(dev)],{}stmt[estmt[exp[grammar(call),exp:ident(mk_fsid),exp:ident(FSID_DEV),exp:ident(fsidv),exp:ident(dev),exp:ident(ino),exp:const:int(0),exp:ident(NULL)]],st_return[exp[grammar(call),exp:ident(exp_find_key),exp:ident(clp),exp:ident(FSID_DEV),exp:ident(fsidv),exp:ident(NULL)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(mk_fsid),exp:ident(FSID_ENCODE_DEV),exp:ident(fsidv),exp:ident(dev),exp:ident(ino),exp:const:int(0),exp:ident(NULL)]],st_return[exp[grammar(call),exp:ident(exp_find_key),exp:ident(clp),exp:ident(FSID_ENCODE_DEV),exp:ident(fsidv),exp:ident(NULL)]]]],def[fname(exp_get_fsid_key),funtype[fulltype[typec(N/H)],param[reg(),name(clp),fulltype[typec(N/H)]],param[reg(),name(fsid),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(mk_fsid),exp:ident(FSID_NUM),exp:ident(fsidv),exp:const:int(0),exp:const:int(0),exp:ident(fsid),exp:ident(NULL)]],st_return[exp[grammar(call),exp:ident(exp_find_key),exp:ident(clp),exp:ident(FSID_NUM),exp:ident(fsidv),exp:ident(NULL)]]]],def[fname(exp_get_by_name),funtype[fulltype[typec(N/H)],param[reg(),name(clp),fulltype[typec(N/H)]],param[reg(),name(mnt),fulltype[typec(N/H)]],param[reg(),name(dentry),fulltype[typec(N/H)]],param[reg(),name(reqp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp:??(N/H),st_return[exp[grammar(call),exp:ident(ERR_PTR),exp:??(N/H)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(key),ident(ex_client)],exp:ident(clp)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(key),ident(ex_path)],ident(mnt)],exp:ident(mnt)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(key),ident(ex_path)],ident(dentry)],exp:ident(dentry)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(svc_export_lookup),exp:&ref:exp:ident(key)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(exp),exp:ident(NULL)],st_return[exp[grammar(call),exp:ident(ERR_PTR),exp:??(N/H)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(cache_check),exp:&ref:exp:ident(svc_export_cache),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(exp),ident(h)],exp:ident(reqp)]]],sel_if[exp:ident(err),st_return[exp[grammar(call),exp:ident(ERR_PTR),exp:ident(err)]],estmt(NONE)],st_return[exp:ident(exp)]]],def[fname(exp_parent),funtype[fulltype[typec(N/H)],param[reg(),name(clp),fulltype[typec(N/H)]],param[reg(),name(mnt),fulltype[typec(N/H)]],param[reg(),name(dentry),fulltype[typec(N/H)]],param[reg(),name(reqp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(dget),exp:ident(dentry)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(exp_get_by_name),exp:ident(clp),exp:ident(mnt),exp:ident(dentry),exp:ident(reqp)]]],while[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(eq),exp[grammar(call),exp:ident(PTR_ERR),exp:ident(exp)],exp:??(N/H)],exp:??(N/H)],{}stmt[statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(parent),exp[grammar(call),exp:ident(dget_parent),exp:ident(dentry)]]],estmt[exp[grammar(call),exp:ident(dput),exp:ident(dentry)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(dentry),exp:ident(parent)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(exp_get_by_name),exp:ident(clp),exp:ident(mnt),exp:ident(dentry),exp:ident(reqp)]]]]],estmt[exp[grammar(call),exp:ident(dput),exp:ident(dentry)]],st_return[exp:ident(exp)]]],decl(N/H),def[fname(exp_readlock),funtype[fulltype[ctype[btype(void)]],param[reg(),name(),fulltype[ctype[btype(void)]]]],{}stmt[estmt[exp[grammar(call),exp:ident(down_read),exp:&ref:exp:ident(hash_sem)]]]],def[fname(exp_writelock),funtype[fulltype[ctype[btype(void)]],param[reg(),name(),fulltype[ctype[btype(void)]]]],{}stmt[estmt[exp[grammar(call),exp:ident(down_write),exp:&ref:exp:ident(hash_sem)]]]],def[fname(exp_readunlock),funtype[fulltype[ctype[btype(void)]],param[reg(),name(),fulltype[ctype[btype(void)]]]],{}stmt[estmt[exp[grammar(call),exp:ident(up_read),exp:&ref:exp:ident(hash_sem)]]]],def[fname(exp_writeunlock),funtype[fulltype[ctype[btype(void)]],param[reg(),name(),fulltype[ctype[btype(void)]]]],{}stmt[estmt[exp[grammar(call),exp:ident(up_write),exp:&ref:exp:ident(hash_sem)]]]],def[fname(exp_fsid_unhash),funtype[fulltype[ctype[btype(void)]],param[reg(),name(exp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(binary_arith),aop(&),exp[grammar(record_ptr),exp:ident(exp),ident(ex_flags)],exp:ident(NFSEXP_FSID)],exp:const:int(0)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ek),exp[grammar(call),exp:ident(exp_get_fsid_key),exp[grammar(record_ptr),exp:ident(exp),ident(ex_client)],exp[grammar(record_ptr),exp:ident(exp),ident(ex_fsid)]]]],sel_if[exp:??(N/H),{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(ek),ident(h)],ident(expiry_time)],exp[grammar(binary_arith),aop(-),exp[grammar(call),exp:ident(get_seconds)],exp:const:int(1)]]],estmt[exp[grammar(call),exp:ident(cache_put),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(ek),ident(h)],exp:&ref:exp:ident(svc_expkey_cache)]]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(svc_expkey_cache),ident(nextcheck)],exp[grammar(call),exp:ident(get_seconds)]]]]],def[fname(exp_fsid_hash),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(clp),fulltype[typec(N/H)]],param[reg(),name(exp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(binary_arith),aop(&),exp[grammar(record_ptr),exp:ident(exp),ident(ex_flags)],exp:ident(NFSEXP_FSID)],exp:const:int(0)],st_return[exp:const:int(0)],estmt(NONE)],estmt[exp[grammar(call),exp:ident(mk_fsid),exp:ident(FSID_NUM),exp:ident(fsid),exp:const:int(0),exp:const:int(0),exp[grammar(record_ptr),exp:ident(exp),ident(ex_fsid)],exp:ident(NULL)]],st_return[exp[grammar(call),exp:ident(exp_set_key),exp:ident(clp),exp:ident(FSID_NUM),exp:ident(fsid),exp:ident(exp)]]]],def[fname(exp_hash),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(clp),fulltype[typec(N/H)]],param[reg(),name(exp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),sel_if[exp[grammar(call),exp:ident(old_valid_dev),exp:ident(dev)],{}stmt[estmt[exp[grammar(call),exp:ident(mk_fsid),exp:ident(FSID_DEV),exp:ident(fsid),exp:ident(dev),exp[grammar(record_ptr),exp:ident(inode),ident(i_ino)],exp:const:int(0),exp:ident(NULL)]],st_return[exp[grammar(call),exp:ident(exp_set_key),exp:ident(clp),exp:ident(FSID_DEV),exp:ident(fsid),exp:ident(exp)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(mk_fsid),exp:ident(FSID_ENCODE_DEV),exp:ident(fsid),exp:ident(dev),exp[grammar(record_ptr),exp:ident(inode),ident(i_ino)],exp:const:int(0),exp:ident(NULL)]],st_return[exp[grammar(call),exp:ident(exp_set_key),exp:ident(clp),exp:ident(FSID_ENCODE_DEV),exp:ident(fsid),exp:ident(exp)]]]],def[fname(exp_unhash),funtype[fulltype[ctype[btype(void)]],param[reg(),name(exp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(ek),exp[grammar(call),exp:ident(exp_get_key),exp[grammar(record_ptr),exp:ident(exp),ident(ex_client)],exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(inode),ident(i_sb)],ident(s_dev)],exp[grammar(record_ptr),exp:ident(inode),ident(i_ino)]]]],sel_if[exp:??(N/H),{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(ek),ident(h)],ident(expiry_time)],exp[grammar(binary_arith),aop(-),exp[grammar(call),exp:ident(get_seconds)],exp:const:int(1)]]],estmt[exp[grammar(call),exp:ident(cache_put),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(ek),ident(h)],exp:&ref:exp:ident(svc_expkey_cache)]]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(svc_expkey_cache),ident(nextcheck)],exp[grammar(call),exp:ident(get_seconds)]]]]],def[fname(exp_export),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(nxp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],sel_if[exp[grammar(binary_logi),logiop(or),exp:??(N/H),exp:??(N/H)],statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(dprintk),exp:const:string(exp_export called for %s:%s (%x/%ld fl %x).\n),exp[grammar(record_ptr),exp:ident(nxp),ident(ex_client)],exp[grammar(record_ptr),exp:ident(nxp),ident(ex_path)],exp:??(N/H),exp:??(N/H),exp[grammar(record_ptr),exp:ident(nxp),ident(ex_flags)]]],estmt[exp[grammar(call),exp:ident(exp_writelock)]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(path_lookup),exp[grammar(record_ptr),exp:ident(nxp),ident(ex_path)],exp:const:int(0),exp:&ref:exp:ident(nd)]]],sel_if[exp:ident(err),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(exp_get_by_name),exp:ident(clp),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(dentry)],exp:ident(NULL)]]],estmt[exp[grammar(call),exp:ident(memset),exp:&ref:exp:ident(new),exp:const:int(0),exp:sizeof:exp:ident(new)]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(and),exp[grammar(binary_arith),aop(&),exp[grammar(record_ptr),exp:ident(nxp),ident(ex_flags)],exp:ident(NFSEXP_FSID)],exp:??(N/H)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(fsid_key),ident(ek_path)],ident(mnt)]],exp[grammar(binary_logi),logiop(or),exp[grammar(binary_logi),logiop(??),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(fsid_key),ident(ek_path)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(mnt)]],exp[grammar(binary_logi),logiop(??),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(fsid_key),ident(ek_path)],ident(dentry)],exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(dentry)]]]],statem(N/H),estmt(NONE)],sel_if[exp:??(N/H),{}stmt[estmt[exp[grammar(call),exp:ident(exp_fsid_unhash),exp:ident(exp)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(exp),ident(ex_flags)],exp[grammar(record_ptr),exp:ident(nxp),ident(ex_flags)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(exp),ident(ex_anon_uid)],exp[grammar(record_ptr),exp:ident(nxp),ident(ex_anon_uid)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(exp),ident(ex_anon_gid)],exp[grammar(record_ptr),exp:ident(nxp),ident(ex_anon_gid)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(exp),ident(ex_fsid)],exp[grammar(record_ptr),exp:ident(nxp),ident(ex_dev)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(exp_fsid_hash),exp:ident(clp),exp:ident(exp)]]],statem(N/H)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(check_export),exp[grammar(record_ptr),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(dentry)],ident(d_inode)],exp[grammar(record_ptr),exp:ident(nxp),ident(ex_flags)],exp:ident(NULL)]]],sel_if[exp:ident(err),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],estmt[exp[grammar(call),exp:ident(dprintk),exp:const:string(nfsd: creating export entry %p for client %p\n),exp:ident(exp),exp:ident(clp)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(new),ident(h)],ident(expiry_time)],exp:ident(NEVER)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(new),ident(h)],ident(flags)],exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(new),ident(ex_pathname)],exp[grammar(call),exp:ident(kstrdup),exp[grammar(record_ptr),exp:ident(nxp),ident(ex_path)],exp:ident(GFP_KERNEL)]]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(new),ident(ex_client)],exp:ident(clp)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(new),ident(ex_path)],exp[grammar(record_acc),exp:ident(nd),ident(path)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(new),ident(ex_flags)],exp[grammar(record_ptr),exp:ident(nxp),ident(ex_flags)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(new),ident(ex_anon_uid)],exp[grammar(record_ptr),exp:ident(nxp),ident(ex_anon_uid)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(new),ident(ex_anon_gid)],exp[grammar(record_ptr),exp:ident(nxp),ident(ex_anon_gid)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(new),ident(ex_fsid)],exp[grammar(record_ptr),exp:ident(nxp),ident(ex_dev)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(svc_export_lookup),exp:&ref:exp:ident(new)]]],sel_if[exp:ident(exp),estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(svc_export_update),exp:&ref:exp:ident(new),exp:ident(exp)]]],estmt(NONE)],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(or),exp[grammar(call),exp:ident(exp_hash),exp:ident(clp),exp:ident(exp)],exp[grammar(call),exp:ident(exp_fsid_hash),exp:ident(clp),exp:ident(exp)]],{}stmt[estmt[exp[grammar(call),exp:ident(exp_do_unexport),exp:ident(exp)]],estmt[exp[grammar(call),exp:ident(cache_flush)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:const:int(0)]]],statem(N/H),sel_if[exp:ident(exp),estmt[exp[grammar(call),exp:ident(exp_put),exp:ident(exp)]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(and),exp:ident(fsid_key),exp:??(N/H)],estmt[exp[grammar(call),exp:ident(cache_put),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(fsid_key),ident(h)],exp:&ref:exp:ident(svc_expkey_cache)]],estmt(NONE)],sel_if[exp:ident(clp),estmt[exp[grammar(call),exp:ident(auth_domain_put),exp:ident(clp)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(path_put),exp[grammar(&ref),grammar(exp),grammar(record_acc),exp:ident(nd),ident(path)]]],statem(N/H),statem(N/H)]],def[fname(exp_do_unexport),funtype[fulltype[ctype[btype(void)]],param[reg(),name(unexp),fulltype[typec(N/H)]]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(unexp),ident(h)],ident(expiry_time)],exp[grammar(binary_arith),aop(-),exp[grammar(call),exp:ident(get_seconds)],exp:const:int(1)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(svc_export_cache),ident(nextcheck)],exp[grammar(call),exp:ident(get_seconds)]]],estmt[exp[grammar(call),exp:ident(exp_unhash),exp:ident(unexp)]],estmt[exp[grammar(call),exp:ident(exp_fsid_unhash),exp:ident(unexp)]]]],def[fname(exp_unexport),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(nxp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),sel_if[exp[grammar(binary_logi),logiop(or),exp:??(N/H),exp:??(N/H)],st_return[exp:??(N/H)],estmt(NONE)],estmt[exp[grammar(call),exp:ident(exp_writelock)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(dom),exp[grammar(call),exp:ident(auth_domain_find),exp[grammar(record_ptr),exp:ident(nxp),ident(ex_client)]]]],sel_if[exp:??(N/H),{}stmt[estmt[exp[grammar(call),exp:ident(dprintk),exp:const:string(nfsd: unexport couldn't find %s\n),exp[grammar(record_ptr),exp:ident(nxp),ident(ex_client)]]],statem(N/H)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(path_lookup),exp[grammar(record_ptr),exp:ident(nxp),ident(ex_path)],exp:const:int(0),exp:&ref:exp:ident(nd)]]],sel_if[exp:ident(err),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(exp_get_by_name),exp:ident(dom),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(dentry)],exp:ident(NULL)]]],estmt[exp[grammar(call),exp:ident(path_put),exp[grammar(&ref),grammar(exp),grammar(record_acc),exp:ident(nd),ident(path)]]],sel_if[exp[grammar(call),exp:ident(IS_ERR),exp:ident(exp)],statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(exp_do_unexport),exp:ident(exp)]],estmt[exp[grammar(call),exp:ident(exp_put),exp:ident(exp)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:const:int(0)]],statem(N/H),estmt[exp[grammar(call),exp:ident(cache_flush)]],statem(N/H),st_return[exp:ident(err)]]],def[fname(exp_rootfh),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(clp),fulltype[typec(N/H)]],param[reg(),name(path),fulltype[typec(N/H)]],param[reg(),name(f),fulltype[typec(N/H)]],param[reg(),name(maxsize),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],sel_if[exp[grammar(call),exp:ident(path_lookup),exp:ident(path),exp:const:int(0),exp:&ref:exp:ident(nd)],{}stmt[estmt[exp[grammar(call),exp:ident(printk),exp:const:string(nfsd: exp_rootfh path not found %s),exp:ident(path)]],st_return[exp:ident(err)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(inode),exp[grammar(record_ptr),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(dentry)],ident(d_inode)]]],estmt[exp[grammar(call),exp:ident(dprintk),exp:const:string(nfsd: exp_rootfh(%s [%p] %s:%s/%ld)\n),exp:ident(path),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(dentry)],exp[grammar(record_ptr),exp:ident(clp),ident(name)],exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(inode),ident(i_sb)],ident(s_id)],exp[grammar(record_ptr),exp:ident(inode),ident(i_ino)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(exp_parent),exp:ident(clp),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(dentry)],exp:ident(NULL)]]],sel_if[exp[grammar(call),exp:ident(IS_ERR),exp:ident(exp)],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(PTR_ERR),exp:ident(exp)]]],statem(N/H)],estmt(NONE)],estmt[exp[grammar(call),exp:ident(fh_init),exp:&ref:exp:ident(fh),exp:ident(maxsize)]],sel_if[exp[grammar(call),exp:ident(fh_compose),exp:&ref:exp:ident(fh),exp:ident(exp),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(dentry)],exp:ident(NULL)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:const:int(0)]]],estmt[exp[grammar(call),exp:ident(memcpy),exp:ident(f),exp[grammar(&ref),grammar(exp),grammar(record_acc),exp:ident(fh),ident(fh_handle)],exp[grammar(sizeoftype),grammar(fulltype),typec(N/H)]]],estmt[exp[grammar(call),exp:ident(fh_put),exp:&ref:exp:ident(fh)]],estmt[exp[grammar(call),exp:ident(exp_put),exp:ident(exp)]],statem(N/H),st_return[exp:ident(err)]]],def[fname(exp_find),funtype[fulltype[typec(N/H)],param[reg(),name(clp),fulltype[typec(N/H)]],param[reg(),name(fsid_type),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(fsidv),fulltype[typec(N/H)]],param[reg(),name(reqp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp[grammar(call),exp:ident(IS_ERR),exp:ident(ek)],st_return[exp[grammar(call),exp:ident(ERR_CAST),exp:ident(ek)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(exp_get_by_name),exp:ident(clp),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(ek),ident(ek_path)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(ek),ident(ek_path)],ident(dentry)],exp:ident(reqp)]]],estmt[exp[grammar(call),exp:ident(cache_put),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(ek),ident(h)],exp:&ref:exp:ident(svc_expkey_cache)]],sel_if[exp[grammar(call),exp:ident(IS_ERR),exp:ident(exp)],st_return[exp[grammar(call),exp:ident(ERR_CAST),exp:ident(exp)]],estmt(NONE)],st_return[exp:ident(exp)]]],def[fname(check_nfsd_access),funtype[fulltype[typec(N/H)],param[reg(),name(exp),fulltype[typec(N/H)]],param[reg(),name(rqstp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(exp),ident(ex_client)],exp[grammar(record_ptr),exp:ident(rqstp),ident(rq_gssclient)]],st_return[exp:const:int(0)],estmt(NONE)],for[exp[grammar(assign),simple_assi(=),exp:ident(f),exp[grammar(record_ptr),exp:ident(exp),ident(ex_flavors)]],exp[grammar(binary_logi),logiop(??),exp:ident(f),exp:ident(end)],exp:??(N/H),{}stmt[sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(f),ident(pseudoflavor)],exp[grammar(record_ptr),exp:ident(rqstp),ident(rq_flavor)]],st_return[exp:const:int(0)],estmt(NONE)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(exp),ident(ex_nflavors)],exp:const:int(0)],{}stmt[sel_if[exp[grammar(binary_logi),logiop(or),exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(rqstp),ident(rq_flavor)],exp:ident(RPC_AUTH_NULL)],exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(rqstp),ident(rq_flavor)],exp:ident(RPC_AUTH_UNIX)]],st_return[exp:const:int(0)],estmt(NONE)]],estmt(NONE)],st_return[exp:ident(nfserr_wrongsec)]]],def[fname(rqst_exp_get_by_name),funtype[fulltype[typec(N/H)],param[reg(),name(rqstp),fulltype[typec(N/H)]],param[reg(),name(mnt),fulltype[typec(N/H)]],param[reg(),name(dentry),fulltype[typec(N/H)]]],{}stmt[statem(N/H),sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(rqstp),ident(rq_client)],exp:ident(NULL)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(exp_get_by_name),exp[grammar(record_ptr),exp:ident(rqstp),ident(rq_client)],exp:ident(mnt),exp:ident(dentry),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(rqstp),ident(rq_chandle)]]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(call),exp:ident(PTR_ERR),exp:ident(exp)],exp:??(N/H)],statem(N/H),estmt(NONE)],sel_if[exp[grammar(call),exp:ident(IS_ERR),exp:ident(exp)],st_return[exp:ident(exp)],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(exp),ident(ex_nflavors)],exp:const:int(0)],st_return[exp:ident(exp)],estmt(NONE)],statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(gssexp),exp[grammar(call),exp:ident(exp_get_by_name),exp[grammar(record_ptr),exp:ident(rqstp),ident(rq_gssclient)],exp:ident(mnt),exp:ident(dentry),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(rqstp),ident(rq_chandle)]]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(call),exp:ident(PTR_ERR),exp:ident(gssexp)],exp:??(N/H)],st_return[exp:ident(exp)],estmt(NONE)],sel_if[exp:??(N/H),estmt[exp[grammar(call),exp:ident(exp_put),exp:ident(exp)]],estmt(NONE)],st_return[exp:ident(gssexp)]]],def[fname(rqst_exp_find),funtype[fulltype[typec(N/H)],param[reg(),name(rqstp),fulltype[typec(N/H)]],param[reg(),name(fsid_type),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(fsidv),fulltype[typec(N/H)]]],{}stmt[statem(N/H),sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(rqstp),ident(rq_client)],exp:ident(NULL)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(exp_find),exp[grammar(record_ptr),exp:ident(rqstp),ident(rq_client)],exp:ident(fsid_type),exp:ident(fsidv),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(rqstp),ident(rq_chandle)]]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(call),exp:ident(PTR_ERR),exp:ident(exp)],exp:??(N/H)],statem(N/H),estmt(NONE)],sel_if[exp[grammar(call),exp:ident(IS_ERR),exp:ident(exp)],st_return[exp:ident(exp)],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(exp),ident(ex_nflavors)],exp:const:int(0)],st_return[exp:ident(exp)],estmt(NONE)],statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(gssexp),exp[grammar(call),exp:ident(exp_find),exp[grammar(record_ptr),exp:ident(rqstp),ident(rq_gssclient)],exp:ident(fsid_type),exp:ident(fsidv),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(rqstp),ident(rq_chandle)]]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(call),exp:ident(PTR_ERR),exp:ident(gssexp)],exp:??(N/H)],st_return[exp:ident(exp)],estmt(NONE)],sel_if[exp:??(N/H),estmt[exp[grammar(call),exp:ident(exp_put),exp:ident(exp)]],estmt(NONE)],st_return[exp:ident(gssexp)]]],def[fname(rqst_exp_parent),funtype[fulltype[typec(N/H)],param[reg(),name(rqstp),fulltype[typec(N/H)]],param[reg(),name(mnt),fulltype[typec(N/H)]],param[reg(),name(dentry),fulltype[typec(N/H)]]],{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(dget),exp:ident(dentry)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(rqst_exp_get_by_name),exp:ident(rqstp),exp:ident(mnt),exp:ident(dentry)]]],while[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(eq),exp[grammar(call),exp:ident(PTR_ERR),exp:ident(exp)],exp:??(N/H)],exp:??(N/H)],{}stmt[statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(parent),exp[grammar(call),exp:ident(dget_parent),exp:ident(dentry)]]],estmt[exp[grammar(call),exp:ident(dput),exp:ident(dentry)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(dentry),exp:ident(parent)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(rqst_exp_get_by_name),exp:ident(rqstp),exp:ident(mnt),exp:ident(dentry)]]]]],estmt[exp[grammar(call),exp:ident(dput),exp:ident(dentry)]],st_return[exp:ident(exp)]]],def[fname(exp_pseudoroot),funtype[fulltype[typec(N/H)],param[reg(),name(rqstp),fulltype[typec(N/H)]],param[reg(),name(fhp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(mk_fsid),exp:ident(FSID_NUM),exp:ident(fsidv),exp:const:int(0),exp:const:int(0),exp:const:int(0),exp:ident(NULL)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(rqst_exp_find),exp:ident(rqstp),exp:ident(FSID_NUM),exp:ident(fsidv)]]],sel_if[exp[grammar(call),exp:ident(IS_ERR),exp:ident(exp)],st_return[exp[grammar(call),exp:ident(nfserrno),exp[grammar(call),exp:ident(PTR_ERR),exp:ident(exp)]]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(rv),exp[grammar(call),exp:ident(fh_compose),exp:ident(fhp),exp:ident(exp),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(exp),ident(ex_path)],ident(dentry)],exp:ident(NULL)]]],sel_if[exp:ident(rv),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(rv),exp[grammar(call),exp:ident(check_nfsd_access),exp:ident(exp),exp:ident(rqstp)]]],statem(N/H),st_return[exp:ident(rv)]]],NCP(N/H),def[fname(e_next),funtype[fulltype[typec(N/H)],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(p),fulltype[typec(N/H)]],param[reg(),name(pos),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(p),exp:ident(SEQ_START_TOKEN)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(hash),exp:const:int(0)]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(ch),ident(next)],exp:ident(NULL)],{}stmt[estmt[exp:??(N/H)],estmt[exp[grammar(assign),op_assi(+=),exp:*ref:exp:ident(pos),exp[grammar(binary_arith),aop(<<),exp:const:int(1LL),exp:const:int(32)]]]],{}stmt[estmt[exp:??(N/H)],st_return[exp[grammar(record_ptr),exp:ident(ch),ident(next)]]]]],estmt[exp[grammar(assign),op_assi(&=),exp:*ref:exp:ident(pos),exp:??(N/H)]],while[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp:ident(hash),exp:ident(EXPORT_HASHMAX)],exp[grammar(binary_logi),logiop(eq),exp[grammar(array_acc),exp:ident(export_table),exp:ident(hash)],exp:ident(NULL)]],{}stmt[estmt[exp:??(N/H)],estmt[exp[grammar(assign),op_assi(+=),exp:*ref:exp:ident(pos),exp[grammar(binary_arith),aop(<<),exp:const:int(1LL),exp:const:int(32)]]]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(hash),exp:ident(EXPORT_HASHMAX)],st_return[exp:ident(NULL)],estmt(NONE)],estmt[exp:??(N/H)],st_return[exp[grammar(array_acc),exp:ident(export_table),exp:ident(hash)]]]],NCP(N/H),decl(N/H),def[fname(show_expflags),funtype[fulltype[ctype[btype(void)]],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(flags),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(mask),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[statem(N/H),statem(N/H),for[exp[grammar(assign),simple_assi(=),exp:ident(flg),exp:ident(expflags)],exp[grammar(record_ptr),exp:ident(flg),ident(flag)],exp:??(N/H),{}stmt[sel_if[exp[grammar(binary_arith),aop(&),exp[grammar(record_ptr),exp:ident(flg),ident(flag)],exp:??(N/H)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(state),exp[grammar(cond3),exp[grammar(binary_arith),aop(&),exp[grammar(record_ptr),exp:ident(flg),ident(flag)],exp:ident(flags)],exp:const:int(0),exp:const:int(1)]]],sel_if[exp[grammar(*ref),grammar(exp),grammar(array_acc),exp[grammar(record_ptr),exp:ident(flg),ident(name)],exp:ident(state)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(%s%s),exp[grammar(cond3),exp:??(N/H),exp:const:string(,),exp:const:string()],exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(flg),ident(name)],exp:ident(state)]]],estmt(NONE)]]]]],def[fname(show_secinfo_flags),funtype[fulltype[ctype[btype(void)]],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(flags),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(,)]],estmt[exp[grammar(call),exp:ident(show_expflags),exp:ident(m),exp:ident(flags),exp:ident(NFSEXP_SECINFO_FLAGS)]]]],def[fname(show_secinfo),funtype[fulltype[ctype[btype(void)]],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(exp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(exp),ident(ex_nflavors)],exp:const:int(0)],statem(N/H),estmt(NONE)],for[exp[grammar(assign),simple_assi(=),exp:ident(f),exp[grammar(record_ptr),exp:ident(exp),ident(ex_flavors)]],exp[grammar(binary_logi),logiop(??),exp:ident(f),exp:ident(end)],exp:??(N/H),{}stmt[sel_if[exp[grammar(binary_logi),logiop(or),exp:ident(first),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(f),ident(flags)],exp:ident(lastflags)]],{}stmt[sel_if[exp:??(N/H),estmt[exp[grammar(call),exp:ident(show_secinfo_flags),exp:ident(m),exp:ident(lastflags)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(,sec=%d),exp[grammar(record_ptr),exp:ident(f),ident(pseudoflavor)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(lastflags),exp[grammar(record_ptr),exp:ident(f),ident(flags)]]]],{}stmt[estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(:%d),exp[grammar(record_ptr),exp:ident(f),ident(pseudoflavor)]]]]]]],estmt[exp[grammar(call),exp:ident(show_secinfo_flags),exp:ident(m),exp:ident(lastflags)]]]],def[fname(exp_flags),funtype[fulltype[ctype[btype(void)]],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(flag),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(fsid),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(anonu),fulltype[typec(N/H)]],param[reg(),name(anong),fulltype[typec(N/H)]],param[reg(),name(fsloc),fulltype[typec(N/H)]]],{}stmt[estmt[exp[grammar(call),exp:ident(show_expflags),exp:ident(m),exp:ident(flag),exp:ident(NFSEXP_ALLFLAGS)]],sel_if[exp[grammar(binary_arith),aop(&),exp:ident(flag),exp:ident(NFSEXP_FSID)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(,fsid=%d),exp:ident(fsid)]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp:ident(anonu),exp:??(N/H)],exp[grammar(binary_logi),logiop(??),exp:ident(anonu),exp[grammar(binary_arith),aop(-),exp:const:int(0x10000),exp:const:int(2)]]],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(,anonuid=%u),exp:ident(anonu)]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp:ident(anong),exp[grammar(binary_arith),aop(-),exp:ident(gid_t),exp:const:int(2)]],exp[grammar(binary_logi),logiop(??),exp:ident(anong),exp[grammar(binary_arith),aop(-),exp:const:int(0x10000),exp:const:int(2)]]],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(,anongid=%u),exp:ident(anong)]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(and),exp:ident(fsloc),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations_count)],exp:const:int(0)]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(,%s=),exp:ident(loctype)]],estmt[exp[grammar(call),exp:ident(seq_escape),exp:ident(m),exp[grammar(record_acc),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations)],exp:const:int(0)],ident(path)],exp:const:string(,;@ \t\n\\)]],estmt[exp[grammar(call),exp:ident(seq_putc),exp:ident(m),exp:const:other(N/H)]],estmt[exp[grammar(call),exp:ident(seq_escape),exp:ident(m),exp[grammar(record_acc),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations)],exp:const:int(0)],ident(hosts)],exp:const:string(,;@ \t\n\\)]],for[exp[grammar(assign),simple_assi(=),exp:ident(i),exp:const:int(1)],exp[grammar(binary_logi),logiop(??),exp:ident(i),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations_count)]],exp:??(N/H),{}stmt[estmt[exp[grammar(call),exp:ident(seq_putc),exp:ident(m),exp:const:other(N/H)]],estmt[exp[grammar(call),exp:ident(seq_escape),exp:ident(m),exp[grammar(record_acc),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations)],exp:ident(i)],ident(path)],exp:const:string(,;@ \t\n\\)]],estmt[exp[grammar(call),exp:ident(seq_putc),exp:ident(m),exp:const:other(N/H)]],estmt[exp[grammar(call),exp:ident(seq_escape),exp:ident(m),exp[grammar(record_acc),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations)],exp:ident(i)],ident(hosts)],exp:const:string(,;@ \t\n\\)]]]]],estmt(NONE)]]],def[fname(e_show),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(p),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(p),exp:ident(SEQ_START_TOKEN)],{}stmt[estmt[exp[grammar(call),exp:ident(seq_puts),exp:ident(m),exp:const:string(# Version 1.1\n)]],estmt[exp[grammar(call),exp:ident(seq_puts),exp:ident(m),exp:const:string(# Path Client(Flags) # IPs\n)]],st_return[exp:const:int(0)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(cache_get),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(exp),ident(h)]]],sel_if[exp[grammar(call),exp:ident(cache_check),exp:&ref:exp:ident(svc_export_cache),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(exp),ident(h)],exp:ident(NULL)],st_return[exp:const:int(0)],estmt(NONE)],estmt[exp[grammar(call),exp:ident(cache_put),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(exp),ident(h)],exp:&ref:exp:ident(svc_export_cache)]],st_return[exp[grammar(call),exp:ident(svc_export_show),exp:ident(m),exp:&ref:exp:ident(svc_export_cache),exp:ident(cp)]]]],decl(N/H),def[fname(exp_addclient),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(ncp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(ncp),ident(cl_naddr)],exp:ident(NFSCLNT_ADDRMAX)],statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(exp_writelock)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(dom),exp[grammar(call),exp:ident(unix_domain_find),exp[grammar(record_ptr),exp:ident(ncp),ident(cl_ident)]]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],for[exp[grammar(assign),simple_assi(=),exp:ident(i),exp:const:int(0)],exp[grammar(binary_logi),logiop(??),exp:ident(i),exp[grammar(record_ptr),exp:ident(ncp),ident(cl_naddr)]],exp:??(N/H),estmt[exp[grammar(call),exp:ident(auth_unix_add_addr),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(ncp),ident(cl_addrlist)],exp:ident(i)],exp:ident(dom)]]],estmt[exp[grammar(call),exp:ident(auth_unix_forget_old),exp:ident(dom)]],estmt[exp[grammar(call),exp:ident(auth_domain_put),exp:ident(dom)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:const:int(0)]],statem(N/H),statem(N/H)]],def[fname(exp_delclient),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(ncp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(exp_writelock)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(dom),exp[grammar(call),exp:ident(auth_domain_find),exp[grammar(record_ptr),exp:ident(ncp),ident(cl_ident)]]]],sel_if[exp:ident(dom),{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(auth_unix_forget_old),exp:ident(dom)]]],estmt[exp[grammar(call),exp:ident(auth_domain_put),exp:ident(dom)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(exp_writeunlock)]],statem(N/H)]],def[fname(exp_verify_string),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(cp),fulltype[typec(N/H)]],param[reg(),name(max),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[statem(N/H),for[exp[grammar(assign),simple_assi(=),exp:ident(i),exp:const:int(0)],exp[grammar(binary_logi),logiop(??),exp:ident(i),exp:ident(max)],exp:??(N/H),sel_if[exp:??(N/H),st_return[exp:ident(i)],estmt(NONE)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(array_acc),exp:ident(cp),exp:ident(i)],exp:const:int(0)]],estmt[exp[grammar(call),exp:ident(printk),exp:const:other(N/H),exp:ident(cp)]],st_return[exp:const:int(0)]]],def[fname(nfsd_export_init),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(),fulltype[ctype[btype(void)]]]],{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(dprintk),exp:const:string(nfsd: initializing export module.\n)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(rv),exp[grammar(call),exp:ident(cache_register),exp:&ref:exp:ident(svc_export_cache)]]],sel_if[exp:ident(rv),st_return[exp:ident(rv)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(rv),exp[grammar(call),exp:ident(cache_register),exp:&ref:exp:ident(svc_expkey_cache)]]],sel_if[exp:ident(rv),estmt[exp[grammar(call),exp:ident(cache_unregister),exp:&ref:exp:ident(svc_export_cache)]],estmt(NONE)],st_return[exp:ident(rv)]]],def[fname(nfsd_export_flush),funtype[fulltype[ctype[btype(void)]],param[reg(),name(),fulltype[ctype[btype(void)]]]],{}stmt[estmt[exp[grammar(call),exp:ident(exp_writelock)]],estmt[exp[grammar(call),exp:ident(cache_purge),exp:&ref:exp:ident(svc_expkey_cache)]],estmt[exp[grammar(call),exp:ident(cache_purge),exp:&ref:exp:ident(svc_export_cache)]],estmt[exp[grammar(call),exp:ident(exp_writeunlock)]]]],def[fname(nfsd_export_shutdown),funtype[fulltype[ctype[btype(void)]],param[reg(),name(),fulltype[ctype[btype(void)]]]],{}stmt[estmt[exp[grammar(call),exp:ident(dprintk),exp:const:string(nfsd: shutting down export module.\n)]],estmt[exp[grammar(call),exp:ident(exp_writelock)]],estmt[exp[grammar(call),exp:ident(cache_unregister),exp:&ref:exp:ident(svc_expkey_cache)]],estmt[exp[grammar(call),exp:ident(cache_unregister),exp:&ref:exp:ident(svc_export_cache)]],estmt[exp[grammar(call),exp:ident(svcauth_unix_purge)]],estmt[exp[grammar(call),exp:ident(exp_writeunlock)]],estmt[exp[grammar(call),exp:ident(dprintk),exp:const:string(nfsd: export shutdown complete.\n)]]]]]
exp:const:int(0) exp:??(N/H) grammar(cond3) simple_assi(=) grammar(assign) grammar(call) estmt(NONE) statem(N/H) grammar(record_ptr) logiop(eq) grammar(binary_logi) sel_if[exp:??(N/H),statem(N/H),estmt(NONE)] logiop(??) exp:ident(end) estmt[exp:??(N/H)] exp:const:int(1) grammar(binary_arith) aop(+) grammar(exp) grammar(&ref) st_return[exp:const:int(0)] fulltype[typec(N/H)] typec(N/H) reg() fulltype[ctype[btype[itype[sgn(signed),base(int)]]]] ctype[btype[itype[sgn(signed),base(int)]]] btype[itype[sgn(signed),base(int)]] itype[sgn(signed),base(int)] base(int) sgn(signed) exp:const:other(N/H) aop(-) logiop(and) grammar(record_acc) op_assi(+=) aop(&) logiop(or) fulltype[ctype[btype(void)]] ctype[btype(void)] btype(void) NCP(N/H) decl(N/H) ident(dentry) exp:ident(len) exp:ident(seq_printf) ident(mnt) exp:ident(seq_path) st_return[exp:ident(NULL)] exp:ident(NULL) inc_elem(linux) exp:ident(PAGE_SIZE) st_return[exp:??(N/H)] exp:ident(GFP_KERNEL) exp:ident(kfree) exp:ident(up_read) exp:ident(down_read) exp:const:int(2) define(N/H) includeN[inc_elem(linux),inc_elem(seq_file.h)] inc_elem(seq_file.h) 
[Main] Constructing all safe parts for 4 term pairs
[Main] Making safe parts for pair 1
prg2[includeN[inc_elem(linux),inc_elem(mm.h)],includeN[inc_elem(linux),inc_elem(hugetlb.h)],includeN[inc_elem(linux),inc_elem(mman.h)],includeN[inc_elem(linux),inc_elem(slab.h)],includeN[inc_elem(linux),inc_elem(kernel_stat.h)],includeN[inc_elem(linux),inc_elem(swap.h)],includeN[inc_elem(linux),inc_elem(vmalloc.h)],includeN[inc_elem(linux),inc_elem(pagemap.h)],includeN[inc_elem(linux),inc_elem(namei.h)],includeN[inc_elem(linux),inc_elem(shm.h)],includeN[inc_elem(linux),inc_elem(blkdev.h)],includeN[inc_elem(linux),inc_elem(writeback.h)],includeN[inc_elem(linux),inc_elem(proc_fs.h)],includeN[inc_elem(linux),inc_elem(seq_file.h)],includeN[inc_elem(linux),inc_elem(init.h)],includeN[inc_elem(linux),inc_elem(module.h)],includeN[inc_elem(linux),inc_elem(rmap.h)],includeN[inc_elem(linux),inc_elem(security.h)],includeN[inc_elem(linux),inc_elem(backing-dev.h)],includeN[inc_elem(linux),inc_elem(mutex.h)],includeN[inc_elem(linux),inc_elem(capability.h)],includeN[inc_elem(linux),inc_elem(syscalls.h)],includeN[inc_elem(linux),inc_elem(memcontrol.h)],includeN[inc_elem(asm),inc_elem(pgtable.h)],includeN[inc_elem(asm),inc_elem(tlbflush.h)],includeN[inc_elem(linux),inc_elem(swapops.h)],mtop(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),def[fname(swap_unplug_io_fn),funtype[fulltype[ctype[btype(void)]],param[reg(),name(unused_bdi),fulltype[typec(N/H)]],param[reg(),name(page),fulltype[typec(N/H)]]],{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(down_read),exp:&ref:exp:ident(swap_unplug_sem)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(entry),ident(val)],exp[grammar(call),exp:ident(page_private),exp:ident(page)]]],sel_if[exp[grammar(call),exp:ident(PageSwapCache),exp:ident(page)],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(WARN_ON),exp[grammar(binary_logi),logiop(??),exp[grammar(call),exp:ident(page_count),exp:ident(page)],exp:const:int(1)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(bdi),exp[grammar(record_ptr),exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(bdev),ident(bd_inode)],ident(i_mapping)],ident(backing_dev_info)]]],estmt[exp[grammar(call),exp:ident(blk_run_backing_dev),exp:ident(bdi),exp:ident(page)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(up_read),exp:&ref:exp:ident(swap_unplug_sem)]]]],define(N/H),define(N/H),def[fname(scan_swap_map),funtype[fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]],param[reg(),name(si),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),op_assi(+=),exp[grammar(record_ptr),exp:ident(si),ident(flags)],exp:ident(SWP_SCANNING)]],sel_if[exp[grammar(call),exp:ident(unlikely),exp:??(N/H)],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(si),ident(cluster_nr)],exp[grammar(binary_arith),aop(-),exp:ident(SWAPFILE_CLUSTER),exp:const:int(1)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(binary_arith),aop(-),exp[grammar(record_ptr),exp:ident(si),ident(pages)],exp[grammar(record_ptr),exp:ident(si),ident(inuse_pages)]],exp:ident(SWAPFILE_CLUSTER)],statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(offset),exp[grammar(record_ptr),exp:ident(si),ident(lowest_bit)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(last_in_cluster),exp[grammar(binary_arith),aop(-),exp[grammar(binary_arith),aop(+),exp:ident(offset),exp:ident(SWAPFILE_CLUSTER)],exp:const:int(1)]]],for[expr(NONE),exp[grammar(binary_logi),logiop(??),exp:ident(last_in_cluster),exp[grammar(record_ptr),exp:ident(si),ident(highest_bit)]],exp:??(N/H),{}stmt[sel_if[exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(si),ident(swap_map)],exp:ident(offset)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(last_in_cluster),exp[grammar(binary_arith),aop(+),exp:ident(offset),exp:ident(SWAPFILE_CLUSTER)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(offset),exp:ident(last_in_cluster)],{}stmt[estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(swap_lock)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(si),ident(cluster_next)],exp[grammar(binary_arith),aop(+),exp[grammar(binary_arith),aop(-),exp:ident(offset),exp:ident(SWAPFILE_CLUSTER)],exp:const:int(1)]]],statem(N/H)],estmt(NONE)]],sel_if[exp[grammar(call),exp:ident(unlikely),exp[grammar(binary_logi),logiop(??),exp:??(N/H),exp:const:int(0)]],{}stmt[estmt[exp[grammar(call),exp:ident(cond_resched)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(latency_ration),exp:ident(LATENCY_LIMIT)]]],estmt(NONE)]]],estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(swap_lock)]],statem(N/H)],estmt(NONE)],estmt[exp:??(N/H)],statem(N/H),sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(offset),exp[grammar(record_ptr),exp:ident(si),ident(highest_bit)]],statem(N/H),estmt(NONE)],statem(N/H),sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],sel_if[exp:??(N/H),{}stmt[sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(offset),exp[grammar(record_ptr),exp:ident(si),ident(lowest_bit)]],estmt[exp:??(N/H)],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(offset),exp[grammar(record_ptr),exp:ident(si),ident(highest_bit)]],estmt[exp:??(N/H)],estmt(NONE)],estmt[exp:??(N/H)],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(si),ident(inuse_pages)],exp[grammar(record_ptr),exp:ident(si),ident(pages)]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(si),ident(lowest_bit)],exp[grammar(record_ptr),exp:ident(si),ident(max)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(si),ident(highest_bit)],exp:const:int(0)]]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(si),ident(swap_map)],exp:ident(offset)],exp:const:int(1)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(si),ident(cluster_next)],exp[grammar(binary_arith),aop(+),exp:ident(offset),exp:const:int(1)]]],estmt[exp[grammar(assign),op_assi(-=),exp[grammar(record_ptr),exp:ident(si),ident(flags)],exp:ident(SWP_SCANNING)]],st_return[exp:ident(offset)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]],while[exp[grammar(binary_logi),logiop(??),exp:??(N/H),exp[grammar(record_ptr),exp:ident(si),ident(highest_bit)]],{}stmt[sel_if[exp:??(N/H),{}stmt[estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(swap_lock)]],statem(N/H)],estmt(NONE)],sel_if[exp[grammar(call),exp:ident(unlikely),exp[grammar(binary_logi),logiop(??),exp:??(N/H),exp:const:int(0)]],{}stmt[estmt[exp[grammar(call),exp:ident(cond_resched)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(latency_ration),exp:ident(LATENCY_LIMIT)]]],estmt(NONE)]]],estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(swap_lock)]],statem(N/H),statem(N/H),st_return[exp:const:int(0)]]],def[fname(get_swap_page),funtype[fulltype[typec(N/H)],param[reg(),name(),fulltype[ctype[btype(void)]]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(swap_lock)]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(nr_swap_pages),exp:const:int(0)],statem(N/H),estmt(NONE)],estmt[exp:??(N/H)],for[exp[grammar(assign),simple_assi(=),exp:ident(type),exp[grammar(record_acc),exp:ident(swap_list),ident(next)]],exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp:ident(type),exp:const:int(0)],exp[grammar(binary_logi),logiop(??),exp:ident(wrapped),exp:const:int(2)]],exp[grammar(assign),simple_assi(=),exp:ident(type),exp:ident(next)],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(si),exp[grammar(binary_arith),aop(+),exp:ident(swap_info),exp:ident(type)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(next),exp[grammar(record_ptr),exp:ident(si),ident(next)]]],sel_if[exp[grammar(binary_logi),logiop(or),exp[grammar(binary_logi),logiop(??),exp:ident(next),exp:const:int(0)],exp[grammar(binary_logi),logiop(and),exp:??(N/H),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(si),ident(prio)],exp[grammar(record_acc),exp[grammar(array_acc),exp:ident(swap_info),exp:ident(next)],ident(prio)]]]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(next),exp[grammar(record_acc),exp:ident(swap_list),ident(head)]]],estmt[exp:??(N/H)]],estmt(NONE)],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(swap_list),ident(next)],exp:ident(next)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(offset),exp[grammar(call),exp:ident(scan_swap_map),exp:ident(si)]]],sel_if[exp:ident(offset),{}stmt[estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]],st_return[exp[grammar(call),exp:ident(swp_entry),exp:ident(type),exp:ident(offset)]]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(next),exp[grammar(record_acc),exp:ident(swap_list),ident(next)]]]]],estmt[exp:??(N/H)],statem(N/H),st_return[exp:??(N/H)]]],def[fname(get_swap_page_of_type),funtype[fulltype[typec(N/H)],param[reg(),name(type),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(swap_lock)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(si),exp[grammar(binary_arith),aop(+),exp:ident(swap_info),exp:ident(type)]]],sel_if[exp[grammar(binary_arith),aop(&),exp[grammar(record_ptr),exp:ident(si),ident(flags)],exp:ident(SWP_WRITEOK)],{}stmt[estmt[exp:??(N/H)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(offset),exp[grammar(call),exp:ident(scan_swap_map),exp:ident(si)]]],sel_if[exp:ident(offset),{}stmt[estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]],st_return[exp[grammar(call),exp:ident(swp_entry),exp:ident(type),exp:ident(offset)]]],estmt(NONE)],estmt[exp:??(N/H)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]],st_return[exp:??(N/H)]]],def[fname(swap_info_get),funtype[fulltype[typec(N/H)],param[reg(),name(entry),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(type),exp[grammar(call),exp:ident(swp_type),exp:ident(entry)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(type),exp:ident(nr_swapfiles)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(p),exp[grammar(&ref),grammar(exp),grammar(array_acc),exp:ident(swap_info),exp:ident(type)]]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(offset),exp[grammar(call),exp:ident(swp_offset),exp:ident(entry)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(offset),exp[grammar(record_ptr),exp:ident(p),ident(max)]],statem(N/H),estmt(NONE)],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(swap_lock)]],st_return[exp:ident(p)],statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H)]],def[fname(swap_entry_free),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(p),fulltype[typec(N/H)]],param[reg(),name(offset),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]]],{}stmt[statem(N/H),sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(count),exp:ident(SWAP_MAP_MAX)],{}stmt[estmt[exp:??(N/H)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(p),ident(swap_map)],exp:ident(offset)],exp:ident(count)]],sel_if[exp:??(N/H),{}stmt[sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(offset),exp[grammar(record_ptr),exp:ident(p),ident(lowest_bit)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(p),ident(lowest_bit)],exp:ident(offset)]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(offset),exp[grammar(record_ptr),exp:ident(p),ident(highest_bit)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(p),ident(highest_bit)],exp:ident(offset)]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(p),ident(prio)],exp[grammar(record_acc),exp[grammar(array_acc),exp:ident(swap_info),exp[grammar(record_acc),exp:ident(swap_list),ident(next)]],ident(prio)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(swap_list),ident(next)],exp[grammar(binary_arith),aop(-),exp:ident(p),exp:ident(swap_info)]]],estmt(NONE)],estmt[exp:??(N/H)],estmt[exp:??(N/H)]],estmt(NONE)]],estmt(NONE)],st_return[exp:ident(count)]]],def[fname(swap_free),funtype[fulltype[ctype[btype(void)]],param[reg(),name(entry),fulltype[typec(N/H)]]],{}stmt[statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(p),exp[grammar(call),exp:ident(swap_info_get),exp:ident(entry)]]],sel_if[exp:ident(p),{}stmt[estmt[exp[grammar(call),exp:ident(swap_entry_free),exp:ident(p),exp[grammar(call),exp:ident(swp_offset),exp:ident(entry)]]],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]]],estmt(NONE)]]],def[fname(page_swapcount),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(page),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(entry),ident(val)],exp[grammar(call),exp:ident(page_private),exp:ident(page)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(p),exp[grammar(call),exp:ident(swap_info_get),exp:ident(entry)]]],sel_if[exp:ident(p),{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(count),exp[grammar(binary_arith),aop(-),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(p),ident(swap_map)],exp[grammar(call),exp:ident(swp_offset),exp:ident(entry)]],exp:const:int(1)]]],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]]],estmt(NONE)],st_return[exp:ident(count)]]],def[fname(can_share_swap_page),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(page),fulltype[typec(N/H)]]],{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(BUG_ON),exp:??(N/H)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(count),exp[grammar(call),exp:ident(page_mapcount),exp:ident(page)]]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp:ident(count),exp:const:int(1)],exp[grammar(call),exp:ident(PageSwapCache),exp:ident(page)]],estmt[exp[grammar(assign),op_assi(+=),exp:ident(count),exp[grammar(call),exp:ident(page_swapcount),exp:ident(page)]]],estmt(NONE)],st_return[exp[grammar(binary_logi),logiop(eq),exp:ident(count),exp:const:int(1)]]]],def[fname(remove_exclusive_swap_page),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(page),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(BUG_ON),exp[grammar(call),exp:ident(PagePrivate),exp:ident(page)]]],estmt[exp[grammar(call),exp:ident(BUG_ON),exp:??(N/H)]],sel_if[exp:??(N/H),st_return[exp:const:int(0)],estmt(NONE)],sel_if[exp[grammar(call),exp:ident(PageWriteback),exp:ident(page)],st_return[exp:const:int(0)],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(call),exp:ident(page_count),exp:ident(page)],exp:const:int(2)],st_return[exp:const:int(0)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(entry),ident(val)],exp[grammar(call),exp:ident(page_private),exp:ident(page)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(p),exp[grammar(call),exp:ident(swap_info_get),exp:ident(entry)]]],sel_if[exp:??(N/H),st_return[exp:const:int(0)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(retval),exp:const:int(0)]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(p),ident(swap_map)],exp[grammar(call),exp:ident(swp_offset),exp:ident(entry)]],exp:const:int(1)],{}stmt[estmt[exp[grammar(call),exp:ident(write_lock_irq),exp[grammar(&ref),grammar(exp),grammar(record_acc),exp:ident(swapper_space),ident(tree_lock)]]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(eq),exp[grammar(call),exp:ident(page_count),exp:ident(page)],exp:const:int(2)],exp:??(N/H)],{}stmt[estmt[exp[grammar(call),exp:ident(__delete_from_swap_cache),exp:ident(page)]],estmt[exp[grammar(call),exp:ident(SetPageDirty),exp:ident(page)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(retval),exp:const:int(1)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(write_unlock_irq),exp[grammar(&ref),grammar(exp),grammar(record_acc),exp:ident(swapper_space),ident(tree_lock)]]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]],sel_if[exp:ident(retval),{}stmt[estmt[exp[grammar(call),exp:ident(swap_free),exp:ident(entry)]],estmt[exp[grammar(call),exp:ident(page_cache_release),exp:ident(page)]]],estmt(NONE)],st_return[exp:ident(retval)]]],def[fname(free_swap_and_cache),funtype[fulltype[ctype[btype(void)]],param[reg(),name(entry),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp[grammar(call),exp:ident(is_migration_entry),exp:ident(entry)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(p),exp[grammar(call),exp:ident(swap_info_get),exp:ident(entry)]]],sel_if[exp:ident(p),{}stmt[sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(call),exp:ident(swap_entry_free),exp:ident(p),exp[grammar(call),exp:ident(swp_offset),exp:ident(entry)]],exp:const:int(1)],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(page),exp[grammar(call),exp:ident(find_get_page),exp:&ref:exp:ident(swapper_space),exp[grammar(record_acc),exp:ident(entry),ident(val)]]]],sel_if[exp[grammar(binary_logi),logiop(and),exp:ident(page),exp[grammar(call),exp:ident(unlikely),exp[grammar(call),exp:ident(TestSetPageLocked),exp:ident(page)]]],{}stmt[estmt[exp[grammar(call),exp:ident(page_cache_release),exp:ident(page)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(page),exp:ident(NULL)]]],estmt(NONE)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]]],estmt(NONE)],sel_if[exp:ident(page),{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(BUG_ON),exp[grammar(call),exp:ident(PagePrivate),exp:ident(page)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(one_user),exp[grammar(binary_logi),logiop(eq),exp[grammar(call),exp:ident(page_count),exp:ident(page)],exp:const:int(2)]]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(and),exp[grammar(call),exp:ident(PageSwapCache),exp:ident(page)],exp:??(N/H)],exp[grammar(binary_logi),logiop(or),exp:ident(one_user),exp[grammar(call),exp:ident(vm_swap_full)]]],{}stmt[estmt[exp[grammar(call),exp:ident(delete_from_swap_cache),exp:ident(page)]],estmt[exp[grammar(call),exp:ident(SetPageDirty),exp:ident(page)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(unlock_page),exp:ident(page)]],estmt[exp[grammar(call),exp:ident(page_cache_release),exp:ident(page)]]],estmt(NONE)]]],def[fname(swap_type_of),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(device),fulltype[typec(N/H)]],param[reg(),name(offset),fulltype[typec(N/H)]],param[reg(),name(bdev_p),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp:ident(device),estmt[exp[grammar(assign),simple_assi(=),exp:ident(bdev),exp[grammar(call),exp:ident(bdget),exp:ident(device)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(swap_lock)]],for[exp[grammar(assign),simple_assi(=),exp:ident(i),exp:const:int(0)],exp[grammar(binary_logi),logiop(??),exp:ident(i),exp:ident(nr_swapfiles)],exp:??(N/H),{}stmt[statem(N/H),sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],sel_if[exp:??(N/H),{}stmt[sel_if[exp:ident(bdev_p),estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(bdev_p),exp[grammar(record_ptr),exp:ident(sis),ident(bdev)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]],st_return[exp:ident(i)]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(bdev),exp[grammar(record_ptr),exp:ident(sis),ident(bdev)]],{}stmt[statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(se),exp[grammar(call),exp:ident(list_entry),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(sis),ident(extent_list)],ident(next)],argtype(N/H),exp:ident(list)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(se),ident(start_block)],exp:ident(offset)],{}stmt[sel_if[exp:ident(bdev_p),estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(bdev_p),exp[grammar(record_ptr),exp:ident(sis),ident(bdev)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]],estmt[exp[grammar(call),exp:ident(bdput),exp:ident(bdev)]],st_return[exp:ident(i)]],estmt(NONE)]],estmt(NONE)]]],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]],sel_if[exp:ident(bdev),estmt[exp[grammar(call),exp:ident(bdput),exp:ident(bdev)]],estmt(NONE)],st_return[exp:??(N/H)]]],def[fname(count_swap_pages),funtype[fulltype[ctype[btype[itype[sgn(unsigned),base(int)]]]],param[reg(),name(type),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(free),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[statem(N/H),sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(type),exp:ident(nr_swapfiles)],{}stmt[estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(swap_lock)]],sel_if[exp[grammar(binary_arith),aop(&),exp[grammar(record_acc),exp[grammar(array_acc),exp:ident(swap_info),exp:ident(type)],ident(flags)],exp:ident(SWP_WRITEOK)],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(n),exp[grammar(record_acc),exp[grammar(array_acc),exp:ident(swap_info),exp:ident(type)],ident(pages)]]],sel_if[exp:ident(free),estmt[exp[grammar(assign),op_assi(-=),exp:ident(n),exp[grammar(record_acc),exp[grammar(array_acc),exp:ident(swap_info),exp:ident(type)],ident(inuse_pages)]]],estmt(NONE)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]]],estmt(NONE)],st_return[exp:ident(n)]]],def[fname(unuse_pte),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(vma),fulltype[typec(N/H)]],param[reg(),name(pmd),fulltype[typec(N/H)]],param[reg(),name(addr),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(entry),fulltype[typec(N/H)]],param[reg(),name(page),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),sel_if[exp[grammar(call),exp:ident(mem_cgroup_charge),exp:ident(page),exp[grammar(record_ptr),exp:ident(vma),ident(vm_mm)],exp:ident(GFP_KERNEL)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ret),exp:??(N/H)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(pte),exp[grammar(call),exp:ident(pte_offset_map_lock),exp[grammar(record_ptr),exp:ident(vma),ident(vm_mm)],exp:ident(pmd),exp:ident(addr),exp:&ref:exp:ident(ptl)]]],sel_if[exp[grammar(call),exp:ident(unlikely),exp:??(N/H)],{}stmt[sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(ret),exp:const:int(0)],estmt[exp[grammar(call),exp:ident(mem_cgroup_uncharge_page),exp:ident(page)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ret),exp:const:int(0)]],statem(N/H)],estmt(NONE)],estmt[exp[grammar(call),exp:ident(inc_mm_counter),exp[grammar(record_ptr),exp:ident(vma),ident(vm_mm)],exp:ident(anon_rss)]],estmt[exp[grammar(call),exp:ident(get_page),exp:ident(page)]],estmt[exp[grammar(call),exp:ident(set_pte_at),exp[grammar(record_ptr),exp:ident(vma),ident(vm_mm)],exp:ident(addr),exp:ident(pte),exp[grammar(call),exp:ident(pte_mkold),exp[grammar(call),exp:ident(mk_pte),exp:ident(page),exp[grammar(record_ptr),exp:ident(vma),ident(vm_page_prot)]]]]],estmt[exp[grammar(call),exp:ident(page_add_anon_rmap),exp:ident(page),exp:ident(vma),exp:ident(addr)]],estmt[exp[grammar(call),exp:ident(swap_free),exp:ident(entry)]],estmt[exp[grammar(call),exp:ident(activate_page),exp:ident(page)]],statem(N/H),st_return[exp:ident(ret)]]],def[fname(unuse_pte_range),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(vma),fulltype[typec(N/H)]],param[reg(),name(pmd),fulltype[typec(N/H)]],param[reg(),name(addr),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(end),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(entry),fulltype[typec(N/H)]],param[reg(),name(page),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(pte),exp[grammar(call),exp:ident(pte_offset_map),exp:ident(pmd),exp:ident(addr)]]],statem(N/H),estmt[exp[grammar(call),exp:ident(pte_unmap),exp[grammar(binary_arith),aop(-),exp:ident(pte),exp:const:int(1)]]],statem(N/H)]],def[fname(unuse_pmd_range),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(vma),fulltype[typec(N/H)]],param[reg(),name(pud),fulltype[typec(N/H)]],param[reg(),name(addr),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(end),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(entry),fulltype[typec(N/H)]],param[reg(),name(page),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(pmd),exp[grammar(call),exp:ident(pmd_offset),exp:ident(pud),exp:ident(addr)]]],statem(N/H),st_return[exp:const:int(0)]]],def[fname(unuse_pud_range),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(vma),fulltype[typec(N/H)]],param[reg(),name(pgd),fulltype[typec(N/H)]],param[reg(),name(addr),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(end),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(entry),fulltype[typec(N/H)]],param[reg(),name(page),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(pud),exp[grammar(call),exp:ident(pud_offset),exp:ident(pgd),exp:ident(addr)]]],statem(N/H),st_return[exp:const:int(0)]]],def[fname(unuse_vma),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(vma),fulltype[typec(N/H)]],param[reg(),name(entry),fulltype[typec(N/H)]],param[reg(),name(page),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),sel_if[exp[grammar(record_ptr),exp:ident(page),ident(mapping)],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(addr),exp[grammar(call),exp:ident(page_address_in_vma),exp:ident(page),exp:ident(vma)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(addr),exp:??(N/H)],st_return[exp:const:int(0)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(end),exp[grammar(binary_arith),aop(+),exp:ident(addr),exp:ident(PAGE_SIZE)]]]]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(addr),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(end),exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)]]]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(pgd),exp[grammar(call),exp:ident(pgd_offset),exp[grammar(record_ptr),exp:ident(vma),ident(vm_mm)],exp:ident(addr)]]],statem(N/H),st_return[exp:const:int(0)]]],def[fname(unuse_mm),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(mm),fulltype[typec(N/H)]],param[reg(),name(entry),fulltype[typec(N/H)]],param[reg(),name(page),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp:??(N/H),{}stmt[estmt[exp[grammar(call),exp:ident(activate_page),exp:ident(page)]],estmt[exp[grammar(call),exp:ident(unlock_page),exp:ident(page)]],estmt[exp[grammar(call),exp:ident(down_read),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(mm),ident(mmap_sem)]]],estmt[exp[grammar(call),exp:ident(lock_page),exp:ident(page)]]],estmt(NONE)],for[exp[grammar(assign),simple_assi(=),exp:ident(vma),exp[grammar(record_ptr),exp:ident(mm),ident(mmap)]],exp:ident(vma),exp[grammar(assign),simple_assi(=),exp:ident(vma),exp[grammar(record_ptr),exp:ident(vma),ident(vm_next)]],{}stmt[sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(record_ptr),exp:ident(vma),ident(anon_vma)],exp[grammar(assign),simple_assi(=),exp:ident(ret),exp[grammar(call),exp:ident(unuse_vma),exp:ident(vma),exp:ident(entry),exp:ident(page)]]],statem(N/H),estmt(NONE)]]],estmt[exp[grammar(call),exp:ident(up_read),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(mm),ident(mmap_sem)]]],st_return[exp[grammar(cond3),exp[grammar(binary_logi),logiop(??),exp:ident(ret),exp:const:int(0)],exp:ident(ret),exp:const:int(0)]]]],def[fname(find_next_to_unuse),funtype[fulltype[ctype[btype[itype[sgn(unsigned),base(int)]]]],param[reg(),name(si),fulltype[typec(N/H)]],param[reg(),name(prev),fulltype[ctype[btype[itype[sgn(unsigned),base(int)]]]]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),for[expr(NONE),expr(NONE),expr(NONE),{}stmt[sel_if[exp[grammar(binary_logi),logiop(??),exp:??(N/H),exp:ident(max)],{}stmt[sel_if[exp:??(N/H),{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(i),exp:const:int(0)]],statem(N/H)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(max),exp[grammar(binary_arith),aop(+),exp:ident(prev),exp:const:int(1)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(prev),exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(i),exp:const:int(1)]]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(count),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(si),ident(swap_map)],exp:ident(i)]]],sel_if[exp[grammar(binary_logi),logiop(and),exp:ident(count),exp[grammar(binary_logi),logiop(??),exp:ident(count),exp:ident(SWAP_MAP_BAD)]],statem(N/H),estmt(NONE)]]],st_return[exp:ident(i)]]],def[fname(try_to_unuse),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(type),fulltype[ctype[btype[itype[sgn(unsigned),base(int)]]]]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(start_mm),exp:&ref:exp:ident(init_mm)]],estmt[exp[grammar(call),exp:ident(atomic_inc),exp[grammar(&ref),grammar(exp),grammar(record_acc),exp:ident(init_mm),ident(mm_users)]]],while[exp[grammar(binary_logi),logiop(??),exp[grammar(assign),simple_assi(=),exp:ident(i),exp[grammar(call),exp:ident(find_next_to_unuse),exp:ident(si),exp:ident(i)]],exp:const:int(0)],{}stmt[sel_if[exp[grammar(call),exp:ident(signal_pending),exp:ident(current)],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(retval),exp:??(N/H)]],statem(N/H)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(swap_map),exp[grammar(&ref),grammar(exp),grammar(array_acc),exp[grammar(record_ptr),exp:ident(si),ident(swap_map)],exp:ident(i)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(entry),exp[grammar(call),exp:ident(swp_entry),exp:ident(type),exp:ident(i)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(page),exp[grammar(call),exp:ident(read_swap_cache_async),exp:ident(entry),exp:ident(GFP_HIGHUSER_MOVABLE),exp:ident(NULL),exp:const:int(0)]]],sel_if[exp:??(N/H),{}stmt[sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(retval),exp:??(N/H)]],statem(N/H)],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(call),exp:ident(atomic_read),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(start_mm),ident(mm_users)]],exp:const:int(1)],{}stmt[estmt[exp[grammar(call),exp:ident(mmput),exp:ident(start_mm)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(start_mm),exp:&ref:exp:ident(init_mm)]],estmt[exp[grammar(call),exp:ident(atomic_inc),exp[grammar(&ref),grammar(exp),grammar(record_acc),exp:ident(init_mm),ident(mm_users)]]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(wait_on_page_locked),exp:ident(page)]],estmt[exp[grammar(call),exp:ident(wait_on_page_writeback),exp:ident(page)]],estmt[exp[grammar(call),exp:ident(lock_page),exp:ident(page)]],estmt[exp[grammar(call),exp:ident(wait_on_page_writeback),exp:ident(page)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(shmem),exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(swcount),exp:*ref:exp:ident(swap_map)]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(swcount),exp:const:int(1)],{}stmt[sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(start_mm),exp:&ref:exp:ident(init_mm)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(shmem),exp[grammar(call),exp:ident(shmem_unuse),exp:ident(entry),exp:ident(page)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(retval),exp[grammar(call),exp:ident(unuse_mm),exp:ident(start_mm),exp:ident(entry),exp:ident(page)]]]]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp:*ref:exp:ident(swap_map),exp:const:int(1)],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(atomic_inc),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(new_start_mm),ident(mm_users)]]],estmt[exp[grammar(call),exp:ident(atomic_inc),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(prev_mm),ident(mm_users)]]],estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(mmlist_lock)]],while[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp:*ref:exp:ident(swap_map),exp:const:int(1)],exp:??(N/H)],exp:??(N/H)],exp[grammar(binary_logi),logiop(??),exp[grammar(assign),simple_assi(=),exp:ident(p),exp[grammar(record_ptr),exp:ident(p),ident(next)]],exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(start_mm),ident(mmlist)]]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(mm),exp[grammar(call),exp:ident(list_entry),exp:ident(p),argtype(N/H),exp:ident(mmlist)]]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(mmlist_lock)]],estmt[exp[grammar(call),exp:ident(mmput),exp:ident(prev_mm)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(prev_mm),exp:ident(mm)]],estmt[exp[grammar(call),exp:ident(cond_resched)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(swcount),exp:*ref:exp:ident(swap_map)]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(swcount),exp:const:int(1)],estmt(NONE),sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(mm),exp:&ref:exp:ident(init_mm)],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(set_start_mm),exp:const:int(1)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(shmem),exp[grammar(call),exp:ident(shmem_unuse),exp:ident(entry),exp:ident(page)]]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(retval),exp[grammar(call),exp:ident(unuse_mm),exp:ident(mm),exp:ident(entry),exp:ident(page)]]]]],sel_if[exp[grammar(binary_logi),logiop(and),exp:ident(set_start_mm),exp[grammar(binary_logi),logiop(??),exp:*ref:exp:ident(swap_map),exp:ident(swcount)]],{}stmt[estmt[exp[grammar(call),exp:ident(mmput),exp:ident(new_start_mm)]],estmt[exp[grammar(call),exp:ident(atomic_inc),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(mm),ident(mm_users)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(new_start_mm),exp:ident(mm)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(set_start_mm),exp:const:int(0)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(mmlist_lock)]]]],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(mmlist_lock)]],estmt[exp[grammar(call),exp:ident(mmput),exp:ident(prev_mm)]],estmt[exp[grammar(call),exp:ident(mmput),exp:ident(start_mm)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(start_mm),exp:ident(new_start_mm)]]],estmt(NONE)],sel_if[exp:ident(shmem),{}stmt[sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(shmem),exp:const:int(0)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(retval),exp:ident(shmem)]],statem(N/H)],estmt(NONE)],sel_if[exp:ident(retval),{}stmt[estmt[exp[grammar(call),exp:ident(unlock_page),exp:ident(page)]],estmt[exp[grammar(call),exp:ident(page_cache_release),exp:ident(page)]],statem(N/H)],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(eq),exp:*ref:exp:ident(swap_map),exp:ident(SWAP_MAP_MAX)],{}stmt[estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(swap_lock)]],estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(swap_map),exp:const:int(1)]],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(reset_overflow),exp:const:int(1)]]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp:*ref:exp:ident(swap_map),exp:const:int(1)],exp[grammar(call),exp:ident(PageDirty),exp:ident(page)]],exp[grammar(call),exp:ident(PageSwapCache),exp:ident(page)]],{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(swap_writepage),exp:ident(page),exp:&ref:exp:ident(wbc)]],estmt[exp[grammar(call),exp:ident(lock_page),exp:ident(page)]],estmt[exp[grammar(call),exp:ident(wait_on_page_writeback),exp:ident(page)]]],estmt(NONE)],sel_if[exp[grammar(call),exp:ident(PageSwapCache),exp:ident(page)],estmt[exp[grammar(call),exp:ident(delete_from_swap_cache),exp:ident(page)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(SetPageDirty),exp:ident(page)]],estmt[exp[grammar(call),exp:ident(unlock_page),exp:ident(page)]],estmt[exp[grammar(call),exp:ident(page_cache_release),exp:ident(page)]],estmt[exp[grammar(call),exp:ident(cond_resched)]]]],estmt[exp[grammar(call),exp:ident(mmput),exp:ident(start_mm)]],sel_if[exp:ident(reset_overflow),{}stmt[estmt[exp[grammar(call),exp:ident(printk),exp:const:other(N/H)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(swap_overflow),exp:const:int(0)]]],estmt(NONE)],st_return[exp:ident(retval)]]],def[fname(drain_mmlist),funtype[fulltype[ctype[btype(void)]],param[reg(),name(),fulltype[ctype[btype(void)]]]],{}stmt[statem(N/H),statem(N/H),for[exp[grammar(assign),simple_assi(=),exp:ident(i),exp:const:int(0)],exp[grammar(binary_logi),logiop(??),exp:ident(i),exp:ident(nr_swapfiles)],exp:??(N/H),sel_if[exp[grammar(record_acc),exp[grammar(array_acc),exp:ident(swap_info),exp:ident(i)],ident(inuse_pages)],statem(N/H),estmt(NONE)]],estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(mmlist_lock)]],statem(N/H),estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(mmlist_lock)]]]],def[fname(map_swap_page),funtype[fulltype[typec(N/H)],param[reg(),name(sis),fulltype[typec(N/H)]],param[reg(),name(offset),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),for[expr(NONE),expr(NONE),expr(NONE),{}stmt[statem(N/H),sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(se),ident(start_page)],exp:ident(offset)],exp[grammar(binary_logi),logiop(??),exp:ident(offset),exp[grammar(binary_arith),aop(+),exp[grammar(record_ptr),exp:ident(se),ident(start_page)],exp[grammar(record_ptr),exp:ident(se),ident(nr_pages)]]]],{}stmt[st_return[exp[grammar(binary_arith),aop(+),exp[grammar(record_ptr),exp:ident(se),ident(start_block)],exp[grammar(binary_arith),aop(-),exp:ident(offset),exp[grammar(record_ptr),exp:ident(se),ident(start_page)]]]]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(lh),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(se),ident(list)],ident(next)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(lh),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(sis),ident(extent_list)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(lh),exp[grammar(record_ptr),exp:ident(lh),ident(next)]]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(se),exp[grammar(call),exp:ident(list_entry),exp:ident(lh),argtype(N/H),exp:ident(list)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(sis),ident(curr_swap_extent)],exp:ident(se)]],estmt[exp[grammar(call),exp:ident(BUG_ON),exp[grammar(binary_logi),logiop(eq),exp:ident(se),exp:ident(start_se)]]]]]]],def[fname(swapdev_block),funtype[fulltype[typec(N/H)],param[reg(),name(swap_type),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(offset),fulltype[typec(N/H)]]],{}stmt[statem(N/H),sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(swap_type),exp:ident(nr_swapfiles)],st_return[exp:const:int(0)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(sis),exp[grammar(binary_arith),aop(+),exp:ident(swap_info),exp:ident(swap_type)]]],st_return[exp[grammar(cond3),exp[grammar(binary_arith),aop(&),exp[grammar(record_ptr),exp:ident(sis),ident(flags)],exp:ident(SWP_WRITEOK)],exp[grammar(call),exp:ident(map_swap_page),exp:ident(sis),exp:ident(offset)],exp:const:int(0)]]]],def[fname(destroy_swap_extents),funtype[fulltype[ctype[btype(void)]],param[reg(),name(sis),fulltype[typec(N/H)]]],{}stmt[while[exp:??(N/H),{}stmt[statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(se),exp[grammar(call),exp:ident(list_entry),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(sis),ident(extent_list)],ident(next)],argtype(N/H),exp:ident(list)]]],estmt[exp[grammar(call),exp:ident(list_del),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(se),ident(list)]]],estmt[exp[grammar(call),exp:ident(kfree),exp:ident(se)]]]]]],def[fname(add_swap_extent),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(sis),fulltype[typec(N/H)]],param[reg(),name(start_page),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(nr_pages),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(start_block),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(lh),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(sis),ident(extent_list)],ident(prev)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(lh),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(sis),ident(extent_list)]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(se),exp[grammar(call),exp:ident(list_entry),exp:ident(lh),argtype(N/H),exp:ident(list)]]],estmt[exp[grammar(call),exp:ident(BUG_ON),exp[grammar(binary_logi),logiop(??),exp[grammar(binary_arith),aop(+),exp[grammar(record_ptr),exp:ident(se),ident(start_page)],exp[grammar(record_ptr),exp:ident(se),ident(nr_pages)]],exp:ident(start_page)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(binary_arith),aop(+),exp[grammar(record_ptr),exp:ident(se),ident(start_block)],exp[grammar(record_ptr),exp:ident(se),ident(nr_pages)]],exp:ident(start_block)],{}stmt[estmt[exp[grammar(assign),op_assi(+=),exp[grammar(record_ptr),exp:ident(se),ident(nr_pages)],exp:ident(nr_pages)]],st_return[exp:const:int(0)]],estmt(NONE)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(new_se),exp[grammar(call),exp:ident(kmalloc),exp:sizeof:exp:*ref:exp:ident(se),exp:ident(GFP_KERNEL)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(new_se),exp:ident(NULL)],st_return[exp:??(N/H)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(new_se),ident(start_page)],exp:ident(start_page)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(new_se),ident(nr_pages)],exp:ident(nr_pages)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(new_se),ident(start_block)],exp:ident(start_block)]],estmt[exp[grammar(call),exp:ident(list_add_tail),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(new_se),ident(list)],exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(sis),ident(extent_list)]]],st_return[exp:const:int(1)]]],def[fname(setup_swap_extents),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(sis),fulltype[typec(N/H)]],param[reg(),name(span),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(inode),exp[grammar(record_ptr),exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(sis),ident(swap_file)],ident(f_mapping)],ident(host)]]],sel_if[exp[grammar(call),exp:ident(S_ISBLK),exp[grammar(record_ptr),exp:ident(inode),ident(i_mode)]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(ret),exp[grammar(call),exp:ident(add_swap_extent),exp:ident(sis),exp:const:int(0),exp[grammar(record_ptr),exp:ident(sis),ident(max)],exp:const:int(0)]]],estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(span),exp[grammar(record_ptr),exp:ident(sis),ident(pages)]]],statem(N/H)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(blkbits),exp[grammar(record_ptr),exp:ident(inode),ident(i_blkbits)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(blocks_per_page),exp[grammar(binary_arith),aop(>>),exp:ident(PAGE_SIZE),exp:ident(blkbits)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(probe_block),exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(page_no),exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(last_block),exp[grammar(binary_arith),aop(>>),exp[grammar(call),exp:ident(i_size_read),exp:ident(inode)],exp:ident(blkbits)]]],while[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp[grammar(binary_arith),aop(+),exp:ident(probe_block),exp:ident(blocks_per_page)],exp:ident(last_block)],exp[grammar(binary_logi),logiop(??),exp:ident(page_no),exp[grammar(record_ptr),exp:ident(sis),ident(max)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(first_block),exp[grammar(call),exp:ident(bmap),exp:ident(inode),exp:ident(probe_block)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(first_block),exp:const:int(0)],statem(N/H),estmt(NONE)],sel_if[exp[grammar(binary_arith),aop(&),exp:ident(first_block),exp[grammar(binary_arith),aop(-),exp:ident(blocks_per_page),exp:const:int(1)]],{}stmt[estmt[exp:??(N/H)],statem(N/H)],estmt(NONE)],for[exp[grammar(assign),simple_assi(=),exp:ident(block_in_page),exp:const:int(1)],exp[grammar(binary_logi),logiop(??),exp:ident(block_in_page),exp:ident(blocks_per_page)],exp:??(N/H),{}stmt[statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(block),exp[grammar(call),exp:ident(bmap),exp:ident(inode),exp[grammar(binary_arith),aop(+),exp:ident(probe_block),exp:ident(block_in_page)]]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(block),exp:const:int(0)],statem(N/H),estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(block),exp[grammar(binary_arith),aop(+),exp:ident(first_block),exp:ident(block_in_page)]],{}stmt[estmt[exp:??(N/H)],statem(N/H)],estmt(NONE)]]],estmt[exp[grammar(assign),op_assi(N/H),exp:ident(first_block),exp[grammar(binary_arith),aop(-),exp:ident(PAGE_SHIFT),exp:ident(blkbits)]]],sel_if[exp:ident(page_no),{}stmt[sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(first_block),exp:ident(lowest_block)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(lowest_block),exp:ident(first_block)]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(first_block),exp:ident(highest_block)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(highest_block),exp:ident(first_block)]],estmt(NONE)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ret),exp[grammar(call),exp:ident(add_swap_extent),exp:ident(sis),exp:ident(page_no),exp:const:int(1),exp:ident(first_block)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(ret),exp:const:int(0)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),op_assi(+=),exp:ident(nr_extents),exp:ident(ret)]],estmt[exp:??(N/H)],estmt[exp[grammar(assign),op_assi(+=),exp:ident(probe_block),exp:ident(blocks_per_page)]],statem(N/H)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ret),exp:ident(nr_extents)]],estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(span),exp[grammar(binary_arith),aop(-),exp[grammar(binary_arith),aop(+),exp:const:int(1),exp:ident(highest_block)],exp:ident(lowest_block)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(page_no),exp:const:int(0)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(page_no),exp:const:int(1)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(sis),ident(max)],exp:ident(page_no)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(sis),ident(pages)],exp[grammar(binary_arith),aop(-),exp:ident(page_no),exp:const:int(1)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(sis),ident(highest_bit)],exp[grammar(binary_arith),aop(-),exp:ident(page_no),exp:const:int(1)]]],statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(ret),exp:??(N/H)]],statem(N/H)]],includeN[inc_elem(linux),inc_elem(backing-dev.h)],def[fname(page_queue_congested),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(page),fulltype[typec(N/H)]]],{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(BUG_ON),exp:??(N/H)]],sel_if[exp[grammar(call),exp:ident(PageSwapCache),exp:ident(page)],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(sis),exp[grammar(call),exp:ident(get_swap_info_struct),exp[grammar(call),exp:ident(swp_type),exp:ident(entry)]]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(bdi),exp[grammar(record_ptr),exp[grammar(record_ptr),exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(sis),ident(bdev)],ident(bd_inode)],ident(i_mapping)],ident(backing_dev_info)]]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(bdi),exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(page),ident(mapping)],ident(backing_dev_info)]]]],st_return[exp[grammar(call),exp:ident(bdi_write_congested),exp:ident(bdi)]]]],NCP(N/H),def[fname(swap_start),funtype[fulltype[typec(N/H)],param[reg(),name(swap),fulltype[typec(N/H)]],param[reg(),name(pos),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(mutex_lock),exp:&ref:exp:ident(swapon_mutex)]],sel_if[exp:??(N/H),st_return[exp:ident(SEQ_START_TOKEN)],estmt(NONE)],for[exp[grammar(assign),simple_assi(=),exp:ident(i),exp:const:int(0)],exp[grammar(binary_logi),logiop(??),exp:ident(i),exp:ident(nr_swapfiles)],exp:??(N/H),{}stmt[sel_if[exp[grammar(binary_logi),logiop(or),exp:??(N/H),exp:??(N/H)],statem(N/H),estmt(NONE)],sel_if[exp:??(N/H),st_return[exp:ident(ptr)],estmt(NONE)]]],st_return[exp:ident(NULL)]]],def[fname(swap_next),funtype[fulltype[typec(N/H)],param[reg(),name(swap),fulltype[typec(N/H)]],param[reg(),name(v),fulltype[typec(N/H)]],param[reg(),name(pos),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(v),exp:ident(SEQ_START_TOKEN)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ptr),exp:ident(swap_info)]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(ptr),exp:ident(v)]],estmt[exp:??(N/H)]]],for[expr(NONE),exp[grammar(binary_logi),logiop(??),exp:ident(ptr),exp:ident(endptr)],exp:??(N/H),{}stmt[sel_if[exp[grammar(binary_logi),logiop(or),exp:??(N/H),exp:??(N/H)],statem(N/H),estmt(NONE)],estmt[exp:??(N/H)],st_return[exp:ident(ptr)]]],st_return[exp:ident(NULL)]]],def[fname(swap_stop),funtype[fulltype[ctype[btype(void)]],param[reg(),name(swap),fulltype[typec(N/H)]],param[reg(),name(v),fulltype[typec(N/H)]]],{}stmt[estmt[exp[grammar(call),exp:ident(mutex_unlock),exp:&ref:exp:ident(swapon_mutex)]]]],def[fname(swap_show),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(swap),fulltype[typec(N/H)]],param[reg(),name(v),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(ptr),exp:ident(SEQ_START_TOKEN)],{}stmt[estmt[exp[grammar(call),exp:ident(seq_puts),exp:ident(swap),exp:const:string(Filename\t\t\t\tType\t\tSize\tUsed\tPriority\n)]],st_return[exp:const:int(0)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(file),exp[grammar(record_ptr),exp:ident(ptr),ident(swap_file)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(len),exp[grammar(call),exp:ident(seq_path),exp:ident(swap),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(file),ident(f_path)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(file),ident(f_path)],ident(dentry)],exp:const:string( \t\n\\)]]],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(swap),exp:const:string(%*s%s\t%u\t%u\t%d\n),exp[grammar(cond3),exp[grammar(binary_logi),logiop(??),exp:ident(len),exp:const:int(40)],exp[grammar(binary_arith),aop(-),exp:const:int(40),exp:ident(len)],exp:const:int(1)],exp:const:string( ),exp[grammar(cond3),exp[grammar(call),exp:ident(S_ISBLK),exp[grammar(record_ptr),exp[grammar(record_ptr),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(file),ident(f_path)],ident(dentry)],ident(d_inode)],ident(i_mode)]],exp:const:string(partition),exp:const:string(file\t)],exp[grammar(binary_arith),aop(<<),exp[grammar(record_ptr),exp:ident(ptr),ident(pages)],exp[grammar(binary_arith),aop(-),exp:ident(PAGE_SHIFT),exp:const:int(10)]],exp[grammar(binary_arith),aop(<<),exp[grammar(record_ptr),exp:ident(ptr),ident(inuse_pages)],exp[grammar(binary_arith),aop(-),exp:ident(PAGE_SHIFT),exp:const:int(10)]],exp[grammar(record_ptr),exp:ident(ptr),ident(prio)]]],st_return[exp:const:int(0)]]],decl(N/H),def[fname(swaps_open),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(inode),fulltype[typec(N/H)]],param[reg(),name(file),fulltype[typec(N/H)]]],{}stmt[st_return[exp[grammar(call),exp:ident(seq_open),exp:ident(file),exp:&ref:exp:ident(swaps_op)]]]],decl(N/H),NCP(N/H),mtop(N/H),NCP(N/H),def[fname(si_swapinfo),funtype[fulltype[ctype[btype(void)]],param[reg(),name(val),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(swap_lock)]],for[exp[grammar(assign),simple_assi(=),exp:ident(i),exp:const:int(0)],exp[grammar(binary_logi),logiop(??),exp:ident(i),exp:ident(nr_swapfiles)],exp:??(N/H),{}stmt[sel_if[exp[grammar(binary_logi),logiop(or),exp:??(N/H),exp[grammar(binary_arith),aop(&),exp[grammar(record_acc),exp[grammar(array_acc),exp:ident(swap_info),exp:ident(i)],ident(flags)],exp:ident(SWP_WRITEOK)]],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),op_assi(+=),exp:ident(nr_to_be_unused),exp[grammar(record_acc),exp[grammar(array_acc),exp:ident(swap_info),exp:ident(i)],ident(inuse_pages)]]]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(val),ident(freeswap)],exp[grammar(binary_arith),aop(+),exp:ident(nr_swap_pages),exp:ident(nr_to_be_unused)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(val),ident(totalswap)],exp[grammar(binary_arith),aop(+),exp:ident(total_swap_pages),exp:ident(nr_to_be_unused)]]],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]]]],def[fname(swap_duplicate),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(entry),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),sel_if[exp[grammar(call),exp:ident(is_migration_entry),exp:ident(entry)],st_return[exp:const:int(1)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(type),exp[grammar(call),exp:ident(swp_type),exp:ident(entry)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(type),exp:ident(nr_swapfiles)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(p),exp[grammar(binary_arith),aop(+),exp:ident(type),exp:ident(swap_info)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(offset),exp[grammar(call),exp:ident(swp_offset),exp:ident(entry)]]],estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(swap_lock)]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp:ident(offset),exp[grammar(record_ptr),exp:ident(p),ident(max)]],exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(p),ident(swap_map)],exp:ident(offset)]],{}stmt[sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(p),ident(swap_map)],exp:ident(offset)],exp[grammar(binary_arith),aop(-),exp:ident(SWAP_MAP_MAX),exp:const:int(1)]],{}stmt[estmt[exp:??(N/H)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(result),exp:const:int(1)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(p),ident(swap_map)],exp:ident(offset)],exp:ident(SWAP_MAP_MAX)],{}stmt[sel_if[exp[grammar(binary_logi),logiop(??),exp:??(N/H),exp:const:int(5)],estmt[exp[grammar(call),exp:ident(printk),exp:const:other(N/H)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(p),ident(swap_map)],exp:ident(offset)],exp:ident(SWAP_MAP_MAX)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(result),exp:const:int(1)]]],estmt(NONE)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]],statem(N/H),statem(N/H),statem(N/H)]],def[fname(get_swap_info_struct),funtype[fulltype[typec(N/H)],param[reg(),name(type),fulltype[ctype[btype[itype[sgn(unsigned),base(int)]]]]]],{}stmt[st_return[exp[grammar(&ref),grammar(exp),grammar(array_acc),exp:ident(swap_info),exp:ident(type)]]]],def[fname(valid_swaphandles),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(entry),fulltype[typec(N/H)]],param[reg(),name(offset),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),sel_if[exp:??(N/H),st_return[exp:const:int(0)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(si),exp[grammar(&ref),grammar(exp),grammar(array_acc),exp:ident(swap_info),exp[grammar(call),exp:ident(swp_type),exp:ident(entry)]]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(target),exp[grammar(call),exp:ident(swp_offset),exp:ident(entry)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(base),exp[grammar(binary_arith),aop(<<),exp[grammar(binary_arith),aop(>>),exp:ident(target),exp:ident(our_page_cluster)],exp:ident(our_page_cluster)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(end),exp[grammar(binary_arith),aop(+),exp:ident(base),exp[grammar(binary_arith),aop(<<),exp:const:int(1),exp:ident(our_page_cluster)]]]],sel_if[exp:??(N/H),estmt[exp:??(N/H)],estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(swap_lock)]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(end),exp[grammar(record_ptr),exp:ident(si),ident(max)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(end),exp[grammar(record_ptr),exp:ident(si),ident(max)]]],estmt(NONE)],for[exp[grammar(assign),simple_assi(=),exp:ident(toff),exp:ident(target)],exp[grammar(binary_logi),logiop(??),exp:??(N/H),exp:ident(end)],exp:??(N/H),{}stmt[sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(si),ident(swap_map)],exp:ident(toff)],exp:ident(SWAP_MAP_BAD)],statem(N/H),estmt(NONE)]]],for[exp[grammar(assign),simple_assi(=),exp:ident(toff),exp:ident(target)],exp[grammar(binary_logi),logiop(??),exp:??(N/H),exp:ident(base)],exp:??(N/H),{}stmt[sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(si),ident(swap_map)],exp:ident(toff)],exp:ident(SWAP_MAP_BAD)],statem(N/H),estmt(NONE)]]],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]],estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(offset),exp:??(N/H)]],st_return[exp[grammar(cond3),exp:ident(nr_pages),exp:??(N/H),exp:const:int(0)]]]]] ==> prg2[includeN[inc_elem(linux),inc_elem(mm.h)],includeN[inc_elem(linux),inc_elem(hugetlb.h)],includeN[inc_elem(linux),inc_elem(mman.h)],includeN[inc_elem(linux),inc_elem(slab.h)],includeN[inc_elem(linux),inc_elem(kernel_stat.h)],includeN[inc_elem(linux),inc_elem(swap.h)],includeN[inc_elem(linux),inc_elem(vmalloc.h)],includeN[inc_elem(linux),inc_elem(pagemap.h)],includeN[inc_elem(linux),inc_elem(namei.h)],includeN[inc_elem(linux),inc_elem(shm.h)],includeN[inc_elem(linux),inc_elem(blkdev.h)],includeN[inc_elem(linux),inc_elem(writeback.h)],includeN[inc_elem(linux),inc_elem(proc_fs.h)],includeN[inc_elem(linux),inc_elem(seq_file.h)],includeN[inc_elem(linux),inc_elem(init.h)],includeN[inc_elem(linux),inc_elem(module.h)],includeN[inc_elem(linux),inc_elem(rmap.h)],includeN[inc_elem(linux),inc_elem(security.h)],includeN[inc_elem(linux),inc_elem(backing-dev.h)],includeN[inc_elem(linux),inc_elem(mutex.h)],includeN[inc_elem(linux),inc_elem(capability.h)],includeN[inc_elem(linux),inc_elem(syscalls.h)],includeN[inc_elem(linux),inc_elem(memcontrol.h)],includeN[inc_elem(asm),inc_elem(pgtable.h)],includeN[inc_elem(asm),inc_elem(tlbflush.h)],includeN[inc_elem(linux),inc_elem(swapops.h)],mtop(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),def[fname(swap_unplug_io_fn),funtype[fulltype[ctype[btype(void)]],param[reg(),name(unused_bdi),fulltype[typec(N/H)]],param[reg(),name(page),fulltype[typec(N/H)]]],{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(down_read),exp:&ref:exp:ident(swap_unplug_sem)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(entry),ident(val)],exp[grammar(call),exp:ident(page_private),exp:ident(page)]]],sel_if[exp[grammar(call),exp:ident(PageSwapCache),exp:ident(page)],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(WARN_ON),exp[grammar(binary_logi),logiop(??),exp[grammar(call),exp:ident(page_count),exp:ident(page)],exp:const:int(1)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(bdi),exp[grammar(record_ptr),exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(bdev),ident(bd_inode)],ident(i_mapping)],ident(backing_dev_info)]]],estmt[exp[grammar(call),exp:ident(blk_run_backing_dev),exp:ident(bdi),exp:ident(page)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(up_read),exp:&ref:exp:ident(swap_unplug_sem)]]]],define(N/H),define(N/H),def[fname(scan_swap_map),funtype[fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]],param[reg(),name(si),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),op_assi(+=),exp[grammar(record_ptr),exp:ident(si),ident(flags)],exp:ident(SWP_SCANNING)]],sel_if[exp[grammar(call),exp:ident(unlikely),exp:??(N/H)],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(si),ident(cluster_nr)],exp[grammar(binary_arith),aop(-),exp:ident(SWAPFILE_CLUSTER),exp:const:int(1)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(binary_arith),aop(-),exp[grammar(record_ptr),exp:ident(si),ident(pages)],exp[grammar(record_ptr),exp:ident(si),ident(inuse_pages)]],exp:ident(SWAPFILE_CLUSTER)],statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(offset),exp[grammar(record_ptr),exp:ident(si),ident(lowest_bit)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(last_in_cluster),exp[grammar(binary_arith),aop(-),exp[grammar(binary_arith),aop(+),exp:ident(offset),exp:ident(SWAPFILE_CLUSTER)],exp:const:int(1)]]],for[expr(NONE),exp[grammar(binary_logi),logiop(??),exp:ident(last_in_cluster),exp[grammar(record_ptr),exp:ident(si),ident(highest_bit)]],exp:??(N/H),{}stmt[sel_if[exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(si),ident(swap_map)],exp:ident(offset)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(last_in_cluster),exp[grammar(binary_arith),aop(+),exp:ident(offset),exp:ident(SWAPFILE_CLUSTER)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(offset),exp:ident(last_in_cluster)],{}stmt[estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(swap_lock)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(si),ident(cluster_next)],exp[grammar(binary_arith),aop(+),exp[grammar(binary_arith),aop(-),exp:ident(offset),exp:ident(SWAPFILE_CLUSTER)],exp:const:int(1)]]],statem(N/H)],estmt(NONE)]],sel_if[exp[grammar(call),exp:ident(unlikely),exp[grammar(binary_logi),logiop(??),exp:??(N/H),exp:const:int(0)]],{}stmt[estmt[exp[grammar(call),exp:ident(cond_resched)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(latency_ration),exp:ident(LATENCY_LIMIT)]]],estmt(NONE)]]],estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(swap_lock)]],statem(N/H)],estmt(NONE)],estmt[exp:??(N/H)],statem(N/H),sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(offset),exp[grammar(record_ptr),exp:ident(si),ident(highest_bit)]],statem(N/H),estmt(NONE)],statem(N/H),sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],sel_if[exp:??(N/H),{}stmt[sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(offset),exp[grammar(record_ptr),exp:ident(si),ident(lowest_bit)]],estmt[exp:??(N/H)],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(offset),exp[grammar(record_ptr),exp:ident(si),ident(highest_bit)]],estmt[exp:??(N/H)],estmt(NONE)],estmt[exp:??(N/H)],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(si),ident(inuse_pages)],exp[grammar(record_ptr),exp:ident(si),ident(pages)]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(si),ident(lowest_bit)],exp[grammar(record_ptr),exp:ident(si),ident(max)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(si),ident(highest_bit)],exp:const:int(0)]]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(si),ident(swap_map)],exp:ident(offset)],exp:const:int(1)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(si),ident(cluster_next)],exp[grammar(binary_arith),aop(+),exp:ident(offset),exp:const:int(1)]]],estmt[exp[grammar(assign),op_assi(-=),exp[grammar(record_ptr),exp:ident(si),ident(flags)],exp:ident(SWP_SCANNING)]],st_return[exp:ident(offset)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]],while[exp[grammar(binary_logi),logiop(??),exp:??(N/H),exp[grammar(record_ptr),exp:ident(si),ident(highest_bit)]],{}stmt[sel_if[exp:??(N/H),{}stmt[estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(swap_lock)]],statem(N/H)],estmt(NONE)],sel_if[exp[grammar(call),exp:ident(unlikely),exp[grammar(binary_logi),logiop(??),exp:??(N/H),exp:const:int(0)]],{}stmt[estmt[exp[grammar(call),exp:ident(cond_resched)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(latency_ration),exp:ident(LATENCY_LIMIT)]]],estmt(NONE)]]],estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(swap_lock)]],statem(N/H),statem(N/H),st_return[exp:const:int(0)]]],def[fname(get_swap_page),funtype[fulltype[typec(N/H)],param[reg(),name(),fulltype[ctype[btype(void)]]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(swap_lock)]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(nr_swap_pages),exp:const:int(0)],statem(N/H),estmt(NONE)],estmt[exp:??(N/H)],for[exp[grammar(assign),simple_assi(=),exp:ident(type),exp[grammar(record_acc),exp:ident(swap_list),ident(next)]],exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp:ident(type),exp:const:int(0)],exp[grammar(binary_logi),logiop(??),exp:ident(wrapped),exp:const:int(2)]],exp[grammar(assign),simple_assi(=),exp:ident(type),exp:ident(next)],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(si),exp[grammar(binary_arith),aop(+),exp:ident(swap_info),exp:ident(type)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(next),exp[grammar(record_ptr),exp:ident(si),ident(next)]]],sel_if[exp[grammar(binary_logi),logiop(or),exp[grammar(binary_logi),logiop(??),exp:ident(next),exp:const:int(0)],exp[grammar(binary_logi),logiop(and),exp:??(N/H),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(si),ident(prio)],exp[grammar(record_acc),exp[grammar(array_acc),exp:ident(swap_info),exp:ident(next)],ident(prio)]]]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(next),exp[grammar(record_acc),exp:ident(swap_list),ident(head)]]],estmt[exp:??(N/H)]],estmt(NONE)],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(swap_list),ident(next)],exp:ident(next)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(offset),exp[grammar(call),exp:ident(scan_swap_map),exp:ident(si)]]],sel_if[exp:ident(offset),{}stmt[estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]],st_return[exp[grammar(call),exp:ident(swp_entry),exp:ident(type),exp:ident(offset)]]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(next),exp[grammar(record_acc),exp:ident(swap_list),ident(next)]]]]],estmt[exp:??(N/H)],statem(N/H),st_return[exp:??(N/H)]]],def[fname(get_swap_page_of_type),funtype[fulltype[typec(N/H)],param[reg(),name(type),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(swap_lock)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(si),exp[grammar(binary_arith),aop(+),exp:ident(swap_info),exp:ident(type)]]],sel_if[exp[grammar(binary_arith),aop(&),exp[grammar(record_ptr),exp:ident(si),ident(flags)],exp:ident(SWP_WRITEOK)],{}stmt[estmt[exp:??(N/H)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(offset),exp[grammar(call),exp:ident(scan_swap_map),exp:ident(si)]]],sel_if[exp:ident(offset),{}stmt[estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]],st_return[exp[grammar(call),exp:ident(swp_entry),exp:ident(type),exp:ident(offset)]]],estmt(NONE)],estmt[exp:??(N/H)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]],st_return[exp:??(N/H)]]],def[fname(swap_info_get),funtype[fulltype[typec(N/H)],param[reg(),name(entry),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(type),exp[grammar(call),exp:ident(swp_type),exp:ident(entry)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(type),exp:ident(nr_swapfiles)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(p),exp[grammar(&ref),grammar(exp),grammar(array_acc),exp:ident(swap_info),exp:ident(type)]]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(offset),exp[grammar(call),exp:ident(swp_offset),exp:ident(entry)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(offset),exp[grammar(record_ptr),exp:ident(p),ident(max)]],statem(N/H),estmt(NONE)],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(swap_lock)]],st_return[exp:ident(p)],statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H)]],def[fname(swap_entry_free),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(p),fulltype[typec(N/H)]],param[reg(),name(offset),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]]],{}stmt[statem(N/H),sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(count),exp:ident(SWAP_MAP_MAX)],{}stmt[estmt[exp:??(N/H)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(p),ident(swap_map)],exp:ident(offset)],exp:ident(count)]],sel_if[exp:??(N/H),{}stmt[sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(offset),exp[grammar(record_ptr),exp:ident(p),ident(lowest_bit)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(p),ident(lowest_bit)],exp:ident(offset)]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(offset),exp[grammar(record_ptr),exp:ident(p),ident(highest_bit)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(p),ident(highest_bit)],exp:ident(offset)]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(p),ident(prio)],exp[grammar(record_acc),exp[grammar(array_acc),exp:ident(swap_info),exp[grammar(record_acc),exp:ident(swap_list),ident(next)]],ident(prio)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(swap_list),ident(next)],exp[grammar(binary_arith),aop(-),exp:ident(p),exp:ident(swap_info)]]],estmt(NONE)],estmt[exp:??(N/H)],estmt[exp:??(N/H)]],estmt(NONE)]],estmt(NONE)],st_return[exp:ident(count)]]],def[fname(swap_free),funtype[fulltype[ctype[btype(void)]],param[reg(),name(entry),fulltype[typec(N/H)]]],{}stmt[statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(p),exp[grammar(call),exp:ident(swap_info_get),exp:ident(entry)]]],sel_if[exp:ident(p),{}stmt[estmt[exp[grammar(call),exp:ident(swap_entry_free),exp:ident(p),exp[grammar(call),exp:ident(swp_offset),exp:ident(entry)]]],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]]],estmt(NONE)]]],def[fname(page_swapcount),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(page),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(entry),ident(val)],exp[grammar(call),exp:ident(page_private),exp:ident(page)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(p),exp[grammar(call),exp:ident(swap_info_get),exp:ident(entry)]]],sel_if[exp:ident(p),{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(count),exp[grammar(binary_arith),aop(-),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(p),ident(swap_map)],exp[grammar(call),exp:ident(swp_offset),exp:ident(entry)]],exp:const:int(1)]]],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]]],estmt(NONE)],st_return[exp:ident(count)]]],def[fname(can_share_swap_page),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(page),fulltype[typec(N/H)]]],{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(BUG_ON),exp:??(N/H)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(count),exp[grammar(call),exp:ident(page_mapcount),exp:ident(page)]]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp:ident(count),exp:const:int(1)],exp[grammar(call),exp:ident(PageSwapCache),exp:ident(page)]],estmt[exp[grammar(assign),op_assi(+=),exp:ident(count),exp[grammar(call),exp:ident(page_swapcount),exp:ident(page)]]],estmt(NONE)],st_return[exp[grammar(binary_logi),logiop(eq),exp:ident(count),exp:const:int(1)]]]],def[fname(remove_exclusive_swap_page),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(page),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(BUG_ON),exp[grammar(call),exp:ident(PagePrivate),exp:ident(page)]]],estmt[exp[grammar(call),exp:ident(BUG_ON),exp:??(N/H)]],sel_if[exp:??(N/H),st_return[exp:const:int(0)],estmt(NONE)],sel_if[exp[grammar(call),exp:ident(PageWriteback),exp:ident(page)],st_return[exp:const:int(0)],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(call),exp:ident(page_count),exp:ident(page)],exp:const:int(2)],st_return[exp:const:int(0)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(entry),ident(val)],exp[grammar(call),exp:ident(page_private),exp:ident(page)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(p),exp[grammar(call),exp:ident(swap_info_get),exp:ident(entry)]]],sel_if[exp:??(N/H),st_return[exp:const:int(0)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(retval),exp:const:int(0)]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(p),ident(swap_map)],exp[grammar(call),exp:ident(swp_offset),exp:ident(entry)]],exp:const:int(1)],{}stmt[estmt[exp[grammar(call),exp:ident(write_lock_irq),exp[grammar(&ref),grammar(exp),grammar(record_acc),exp:ident(swapper_space),ident(tree_lock)]]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(eq),exp[grammar(call),exp:ident(page_count),exp:ident(page)],exp:const:int(2)],exp:??(N/H)],{}stmt[estmt[exp[grammar(call),exp:ident(__delete_from_swap_cache),exp:ident(page)]],estmt[exp[grammar(call),exp:ident(SetPageDirty),exp:ident(page)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(retval),exp:const:int(1)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(write_unlock_irq),exp[grammar(&ref),grammar(exp),grammar(record_acc),exp:ident(swapper_space),ident(tree_lock)]]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]],sel_if[exp:ident(retval),{}stmt[estmt[exp[grammar(call),exp:ident(swap_free),exp:ident(entry)]],estmt[exp[grammar(call),exp:ident(page_cache_release),exp:ident(page)]]],estmt(NONE)],st_return[exp:ident(retval)]]],def[fname(free_swap_and_cache),funtype[fulltype[ctype[btype(void)]],param[reg(),name(entry),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp[grammar(call),exp:ident(is_migration_entry),exp:ident(entry)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(p),exp[grammar(call),exp:ident(swap_info_get),exp:ident(entry)]]],sel_if[exp:ident(p),{}stmt[sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(call),exp:ident(swap_entry_free),exp:ident(p),exp[grammar(call),exp:ident(swp_offset),exp:ident(entry)]],exp:const:int(1)],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(page),exp[grammar(call),exp:ident(find_get_page),exp:&ref:exp:ident(swapper_space),exp[grammar(record_acc),exp:ident(entry),ident(val)]]]],sel_if[exp[grammar(binary_logi),logiop(and),exp:ident(page),exp[grammar(call),exp:ident(unlikely),exp[grammar(call),exp:ident(TestSetPageLocked),exp:ident(page)]]],{}stmt[estmt[exp[grammar(call),exp:ident(page_cache_release),exp:ident(page)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(page),exp:ident(NULL)]]],estmt(NONE)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]]],estmt(NONE)],sel_if[exp:ident(page),{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(BUG_ON),exp[grammar(call),exp:ident(PagePrivate),exp:ident(page)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(one_user),exp[grammar(binary_logi),logiop(eq),exp[grammar(call),exp:ident(page_count),exp:ident(page)],exp:const:int(2)]]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(and),exp[grammar(call),exp:ident(PageSwapCache),exp:ident(page)],exp:??(N/H)],exp[grammar(binary_logi),logiop(or),exp:ident(one_user),exp[grammar(call),exp:ident(vm_swap_full)]]],{}stmt[estmt[exp[grammar(call),exp:ident(delete_from_swap_cache),exp:ident(page)]],estmt[exp[grammar(call),exp:ident(SetPageDirty),exp:ident(page)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(unlock_page),exp:ident(page)]],estmt[exp[grammar(call),exp:ident(page_cache_release),exp:ident(page)]]],estmt(NONE)]]],def[fname(swap_type_of),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(device),fulltype[typec(N/H)]],param[reg(),name(offset),fulltype[typec(N/H)]],param[reg(),name(bdev_p),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp:ident(device),estmt[exp[grammar(assign),simple_assi(=),exp:ident(bdev),exp[grammar(call),exp:ident(bdget),exp:ident(device)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(swap_lock)]],for[exp[grammar(assign),simple_assi(=),exp:ident(i),exp:const:int(0)],exp[grammar(binary_logi),logiop(??),exp:ident(i),exp:ident(nr_swapfiles)],exp:??(N/H),{}stmt[statem(N/H),sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],sel_if[exp:??(N/H),{}stmt[sel_if[exp:ident(bdev_p),estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(bdev_p),exp[grammar(record_ptr),exp:ident(sis),ident(bdev)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]],st_return[exp:ident(i)]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(bdev),exp[grammar(record_ptr),exp:ident(sis),ident(bdev)]],{}stmt[statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(se),exp[grammar(call),exp:ident(list_entry),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(sis),ident(extent_list)],ident(next)],argtype(N/H),exp:ident(list)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(se),ident(start_block)],exp:ident(offset)],{}stmt[sel_if[exp:ident(bdev_p),estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(bdev_p),exp[grammar(record_ptr),exp:ident(sis),ident(bdev)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]],estmt[exp[grammar(call),exp:ident(bdput),exp:ident(bdev)]],st_return[exp:ident(i)]],estmt(NONE)]],estmt(NONE)]]],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]],sel_if[exp:ident(bdev),estmt[exp[grammar(call),exp:ident(bdput),exp:ident(bdev)]],estmt(NONE)],st_return[exp:??(N/H)]]],def[fname(count_swap_pages),funtype[fulltype[ctype[btype[itype[sgn(unsigned),base(int)]]]],param[reg(),name(type),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(free),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[statem(N/H),sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(type),exp:ident(nr_swapfiles)],{}stmt[estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(swap_lock)]],sel_if[exp[grammar(binary_arith),aop(&),exp[grammar(record_acc),exp[grammar(array_acc),exp:ident(swap_info),exp:ident(type)],ident(flags)],exp:ident(SWP_WRITEOK)],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(n),exp[grammar(record_acc),exp[grammar(array_acc),exp:ident(swap_info),exp:ident(type)],ident(pages)]]],sel_if[exp:ident(free),estmt[exp[grammar(assign),op_assi(-=),exp:ident(n),exp[grammar(record_acc),exp[grammar(array_acc),exp:ident(swap_info),exp:ident(type)],ident(inuse_pages)]]],estmt(NONE)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]]],estmt(NONE)],st_return[exp:ident(n)]]],def[fname(unuse_pte),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(vma),fulltype[typec(N/H)]],param[reg(),name(pmd),fulltype[typec(N/H)]],param[reg(),name(addr),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(entry),fulltype[typec(N/H)]],param[reg(),name(page),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),sel_if[exp[grammar(call),exp:ident(mem_cgroup_charge),exp:ident(page),exp[grammar(record_ptr),exp:ident(vma),ident(vm_mm)],exp:ident(GFP_KERNEL)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ret),exp:??(N/H)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(pte),exp[grammar(call),exp:ident(pte_offset_map_lock),exp[grammar(record_ptr),exp:ident(vma),ident(vm_mm)],exp:ident(pmd),exp:ident(addr),exp:&ref:exp:ident(ptl)]]],sel_if[exp[grammar(call),exp:ident(unlikely),exp:??(N/H)],{}stmt[sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(ret),exp:const:int(0)],estmt[exp[grammar(call),exp:ident(mem_cgroup_uncharge_page),exp:ident(page)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ret),exp:const:int(0)]],statem(N/H)],estmt(NONE)],estmt[exp[grammar(call),exp:ident(inc_mm_counter),exp[grammar(record_ptr),exp:ident(vma),ident(vm_mm)],exp:ident(anon_rss)]],estmt[exp[grammar(call),exp:ident(get_page),exp:ident(page)]],estmt[exp[grammar(call),exp:ident(set_pte_at),exp[grammar(record_ptr),exp:ident(vma),ident(vm_mm)],exp:ident(addr),exp:ident(pte),exp[grammar(call),exp:ident(pte_mkold),exp[grammar(call),exp:ident(mk_pte),exp:ident(page),exp[grammar(record_ptr),exp:ident(vma),ident(vm_page_prot)]]]]],estmt[exp[grammar(call),exp:ident(page_add_anon_rmap),exp:ident(page),exp:ident(vma),exp:ident(addr)]],estmt[exp[grammar(call),exp:ident(swap_free),exp:ident(entry)]],estmt[exp[grammar(call),exp:ident(activate_page),exp:ident(page)]],statem(N/H),st_return[exp:ident(ret)]]],def[fname(unuse_pte_range),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(vma),fulltype[typec(N/H)]],param[reg(),name(pmd),fulltype[typec(N/H)]],param[reg(),name(addr),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(end),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(entry),fulltype[typec(N/H)]],param[reg(),name(page),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(pte),exp[grammar(call),exp:ident(pte_offset_map),exp:ident(pmd),exp:ident(addr)]]],statem(N/H),estmt[exp[grammar(call),exp:ident(pte_unmap),exp[grammar(binary_arith),aop(-),exp:ident(pte),exp:const:int(1)]]],statem(N/H)]],def[fname(unuse_pmd_range),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(vma),fulltype[typec(N/H)]],param[reg(),name(pud),fulltype[typec(N/H)]],param[reg(),name(addr),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(end),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(entry),fulltype[typec(N/H)]],param[reg(),name(page),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(pmd),exp[grammar(call),exp:ident(pmd_offset),exp:ident(pud),exp:ident(addr)]]],statem(N/H),st_return[exp:const:int(0)]]],def[fname(unuse_pud_range),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(vma),fulltype[typec(N/H)]],param[reg(),name(pgd),fulltype[typec(N/H)]],param[reg(),name(addr),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(end),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(entry),fulltype[typec(N/H)]],param[reg(),name(page),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(pud),exp[grammar(call),exp:ident(pud_offset),exp:ident(pgd),exp:ident(addr)]]],statem(N/H),st_return[exp:const:int(0)]]],def[fname(unuse_vma),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(vma),fulltype[typec(N/H)]],param[reg(),name(entry),fulltype[typec(N/H)]],param[reg(),name(page),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),sel_if[exp[grammar(record_ptr),exp:ident(page),ident(mapping)],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(addr),exp[grammar(call),exp:ident(page_address_in_vma),exp:ident(page),exp:ident(vma)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(addr),exp:??(N/H)],st_return[exp:const:int(0)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(end),exp[grammar(binary_arith),aop(+),exp:ident(addr),exp:ident(PAGE_SIZE)]]]]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(addr),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(end),exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)]]]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(pgd),exp[grammar(call),exp:ident(pgd_offset),exp[grammar(record_ptr),exp:ident(vma),ident(vm_mm)],exp:ident(addr)]]],statem(N/H),st_return[exp:const:int(0)]]],def[fname(unuse_mm),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(mm),fulltype[typec(N/H)]],param[reg(),name(entry),fulltype[typec(N/H)]],param[reg(),name(page),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp:??(N/H),{}stmt[estmt[exp[grammar(call),exp:ident(activate_page),exp:ident(page)]],estmt[exp[grammar(call),exp:ident(unlock_page),exp:ident(page)]],estmt[exp[grammar(call),exp:ident(down_read),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(mm),ident(mmap_sem)]]],estmt[exp[grammar(call),exp:ident(lock_page),exp:ident(page)]]],estmt(NONE)],for[exp[grammar(assign),simple_assi(=),exp:ident(vma),exp[grammar(record_ptr),exp:ident(mm),ident(mmap)]],exp:ident(vma),exp[grammar(assign),simple_assi(=),exp:ident(vma),exp[grammar(record_ptr),exp:ident(vma),ident(vm_next)]],{}stmt[sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(record_ptr),exp:ident(vma),ident(anon_vma)],exp[grammar(assign),simple_assi(=),exp:ident(ret),exp[grammar(call),exp:ident(unuse_vma),exp:ident(vma),exp:ident(entry),exp:ident(page)]]],statem(N/H),estmt(NONE)]]],estmt[exp[grammar(call),exp:ident(up_read),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(mm),ident(mmap_sem)]]],st_return[exp[grammar(cond3),exp[grammar(binary_logi),logiop(??),exp:ident(ret),exp:const:int(0)],exp:ident(ret),exp:const:int(0)]]]],def[fname(find_next_to_unuse),funtype[fulltype[ctype[btype[itype[sgn(unsigned),base(int)]]]],param[reg(),name(si),fulltype[typec(N/H)]],param[reg(),name(prev),fulltype[ctype[btype[itype[sgn(unsigned),base(int)]]]]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),for[expr(NONE),expr(NONE),expr(NONE),{}stmt[sel_if[exp[grammar(binary_logi),logiop(??),exp:??(N/H),exp:ident(max)],{}stmt[sel_if[exp:??(N/H),{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(i),exp:const:int(0)]],statem(N/H)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(max),exp[grammar(binary_arith),aop(+),exp:ident(prev),exp:const:int(1)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(prev),exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(i),exp:const:int(1)]]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(count),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(si),ident(swap_map)],exp:ident(i)]]],sel_if[exp[grammar(binary_logi),logiop(and),exp:ident(count),exp[grammar(binary_logi),logiop(??),exp:ident(count),exp:ident(SWAP_MAP_BAD)]],statem(N/H),estmt(NONE)]]],st_return[exp:ident(i)]]],def[fname(try_to_unuse),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(type),fulltype[ctype[btype[itype[sgn(unsigned),base(int)]]]]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(start_mm),exp:&ref:exp:ident(init_mm)]],estmt[exp[grammar(call),exp:ident(atomic_inc),exp[grammar(&ref),grammar(exp),grammar(record_acc),exp:ident(init_mm),ident(mm_users)]]],while[exp[grammar(binary_logi),logiop(??),exp[grammar(assign),simple_assi(=),exp:ident(i),exp[grammar(call),exp:ident(find_next_to_unuse),exp:ident(si),exp:ident(i)]],exp:const:int(0)],{}stmt[sel_if[exp[grammar(call),exp:ident(signal_pending),exp:ident(current)],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(retval),exp:??(N/H)]],statem(N/H)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(swap_map),exp[grammar(&ref),grammar(exp),grammar(array_acc),exp[grammar(record_ptr),exp:ident(si),ident(swap_map)],exp:ident(i)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(entry),exp[grammar(call),exp:ident(swp_entry),exp:ident(type),exp:ident(i)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(page),exp[grammar(call),exp:ident(read_swap_cache_async),exp:ident(entry),exp:ident(GFP_HIGHUSER_MOVABLE),exp:ident(NULL),exp:const:int(0)]]],sel_if[exp:??(N/H),{}stmt[sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(retval),exp:??(N/H)]],statem(N/H)],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(call),exp:ident(atomic_read),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(start_mm),ident(mm_users)]],exp:const:int(1)],{}stmt[estmt[exp[grammar(call),exp:ident(mmput),exp:ident(start_mm)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(start_mm),exp:&ref:exp:ident(init_mm)]],estmt[exp[grammar(call),exp:ident(atomic_inc),exp[grammar(&ref),grammar(exp),grammar(record_acc),exp:ident(init_mm),ident(mm_users)]]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(wait_on_page_locked),exp:ident(page)]],estmt[exp[grammar(call),exp:ident(wait_on_page_writeback),exp:ident(page)]],estmt[exp[grammar(call),exp:ident(lock_page),exp:ident(page)]],estmt[exp[grammar(call),exp:ident(wait_on_page_writeback),exp:ident(page)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(shmem),exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(swcount),exp:*ref:exp:ident(swap_map)]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(swcount),exp:const:int(1)],{}stmt[sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(start_mm),exp:&ref:exp:ident(init_mm)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(shmem),exp[grammar(call),exp:ident(shmem_unuse),exp:ident(entry),exp:ident(page)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(retval),exp[grammar(call),exp:ident(unuse_mm),exp:ident(start_mm),exp:ident(entry),exp:ident(page)]]]]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp:*ref:exp:ident(swap_map),exp:const:int(1)],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(atomic_inc),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(new_start_mm),ident(mm_users)]]],estmt[exp[grammar(call),exp:ident(atomic_inc),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(prev_mm),ident(mm_users)]]],estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(mmlist_lock)]],while[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp:*ref:exp:ident(swap_map),exp:const:int(1)],exp:??(N/H)],exp:??(N/H)],exp[grammar(binary_logi),logiop(??),exp[grammar(assign),simple_assi(=),exp:ident(p),exp[grammar(record_ptr),exp:ident(p),ident(next)]],exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(start_mm),ident(mmlist)]]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(mm),exp[grammar(call),exp:ident(list_entry),exp:ident(p),argtype(N/H),exp:ident(mmlist)]]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(mmlist_lock)]],estmt[exp[grammar(call),exp:ident(mmput),exp:ident(prev_mm)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(prev_mm),exp:ident(mm)]],estmt[exp[grammar(call),exp:ident(cond_resched)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(swcount),exp:*ref:exp:ident(swap_map)]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(swcount),exp:const:int(1)],estmt(NONE),sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(mm),exp:&ref:exp:ident(init_mm)],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(set_start_mm),exp:const:int(1)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(shmem),exp[grammar(call),exp:ident(shmem_unuse),exp:ident(entry),exp:ident(page)]]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(retval),exp[grammar(call),exp:ident(unuse_mm),exp:ident(mm),exp:ident(entry),exp:ident(page)]]]]],sel_if[exp[grammar(binary_logi),logiop(and),exp:ident(set_start_mm),exp[grammar(binary_logi),logiop(??),exp:*ref:exp:ident(swap_map),exp:ident(swcount)]],{}stmt[estmt[exp[grammar(call),exp:ident(mmput),exp:ident(new_start_mm)]],estmt[exp[grammar(call),exp:ident(atomic_inc),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(mm),ident(mm_users)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(new_start_mm),exp:ident(mm)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(set_start_mm),exp:const:int(0)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(mmlist_lock)]]]],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(mmlist_lock)]],estmt[exp[grammar(call),exp:ident(mmput),exp:ident(prev_mm)]],estmt[exp[grammar(call),exp:ident(mmput),exp:ident(start_mm)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(start_mm),exp:ident(new_start_mm)]]],estmt(NONE)],sel_if[exp:ident(shmem),{}stmt[sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(shmem),exp:const:int(0)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(retval),exp:ident(shmem)]],statem(N/H)],estmt(NONE)],sel_if[exp:ident(retval),{}stmt[estmt[exp[grammar(call),exp:ident(unlock_page),exp:ident(page)]],estmt[exp[grammar(call),exp:ident(page_cache_release),exp:ident(page)]],statem(N/H)],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(eq),exp:*ref:exp:ident(swap_map),exp:ident(SWAP_MAP_MAX)],{}stmt[estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(swap_lock)]],estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(swap_map),exp:const:int(1)]],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(reset_overflow),exp:const:int(1)]]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp:*ref:exp:ident(swap_map),exp:const:int(1)],exp[grammar(call),exp:ident(PageDirty),exp:ident(page)]],exp[grammar(call),exp:ident(PageSwapCache),exp:ident(page)]],{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(swap_writepage),exp:ident(page),exp:&ref:exp:ident(wbc)]],estmt[exp[grammar(call),exp:ident(lock_page),exp:ident(page)]],estmt[exp[grammar(call),exp:ident(wait_on_page_writeback),exp:ident(page)]]],estmt(NONE)],sel_if[exp[grammar(call),exp:ident(PageSwapCache),exp:ident(page)],estmt[exp[grammar(call),exp:ident(delete_from_swap_cache),exp:ident(page)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(SetPageDirty),exp:ident(page)]],estmt[exp[grammar(call),exp:ident(unlock_page),exp:ident(page)]],estmt[exp[grammar(call),exp:ident(page_cache_release),exp:ident(page)]],estmt[exp[grammar(call),exp:ident(cond_resched)]]]],estmt[exp[grammar(call),exp:ident(mmput),exp:ident(start_mm)]],sel_if[exp:ident(reset_overflow),{}stmt[estmt[exp[grammar(call),exp:ident(printk),exp:const:other(N/H)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(swap_overflow),exp:const:int(0)]]],estmt(NONE)],st_return[exp:ident(retval)]]],def[fname(drain_mmlist),funtype[fulltype[ctype[btype(void)]],param[reg(),name(),fulltype[ctype[btype(void)]]]],{}stmt[statem(N/H),statem(N/H),for[exp[grammar(assign),simple_assi(=),exp:ident(i),exp:const:int(0)],exp[grammar(binary_logi),logiop(??),exp:ident(i),exp:ident(nr_swapfiles)],exp:??(N/H),sel_if[exp[grammar(record_acc),exp[grammar(array_acc),exp:ident(swap_info),exp:ident(i)],ident(inuse_pages)],statem(N/H),estmt(NONE)]],estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(mmlist_lock)]],statem(N/H),estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(mmlist_lock)]]]],def[fname(map_swap_page),funtype[fulltype[typec(N/H)],param[reg(),name(sis),fulltype[typec(N/H)]],param[reg(),name(offset),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),for[expr(NONE),expr(NONE),expr(NONE),{}stmt[statem(N/H),sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(se),ident(start_page)],exp:ident(offset)],exp[grammar(binary_logi),logiop(??),exp:ident(offset),exp[grammar(binary_arith),aop(+),exp[grammar(record_ptr),exp:ident(se),ident(start_page)],exp[grammar(record_ptr),exp:ident(se),ident(nr_pages)]]]],{}stmt[st_return[exp[grammar(binary_arith),aop(+),exp[grammar(record_ptr),exp:ident(se),ident(start_block)],exp[grammar(binary_arith),aop(-),exp:ident(offset),exp[grammar(record_ptr),exp:ident(se),ident(start_page)]]]]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(lh),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(se),ident(list)],ident(next)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(lh),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(sis),ident(extent_list)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(lh),exp[grammar(record_ptr),exp:ident(lh),ident(next)]]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(se),exp[grammar(call),exp:ident(list_entry),exp:ident(lh),argtype(N/H),exp:ident(list)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(sis),ident(curr_swap_extent)],exp:ident(se)]],estmt[exp[grammar(call),exp:ident(BUG_ON),exp[grammar(binary_logi),logiop(eq),exp:ident(se),exp:ident(start_se)]]]]]]],def[fname(swapdev_block),funtype[fulltype[typec(N/H)],param[reg(),name(swap_type),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(offset),fulltype[typec(N/H)]]],{}stmt[statem(N/H),sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(swap_type),exp:ident(nr_swapfiles)],st_return[exp:const:int(0)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(sis),exp[grammar(binary_arith),aop(+),exp:ident(swap_info),exp:ident(swap_type)]]],st_return[exp[grammar(cond3),exp[grammar(binary_arith),aop(&),exp[grammar(record_ptr),exp:ident(sis),ident(flags)],exp:ident(SWP_WRITEOK)],exp[grammar(call),exp:ident(map_swap_page),exp:ident(sis),exp:ident(offset)],exp:const:int(0)]]]],def[fname(destroy_swap_extents),funtype[fulltype[ctype[btype(void)]],param[reg(),name(sis),fulltype[typec(N/H)]]],{}stmt[while[exp:??(N/H),{}stmt[statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(se),exp[grammar(call),exp:ident(list_entry),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(sis),ident(extent_list)],ident(next)],argtype(N/H),exp:ident(list)]]],estmt[exp[grammar(call),exp:ident(list_del),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(se),ident(list)]]],estmt[exp[grammar(call),exp:ident(kfree),exp:ident(se)]]]]]],def[fname(add_swap_extent),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(sis),fulltype[typec(N/H)]],param[reg(),name(start_page),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(nr_pages),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(start_block),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(lh),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(sis),ident(extent_list)],ident(prev)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(lh),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(sis),ident(extent_list)]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(se),exp[grammar(call),exp:ident(list_entry),exp:ident(lh),argtype(N/H),exp:ident(list)]]],estmt[exp[grammar(call),exp:ident(BUG_ON),exp[grammar(binary_logi),logiop(??),exp[grammar(binary_arith),aop(+),exp[grammar(record_ptr),exp:ident(se),ident(start_page)],exp[grammar(record_ptr),exp:ident(se),ident(nr_pages)]],exp:ident(start_page)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(binary_arith),aop(+),exp[grammar(record_ptr),exp:ident(se),ident(start_block)],exp[grammar(record_ptr),exp:ident(se),ident(nr_pages)]],exp:ident(start_block)],{}stmt[estmt[exp[grammar(assign),op_assi(+=),exp[grammar(record_ptr),exp:ident(se),ident(nr_pages)],exp:ident(nr_pages)]],st_return[exp:const:int(0)]],estmt(NONE)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(new_se),exp[grammar(call),exp:ident(kmalloc),exp:sizeof:exp:*ref:exp:ident(se),exp:ident(GFP_KERNEL)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(new_se),exp:ident(NULL)],st_return[exp:??(N/H)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(new_se),ident(start_page)],exp:ident(start_page)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(new_se),ident(nr_pages)],exp:ident(nr_pages)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(new_se),ident(start_block)],exp:ident(start_block)]],estmt[exp[grammar(call),exp:ident(list_add_tail),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(new_se),ident(list)],exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(sis),ident(extent_list)]]],st_return[exp:const:int(1)]]],def[fname(setup_swap_extents),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(sis),fulltype[typec(N/H)]],param[reg(),name(span),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(inode),exp[grammar(record_ptr),exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(sis),ident(swap_file)],ident(f_mapping)],ident(host)]]],sel_if[exp[grammar(call),exp:ident(S_ISBLK),exp[grammar(record_ptr),exp:ident(inode),ident(i_mode)]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(ret),exp[grammar(call),exp:ident(add_swap_extent),exp:ident(sis),exp:const:int(0),exp[grammar(record_ptr),exp:ident(sis),ident(max)],exp:const:int(0)]]],estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(span),exp[grammar(record_ptr),exp:ident(sis),ident(pages)]]],statem(N/H)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(blkbits),exp[grammar(record_ptr),exp:ident(inode),ident(i_blkbits)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(blocks_per_page),exp[grammar(binary_arith),aop(>>),exp:ident(PAGE_SIZE),exp:ident(blkbits)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(probe_block),exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(page_no),exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(last_block),exp[grammar(binary_arith),aop(>>),exp[grammar(call),exp:ident(i_size_read),exp:ident(inode)],exp:ident(blkbits)]]],while[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp[grammar(binary_arith),aop(+),exp:ident(probe_block),exp:ident(blocks_per_page)],exp:ident(last_block)],exp[grammar(binary_logi),logiop(??),exp:ident(page_no),exp[grammar(record_ptr),exp:ident(sis),ident(max)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(first_block),exp[grammar(call),exp:ident(bmap),exp:ident(inode),exp:ident(probe_block)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(first_block),exp:const:int(0)],statem(N/H),estmt(NONE)],sel_if[exp[grammar(binary_arith),aop(&),exp:ident(first_block),exp[grammar(binary_arith),aop(-),exp:ident(blocks_per_page),exp:const:int(1)]],{}stmt[estmt[exp:??(N/H)],statem(N/H)],estmt(NONE)],for[exp[grammar(assign),simple_assi(=),exp:ident(block_in_page),exp:const:int(1)],exp[grammar(binary_logi),logiop(??),exp:ident(block_in_page),exp:ident(blocks_per_page)],exp:??(N/H),{}stmt[statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(block),exp[grammar(call),exp:ident(bmap),exp:ident(inode),exp[grammar(binary_arith),aop(+),exp:ident(probe_block),exp:ident(block_in_page)]]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(block),exp:const:int(0)],statem(N/H),estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(block),exp[grammar(binary_arith),aop(+),exp:ident(first_block),exp:ident(block_in_page)]],{}stmt[estmt[exp:??(N/H)],statem(N/H)],estmt(NONE)]]],estmt[exp[grammar(assign),op_assi(N/H),exp:ident(first_block),exp[grammar(binary_arith),aop(-),exp:ident(PAGE_SHIFT),exp:ident(blkbits)]]],sel_if[exp:ident(page_no),{}stmt[sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(first_block),exp:ident(lowest_block)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(lowest_block),exp:ident(first_block)]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(first_block),exp:ident(highest_block)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(highest_block),exp:ident(first_block)]],estmt(NONE)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ret),exp[grammar(call),exp:ident(add_swap_extent),exp:ident(sis),exp:ident(page_no),exp:const:int(1),exp:ident(first_block)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(ret),exp:const:int(0)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),op_assi(+=),exp:ident(nr_extents),exp:ident(ret)]],estmt[exp:??(N/H)],estmt[exp[grammar(assign),op_assi(+=),exp:ident(probe_block),exp:ident(blocks_per_page)]],statem(N/H)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ret),exp:ident(nr_extents)]],estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(span),exp[grammar(binary_arith),aop(-),exp[grammar(binary_arith),aop(+),exp:const:int(1),exp:ident(highest_block)],exp:ident(lowest_block)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(page_no),exp:const:int(0)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(page_no),exp:const:int(1)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(sis),ident(max)],exp:ident(page_no)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(sis),ident(pages)],exp[grammar(binary_arith),aop(-),exp:ident(page_no),exp:const:int(1)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(sis),ident(highest_bit)],exp[grammar(binary_arith),aop(-),exp:ident(page_no),exp:const:int(1)]]],statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(ret),exp:??(N/H)]],statem(N/H)]],includeN[inc_elem(linux),inc_elem(backing-dev.h)],def[fname(page_queue_congested),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(page),fulltype[typec(N/H)]]],{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(BUG_ON),exp:??(N/H)]],sel_if[exp[grammar(call),exp:ident(PageSwapCache),exp:ident(page)],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(sis),exp[grammar(call),exp:ident(get_swap_info_struct),exp[grammar(call),exp:ident(swp_type),exp:ident(entry)]]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(bdi),exp[grammar(record_ptr),exp[grammar(record_ptr),exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(sis),ident(bdev)],ident(bd_inode)],ident(i_mapping)],ident(backing_dev_info)]]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(bdi),exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(page),ident(mapping)],ident(backing_dev_info)]]]],st_return[exp[grammar(call),exp:ident(bdi_write_congested),exp:ident(bdi)]]]],NCP(N/H),def[fname(swap_start),funtype[fulltype[typec(N/H)],param[reg(),name(swap),fulltype[typec(N/H)]],param[reg(),name(pos),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(mutex_lock),exp:&ref:exp:ident(swapon_mutex)]],sel_if[exp:??(N/H),st_return[exp:ident(SEQ_START_TOKEN)],estmt(NONE)],for[exp[grammar(assign),simple_assi(=),exp:ident(i),exp:const:int(0)],exp[grammar(binary_logi),logiop(??),exp:ident(i),exp:ident(nr_swapfiles)],exp:??(N/H),{}stmt[sel_if[exp[grammar(binary_logi),logiop(or),exp:??(N/H),exp:??(N/H)],statem(N/H),estmt(NONE)],sel_if[exp:??(N/H),st_return[exp:ident(ptr)],estmt(NONE)]]],st_return[exp:ident(NULL)]]],def[fname(swap_next),funtype[fulltype[typec(N/H)],param[reg(),name(swap),fulltype[typec(N/H)]],param[reg(),name(v),fulltype[typec(N/H)]],param[reg(),name(pos),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(v),exp:ident(SEQ_START_TOKEN)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ptr),exp:ident(swap_info)]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(ptr),exp:ident(v)]],estmt[exp:??(N/H)]]],for[expr(NONE),exp[grammar(binary_logi),logiop(??),exp:ident(ptr),exp:ident(endptr)],exp:??(N/H),{}stmt[sel_if[exp[grammar(binary_logi),logiop(or),exp:??(N/H),exp:??(N/H)],statem(N/H),estmt(NONE)],estmt[exp:??(N/H)],st_return[exp:ident(ptr)]]],st_return[exp:ident(NULL)]]],def[fname(swap_stop),funtype[fulltype[ctype[btype(void)]],param[reg(),name(swap),fulltype[typec(N/H)]],param[reg(),name(v),fulltype[typec(N/H)]]],{}stmt[estmt[exp[grammar(call),exp:ident(mutex_unlock),exp:&ref:exp:ident(swapon_mutex)]]]],def[fname(swap_show),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(swap),fulltype[typec(N/H)]],param[reg(),name(v),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(ptr),exp:ident(SEQ_START_TOKEN)],{}stmt[estmt[exp[grammar(call),exp:ident(seq_puts),exp:ident(swap),exp:const:string(Filename\t\t\t\tType\t\tSize\tUsed\tPriority\n)]],st_return[exp:const:int(0)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(file),exp[grammar(record_ptr),exp:ident(ptr),ident(swap_file)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(len),exp[grammar(call),exp:ident(seq_path),exp:ident(swap),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(file),ident(f_path)],exp:const:string( \t\n\\)]]],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(swap),exp:const:string(%*s%s\t%u\t%u\t%d\n),exp[grammar(cond3),exp[grammar(binary_logi),logiop(??),exp:ident(len),exp:const:int(40)],exp[grammar(binary_arith),aop(-),exp:const:int(40),exp:ident(len)],exp:const:int(1)],exp:const:string( ),exp[grammar(cond3),exp[grammar(call),exp:ident(S_ISBLK),exp[grammar(record_ptr),exp[grammar(record_ptr),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(file),ident(f_path)],ident(dentry)],ident(d_inode)],ident(i_mode)]],exp:const:string(partition),exp:const:string(file\t)],exp[grammar(binary_arith),aop(<<),exp[grammar(record_ptr),exp:ident(ptr),ident(pages)],exp[grammar(binary_arith),aop(-),exp:ident(PAGE_SHIFT),exp:const:int(10)]],exp[grammar(binary_arith),aop(<<),exp[grammar(record_ptr),exp:ident(ptr),ident(inuse_pages)],exp[grammar(binary_arith),aop(-),exp:ident(PAGE_SHIFT),exp:const:int(10)]],exp[grammar(record_ptr),exp:ident(ptr),ident(prio)]]],st_return[exp:const:int(0)]]],decl(N/H),def[fname(swaps_open),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(inode),fulltype[typec(N/H)]],param[reg(),name(file),fulltype[typec(N/H)]]],{}stmt[st_return[exp[grammar(call),exp:ident(seq_open),exp:ident(file),exp:&ref:exp:ident(swaps_op)]]]],decl(N/H),NCP(N/H),mtop(N/H),NCP(N/H),def[fname(si_swapinfo),funtype[fulltype[ctype[btype(void)]],param[reg(),name(val),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(swap_lock)]],for[exp[grammar(assign),simple_assi(=),exp:ident(i),exp:const:int(0)],exp[grammar(binary_logi),logiop(??),exp:ident(i),exp:ident(nr_swapfiles)],exp:??(N/H),{}stmt[sel_if[exp[grammar(binary_logi),logiop(or),exp:??(N/H),exp[grammar(binary_arith),aop(&),exp[grammar(record_acc),exp[grammar(array_acc),exp:ident(swap_info),exp:ident(i)],ident(flags)],exp:ident(SWP_WRITEOK)]],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),op_assi(+=),exp:ident(nr_to_be_unused),exp[grammar(record_acc),exp[grammar(array_acc),exp:ident(swap_info),exp:ident(i)],ident(inuse_pages)]]]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(val),ident(freeswap)],exp[grammar(binary_arith),aop(+),exp:ident(nr_swap_pages),exp:ident(nr_to_be_unused)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(val),ident(totalswap)],exp[grammar(binary_arith),aop(+),exp:ident(total_swap_pages),exp:ident(nr_to_be_unused)]]],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]]]],def[fname(swap_duplicate),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(entry),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),sel_if[exp[grammar(call),exp:ident(is_migration_entry),exp:ident(entry)],st_return[exp:const:int(1)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(type),exp[grammar(call),exp:ident(swp_type),exp:ident(entry)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(type),exp:ident(nr_swapfiles)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(p),exp[grammar(binary_arith),aop(+),exp:ident(type),exp:ident(swap_info)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(offset),exp[grammar(call),exp:ident(swp_offset),exp:ident(entry)]]],estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(swap_lock)]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp:ident(offset),exp[grammar(record_ptr),exp:ident(p),ident(max)]],exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(p),ident(swap_map)],exp:ident(offset)]],{}stmt[sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(p),ident(swap_map)],exp:ident(offset)],exp[grammar(binary_arith),aop(-),exp:ident(SWAP_MAP_MAX),exp:const:int(1)]],{}stmt[estmt[exp:??(N/H)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(result),exp:const:int(1)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(p),ident(swap_map)],exp:ident(offset)],exp:ident(SWAP_MAP_MAX)],{}stmt[sel_if[exp[grammar(binary_logi),logiop(??),exp:??(N/H),exp:const:int(5)],estmt[exp[grammar(call),exp:ident(printk),exp:const:other(N/H)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(p),ident(swap_map)],exp:ident(offset)],exp:ident(SWAP_MAP_MAX)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(result),exp:const:int(1)]]],estmt(NONE)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]],statem(N/H),statem(N/H),statem(N/H)]],def[fname(get_swap_info_struct),funtype[fulltype[typec(N/H)],param[reg(),name(type),fulltype[ctype[btype[itype[sgn(unsigned),base(int)]]]]]],{}stmt[st_return[exp[grammar(&ref),grammar(exp),grammar(array_acc),exp:ident(swap_info),exp:ident(type)]]]],def[fname(valid_swaphandles),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(entry),fulltype[typec(N/H)]],param[reg(),name(offset),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),sel_if[exp:??(N/H),st_return[exp:const:int(0)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(si),exp[grammar(&ref),grammar(exp),grammar(array_acc),exp:ident(swap_info),exp[grammar(call),exp:ident(swp_type),exp:ident(entry)]]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(target),exp[grammar(call),exp:ident(swp_offset),exp:ident(entry)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(base),exp[grammar(binary_arith),aop(<<),exp[grammar(binary_arith),aop(>>),exp:ident(target),exp:ident(our_page_cluster)],exp:ident(our_page_cluster)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(end),exp[grammar(binary_arith),aop(+),exp:ident(base),exp[grammar(binary_arith),aop(<<),exp:const:int(1),exp:ident(our_page_cluster)]]]],sel_if[exp:??(N/H),estmt[exp:??(N/H)],estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(swap_lock)]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(end),exp[grammar(record_ptr),exp:ident(si),ident(max)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(end),exp[grammar(record_ptr),exp:ident(si),ident(max)]]],estmt(NONE)],for[exp[grammar(assign),simple_assi(=),exp:ident(toff),exp:ident(target)],exp[grammar(binary_logi),logiop(??),exp:??(N/H),exp:ident(end)],exp:??(N/H),{}stmt[sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(si),ident(swap_map)],exp:ident(toff)],exp:ident(SWAP_MAP_BAD)],statem(N/H),estmt(NONE)]]],for[exp[grammar(assign),simple_assi(=),exp:ident(toff),exp:ident(target)],exp[grammar(binary_logi),logiop(??),exp:??(N/H),exp:ident(base)],exp:??(N/H),{}stmt[sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(si),ident(swap_map)],exp:ident(toff)],exp:ident(SWAP_MAP_BAD)],statem(N/H),estmt(NONE)]]],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]],estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(offset),exp:??(N/H)]],st_return[exp[grammar(cond3),exp:ident(nr_pages),exp:??(N/H),exp:const:int(0)]]]]]
[Main] terms that changed: 
[Diff] abstracting concrete update:exp[grammar(call),exp:ident(seq_path),exp:ident(swap),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(file),ident(f_path)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(file),ident(f_path)],ident(dentry)],exp:const:string( \t\n\\)] ==> exp[grammar(call),exp:ident(seq_path),exp:ident(swap),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(file),ident(f_path)],exp:const:string( \t\n\\)]
[Diff] resulting abstract updates: 16
[Diff] abstracting concrete update:exp[grammar(assign),simple_assi(=),exp:ident(len),exp[grammar(call),exp:ident(seq_path),exp:ident(swap),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(file),ident(f_path)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(file),ident(f_path)],ident(dentry)],exp:const:string( \t\n\\)]] ==> exp[grammar(assign),simple_assi(=),exp:ident(len),exp[grammar(call),exp:ident(seq_path),exp:ident(swap),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(file),ident(f_path)],exp:const:string( \t\n\\)]]
[Diff] resulting abstract updates: 1
[Diff] abstracting concrete update:estmt[exp[grammar(assign),simple_assi(=),exp:ident(len),exp[grammar(call),exp:ident(seq_path),exp:ident(swap),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(file),ident(f_path)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(file),ident(f_path)],ident(dentry)],exp:const:string( \t\n\\)]]] ==> estmt[exp[grammar(assign),simple_assi(=),exp:ident(len),exp[grammar(call),exp:ident(seq_path),exp:ident(swap),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(file),ident(f_path)],exp:const:string( \t\n\\)]]]
[Diff] resulting abstract updates: 1
[Diff] abstracting concrete update:{}stmt[statem(N/H),statem(N/H),statem(N/H),sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(ptr),exp:ident(SEQ_START_TOKEN)],{}stmt[estmt[exp[grammar(call),exp:ident(seq_puts),exp:ident(swap),exp:const:string(Filename\t\t\t\tType\t\tSize\tUsed\tPriority\n)]],st_return[exp:const:int(0)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(file),exp[grammar(record_ptr),exp:ident(ptr),ident(swap_file)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(len),exp[grammar(call),exp:ident(seq_path),exp:ident(swap),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(file),ident(f_path)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(file),ident(f_path)],ident(dentry)],exp:const:string( \t\n\\)]]],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(swap),exp:const:string(%*s%s\t%u\t%u\t%d\n),exp[grammar(cond3),exp[grammar(binary_logi),logiop(??),exp:ident(len),exp:const:int(40)],exp[grammar(binary_arith),aop(-),exp:const:int(40),exp:ident(len)],exp:const:int(1)],exp:const:string( ),exp[grammar(cond3),exp[grammar(call),exp:ident(S_ISBLK),exp[grammar(record_ptr),exp[grammar(record_ptr),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(file),ident(f_path)],ident(dentry)],ident(d_inode)],ident(i_mode)]],exp:const:string(partition),exp:const:string(file\t)],exp[grammar(binary_arith),aop(<<),exp[grammar(record_ptr),exp:ident(ptr),ident(pages)],exp[grammar(binary_arith),aop(-),exp:ident(PAGE_SHIFT),exp:const:int(10)]],exp[grammar(binary_arith),aop(<<),exp[grammar(record_ptr),exp:ident(ptr),ident(inuse_pages)],exp[grammar(binary_arith),aop(-),exp:ident(PAGE_SHIFT),exp:const:int(10)]],exp[grammar(record_ptr),exp:ident(ptr),ident(prio)]]],st_return[exp:const:int(0)]] ==> {}stmt[statem(N/H),statem(N/H),statem(N/H),sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(ptr),exp:ident(SEQ_START_TOKEN)],{}stmt[estmt[exp[grammar(call),exp:ident(seq_puts),exp:ident(swap),exp:const:string(Filename\t\t\t\tType\t\tSize\tUsed\tPriority\n)]],st_return[exp:const:int(0)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(file),exp[grammar(record_ptr),exp:ident(ptr),ident(swap_file)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(len),exp[grammar(call),exp:ident(seq_path),exp:ident(swap),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(file),ident(f_path)],exp:const:string( \t\n\\)]]],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(swap),exp:const:string(%*s%s\t%u\t%u\t%d\n),exp[grammar(cond3),exp[grammar(binary_logi),logiop(??),exp:ident(len),exp:const:int(40)],exp[grammar(binary_arith),aop(-),exp:const:int(40),exp:ident(len)],exp:const:int(1)],exp:const:string( ),exp[grammar(cond3),exp[grammar(call),exp:ident(S_ISBLK),exp[grammar(record_ptr),exp[grammar(record_ptr),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(file),ident(f_path)],ident(dentry)],ident(d_inode)],ident(i_mode)]],exp:const:string(partition),exp:const:string(file\t)],exp[grammar(binary_arith),aop(<<),exp[grammar(record_ptr),exp:ident(ptr),ident(pages)],exp[grammar(binary_arith),aop(-),exp:ident(PAGE_SHIFT),exp:const:int(10)]],exp[grammar(binary_arith),aop(<<),exp[grammar(record_ptr),exp:ident(ptr),ident(inuse_pages)],exp[grammar(binary_arith),aop(-),exp:ident(PAGE_SHIFT),exp:const:int(10)]],exp[grammar(record_ptr),exp:ident(ptr),ident(prio)]]],st_return[exp:const:int(0)]]
[Diff] resulting abstract updates: 1
[Diff] abstracting concrete update:def[fname(swap_show),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(swap),fulltype[typec(N/H)]],param[reg(),name(v),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(ptr),exp:ident(SEQ_START_TOKEN)],{}stmt[estmt[exp[grammar(call),exp:ident(seq_puts),exp:ident(swap),exp:const:string(Filename\t\t\t\tType\t\tSize\tUsed\tPriority\n)]],st_return[exp:const:int(0)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(file),exp[grammar(record_ptr),exp:ident(ptr),ident(swap_file)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(len),exp[grammar(call),exp:ident(seq_path),exp:ident(swap),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(file),ident(f_path)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(file),ident(f_path)],ident(dentry)],exp:const:string( \t\n\\)]]],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(swap),exp:const:string(%*s%s\t%u\t%u\t%d\n),exp[grammar(cond3),exp[grammar(binary_logi),logiop(??),exp:ident(len),exp:const:int(40)],exp[grammar(binary_arith),aop(-),exp:const:int(40),exp:ident(len)],exp:const:int(1)],exp:const:string( ),exp[grammar(cond3),exp[grammar(call),exp:ident(S_ISBLK),exp[grammar(record_ptr),exp[grammar(record_ptr),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(file),ident(f_path)],ident(dentry)],ident(d_inode)],ident(i_mode)]],exp:const:string(partition),exp:const:string(file\t)],exp[grammar(binary_arith),aop(<<),exp[grammar(record_ptr),exp:ident(ptr),ident(pages)],exp[grammar(binary_arith),aop(-),exp:ident(PAGE_SHIFT),exp:const:int(10)]],exp[grammar(binary_arith),aop(<<),exp[grammar(record_ptr),exp:ident(ptr),ident(inuse_pages)],exp[grammar(binary_arith),aop(-),exp:ident(PAGE_SHIFT),exp:const:int(10)]],exp[grammar(record_ptr),exp:ident(ptr),ident(prio)]]],st_return[exp:const:int(0)]]] ==> def[fname(swap_show),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(swap),fulltype[typec(N/H)]],param[reg(),name(v),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(ptr),exp:ident(SEQ_START_TOKEN)],{}stmt[estmt[exp[grammar(call),exp:ident(seq_puts),exp:ident(swap),exp:const:string(Filename\t\t\t\tType\t\tSize\tUsed\tPriority\n)]],st_return[exp:const:int(0)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(file),exp[grammar(record_ptr),exp:ident(ptr),ident(swap_file)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(len),exp[grammar(call),exp:ident(seq_path),exp:ident(swap),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(file),ident(f_path)],exp:const:string( \t\n\\)]]],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(swap),exp:const:string(%*s%s\t%u\t%u\t%d\n),exp[grammar(cond3),exp[grammar(binary_logi),logiop(??),exp:ident(len),exp:const:int(40)],exp[grammar(binary_arith),aop(-),exp:const:int(40),exp:ident(len)],exp:const:int(1)],exp:const:string( ),exp[grammar(cond3),exp[grammar(call),exp:ident(S_ISBLK),exp[grammar(record_ptr),exp[grammar(record_ptr),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(file),ident(f_path)],ident(dentry)],ident(d_inode)],ident(i_mode)]],exp:const:string(partition),exp:const:string(file\t)],exp[grammar(binary_arith),aop(<<),exp[grammar(record_ptr),exp:ident(ptr),ident(pages)],exp[grammar(binary_arith),aop(-),exp:ident(PAGE_SHIFT),exp:const:int(10)]],exp[grammar(binary_arith),aop(<<),exp[grammar(record_ptr),exp:ident(ptr),ident(inuse_pages)],exp[grammar(binary_arith),aop(-),exp:ident(PAGE_SHIFT),exp:const:int(10)]],exp[grammar(record_ptr),exp:ident(ptr),ident(prio)]]],st_return[exp:const:int(0)]]]
[Diff] resulting abstract updates: 1
[Diff] abstracting concrete update:prg2[includeN[inc_elem(linux),inc_elem(mm.h)],includeN[inc_elem(linux),inc_elem(hugetlb.h)],includeN[inc_elem(linux),inc_elem(mman.h)],includeN[inc_elem(linux),inc_elem(slab.h)],includeN[inc_elem(linux),inc_elem(kernel_stat.h)],includeN[inc_elem(linux),inc_elem(swap.h)],includeN[inc_elem(linux),inc_elem(vmalloc.h)],includeN[inc_elem(linux),inc_elem(pagemap.h)],includeN[inc_elem(linux),inc_elem(namei.h)],includeN[inc_elem(linux),inc_elem(shm.h)],includeN[inc_elem(linux),inc_elem(blkdev.h)],includeN[inc_elem(linux),inc_elem(writeback.h)],includeN[inc_elem(linux),inc_elem(proc_fs.h)],includeN[inc_elem(linux),inc_elem(seq_file.h)],includeN[inc_elem(linux),inc_elem(init.h)],includeN[inc_elem(linux),inc_elem(module.h)],includeN[inc_elem(linux),inc_elem(rmap.h)],includeN[inc_elem(linux),inc_elem(security.h)],includeN[inc_elem(linux),inc_elem(backing-dev.h)],includeN[inc_elem(linux),inc_elem(mutex.h)],includeN[inc_elem(linux),inc_elem(capability.h)],includeN[inc_elem(linux),inc_elem(syscalls.h)],includeN[inc_elem(linux),inc_elem(memcontrol.h)],includeN[inc_elem(asm),inc_elem(pgtable.h)],includeN[inc_elem(asm),inc_elem(tlbflush.h)],includeN[inc_elem(linux),inc_elem(swapops.h)],mtop(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),def[fname(swap_unplug_io_fn),funtype[fulltype[ctype[btype(void)]],param[reg(),name(unused_bdi),fulltype[typec(N/H)]],param[reg(),name(page),fulltype[typec(N/H)]]],{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(down_read),exp:&ref:exp:ident(swap_unplug_sem)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(entry),ident(val)],exp[grammar(call),exp:ident(page_private),exp:ident(page)]]],sel_if[exp[grammar(call),exp:ident(PageSwapCache),exp:ident(page)],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(WARN_ON),exp[grammar(binary_logi),logiop(??),exp[grammar(call),exp:ident(page_count),exp:ident(page)],exp:const:int(1)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(bdi),exp[grammar(record_ptr),exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(bdev),ident(bd_inode)],ident(i_mapping)],ident(backing_dev_info)]]],estmt[exp[grammar(call),exp:ident(blk_run_backing_dev),exp:ident(bdi),exp:ident(page)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(up_read),exp:&ref:exp:ident(swap_unplug_sem)]]]],define(N/H),define(N/H),def[fname(scan_swap_map),funtype[fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]],param[reg(),name(si),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),op_assi(+=),exp[grammar(record_ptr),exp:ident(si),ident(flags)],exp:ident(SWP_SCANNING)]],sel_if[exp[grammar(call),exp:ident(unlikely),exp:??(N/H)],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(si),ident(cluster_nr)],exp[grammar(binary_arith),aop(-),exp:ident(SWAPFILE_CLUSTER),exp:const:int(1)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(binary_arith),aop(-),exp[grammar(record_ptr),exp:ident(si),ident(pages)],exp[grammar(record_ptr),exp:ident(si),ident(inuse_pages)]],exp:ident(SWAPFILE_CLUSTER)],statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(offset),exp[grammar(record_ptr),exp:ident(si),ident(lowest_bit)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(last_in_cluster),exp[grammar(binary_arith),aop(-),exp[grammar(binary_arith),aop(+),exp:ident(offset),exp:ident(SWAPFILE_CLUSTER)],exp:const:int(1)]]],for[expr(NONE),exp[grammar(binary_logi),logiop(??),exp:ident(last_in_cluster),exp[grammar(record_ptr),exp:ident(si),ident(highest_bit)]],exp:??(N/H),{}stmt[sel_if[exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(si),ident(swap_map)],exp:ident(offset)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(last_in_cluster),exp[grammar(binary_arith),aop(+),exp:ident(offset),exp:ident(SWAPFILE_CLUSTER)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(offset),exp:ident(last_in_cluster)],{}stmt[estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(swap_lock)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(si),ident(cluster_next)],exp[grammar(binary_arith),aop(+),exp[grammar(binary_arith),aop(-),exp:ident(offset),exp:ident(SWAPFILE_CLUSTER)],exp:const:int(1)]]],statem(N/H)],estmt(NONE)]],sel_if[exp[grammar(call),exp:ident(unlikely),exp[grammar(binary_logi),logiop(??),exp:??(N/H),exp:const:int(0)]],{}stmt[estmt[exp[grammar(call),exp:ident(cond_resched)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(latency_ration),exp:ident(LATENCY_LIMIT)]]],estmt(NONE)]]],estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(swap_lock)]],statem(N/H)],estmt(NONE)],estmt[exp:??(N/H)],statem(N/H),sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(offset),exp[grammar(record_ptr),exp:ident(si),ident(highest_bit)]],statem(N/H),estmt(NONE)],statem(N/H),sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],sel_if[exp:??(N/H),{}stmt[sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(offset),exp[grammar(record_ptr),exp:ident(si),ident(lowest_bit)]],estmt[exp:??(N/H)],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(offset),exp[grammar(record_ptr),exp:ident(si),ident(highest_bit)]],estmt[exp:??(N/H)],estmt(NONE)],estmt[exp:??(N/H)],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(si),ident(inuse_pages)],exp[grammar(record_ptr),exp:ident(si),ident(pages)]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(si),ident(lowest_bit)],exp[grammar(record_ptr),exp:ident(si),ident(max)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(si),ident(highest_bit)],exp:const:int(0)]]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(si),ident(swap_map)],exp:ident(offset)],exp:const:int(1)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(si),ident(cluster_next)],exp[grammar(binary_arith),aop(+),exp:ident(offset),exp:const:int(1)]]],estmt[exp[grammar(assign),op_assi(-=),exp[grammar(record_ptr),exp:ident(si),ident(flags)],exp:ident(SWP_SCANNING)]],st_return[exp:ident(offset)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]],while[exp[grammar(binary_logi),logiop(??),exp:??(N/H),exp[grammar(record_ptr),exp:ident(si),ident(highest_bit)]],{}stmt[sel_if[exp:??(N/H),{}stmt[estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(swap_lock)]],statem(N/H)],estmt(NONE)],sel_if[exp[grammar(call),exp:ident(unlikely),exp[grammar(binary_logi),logiop(??),exp:??(N/H),exp:const:int(0)]],{}stmt[estmt[exp[grammar(call),exp:ident(cond_resched)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(latency_ration),exp:ident(LATENCY_LIMIT)]]],estmt(NONE)]]],estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(swap_lock)]],statem(N/H),statem(N/H),st_return[exp:const:int(0)]]],def[fname(get_swap_page),funtype[fulltype[typec(N/H)],param[reg(),name(),fulltype[ctype[btype(void)]]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(swap_lock)]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(nr_swap_pages),exp:const:int(0)],statem(N/H),estmt(NONE)],estmt[exp:??(N/H)],for[exp[grammar(assign),simple_assi(=),exp:ident(type),exp[grammar(record_acc),exp:ident(swap_list),ident(next)]],exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp:ident(type),exp:const:int(0)],exp[grammar(binary_logi),logiop(??),exp:ident(wrapped),exp:const:int(2)]],exp[grammar(assign),simple_assi(=),exp:ident(type),exp:ident(next)],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(si),exp[grammar(binary_arith),aop(+),exp:ident(swap_info),exp:ident(type)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(next),exp[grammar(record_ptr),exp:ident(si),ident(next)]]],sel_if[exp[grammar(binary_logi),logiop(or),exp[grammar(binary_logi),logiop(??),exp:ident(next),exp:const:int(0)],exp[grammar(binary_logi),logiop(and),exp:??(N/H),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(si),ident(prio)],exp[grammar(record_acc),exp[grammar(array_acc),exp:ident(swap_info),exp:ident(next)],ident(prio)]]]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(next),exp[grammar(record_acc),exp:ident(swap_list),ident(head)]]],estmt[exp:??(N/H)]],estmt(NONE)],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(swap_list),ident(next)],exp:ident(next)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(offset),exp[grammar(call),exp:ident(scan_swap_map),exp:ident(si)]]],sel_if[exp:ident(offset),{}stmt[estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]],st_return[exp[grammar(call),exp:ident(swp_entry),exp:ident(type),exp:ident(offset)]]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(next),exp[grammar(record_acc),exp:ident(swap_list),ident(next)]]]]],estmt[exp:??(N/H)],statem(N/H),st_return[exp:??(N/H)]]],def[fname(get_swap_page_of_type),funtype[fulltype[typec(N/H)],param[reg(),name(type),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(swap_lock)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(si),exp[grammar(binary_arith),aop(+),exp:ident(swap_info),exp:ident(type)]]],sel_if[exp[grammar(binary_arith),aop(&),exp[grammar(record_ptr),exp:ident(si),ident(flags)],exp:ident(SWP_WRITEOK)],{}stmt[estmt[exp:??(N/H)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(offset),exp[grammar(call),exp:ident(scan_swap_map),exp:ident(si)]]],sel_if[exp:ident(offset),{}stmt[estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]],st_return[exp[grammar(call),exp:ident(swp_entry),exp:ident(type),exp:ident(offset)]]],estmt(NONE)],estmt[exp:??(N/H)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]],st_return[exp:??(N/H)]]],def[fname(swap_info_get),funtype[fulltype[typec(N/H)],param[reg(),name(entry),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(type),exp[grammar(call),exp:ident(swp_type),exp:ident(entry)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(type),exp:ident(nr_swapfiles)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(p),exp[grammar(&ref),grammar(exp),grammar(array_acc),exp:ident(swap_info),exp:ident(type)]]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(offset),exp[grammar(call),exp:ident(swp_offset),exp:ident(entry)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(offset),exp[grammar(record_ptr),exp:ident(p),ident(max)]],statem(N/H),estmt(NONE)],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(swap_lock)]],st_return[exp:ident(p)],statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H)]],def[fname(swap_entry_free),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(p),fulltype[typec(N/H)]],param[reg(),name(offset),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]]],{}stmt[statem(N/H),sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(count),exp:ident(SWAP_MAP_MAX)],{}stmt[estmt[exp:??(N/H)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(p),ident(swap_map)],exp:ident(offset)],exp:ident(count)]],sel_if[exp:??(N/H),{}stmt[sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(offset),exp[grammar(record_ptr),exp:ident(p),ident(lowest_bit)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(p),ident(lowest_bit)],exp:ident(offset)]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(offset),exp[grammar(record_ptr),exp:ident(p),ident(highest_bit)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(p),ident(highest_bit)],exp:ident(offset)]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(p),ident(prio)],exp[grammar(record_acc),exp[grammar(array_acc),exp:ident(swap_info),exp[grammar(record_acc),exp:ident(swap_list),ident(next)]],ident(prio)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(swap_list),ident(next)],exp[grammar(binary_arith),aop(-),exp:ident(p),exp:ident(swap_info)]]],estmt(NONE)],estmt[exp:??(N/H)],estmt[exp:??(N/H)]],estmt(NONE)]],estmt(NONE)],st_return[exp:ident(count)]]],def[fname(swap_free),funtype[fulltype[ctype[btype(void)]],param[reg(),name(entry),fulltype[typec(N/H)]]],{}stmt[statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(p),exp[grammar(call),exp:ident(swap_info_get),exp:ident(entry)]]],sel_if[exp:ident(p),{}stmt[estmt[exp[grammar(call),exp:ident(swap_entry_free),exp:ident(p),exp[grammar(call),exp:ident(swp_offset),exp:ident(entry)]]],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]]],estmt(NONE)]]],def[fname(page_swapcount),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(page),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(entry),ident(val)],exp[grammar(call),exp:ident(page_private),exp:ident(page)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(p),exp[grammar(call),exp:ident(swap_info_get),exp:ident(entry)]]],sel_if[exp:ident(p),{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(count),exp[grammar(binary_arith),aop(-),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(p),ident(swap_map)],exp[grammar(call),exp:ident(swp_offset),exp:ident(entry)]],exp:const:int(1)]]],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]]],estmt(NONE)],st_return[exp:ident(count)]]],def[fname(can_share_swap_page),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(page),fulltype[typec(N/H)]]],{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(BUG_ON),exp:??(N/H)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(count),exp[grammar(call),exp:ident(page_mapcount),exp:ident(page)]]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp:ident(count),exp:const:int(1)],exp[grammar(call),exp:ident(PageSwapCache),exp:ident(page)]],estmt[exp[grammar(assign),op_assi(+=),exp:ident(count),exp[grammar(call),exp:ident(page_swapcount),exp:ident(page)]]],estmt(NONE)],st_return[exp[grammar(binary_logi),logiop(eq),exp:ident(count),exp:const:int(1)]]]],def[fname(remove_exclusive_swap_page),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(page),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(BUG_ON),exp[grammar(call),exp:ident(PagePrivate),exp:ident(page)]]],estmt[exp[grammar(call),exp:ident(BUG_ON),exp:??(N/H)]],sel_if[exp:??(N/H),st_return[exp:const:int(0)],estmt(NONE)],sel_if[exp[grammar(call),exp:ident(PageWriteback),exp:ident(page)],st_return[exp:const:int(0)],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(call),exp:ident(page_count),exp:ident(page)],exp:const:int(2)],st_return[exp:const:int(0)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(entry),ident(val)],exp[grammar(call),exp:ident(page_private),exp:ident(page)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(p),exp[grammar(call),exp:ident(swap_info_get),exp:ident(entry)]]],sel_if[exp:??(N/H),st_return[exp:const:int(0)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(retval),exp:const:int(0)]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(p),ident(swap_map)],exp[grammar(call),exp:ident(swp_offset),exp:ident(entry)]],exp:const:int(1)],{}stmt[estmt[exp[grammar(call),exp:ident(write_lock_irq),exp[grammar(&ref),grammar(exp),grammar(record_acc),exp:ident(swapper_space),ident(tree_lock)]]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(eq),exp[grammar(call),exp:ident(page_count),exp:ident(page)],exp:const:int(2)],exp:??(N/H)],{}stmt[estmt[exp[grammar(call),exp:ident(__delete_from_swap_cache),exp:ident(page)]],estmt[exp[grammar(call),exp:ident(SetPageDirty),exp:ident(page)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(retval),exp:const:int(1)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(write_unlock_irq),exp[grammar(&ref),grammar(exp),grammar(record_acc),exp:ident(swapper_space),ident(tree_lock)]]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]],sel_if[exp:ident(retval),{}stmt[estmt[exp[grammar(call),exp:ident(swap_free),exp:ident(entry)]],estmt[exp[grammar(call),exp:ident(page_cache_release),exp:ident(page)]]],estmt(NONE)],st_return[exp:ident(retval)]]],def[fname(free_swap_and_cache),funtype[fulltype[ctype[btype(void)]],param[reg(),name(entry),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp[grammar(call),exp:ident(is_migration_entry),exp:ident(entry)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(p),exp[grammar(call),exp:ident(swap_info_get),exp:ident(entry)]]],sel_if[exp:ident(p),{}stmt[sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(call),exp:ident(swap_entry_free),exp:ident(p),exp[grammar(call),exp:ident(swp_offset),exp:ident(entry)]],exp:const:int(1)],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(page),exp[grammar(call),exp:ident(find_get_page),exp:&ref:exp:ident(swapper_space),exp[grammar(record_acc),exp:ident(entry),ident(val)]]]],sel_if[exp[grammar(binary_logi),logiop(and),exp:ident(page),exp[grammar(call),exp:ident(unlikely),exp[grammar(call),exp:ident(TestSetPageLocked),exp:ident(page)]]],{}stmt[estmt[exp[grammar(call),exp:ident(page_cache_release),exp:ident(page)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(page),exp:ident(NULL)]]],estmt(NONE)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]]],estmt(NONE)],sel_if[exp:ident(page),{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(BUG_ON),exp[grammar(call),exp:ident(PagePrivate),exp:ident(page)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(one_user),exp[grammar(binary_logi),logiop(eq),exp[grammar(call),exp:ident(page_count),exp:ident(page)],exp:const:int(2)]]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(and),exp[grammar(call),exp:ident(PageSwapCache),exp:ident(page)],exp:??(N/H)],exp[grammar(binary_logi),logiop(or),exp:ident(one_user),exp[grammar(call),exp:ident(vm_swap_full)]]],{}stmt[estmt[exp[grammar(call),exp:ident(delete_from_swap_cache),exp:ident(page)]],estmt[exp[grammar(call),exp:ident(SetPageDirty),exp:ident(page)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(unlock_page),exp:ident(page)]],estmt[exp[grammar(call),exp:ident(page_cache_release),exp:ident(page)]]],estmt(NONE)]]],def[fname(swap_type_of),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(device),fulltype[typec(N/H)]],param[reg(),name(offset),fulltype[typec(N/H)]],param[reg(),name(bdev_p),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp:ident(device),estmt[exp[grammar(assign),simple_assi(=),exp:ident(bdev),exp[grammar(call),exp:ident(bdget),exp:ident(device)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(swap_lock)]],for[exp[grammar(assign),simple_assi(=),exp:ident(i),exp:const:int(0)],exp[grammar(binary_logi),logiop(??),exp:ident(i),exp:ident(nr_swapfiles)],exp:??(N/H),{}stmt[statem(N/H),sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],sel_if[exp:??(N/H),{}stmt[sel_if[exp:ident(bdev_p),estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(bdev_p),exp[grammar(record_ptr),exp:ident(sis),ident(bdev)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]],st_return[exp:ident(i)]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(bdev),exp[grammar(record_ptr),exp:ident(sis),ident(bdev)]],{}stmt[statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(se),exp[grammar(call),exp:ident(list_entry),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(sis),ident(extent_list)],ident(next)],argtype(N/H),exp:ident(list)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(se),ident(start_block)],exp:ident(offset)],{}stmt[sel_if[exp:ident(bdev_p),estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(bdev_p),exp[grammar(record_ptr),exp:ident(sis),ident(bdev)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]],estmt[exp[grammar(call),exp:ident(bdput),exp:ident(bdev)]],st_return[exp:ident(i)]],estmt(NONE)]],estmt(NONE)]]],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]],sel_if[exp:ident(bdev),estmt[exp[grammar(call),exp:ident(bdput),exp:ident(bdev)]],estmt(NONE)],st_return[exp:??(N/H)]]],def[fname(count_swap_pages),funtype[fulltype[ctype[btype[itype[sgn(unsigned),base(int)]]]],param[reg(),name(type),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(free),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[statem(N/H),sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(type),exp:ident(nr_swapfiles)],{}stmt[estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(swap_lock)]],sel_if[exp[grammar(binary_arith),aop(&),exp[grammar(record_acc),exp[grammar(array_acc),exp:ident(swap_info),exp:ident(type)],ident(flags)],exp:ident(SWP_WRITEOK)],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(n),exp[grammar(record_acc),exp[grammar(array_acc),exp:ident(swap_info),exp:ident(type)],ident(pages)]]],sel_if[exp:ident(free),estmt[exp[grammar(assign),op_assi(-=),exp:ident(n),exp[grammar(record_acc),exp[grammar(array_acc),exp:ident(swap_info),exp:ident(type)],ident(inuse_pages)]]],estmt(NONE)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]]],estmt(NONE)],st_return[exp:ident(n)]]],def[fname(unuse_pte),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(vma),fulltype[typec(N/H)]],param[reg(),name(pmd),fulltype[typec(N/H)]],param[reg(),name(addr),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(entry),fulltype[typec(N/H)]],param[reg(),name(page),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),sel_if[exp[grammar(call),exp:ident(mem_cgroup_charge),exp:ident(page),exp[grammar(record_ptr),exp:ident(vma),ident(vm_mm)],exp:ident(GFP_KERNEL)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ret),exp:??(N/H)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(pte),exp[grammar(call),exp:ident(pte_offset_map_lock),exp[grammar(record_ptr),exp:ident(vma),ident(vm_mm)],exp:ident(pmd),exp:ident(addr),exp:&ref:exp:ident(ptl)]]],sel_if[exp[grammar(call),exp:ident(unlikely),exp:??(N/H)],{}stmt[sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(ret),exp:const:int(0)],estmt[exp[grammar(call),exp:ident(mem_cgroup_uncharge_page),exp:ident(page)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ret),exp:const:int(0)]],statem(N/H)],estmt(NONE)],estmt[exp[grammar(call),exp:ident(inc_mm_counter),exp[grammar(record_ptr),exp:ident(vma),ident(vm_mm)],exp:ident(anon_rss)]],estmt[exp[grammar(call),exp:ident(get_page),exp:ident(page)]],estmt[exp[grammar(call),exp:ident(set_pte_at),exp[grammar(record_ptr),exp:ident(vma),ident(vm_mm)],exp:ident(addr),exp:ident(pte),exp[grammar(call),exp:ident(pte_mkold),exp[grammar(call),exp:ident(mk_pte),exp:ident(page),exp[grammar(record_ptr),exp:ident(vma),ident(vm_page_prot)]]]]],estmt[exp[grammar(call),exp:ident(page_add_anon_rmap),exp:ident(page),exp:ident(vma),exp:ident(addr)]],estmt[exp[grammar(call),exp:ident(swap_free),exp:ident(entry)]],estmt[exp[grammar(call),exp:ident(activate_page),exp:ident(page)]],statem(N/H),st_return[exp:ident(ret)]]],def[fname(unuse_pte_range),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(vma),fulltype[typec(N/H)]],param[reg(),name(pmd),fulltype[typec(N/H)]],param[reg(),name(addr),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(end),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(entry),fulltype[typec(N/H)]],param[reg(),name(page),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(pte),exp[grammar(call),exp:ident(pte_offset_map),exp:ident(pmd),exp:ident(addr)]]],statem(N/H),estmt[exp[grammar(call),exp:ident(pte_unmap),exp[grammar(binary_arith),aop(-),exp:ident(pte),exp:const:int(1)]]],statem(N/H)]],def[fname(unuse_pmd_range),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(vma),fulltype[typec(N/H)]],param[reg(),name(pud),fulltype[typec(N/H)]],param[reg(),name(addr),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(end),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(entry),fulltype[typec(N/H)]],param[reg(),name(page),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(pmd),exp[grammar(call),exp:ident(pmd_offset),exp:ident(pud),exp:ident(addr)]]],statem(N/H),st_return[exp:const:int(0)]]],def[fname(unuse_pud_range),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(vma),fulltype[typec(N/H)]],param[reg(),name(pgd),fulltype[typec(N/H)]],param[reg(),name(addr),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(end),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(entry),fulltype[typec(N/H)]],param[reg(),name(page),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(pud),exp[grammar(call),exp:ident(pud_offset),exp:ident(pgd),exp:ident(addr)]]],statem(N/H),st_return[exp:const:int(0)]]],def[fname(unuse_vma),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(vma),fulltype[typec(N/H)]],param[reg(),name(entry),fulltype[typec(N/H)]],param[reg(),name(page),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),sel_if[exp[grammar(record_ptr),exp:ident(page),ident(mapping)],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(addr),exp[grammar(call),exp:ident(page_address_in_vma),exp:ident(page),exp:ident(vma)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(addr),exp:??(N/H)],st_return[exp:const:int(0)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(end),exp[grammar(binary_arith),aop(+),exp:ident(addr),exp:ident(PAGE_SIZE)]]]]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(addr),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(end),exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)]]]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(pgd),exp[grammar(call),exp:ident(pgd_offset),exp[grammar(record_ptr),exp:ident(vma),ident(vm_mm)],exp:ident(addr)]]],statem(N/H),st_return[exp:const:int(0)]]],def[fname(unuse_mm),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(mm),fulltype[typec(N/H)]],param[reg(),name(entry),fulltype[typec(N/H)]],param[reg(),name(page),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp:??(N/H),{}stmt[estmt[exp[grammar(call),exp:ident(activate_page),exp:ident(page)]],estmt[exp[grammar(call),exp:ident(unlock_page),exp:ident(page)]],estmt[exp[grammar(call),exp:ident(down_read),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(mm),ident(mmap_sem)]]],estmt[exp[grammar(call),exp:ident(lock_page),exp:ident(page)]]],estmt(NONE)],for[exp[grammar(assign),simple_assi(=),exp:ident(vma),exp[grammar(record_ptr),exp:ident(mm),ident(mmap)]],exp:ident(vma),exp[grammar(assign),simple_assi(=),exp:ident(vma),exp[grammar(record_ptr),exp:ident(vma),ident(vm_next)]],{}stmt[sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(record_ptr),exp:ident(vma),ident(anon_vma)],exp[grammar(assign),simple_assi(=),exp:ident(ret),exp[grammar(call),exp:ident(unuse_vma),exp:ident(vma),exp:ident(entry),exp:ident(page)]]],statem(N/H),estmt(NONE)]]],estmt[exp[grammar(call),exp:ident(up_read),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(mm),ident(mmap_sem)]]],st_return[exp[grammar(cond3),exp[grammar(binary_logi),logiop(??),exp:ident(ret),exp:const:int(0)],exp:ident(ret),exp:const:int(0)]]]],def[fname(find_next_to_unuse),funtype[fulltype[ctype[btype[itype[sgn(unsigned),base(int)]]]],param[reg(),name(si),fulltype[typec(N/H)]],param[reg(),name(prev),fulltype[ctype[btype[itype[sgn(unsigned),base(int)]]]]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),for[expr(NONE),expr(NONE),expr(NONE),{}stmt[sel_if[exp[grammar(binary_logi),logiop(??),exp:??(N/H),exp:ident(max)],{}stmt[sel_if[exp:??(N/H),{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(i),exp:const:int(0)]],statem(N/H)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(max),exp[grammar(binary_arith),aop(+),exp:ident(prev),exp:const:int(1)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(prev),exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(i),exp:const:int(1)]]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(count),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(si),ident(swap_map)],exp:ident(i)]]],sel_if[exp[grammar(binary_logi),logiop(and),exp:ident(count),exp[grammar(binary_logi),logiop(??),exp:ident(count),exp:ident(SWAP_MAP_BAD)]],statem(N/H),estmt(NONE)]]],st_return[exp:ident(i)]]],def[fname(try_to_unuse),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(type),fulltype[ctype[btype[itype[sgn(unsigned),base(int)]]]]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(start_mm),exp:&ref:exp:ident(init_mm)]],estmt[exp[grammar(call),exp:ident(atomic_inc),exp[grammar(&ref),grammar(exp),grammar(record_acc),exp:ident(init_mm),ident(mm_users)]]],while[exp[grammar(binary_logi),logiop(??),exp[grammar(assign),simple_assi(=),exp:ident(i),exp[grammar(call),exp:ident(find_next_to_unuse),exp:ident(si),exp:ident(i)]],exp:const:int(0)],{}stmt[sel_if[exp[grammar(call),exp:ident(signal_pending),exp:ident(current)],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(retval),exp:??(N/H)]],statem(N/H)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(swap_map),exp[grammar(&ref),grammar(exp),grammar(array_acc),exp[grammar(record_ptr),exp:ident(si),ident(swap_map)],exp:ident(i)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(entry),exp[grammar(call),exp:ident(swp_entry),exp:ident(type),exp:ident(i)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(page),exp[grammar(call),exp:ident(read_swap_cache_async),exp:ident(entry),exp:ident(GFP_HIGHUSER_MOVABLE),exp:ident(NULL),exp:const:int(0)]]],sel_if[exp:??(N/H),{}stmt[sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(retval),exp:??(N/H)]],statem(N/H)],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(call),exp:ident(atomic_read),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(start_mm),ident(mm_users)]],exp:const:int(1)],{}stmt[estmt[exp[grammar(call),exp:ident(mmput),exp:ident(start_mm)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(start_mm),exp:&ref:exp:ident(init_mm)]],estmt[exp[grammar(call),exp:ident(atomic_inc),exp[grammar(&ref),grammar(exp),grammar(record_acc),exp:ident(init_mm),ident(mm_users)]]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(wait_on_page_locked),exp:ident(page)]],estmt[exp[grammar(call),exp:ident(wait_on_page_writeback),exp:ident(page)]],estmt[exp[grammar(call),exp:ident(lock_page),exp:ident(page)]],estmt[exp[grammar(call),exp:ident(wait_on_page_writeback),exp:ident(page)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(shmem),exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(swcount),exp:*ref:exp:ident(swap_map)]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(swcount),exp:const:int(1)],{}stmt[sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(start_mm),exp:&ref:exp:ident(init_mm)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(shmem),exp[grammar(call),exp:ident(shmem_unuse),exp:ident(entry),exp:ident(page)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(retval),exp[grammar(call),exp:ident(unuse_mm),exp:ident(start_mm),exp:ident(entry),exp:ident(page)]]]]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp:*ref:exp:ident(swap_map),exp:const:int(1)],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(atomic_inc),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(new_start_mm),ident(mm_users)]]],estmt[exp[grammar(call),exp:ident(atomic_inc),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(prev_mm),ident(mm_users)]]],estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(mmlist_lock)]],while[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp:*ref:exp:ident(swap_map),exp:const:int(1)],exp:??(N/H)],exp:??(N/H)],exp[grammar(binary_logi),logiop(??),exp[grammar(assign),simple_assi(=),exp:ident(p),exp[grammar(record_ptr),exp:ident(p),ident(next)]],exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(start_mm),ident(mmlist)]]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(mm),exp[grammar(call),exp:ident(list_entry),exp:ident(p),argtype(N/H),exp:ident(mmlist)]]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(mmlist_lock)]],estmt[exp[grammar(call),exp:ident(mmput),exp:ident(prev_mm)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(prev_mm),exp:ident(mm)]],estmt[exp[grammar(call),exp:ident(cond_resched)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(swcount),exp:*ref:exp:ident(swap_map)]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(swcount),exp:const:int(1)],estmt(NONE),sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(mm),exp:&ref:exp:ident(init_mm)],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(set_start_mm),exp:const:int(1)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(shmem),exp[grammar(call),exp:ident(shmem_unuse),exp:ident(entry),exp:ident(page)]]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(retval),exp[grammar(call),exp:ident(unuse_mm),exp:ident(mm),exp:ident(entry),exp:ident(page)]]]]],sel_if[exp[grammar(binary_logi),logiop(and),exp:ident(set_start_mm),exp[grammar(binary_logi),logiop(??),exp:*ref:exp:ident(swap_map),exp:ident(swcount)]],{}stmt[estmt[exp[grammar(call),exp:ident(mmput),exp:ident(new_start_mm)]],estmt[exp[grammar(call),exp:ident(atomic_inc),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(mm),ident(mm_users)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(new_start_mm),exp:ident(mm)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(set_start_mm),exp:const:int(0)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(mmlist_lock)]]]],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(mmlist_lock)]],estmt[exp[grammar(call),exp:ident(mmput),exp:ident(prev_mm)]],estmt[exp[grammar(call),exp:ident(mmput),exp:ident(start_mm)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(start_mm),exp:ident(new_start_mm)]]],estmt(NONE)],sel_if[exp:ident(shmem),{}stmt[sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(shmem),exp:const:int(0)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(retval),exp:ident(shmem)]],statem(N/H)],estmt(NONE)],sel_if[exp:ident(retval),{}stmt[estmt[exp[grammar(call),exp:ident(unlock_page),exp:ident(page)]],estmt[exp[grammar(call),exp:ident(page_cache_release),exp:ident(page)]],statem(N/H)],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(eq),exp:*ref:exp:ident(swap_map),exp:ident(SWAP_MAP_MAX)],{}stmt[estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(swap_lock)]],estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(swap_map),exp:const:int(1)]],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(reset_overflow),exp:const:int(1)]]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp:*ref:exp:ident(swap_map),exp:const:int(1)],exp[grammar(call),exp:ident(PageDirty),exp:ident(page)]],exp[grammar(call),exp:ident(PageSwapCache),exp:ident(page)]],{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(swap_writepage),exp:ident(page),exp:&ref:exp:ident(wbc)]],estmt[exp[grammar(call),exp:ident(lock_page),exp:ident(page)]],estmt[exp[grammar(call),exp:ident(wait_on_page_writeback),exp:ident(page)]]],estmt(NONE)],sel_if[exp[grammar(call),exp:ident(PageSwapCache),exp:ident(page)],estmt[exp[grammar(call),exp:ident(delete_from_swap_cache),exp:ident(page)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(SetPageDirty),exp:ident(page)]],estmt[exp[grammar(call),exp:ident(unlock_page),exp:ident(page)]],estmt[exp[grammar(call),exp:ident(page_cache_release),exp:ident(page)]],estmt[exp[grammar(call),exp:ident(cond_resched)]]]],estmt[exp[grammar(call),exp:ident(mmput),exp:ident(start_mm)]],sel_if[exp:ident(reset_overflow),{}stmt[estmt[exp[grammar(call),exp:ident(printk),exp:const:other(N/H)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(swap_overflow),exp:const:int(0)]]],estmt(NONE)],st_return[exp:ident(retval)]]],def[fname(drain_mmlist),funtype[fulltype[ctype[btype(void)]],param[reg(),name(),fulltype[ctype[btype(void)]]]],{}stmt[statem(N/H),statem(N/H),for[exp[grammar(assign),simple_assi(=),exp:ident(i),exp:const:int(0)],exp[grammar(binary_logi),logiop(??),exp:ident(i),exp:ident(nr_swapfiles)],exp:??(N/H),sel_if[exp[grammar(record_acc),exp[grammar(array_acc),exp:ident(swap_info),exp:ident(i)],ident(inuse_pages)],statem(N/H),estmt(NONE)]],estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(mmlist_lock)]],statem(N/H),estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(mmlist_lock)]]]],def[fname(map_swap_page),funtype[fulltype[typec(N/H)],param[reg(),name(sis),fulltype[typec(N/H)]],param[reg(),name(offset),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),for[expr(NONE),expr(NONE),expr(NONE),{}stmt[statem(N/H),sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(se),ident(start_page)],exp:ident(offset)],exp[grammar(binary_logi),logiop(??),exp:ident(offset),exp[grammar(binary_arith),aop(+),exp[grammar(record_ptr),exp:ident(se),ident(start_page)],exp[grammar(record_ptr),exp:ident(se),ident(nr_pages)]]]],{}stmt[st_return[exp[grammar(binary_arith),aop(+),exp[grammar(record_ptr),exp:ident(se),ident(start_block)],exp[grammar(binary_arith),aop(-),exp:ident(offset),exp[grammar(record_ptr),exp:ident(se),ident(start_page)]]]]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(lh),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(se),ident(list)],ident(next)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(lh),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(sis),ident(extent_list)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(lh),exp[grammar(record_ptr),exp:ident(lh),ident(next)]]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(se),exp[grammar(call),exp:ident(list_entry),exp:ident(lh),argtype(N/H),exp:ident(list)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(sis),ident(curr_swap_extent)],exp:ident(se)]],estmt[exp[grammar(call),exp:ident(BUG_ON),exp[grammar(binary_logi),logiop(eq),exp:ident(se),exp:ident(start_se)]]]]]]],def[fname(swapdev_block),funtype[fulltype[typec(N/H)],param[reg(),name(swap_type),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(offset),fulltype[typec(N/H)]]],{}stmt[statem(N/H),sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(swap_type),exp:ident(nr_swapfiles)],st_return[exp:const:int(0)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(sis),exp[grammar(binary_arith),aop(+),exp:ident(swap_info),exp:ident(swap_type)]]],st_return[exp[grammar(cond3),exp[grammar(binary_arith),aop(&),exp[grammar(record_ptr),exp:ident(sis),ident(flags)],exp:ident(SWP_WRITEOK)],exp[grammar(call),exp:ident(map_swap_page),exp:ident(sis),exp:ident(offset)],exp:const:int(0)]]]],def[fname(destroy_swap_extents),funtype[fulltype[ctype[btype(void)]],param[reg(),name(sis),fulltype[typec(N/H)]]],{}stmt[while[exp:??(N/H),{}stmt[statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(se),exp[grammar(call),exp:ident(list_entry),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(sis),ident(extent_list)],ident(next)],argtype(N/H),exp:ident(list)]]],estmt[exp[grammar(call),exp:ident(list_del),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(se),ident(list)]]],estmt[exp[grammar(call),exp:ident(kfree),exp:ident(se)]]]]]],def[fname(add_swap_extent),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(sis),fulltype[typec(N/H)]],param[reg(),name(start_page),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(nr_pages),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(start_block),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(lh),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(sis),ident(extent_list)],ident(prev)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(lh),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(sis),ident(extent_list)]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(se),exp[grammar(call),exp:ident(list_entry),exp:ident(lh),argtype(N/H),exp:ident(list)]]],estmt[exp[grammar(call),exp:ident(BUG_ON),exp[grammar(binary_logi),logiop(??),exp[grammar(binary_arith),aop(+),exp[grammar(record_ptr),exp:ident(se),ident(start_page)],exp[grammar(record_ptr),exp:ident(se),ident(nr_pages)]],exp:ident(start_page)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(binary_arith),aop(+),exp[grammar(record_ptr),exp:ident(se),ident(start_block)],exp[grammar(record_ptr),exp:ident(se),ident(nr_pages)]],exp:ident(start_block)],{}stmt[estmt[exp[grammar(assign),op_assi(+=),exp[grammar(record_ptr),exp:ident(se),ident(nr_pages)],exp:ident(nr_pages)]],st_return[exp:const:int(0)]],estmt(NONE)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(new_se),exp[grammar(call),exp:ident(kmalloc),exp:sizeof:exp:*ref:exp:ident(se),exp:ident(GFP_KERNEL)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(new_se),exp:ident(NULL)],st_return[exp:??(N/H)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(new_se),ident(start_page)],exp:ident(start_page)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(new_se),ident(nr_pages)],exp:ident(nr_pages)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(new_se),ident(start_block)],exp:ident(start_block)]],estmt[exp[grammar(call),exp:ident(list_add_tail),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(new_se),ident(list)],exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(sis),ident(extent_list)]]],st_return[exp:const:int(1)]]],def[fname(setup_swap_extents),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(sis),fulltype[typec(N/H)]],param[reg(),name(span),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(inode),exp[grammar(record_ptr),exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(sis),ident(swap_file)],ident(f_mapping)],ident(host)]]],sel_if[exp[grammar(call),exp:ident(S_ISBLK),exp[grammar(record_ptr),exp:ident(inode),ident(i_mode)]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(ret),exp[grammar(call),exp:ident(add_swap_extent),exp:ident(sis),exp:const:int(0),exp[grammar(record_ptr),exp:ident(sis),ident(max)],exp:const:int(0)]]],estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(span),exp[grammar(record_ptr),exp:ident(sis),ident(pages)]]],statem(N/H)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(blkbits),exp[grammar(record_ptr),exp:ident(inode),ident(i_blkbits)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(blocks_per_page),exp[grammar(binary_arith),aop(>>),exp:ident(PAGE_SIZE),exp:ident(blkbits)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(probe_block),exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(page_no),exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(last_block),exp[grammar(binary_arith),aop(>>),exp[grammar(call),exp:ident(i_size_read),exp:ident(inode)],exp:ident(blkbits)]]],while[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp[grammar(binary_arith),aop(+),exp:ident(probe_block),exp:ident(blocks_per_page)],exp:ident(last_block)],exp[grammar(binary_logi),logiop(??),exp:ident(page_no),exp[grammar(record_ptr),exp:ident(sis),ident(max)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(first_block),exp[grammar(call),exp:ident(bmap),exp:ident(inode),exp:ident(probe_block)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(first_block),exp:const:int(0)],statem(N/H),estmt(NONE)],sel_if[exp[grammar(binary_arith),aop(&),exp:ident(first_block),exp[grammar(binary_arith),aop(-),exp:ident(blocks_per_page),exp:const:int(1)]],{}stmt[estmt[exp:??(N/H)],statem(N/H)],estmt(NONE)],for[exp[grammar(assign),simple_assi(=),exp:ident(block_in_page),exp:const:int(1)],exp[grammar(binary_logi),logiop(??),exp:ident(block_in_page),exp:ident(blocks_per_page)],exp:??(N/H),{}stmt[statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(block),exp[grammar(call),exp:ident(bmap),exp:ident(inode),exp[grammar(binary_arith),aop(+),exp:ident(probe_block),exp:ident(block_in_page)]]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(block),exp:const:int(0)],statem(N/H),estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(block),exp[grammar(binary_arith),aop(+),exp:ident(first_block),exp:ident(block_in_page)]],{}stmt[estmt[exp:??(N/H)],statem(N/H)],estmt(NONE)]]],estmt[exp[grammar(assign),op_assi(N/H),exp:ident(first_block),exp[grammar(binary_arith),aop(-),exp:ident(PAGE_SHIFT),exp:ident(blkbits)]]],sel_if[exp:ident(page_no),{}stmt[sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(first_block),exp:ident(lowest_block)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(lowest_block),exp:ident(first_block)]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(first_block),exp:ident(highest_block)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(highest_block),exp:ident(first_block)]],estmt(NONE)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ret),exp[grammar(call),exp:ident(add_swap_extent),exp:ident(sis),exp:ident(page_no),exp:const:int(1),exp:ident(first_block)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(ret),exp:const:int(0)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),op_assi(+=),exp:ident(nr_extents),exp:ident(ret)]],estmt[exp:??(N/H)],estmt[exp[grammar(assign),op_assi(+=),exp:ident(probe_block),exp:ident(blocks_per_page)]],statem(N/H)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ret),exp:ident(nr_extents)]],estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(span),exp[grammar(binary_arith),aop(-),exp[grammar(binary_arith),aop(+),exp:const:int(1),exp:ident(highest_block)],exp:ident(lowest_block)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(page_no),exp:const:int(0)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(page_no),exp:const:int(1)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(sis),ident(max)],exp:ident(page_no)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(sis),ident(pages)],exp[grammar(binary_arith),aop(-),exp:ident(page_no),exp:const:int(1)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(sis),ident(highest_bit)],exp[grammar(binary_arith),aop(-),exp:ident(page_no),exp:const:int(1)]]],statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(ret),exp:??(N/H)]],statem(N/H)]],includeN[inc_elem(linux),inc_elem(backing-dev.h)],def[fname(page_queue_congested),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(page),fulltype[typec(N/H)]]],{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(BUG_ON),exp:??(N/H)]],sel_if[exp[grammar(call),exp:ident(PageSwapCache),exp:ident(page)],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(sis),exp[grammar(call),exp:ident(get_swap_info_struct),exp[grammar(call),exp:ident(swp_type),exp:ident(entry)]]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(bdi),exp[grammar(record_ptr),exp[grammar(record_ptr),exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(sis),ident(bdev)],ident(bd_inode)],ident(i_mapping)],ident(backing_dev_info)]]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(bdi),exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(page),ident(mapping)],ident(backing_dev_info)]]]],st_return[exp[grammar(call),exp:ident(bdi_write_congested),exp:ident(bdi)]]]],NCP(N/H),def[fname(swap_start),funtype[fulltype[typec(N/H)],param[reg(),name(swap),fulltype[typec(N/H)]],param[reg(),name(pos),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(mutex_lock),exp:&ref:exp:ident(swapon_mutex)]],sel_if[exp:??(N/H),st_return[exp:ident(SEQ_START_TOKEN)],estmt(NONE)],for[exp[grammar(assign),simple_assi(=),exp:ident(i),exp:const:int(0)],exp[grammar(binary_logi),logiop(??),exp:ident(i),exp:ident(nr_swapfiles)],exp:??(N/H),{}stmt[sel_if[exp[grammar(binary_logi),logiop(or),exp:??(N/H),exp:??(N/H)],statem(N/H),estmt(NONE)],sel_if[exp:??(N/H),st_return[exp:ident(ptr)],estmt(NONE)]]],st_return[exp:ident(NULL)]]],def[fname(swap_next),funtype[fulltype[typec(N/H)],param[reg(),name(swap),fulltype[typec(N/H)]],param[reg(),name(v),fulltype[typec(N/H)]],param[reg(),name(pos),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(v),exp:ident(SEQ_START_TOKEN)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ptr),exp:ident(swap_info)]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(ptr),exp:ident(v)]],estmt[exp:??(N/H)]]],for[expr(NONE),exp[grammar(binary_logi),logiop(??),exp:ident(ptr),exp:ident(endptr)],exp:??(N/H),{}stmt[sel_if[exp[grammar(binary_logi),logiop(or),exp:??(N/H),exp:??(N/H)],statem(N/H),estmt(NONE)],estmt[exp:??(N/H)],st_return[exp:ident(ptr)]]],st_return[exp:ident(NULL)]]],def[fname(swap_stop),funtype[fulltype[ctype[btype(void)]],param[reg(),name(swap),fulltype[typec(N/H)]],param[reg(),name(v),fulltype[typec(N/H)]]],{}stmt[estmt[exp[grammar(call),exp:ident(mutex_unlock),exp:&ref:exp:ident(swapon_mutex)]]]],def[fname(swap_show),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(swap),fulltype[typec(N/H)]],param[reg(),name(v),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(ptr),exp:ident(SEQ_START_TOKEN)],{}stmt[estmt[exp[grammar(call),exp:ident(seq_puts),exp:ident(swap),exp:const:string(Filename\t\t\t\tType\t\tSize\tUsed\tPriority\n)]],st_return[exp:const:int(0)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(file),exp[grammar(record_ptr),exp:ident(ptr),ident(swap_file)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(len),exp[grammar(call),exp:ident(seq_path),exp:ident(swap),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(file),ident(f_path)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(file),ident(f_path)],ident(dentry)],exp:const:string( \t\n\\)]]],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(swap),exp:const:string(%*s%s\t%u\t%u\t%d\n),exp[grammar(cond3),exp[grammar(binary_logi),logiop(??),exp:ident(len),exp:const:int(40)],exp[grammar(binary_arith),aop(-),exp:const:int(40),exp:ident(len)],exp:const:int(1)],exp:const:string( ),exp[grammar(cond3),exp[grammar(call),exp:ident(S_ISBLK),exp[grammar(record_ptr),exp[grammar(record_ptr),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(file),ident(f_path)],ident(dentry)],ident(d_inode)],ident(i_mode)]],exp:const:string(partition),exp:const:string(file\t)],exp[grammar(binary_arith),aop(<<),exp[grammar(record_ptr),exp:ident(ptr),ident(pages)],exp[grammar(binary_arith),aop(-),exp:ident(PAGE_SHIFT),exp:const:int(10)]],exp[grammar(binary_arith),aop(<<),exp[grammar(record_ptr),exp:ident(ptr),ident(inuse_pages)],exp[grammar(binary_arith),aop(-),exp:ident(PAGE_SHIFT),exp:const:int(10)]],exp[grammar(record_ptr),exp:ident(ptr),ident(prio)]]],st_return[exp:const:int(0)]]],decl(N/H),def[fname(swaps_open),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(inode),fulltype[typec(N/H)]],param[reg(),name(file),fulltype[typec(N/H)]]],{}stmt[st_return[exp[grammar(call),exp:ident(seq_open),exp:ident(file),exp:&ref:exp:ident(swaps_op)]]]],decl(N/H),NCP(N/H),mtop(N/H),NCP(N/H),def[fname(si_swapinfo),funtype[fulltype[ctype[btype(void)]],param[reg(),name(val),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(swap_lock)]],for[exp[grammar(assign),simple_assi(=),exp:ident(i),exp:const:int(0)],exp[grammar(binary_logi),logiop(??),exp:ident(i),exp:ident(nr_swapfiles)],exp:??(N/H),{}stmt[sel_if[exp[grammar(binary_logi),logiop(or),exp:??(N/H),exp[grammar(binary_arith),aop(&),exp[grammar(record_acc),exp[grammar(array_acc),exp:ident(swap_info),exp:ident(i)],ident(flags)],exp:ident(SWP_WRITEOK)]],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),op_assi(+=),exp:ident(nr_to_be_unused),exp[grammar(record_acc),exp[grammar(array_acc),exp:ident(swap_info),exp:ident(i)],ident(inuse_pages)]]]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(val),ident(freeswap)],exp[grammar(binary_arith),aop(+),exp:ident(nr_swap_pages),exp:ident(nr_to_be_unused)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(val),ident(totalswap)],exp[grammar(binary_arith),aop(+),exp:ident(total_swap_pages),exp:ident(nr_to_be_unused)]]],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]]]],def[fname(swap_duplicate),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(entry),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),sel_if[exp[grammar(call),exp:ident(is_migration_entry),exp:ident(entry)],st_return[exp:const:int(1)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(type),exp[grammar(call),exp:ident(swp_type),exp:ident(entry)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(type),exp:ident(nr_swapfiles)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(p),exp[grammar(binary_arith),aop(+),exp:ident(type),exp:ident(swap_info)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(offset),exp[grammar(call),exp:ident(swp_offset),exp:ident(entry)]]],estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(swap_lock)]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp:ident(offset),exp[grammar(record_ptr),exp:ident(p),ident(max)]],exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(p),ident(swap_map)],exp:ident(offset)]],{}stmt[sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(p),ident(swap_map)],exp:ident(offset)],exp[grammar(binary_arith),aop(-),exp:ident(SWAP_MAP_MAX),exp:const:int(1)]],{}stmt[estmt[exp:??(N/H)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(result),exp:const:int(1)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(p),ident(swap_map)],exp:ident(offset)],exp:ident(SWAP_MAP_MAX)],{}stmt[sel_if[exp[grammar(binary_logi),logiop(??),exp:??(N/H),exp:const:int(5)],estmt[exp[grammar(call),exp:ident(printk),exp:const:other(N/H)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(p),ident(swap_map)],exp:ident(offset)],exp:ident(SWAP_MAP_MAX)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(result),exp:const:int(1)]]],estmt(NONE)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]],statem(N/H),statem(N/H),statem(N/H)]],def[fname(get_swap_info_struct),funtype[fulltype[typec(N/H)],param[reg(),name(type),fulltype[ctype[btype[itype[sgn(unsigned),base(int)]]]]]],{}stmt[st_return[exp[grammar(&ref),grammar(exp),grammar(array_acc),exp:ident(swap_info),exp:ident(type)]]]],def[fname(valid_swaphandles),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(entry),fulltype[typec(N/H)]],param[reg(),name(offset),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),sel_if[exp:??(N/H),st_return[exp:const:int(0)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(si),exp[grammar(&ref),grammar(exp),grammar(array_acc),exp:ident(swap_info),exp[grammar(call),exp:ident(swp_type),exp:ident(entry)]]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(target),exp[grammar(call),exp:ident(swp_offset),exp:ident(entry)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(base),exp[grammar(binary_arith),aop(<<),exp[grammar(binary_arith),aop(>>),exp:ident(target),exp:ident(our_page_cluster)],exp:ident(our_page_cluster)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(end),exp[grammar(binary_arith),aop(+),exp:ident(base),exp[grammar(binary_arith),aop(<<),exp:const:int(1),exp:ident(our_page_cluster)]]]],sel_if[exp:??(N/H),estmt[exp:??(N/H)],estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(swap_lock)]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(end),exp[grammar(record_ptr),exp:ident(si),ident(max)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(end),exp[grammar(record_ptr),exp:ident(si),ident(max)]]],estmt(NONE)],for[exp[grammar(assign),simple_assi(=),exp:ident(toff),exp:ident(target)],exp[grammar(binary_logi),logiop(??),exp:??(N/H),exp:ident(end)],exp:??(N/H),{}stmt[sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(si),ident(swap_map)],exp:ident(toff)],exp:ident(SWAP_MAP_BAD)],statem(N/H),estmt(NONE)]]],for[exp[grammar(assign),simple_assi(=),exp:ident(toff),exp:ident(target)],exp[grammar(binary_logi),logiop(??),exp:??(N/H),exp:ident(base)],exp:??(N/H),{}stmt[sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(si),ident(swap_map)],exp:ident(toff)],exp:ident(SWAP_MAP_BAD)],statem(N/H),estmt(NONE)]]],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]],estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(offset),exp:??(N/H)]],st_return[exp[grammar(cond3),exp:ident(nr_pages),exp:??(N/H),exp:const:int(0)]]]]] ==> prg2[includeN[inc_elem(linux),inc_elem(mm.h)],includeN[inc_elem(linux),inc_elem(hugetlb.h)],includeN[inc_elem(linux),inc_elem(mman.h)],includeN[inc_elem(linux),inc_elem(slab.h)],includeN[inc_elem(linux),inc_elem(kernel_stat.h)],includeN[inc_elem(linux),inc_elem(swap.h)],includeN[inc_elem(linux),inc_elem(vmalloc.h)],includeN[inc_elem(linux),inc_elem(pagemap.h)],includeN[inc_elem(linux),inc_elem(namei.h)],includeN[inc_elem(linux),inc_elem(shm.h)],includeN[inc_elem(linux),inc_elem(blkdev.h)],includeN[inc_elem(linux),inc_elem(writeback.h)],includeN[inc_elem(linux),inc_elem(proc_fs.h)],includeN[inc_elem(linux),inc_elem(seq_file.h)],includeN[inc_elem(linux),inc_elem(init.h)],includeN[inc_elem(linux),inc_elem(module.h)],includeN[inc_elem(linux),inc_elem(rmap.h)],includeN[inc_elem(linux),inc_elem(security.h)],includeN[inc_elem(linux),inc_elem(backing-dev.h)],includeN[inc_elem(linux),inc_elem(mutex.h)],includeN[inc_elem(linux),inc_elem(capability.h)],includeN[inc_elem(linux),inc_elem(syscalls.h)],includeN[inc_elem(linux),inc_elem(memcontrol.h)],includeN[inc_elem(asm),inc_elem(pgtable.h)],includeN[inc_elem(asm),inc_elem(tlbflush.h)],includeN[inc_elem(linux),inc_elem(swapops.h)],mtop(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),def[fname(swap_unplug_io_fn),funtype[fulltype[ctype[btype(void)]],param[reg(),name(unused_bdi),fulltype[typec(N/H)]],param[reg(),name(page),fulltype[typec(N/H)]]],{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(down_read),exp:&ref:exp:ident(swap_unplug_sem)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(entry),ident(val)],exp[grammar(call),exp:ident(page_private),exp:ident(page)]]],sel_if[exp[grammar(call),exp:ident(PageSwapCache),exp:ident(page)],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(WARN_ON),exp[grammar(binary_logi),logiop(??),exp[grammar(call),exp:ident(page_count),exp:ident(page)],exp:const:int(1)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(bdi),exp[grammar(record_ptr),exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(bdev),ident(bd_inode)],ident(i_mapping)],ident(backing_dev_info)]]],estmt[exp[grammar(call),exp:ident(blk_run_backing_dev),exp:ident(bdi),exp:ident(page)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(up_read),exp:&ref:exp:ident(swap_unplug_sem)]]]],define(N/H),define(N/H),def[fname(scan_swap_map),funtype[fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]],param[reg(),name(si),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),op_assi(+=),exp[grammar(record_ptr),exp:ident(si),ident(flags)],exp:ident(SWP_SCANNING)]],sel_if[exp[grammar(call),exp:ident(unlikely),exp:??(N/H)],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(si),ident(cluster_nr)],exp[grammar(binary_arith),aop(-),exp:ident(SWAPFILE_CLUSTER),exp:const:int(1)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(binary_arith),aop(-),exp[grammar(record_ptr),exp:ident(si),ident(pages)],exp[grammar(record_ptr),exp:ident(si),ident(inuse_pages)]],exp:ident(SWAPFILE_CLUSTER)],statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(offset),exp[grammar(record_ptr),exp:ident(si),ident(lowest_bit)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(last_in_cluster),exp[grammar(binary_arith),aop(-),exp[grammar(binary_arith),aop(+),exp:ident(offset),exp:ident(SWAPFILE_CLUSTER)],exp:const:int(1)]]],for[expr(NONE),exp[grammar(binary_logi),logiop(??),exp:ident(last_in_cluster),exp[grammar(record_ptr),exp:ident(si),ident(highest_bit)]],exp:??(N/H),{}stmt[sel_if[exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(si),ident(swap_map)],exp:ident(offset)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(last_in_cluster),exp[grammar(binary_arith),aop(+),exp:ident(offset),exp:ident(SWAPFILE_CLUSTER)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(offset),exp:ident(last_in_cluster)],{}stmt[estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(swap_lock)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(si),ident(cluster_next)],exp[grammar(binary_arith),aop(+),exp[grammar(binary_arith),aop(-),exp:ident(offset),exp:ident(SWAPFILE_CLUSTER)],exp:const:int(1)]]],statem(N/H)],estmt(NONE)]],sel_if[exp[grammar(call),exp:ident(unlikely),exp[grammar(binary_logi),logiop(??),exp:??(N/H),exp:const:int(0)]],{}stmt[estmt[exp[grammar(call),exp:ident(cond_resched)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(latency_ration),exp:ident(LATENCY_LIMIT)]]],estmt(NONE)]]],estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(swap_lock)]],statem(N/H)],estmt(NONE)],estmt[exp:??(N/H)],statem(N/H),sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(offset),exp[grammar(record_ptr),exp:ident(si),ident(highest_bit)]],statem(N/H),estmt(NONE)],statem(N/H),sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],sel_if[exp:??(N/H),{}stmt[sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(offset),exp[grammar(record_ptr),exp:ident(si),ident(lowest_bit)]],estmt[exp:??(N/H)],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(offset),exp[grammar(record_ptr),exp:ident(si),ident(highest_bit)]],estmt[exp:??(N/H)],estmt(NONE)],estmt[exp:??(N/H)],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(si),ident(inuse_pages)],exp[grammar(record_ptr),exp:ident(si),ident(pages)]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(si),ident(lowest_bit)],exp[grammar(record_ptr),exp:ident(si),ident(max)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(si),ident(highest_bit)],exp:const:int(0)]]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(si),ident(swap_map)],exp:ident(offset)],exp:const:int(1)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(si),ident(cluster_next)],exp[grammar(binary_arith),aop(+),exp:ident(offset),exp:const:int(1)]]],estmt[exp[grammar(assign),op_assi(-=),exp[grammar(record_ptr),exp:ident(si),ident(flags)],exp:ident(SWP_SCANNING)]],st_return[exp:ident(offset)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]],while[exp[grammar(binary_logi),logiop(??),exp:??(N/H),exp[grammar(record_ptr),exp:ident(si),ident(highest_bit)]],{}stmt[sel_if[exp:??(N/H),{}stmt[estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(swap_lock)]],statem(N/H)],estmt(NONE)],sel_if[exp[grammar(call),exp:ident(unlikely),exp[grammar(binary_logi),logiop(??),exp:??(N/H),exp:const:int(0)]],{}stmt[estmt[exp[grammar(call),exp:ident(cond_resched)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(latency_ration),exp:ident(LATENCY_LIMIT)]]],estmt(NONE)]]],estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(swap_lock)]],statem(N/H),statem(N/H),st_return[exp:const:int(0)]]],def[fname(get_swap_page),funtype[fulltype[typec(N/H)],param[reg(),name(),fulltype[ctype[btype(void)]]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(swap_lock)]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(nr_swap_pages),exp:const:int(0)],statem(N/H),estmt(NONE)],estmt[exp:??(N/H)],for[exp[grammar(assign),simple_assi(=),exp:ident(type),exp[grammar(record_acc),exp:ident(swap_list),ident(next)]],exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp:ident(type),exp:const:int(0)],exp[grammar(binary_logi),logiop(??),exp:ident(wrapped),exp:const:int(2)]],exp[grammar(assign),simple_assi(=),exp:ident(type),exp:ident(next)],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(si),exp[grammar(binary_arith),aop(+),exp:ident(swap_info),exp:ident(type)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(next),exp[grammar(record_ptr),exp:ident(si),ident(next)]]],sel_if[exp[grammar(binary_logi),logiop(or),exp[grammar(binary_logi),logiop(??),exp:ident(next),exp:const:int(0)],exp[grammar(binary_logi),logiop(and),exp:??(N/H),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(si),ident(prio)],exp[grammar(record_acc),exp[grammar(array_acc),exp:ident(swap_info),exp:ident(next)],ident(prio)]]]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(next),exp[grammar(record_acc),exp:ident(swap_list),ident(head)]]],estmt[exp:??(N/H)]],estmt(NONE)],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(swap_list),ident(next)],exp:ident(next)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(offset),exp[grammar(call),exp:ident(scan_swap_map),exp:ident(si)]]],sel_if[exp:ident(offset),{}stmt[estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]],st_return[exp[grammar(call),exp:ident(swp_entry),exp:ident(type),exp:ident(offset)]]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(next),exp[grammar(record_acc),exp:ident(swap_list),ident(next)]]]]],estmt[exp:??(N/H)],statem(N/H),st_return[exp:??(N/H)]]],def[fname(get_swap_page_of_type),funtype[fulltype[typec(N/H)],param[reg(),name(type),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(swap_lock)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(si),exp[grammar(binary_arith),aop(+),exp:ident(swap_info),exp:ident(type)]]],sel_if[exp[grammar(binary_arith),aop(&),exp[grammar(record_ptr),exp:ident(si),ident(flags)],exp:ident(SWP_WRITEOK)],{}stmt[estmt[exp:??(N/H)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(offset),exp[grammar(call),exp:ident(scan_swap_map),exp:ident(si)]]],sel_if[exp:ident(offset),{}stmt[estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]],st_return[exp[grammar(call),exp:ident(swp_entry),exp:ident(type),exp:ident(offset)]]],estmt(NONE)],estmt[exp:??(N/H)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]],st_return[exp:??(N/H)]]],def[fname(swap_info_get),funtype[fulltype[typec(N/H)],param[reg(),name(entry),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(type),exp[grammar(call),exp:ident(swp_type),exp:ident(entry)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(type),exp:ident(nr_swapfiles)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(p),exp[grammar(&ref),grammar(exp),grammar(array_acc),exp:ident(swap_info),exp:ident(type)]]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(offset),exp[grammar(call),exp:ident(swp_offset),exp:ident(entry)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(offset),exp[grammar(record_ptr),exp:ident(p),ident(max)]],statem(N/H),estmt(NONE)],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(swap_lock)]],st_return[exp:ident(p)],statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H)]],def[fname(swap_entry_free),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(p),fulltype[typec(N/H)]],param[reg(),name(offset),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]]],{}stmt[statem(N/H),sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(count),exp:ident(SWAP_MAP_MAX)],{}stmt[estmt[exp:??(N/H)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(p),ident(swap_map)],exp:ident(offset)],exp:ident(count)]],sel_if[exp:??(N/H),{}stmt[sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(offset),exp[grammar(record_ptr),exp:ident(p),ident(lowest_bit)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(p),ident(lowest_bit)],exp:ident(offset)]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(offset),exp[grammar(record_ptr),exp:ident(p),ident(highest_bit)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(p),ident(highest_bit)],exp:ident(offset)]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(p),ident(prio)],exp[grammar(record_acc),exp[grammar(array_acc),exp:ident(swap_info),exp[grammar(record_acc),exp:ident(swap_list),ident(next)]],ident(prio)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(swap_list),ident(next)],exp[grammar(binary_arith),aop(-),exp:ident(p),exp:ident(swap_info)]]],estmt(NONE)],estmt[exp:??(N/H)],estmt[exp:??(N/H)]],estmt(NONE)]],estmt(NONE)],st_return[exp:ident(count)]]],def[fname(swap_free),funtype[fulltype[ctype[btype(void)]],param[reg(),name(entry),fulltype[typec(N/H)]]],{}stmt[statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(p),exp[grammar(call),exp:ident(swap_info_get),exp:ident(entry)]]],sel_if[exp:ident(p),{}stmt[estmt[exp[grammar(call),exp:ident(swap_entry_free),exp:ident(p),exp[grammar(call),exp:ident(swp_offset),exp:ident(entry)]]],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]]],estmt(NONE)]]],def[fname(page_swapcount),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(page),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(entry),ident(val)],exp[grammar(call),exp:ident(page_private),exp:ident(page)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(p),exp[grammar(call),exp:ident(swap_info_get),exp:ident(entry)]]],sel_if[exp:ident(p),{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(count),exp[grammar(binary_arith),aop(-),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(p),ident(swap_map)],exp[grammar(call),exp:ident(swp_offset),exp:ident(entry)]],exp:const:int(1)]]],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]]],estmt(NONE)],st_return[exp:ident(count)]]],def[fname(can_share_swap_page),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(page),fulltype[typec(N/H)]]],{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(BUG_ON),exp:??(N/H)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(count),exp[grammar(call),exp:ident(page_mapcount),exp:ident(page)]]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp:ident(count),exp:const:int(1)],exp[grammar(call),exp:ident(PageSwapCache),exp:ident(page)]],estmt[exp[grammar(assign),op_assi(+=),exp:ident(count),exp[grammar(call),exp:ident(page_swapcount),exp:ident(page)]]],estmt(NONE)],st_return[exp[grammar(binary_logi),logiop(eq),exp:ident(count),exp:const:int(1)]]]],def[fname(remove_exclusive_swap_page),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(page),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(BUG_ON),exp[grammar(call),exp:ident(PagePrivate),exp:ident(page)]]],estmt[exp[grammar(call),exp:ident(BUG_ON),exp:??(N/H)]],sel_if[exp:??(N/H),st_return[exp:const:int(0)],estmt(NONE)],sel_if[exp[grammar(call),exp:ident(PageWriteback),exp:ident(page)],st_return[exp:const:int(0)],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(call),exp:ident(page_count),exp:ident(page)],exp:const:int(2)],st_return[exp:const:int(0)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(entry),ident(val)],exp[grammar(call),exp:ident(page_private),exp:ident(page)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(p),exp[grammar(call),exp:ident(swap_info_get),exp:ident(entry)]]],sel_if[exp:??(N/H),st_return[exp:const:int(0)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(retval),exp:const:int(0)]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(p),ident(swap_map)],exp[grammar(call),exp:ident(swp_offset),exp:ident(entry)]],exp:const:int(1)],{}stmt[estmt[exp[grammar(call),exp:ident(write_lock_irq),exp[grammar(&ref),grammar(exp),grammar(record_acc),exp:ident(swapper_space),ident(tree_lock)]]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(eq),exp[grammar(call),exp:ident(page_count),exp:ident(page)],exp:const:int(2)],exp:??(N/H)],{}stmt[estmt[exp[grammar(call),exp:ident(__delete_from_swap_cache),exp:ident(page)]],estmt[exp[grammar(call),exp:ident(SetPageDirty),exp:ident(page)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(retval),exp:const:int(1)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(write_unlock_irq),exp[grammar(&ref),grammar(exp),grammar(record_acc),exp:ident(swapper_space),ident(tree_lock)]]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]],sel_if[exp:ident(retval),{}stmt[estmt[exp[grammar(call),exp:ident(swap_free),exp:ident(entry)]],estmt[exp[grammar(call),exp:ident(page_cache_release),exp:ident(page)]]],estmt(NONE)],st_return[exp:ident(retval)]]],def[fname(free_swap_and_cache),funtype[fulltype[ctype[btype(void)]],param[reg(),name(entry),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp[grammar(call),exp:ident(is_migration_entry),exp:ident(entry)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(p),exp[grammar(call),exp:ident(swap_info_get),exp:ident(entry)]]],sel_if[exp:ident(p),{}stmt[sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(call),exp:ident(swap_entry_free),exp:ident(p),exp[grammar(call),exp:ident(swp_offset),exp:ident(entry)]],exp:const:int(1)],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(page),exp[grammar(call),exp:ident(find_get_page),exp:&ref:exp:ident(swapper_space),exp[grammar(record_acc),exp:ident(entry),ident(val)]]]],sel_if[exp[grammar(binary_logi),logiop(and),exp:ident(page),exp[grammar(call),exp:ident(unlikely),exp[grammar(call),exp:ident(TestSetPageLocked),exp:ident(page)]]],{}stmt[estmt[exp[grammar(call),exp:ident(page_cache_release),exp:ident(page)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(page),exp:ident(NULL)]]],estmt(NONE)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]]],estmt(NONE)],sel_if[exp:ident(page),{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(BUG_ON),exp[grammar(call),exp:ident(PagePrivate),exp:ident(page)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(one_user),exp[grammar(binary_logi),logiop(eq),exp[grammar(call),exp:ident(page_count),exp:ident(page)],exp:const:int(2)]]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(and),exp[grammar(call),exp:ident(PageSwapCache),exp:ident(page)],exp:??(N/H)],exp[grammar(binary_logi),logiop(or),exp:ident(one_user),exp[grammar(call),exp:ident(vm_swap_full)]]],{}stmt[estmt[exp[grammar(call),exp:ident(delete_from_swap_cache),exp:ident(page)]],estmt[exp[grammar(call),exp:ident(SetPageDirty),exp:ident(page)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(unlock_page),exp:ident(page)]],estmt[exp[grammar(call),exp:ident(page_cache_release),exp:ident(page)]]],estmt(NONE)]]],def[fname(swap_type_of),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(device),fulltype[typec(N/H)]],param[reg(),name(offset),fulltype[typec(N/H)]],param[reg(),name(bdev_p),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp:ident(device),estmt[exp[grammar(assign),simple_assi(=),exp:ident(bdev),exp[grammar(call),exp:ident(bdget),exp:ident(device)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(swap_lock)]],for[exp[grammar(assign),simple_assi(=),exp:ident(i),exp:const:int(0)],exp[grammar(binary_logi),logiop(??),exp:ident(i),exp:ident(nr_swapfiles)],exp:??(N/H),{}stmt[statem(N/H),sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],sel_if[exp:??(N/H),{}stmt[sel_if[exp:ident(bdev_p),estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(bdev_p),exp[grammar(record_ptr),exp:ident(sis),ident(bdev)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]],st_return[exp:ident(i)]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(bdev),exp[grammar(record_ptr),exp:ident(sis),ident(bdev)]],{}stmt[statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(se),exp[grammar(call),exp:ident(list_entry),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(sis),ident(extent_list)],ident(next)],argtype(N/H),exp:ident(list)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(se),ident(start_block)],exp:ident(offset)],{}stmt[sel_if[exp:ident(bdev_p),estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(bdev_p),exp[grammar(record_ptr),exp:ident(sis),ident(bdev)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]],estmt[exp[grammar(call),exp:ident(bdput),exp:ident(bdev)]],st_return[exp:ident(i)]],estmt(NONE)]],estmt(NONE)]]],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]],sel_if[exp:ident(bdev),estmt[exp[grammar(call),exp:ident(bdput),exp:ident(bdev)]],estmt(NONE)],st_return[exp:??(N/H)]]],def[fname(count_swap_pages),funtype[fulltype[ctype[btype[itype[sgn(unsigned),base(int)]]]],param[reg(),name(type),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(free),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[statem(N/H),sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(type),exp:ident(nr_swapfiles)],{}stmt[estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(swap_lock)]],sel_if[exp[grammar(binary_arith),aop(&),exp[grammar(record_acc),exp[grammar(array_acc),exp:ident(swap_info),exp:ident(type)],ident(flags)],exp:ident(SWP_WRITEOK)],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(n),exp[grammar(record_acc),exp[grammar(array_acc),exp:ident(swap_info),exp:ident(type)],ident(pages)]]],sel_if[exp:ident(free),estmt[exp[grammar(assign),op_assi(-=),exp:ident(n),exp[grammar(record_acc),exp[grammar(array_acc),exp:ident(swap_info),exp:ident(type)],ident(inuse_pages)]]],estmt(NONE)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]]],estmt(NONE)],st_return[exp:ident(n)]]],def[fname(unuse_pte),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(vma),fulltype[typec(N/H)]],param[reg(),name(pmd),fulltype[typec(N/H)]],param[reg(),name(addr),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(entry),fulltype[typec(N/H)]],param[reg(),name(page),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),sel_if[exp[grammar(call),exp:ident(mem_cgroup_charge),exp:ident(page),exp[grammar(record_ptr),exp:ident(vma),ident(vm_mm)],exp:ident(GFP_KERNEL)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ret),exp:??(N/H)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(pte),exp[grammar(call),exp:ident(pte_offset_map_lock),exp[grammar(record_ptr),exp:ident(vma),ident(vm_mm)],exp:ident(pmd),exp:ident(addr),exp:&ref:exp:ident(ptl)]]],sel_if[exp[grammar(call),exp:ident(unlikely),exp:??(N/H)],{}stmt[sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(ret),exp:const:int(0)],estmt[exp[grammar(call),exp:ident(mem_cgroup_uncharge_page),exp:ident(page)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ret),exp:const:int(0)]],statem(N/H)],estmt(NONE)],estmt[exp[grammar(call),exp:ident(inc_mm_counter),exp[grammar(record_ptr),exp:ident(vma),ident(vm_mm)],exp:ident(anon_rss)]],estmt[exp[grammar(call),exp:ident(get_page),exp:ident(page)]],estmt[exp[grammar(call),exp:ident(set_pte_at),exp[grammar(record_ptr),exp:ident(vma),ident(vm_mm)],exp:ident(addr),exp:ident(pte),exp[grammar(call),exp:ident(pte_mkold),exp[grammar(call),exp:ident(mk_pte),exp:ident(page),exp[grammar(record_ptr),exp:ident(vma),ident(vm_page_prot)]]]]],estmt[exp[grammar(call),exp:ident(page_add_anon_rmap),exp:ident(page),exp:ident(vma),exp:ident(addr)]],estmt[exp[grammar(call),exp:ident(swap_free),exp:ident(entry)]],estmt[exp[grammar(call),exp:ident(activate_page),exp:ident(page)]],statem(N/H),st_return[exp:ident(ret)]]],def[fname(unuse_pte_range),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(vma),fulltype[typec(N/H)]],param[reg(),name(pmd),fulltype[typec(N/H)]],param[reg(),name(addr),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(end),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(entry),fulltype[typec(N/H)]],param[reg(),name(page),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(pte),exp[grammar(call),exp:ident(pte_offset_map),exp:ident(pmd),exp:ident(addr)]]],statem(N/H),estmt[exp[grammar(call),exp:ident(pte_unmap),exp[grammar(binary_arith),aop(-),exp:ident(pte),exp:const:int(1)]]],statem(N/H)]],def[fname(unuse_pmd_range),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(vma),fulltype[typec(N/H)]],param[reg(),name(pud),fulltype[typec(N/H)]],param[reg(),name(addr),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(end),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(entry),fulltype[typec(N/H)]],param[reg(),name(page),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(pmd),exp[grammar(call),exp:ident(pmd_offset),exp:ident(pud),exp:ident(addr)]]],statem(N/H),st_return[exp:const:int(0)]]],def[fname(unuse_pud_range),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(vma),fulltype[typec(N/H)]],param[reg(),name(pgd),fulltype[typec(N/H)]],param[reg(),name(addr),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(end),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(entry),fulltype[typec(N/H)]],param[reg(),name(page),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(pud),exp[grammar(call),exp:ident(pud_offset),exp:ident(pgd),exp:ident(addr)]]],statem(N/H),st_return[exp:const:int(0)]]],def[fname(unuse_vma),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(vma),fulltype[typec(N/H)]],param[reg(),name(entry),fulltype[typec(N/H)]],param[reg(),name(page),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),sel_if[exp[grammar(record_ptr),exp:ident(page),ident(mapping)],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(addr),exp[grammar(call),exp:ident(page_address_in_vma),exp:ident(page),exp:ident(vma)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(addr),exp:??(N/H)],st_return[exp:const:int(0)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(end),exp[grammar(binary_arith),aop(+),exp:ident(addr),exp:ident(PAGE_SIZE)]]]]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(addr),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(end),exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)]]]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(pgd),exp[grammar(call),exp:ident(pgd_offset),exp[grammar(record_ptr),exp:ident(vma),ident(vm_mm)],exp:ident(addr)]]],statem(N/H),st_return[exp:const:int(0)]]],def[fname(unuse_mm),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(mm),fulltype[typec(N/H)]],param[reg(),name(entry),fulltype[typec(N/H)]],param[reg(),name(page),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp:??(N/H),{}stmt[estmt[exp[grammar(call),exp:ident(activate_page),exp:ident(page)]],estmt[exp[grammar(call),exp:ident(unlock_page),exp:ident(page)]],estmt[exp[grammar(call),exp:ident(down_read),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(mm),ident(mmap_sem)]]],estmt[exp[grammar(call),exp:ident(lock_page),exp:ident(page)]]],estmt(NONE)],for[exp[grammar(assign),simple_assi(=),exp:ident(vma),exp[grammar(record_ptr),exp:ident(mm),ident(mmap)]],exp:ident(vma),exp[grammar(assign),simple_assi(=),exp:ident(vma),exp[grammar(record_ptr),exp:ident(vma),ident(vm_next)]],{}stmt[sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(record_ptr),exp:ident(vma),ident(anon_vma)],exp[grammar(assign),simple_assi(=),exp:ident(ret),exp[grammar(call),exp:ident(unuse_vma),exp:ident(vma),exp:ident(entry),exp:ident(page)]]],statem(N/H),estmt(NONE)]]],estmt[exp[grammar(call),exp:ident(up_read),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(mm),ident(mmap_sem)]]],st_return[exp[grammar(cond3),exp[grammar(binary_logi),logiop(??),exp:ident(ret),exp:const:int(0)],exp:ident(ret),exp:const:int(0)]]]],def[fname(find_next_to_unuse),funtype[fulltype[ctype[btype[itype[sgn(unsigned),base(int)]]]],param[reg(),name(si),fulltype[typec(N/H)]],param[reg(),name(prev),fulltype[ctype[btype[itype[sgn(unsigned),base(int)]]]]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),for[expr(NONE),expr(NONE),expr(NONE),{}stmt[sel_if[exp[grammar(binary_logi),logiop(??),exp:??(N/H),exp:ident(max)],{}stmt[sel_if[exp:??(N/H),{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(i),exp:const:int(0)]],statem(N/H)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(max),exp[grammar(binary_arith),aop(+),exp:ident(prev),exp:const:int(1)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(prev),exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(i),exp:const:int(1)]]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(count),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(si),ident(swap_map)],exp:ident(i)]]],sel_if[exp[grammar(binary_logi),logiop(and),exp:ident(count),exp[grammar(binary_logi),logiop(??),exp:ident(count),exp:ident(SWAP_MAP_BAD)]],statem(N/H),estmt(NONE)]]],st_return[exp:ident(i)]]],def[fname(try_to_unuse),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(type),fulltype[ctype[btype[itype[sgn(unsigned),base(int)]]]]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(start_mm),exp:&ref:exp:ident(init_mm)]],estmt[exp[grammar(call),exp:ident(atomic_inc),exp[grammar(&ref),grammar(exp),grammar(record_acc),exp:ident(init_mm),ident(mm_users)]]],while[exp[grammar(binary_logi),logiop(??),exp[grammar(assign),simple_assi(=),exp:ident(i),exp[grammar(call),exp:ident(find_next_to_unuse),exp:ident(si),exp:ident(i)]],exp:const:int(0)],{}stmt[sel_if[exp[grammar(call),exp:ident(signal_pending),exp:ident(current)],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(retval),exp:??(N/H)]],statem(N/H)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(swap_map),exp[grammar(&ref),grammar(exp),grammar(array_acc),exp[grammar(record_ptr),exp:ident(si),ident(swap_map)],exp:ident(i)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(entry),exp[grammar(call),exp:ident(swp_entry),exp:ident(type),exp:ident(i)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(page),exp[grammar(call),exp:ident(read_swap_cache_async),exp:ident(entry),exp:ident(GFP_HIGHUSER_MOVABLE),exp:ident(NULL),exp:const:int(0)]]],sel_if[exp:??(N/H),{}stmt[sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(retval),exp:??(N/H)]],statem(N/H)],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(call),exp:ident(atomic_read),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(start_mm),ident(mm_users)]],exp:const:int(1)],{}stmt[estmt[exp[grammar(call),exp:ident(mmput),exp:ident(start_mm)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(start_mm),exp:&ref:exp:ident(init_mm)]],estmt[exp[grammar(call),exp:ident(atomic_inc),exp[grammar(&ref),grammar(exp),grammar(record_acc),exp:ident(init_mm),ident(mm_users)]]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(wait_on_page_locked),exp:ident(page)]],estmt[exp[grammar(call),exp:ident(wait_on_page_writeback),exp:ident(page)]],estmt[exp[grammar(call),exp:ident(lock_page),exp:ident(page)]],estmt[exp[grammar(call),exp:ident(wait_on_page_writeback),exp:ident(page)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(shmem),exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(swcount),exp:*ref:exp:ident(swap_map)]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(swcount),exp:const:int(1)],{}stmt[sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(start_mm),exp:&ref:exp:ident(init_mm)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(shmem),exp[grammar(call),exp:ident(shmem_unuse),exp:ident(entry),exp:ident(page)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(retval),exp[grammar(call),exp:ident(unuse_mm),exp:ident(start_mm),exp:ident(entry),exp:ident(page)]]]]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp:*ref:exp:ident(swap_map),exp:const:int(1)],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(atomic_inc),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(new_start_mm),ident(mm_users)]]],estmt[exp[grammar(call),exp:ident(atomic_inc),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(prev_mm),ident(mm_users)]]],estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(mmlist_lock)]],while[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp:*ref:exp:ident(swap_map),exp:const:int(1)],exp:??(N/H)],exp:??(N/H)],exp[grammar(binary_logi),logiop(??),exp[grammar(assign),simple_assi(=),exp:ident(p),exp[grammar(record_ptr),exp:ident(p),ident(next)]],exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(start_mm),ident(mmlist)]]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(mm),exp[grammar(call),exp:ident(list_entry),exp:ident(p),argtype(N/H),exp:ident(mmlist)]]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(mmlist_lock)]],estmt[exp[grammar(call),exp:ident(mmput),exp:ident(prev_mm)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(prev_mm),exp:ident(mm)]],estmt[exp[grammar(call),exp:ident(cond_resched)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(swcount),exp:*ref:exp:ident(swap_map)]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(swcount),exp:const:int(1)],estmt(NONE),sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(mm),exp:&ref:exp:ident(init_mm)],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(set_start_mm),exp:const:int(1)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(shmem),exp[grammar(call),exp:ident(shmem_unuse),exp:ident(entry),exp:ident(page)]]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(retval),exp[grammar(call),exp:ident(unuse_mm),exp:ident(mm),exp:ident(entry),exp:ident(page)]]]]],sel_if[exp[grammar(binary_logi),logiop(and),exp:ident(set_start_mm),exp[grammar(binary_logi),logiop(??),exp:*ref:exp:ident(swap_map),exp:ident(swcount)]],{}stmt[estmt[exp[grammar(call),exp:ident(mmput),exp:ident(new_start_mm)]],estmt[exp[grammar(call),exp:ident(atomic_inc),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(mm),ident(mm_users)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(new_start_mm),exp:ident(mm)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(set_start_mm),exp:const:int(0)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(mmlist_lock)]]]],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(mmlist_lock)]],estmt[exp[grammar(call),exp:ident(mmput),exp:ident(prev_mm)]],estmt[exp[grammar(call),exp:ident(mmput),exp:ident(start_mm)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(start_mm),exp:ident(new_start_mm)]]],estmt(NONE)],sel_if[exp:ident(shmem),{}stmt[sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(shmem),exp:const:int(0)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(retval),exp:ident(shmem)]],statem(N/H)],estmt(NONE)],sel_if[exp:ident(retval),{}stmt[estmt[exp[grammar(call),exp:ident(unlock_page),exp:ident(page)]],estmt[exp[grammar(call),exp:ident(page_cache_release),exp:ident(page)]],statem(N/H)],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(eq),exp:*ref:exp:ident(swap_map),exp:ident(SWAP_MAP_MAX)],{}stmt[estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(swap_lock)]],estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(swap_map),exp:const:int(1)]],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(reset_overflow),exp:const:int(1)]]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp:*ref:exp:ident(swap_map),exp:const:int(1)],exp[grammar(call),exp:ident(PageDirty),exp:ident(page)]],exp[grammar(call),exp:ident(PageSwapCache),exp:ident(page)]],{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(swap_writepage),exp:ident(page),exp:&ref:exp:ident(wbc)]],estmt[exp[grammar(call),exp:ident(lock_page),exp:ident(page)]],estmt[exp[grammar(call),exp:ident(wait_on_page_writeback),exp:ident(page)]]],estmt(NONE)],sel_if[exp[grammar(call),exp:ident(PageSwapCache),exp:ident(page)],estmt[exp[grammar(call),exp:ident(delete_from_swap_cache),exp:ident(page)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(SetPageDirty),exp:ident(page)]],estmt[exp[grammar(call),exp:ident(unlock_page),exp:ident(page)]],estmt[exp[grammar(call),exp:ident(page_cache_release),exp:ident(page)]],estmt[exp[grammar(call),exp:ident(cond_resched)]]]],estmt[exp[grammar(call),exp:ident(mmput),exp:ident(start_mm)]],sel_if[exp:ident(reset_overflow),{}stmt[estmt[exp[grammar(call),exp:ident(printk),exp:const:other(N/H)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(swap_overflow),exp:const:int(0)]]],estmt(NONE)],st_return[exp:ident(retval)]]],def[fname(drain_mmlist),funtype[fulltype[ctype[btype(void)]],param[reg(),name(),fulltype[ctype[btype(void)]]]],{}stmt[statem(N/H),statem(N/H),for[exp[grammar(assign),simple_assi(=),exp:ident(i),exp:const:int(0)],exp[grammar(binary_logi),logiop(??),exp:ident(i),exp:ident(nr_swapfiles)],exp:??(N/H),sel_if[exp[grammar(record_acc),exp[grammar(array_acc),exp:ident(swap_info),exp:ident(i)],ident(inuse_pages)],statem(N/H),estmt(NONE)]],estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(mmlist_lock)]],statem(N/H),estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(mmlist_lock)]]]],def[fname(map_swap_page),funtype[fulltype[typec(N/H)],param[reg(),name(sis),fulltype[typec(N/H)]],param[reg(),name(offset),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),for[expr(NONE),expr(NONE),expr(NONE),{}stmt[statem(N/H),sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(se),ident(start_page)],exp:ident(offset)],exp[grammar(binary_logi),logiop(??),exp:ident(offset),exp[grammar(binary_arith),aop(+),exp[grammar(record_ptr),exp:ident(se),ident(start_page)],exp[grammar(record_ptr),exp:ident(se),ident(nr_pages)]]]],{}stmt[st_return[exp[grammar(binary_arith),aop(+),exp[grammar(record_ptr),exp:ident(se),ident(start_block)],exp[grammar(binary_arith),aop(-),exp:ident(offset),exp[grammar(record_ptr),exp:ident(se),ident(start_page)]]]]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(lh),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(se),ident(list)],ident(next)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(lh),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(sis),ident(extent_list)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(lh),exp[grammar(record_ptr),exp:ident(lh),ident(next)]]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(se),exp[grammar(call),exp:ident(list_entry),exp:ident(lh),argtype(N/H),exp:ident(list)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(sis),ident(curr_swap_extent)],exp:ident(se)]],estmt[exp[grammar(call),exp:ident(BUG_ON),exp[grammar(binary_logi),logiop(eq),exp:ident(se),exp:ident(start_se)]]]]]]],def[fname(swapdev_block),funtype[fulltype[typec(N/H)],param[reg(),name(swap_type),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(offset),fulltype[typec(N/H)]]],{}stmt[statem(N/H),sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(swap_type),exp:ident(nr_swapfiles)],st_return[exp:const:int(0)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(sis),exp[grammar(binary_arith),aop(+),exp:ident(swap_info),exp:ident(swap_type)]]],st_return[exp[grammar(cond3),exp[grammar(binary_arith),aop(&),exp[grammar(record_ptr),exp:ident(sis),ident(flags)],exp:ident(SWP_WRITEOK)],exp[grammar(call),exp:ident(map_swap_page),exp:ident(sis),exp:ident(offset)],exp:const:int(0)]]]],def[fname(destroy_swap_extents),funtype[fulltype[ctype[btype(void)]],param[reg(),name(sis),fulltype[typec(N/H)]]],{}stmt[while[exp:??(N/H),{}stmt[statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(se),exp[grammar(call),exp:ident(list_entry),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(sis),ident(extent_list)],ident(next)],argtype(N/H),exp:ident(list)]]],estmt[exp[grammar(call),exp:ident(list_del),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(se),ident(list)]]],estmt[exp[grammar(call),exp:ident(kfree),exp:ident(se)]]]]]],def[fname(add_swap_extent),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(sis),fulltype[typec(N/H)]],param[reg(),name(start_page),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(nr_pages),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(start_block),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(lh),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(sis),ident(extent_list)],ident(prev)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(lh),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(sis),ident(extent_list)]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(se),exp[grammar(call),exp:ident(list_entry),exp:ident(lh),argtype(N/H),exp:ident(list)]]],estmt[exp[grammar(call),exp:ident(BUG_ON),exp[grammar(binary_logi),logiop(??),exp[grammar(binary_arith),aop(+),exp[grammar(record_ptr),exp:ident(se),ident(start_page)],exp[grammar(record_ptr),exp:ident(se),ident(nr_pages)]],exp:ident(start_page)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(binary_arith),aop(+),exp[grammar(record_ptr),exp:ident(se),ident(start_block)],exp[grammar(record_ptr),exp:ident(se),ident(nr_pages)]],exp:ident(start_block)],{}stmt[estmt[exp[grammar(assign),op_assi(+=),exp[grammar(record_ptr),exp:ident(se),ident(nr_pages)],exp:ident(nr_pages)]],st_return[exp:const:int(0)]],estmt(NONE)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(new_se),exp[grammar(call),exp:ident(kmalloc),exp:sizeof:exp:*ref:exp:ident(se),exp:ident(GFP_KERNEL)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(new_se),exp:ident(NULL)],st_return[exp:??(N/H)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(new_se),ident(start_page)],exp:ident(start_page)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(new_se),ident(nr_pages)],exp:ident(nr_pages)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(new_se),ident(start_block)],exp:ident(start_block)]],estmt[exp[grammar(call),exp:ident(list_add_tail),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(new_se),ident(list)],exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(sis),ident(extent_list)]]],st_return[exp:const:int(1)]]],def[fname(setup_swap_extents),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(sis),fulltype[typec(N/H)]],param[reg(),name(span),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(inode),exp[grammar(record_ptr),exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(sis),ident(swap_file)],ident(f_mapping)],ident(host)]]],sel_if[exp[grammar(call),exp:ident(S_ISBLK),exp[grammar(record_ptr),exp:ident(inode),ident(i_mode)]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(ret),exp[grammar(call),exp:ident(add_swap_extent),exp:ident(sis),exp:const:int(0),exp[grammar(record_ptr),exp:ident(sis),ident(max)],exp:const:int(0)]]],estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(span),exp[grammar(record_ptr),exp:ident(sis),ident(pages)]]],statem(N/H)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(blkbits),exp[grammar(record_ptr),exp:ident(inode),ident(i_blkbits)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(blocks_per_page),exp[grammar(binary_arith),aop(>>),exp:ident(PAGE_SIZE),exp:ident(blkbits)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(probe_block),exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(page_no),exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(last_block),exp[grammar(binary_arith),aop(>>),exp[grammar(call),exp:ident(i_size_read),exp:ident(inode)],exp:ident(blkbits)]]],while[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp[grammar(binary_arith),aop(+),exp:ident(probe_block),exp:ident(blocks_per_page)],exp:ident(last_block)],exp[grammar(binary_logi),logiop(??),exp:ident(page_no),exp[grammar(record_ptr),exp:ident(sis),ident(max)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(first_block),exp[grammar(call),exp:ident(bmap),exp:ident(inode),exp:ident(probe_block)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(first_block),exp:const:int(0)],statem(N/H),estmt(NONE)],sel_if[exp[grammar(binary_arith),aop(&),exp:ident(first_block),exp[grammar(binary_arith),aop(-),exp:ident(blocks_per_page),exp:const:int(1)]],{}stmt[estmt[exp:??(N/H)],statem(N/H)],estmt(NONE)],for[exp[grammar(assign),simple_assi(=),exp:ident(block_in_page),exp:const:int(1)],exp[grammar(binary_logi),logiop(??),exp:ident(block_in_page),exp:ident(blocks_per_page)],exp:??(N/H),{}stmt[statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(block),exp[grammar(call),exp:ident(bmap),exp:ident(inode),exp[grammar(binary_arith),aop(+),exp:ident(probe_block),exp:ident(block_in_page)]]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(block),exp:const:int(0)],statem(N/H),estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(block),exp[grammar(binary_arith),aop(+),exp:ident(first_block),exp:ident(block_in_page)]],{}stmt[estmt[exp:??(N/H)],statem(N/H)],estmt(NONE)]]],estmt[exp[grammar(assign),op_assi(N/H),exp:ident(first_block),exp[grammar(binary_arith),aop(-),exp:ident(PAGE_SHIFT),exp:ident(blkbits)]]],sel_if[exp:ident(page_no),{}stmt[sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(first_block),exp:ident(lowest_block)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(lowest_block),exp:ident(first_block)]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(first_block),exp:ident(highest_block)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(highest_block),exp:ident(first_block)]],estmt(NONE)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ret),exp[grammar(call),exp:ident(add_swap_extent),exp:ident(sis),exp:ident(page_no),exp:const:int(1),exp:ident(first_block)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(ret),exp:const:int(0)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),op_assi(+=),exp:ident(nr_extents),exp:ident(ret)]],estmt[exp:??(N/H)],estmt[exp[grammar(assign),op_assi(+=),exp:ident(probe_block),exp:ident(blocks_per_page)]],statem(N/H)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ret),exp:ident(nr_extents)]],estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(span),exp[grammar(binary_arith),aop(-),exp[grammar(binary_arith),aop(+),exp:const:int(1),exp:ident(highest_block)],exp:ident(lowest_block)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(page_no),exp:const:int(0)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(page_no),exp:const:int(1)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(sis),ident(max)],exp:ident(page_no)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(sis),ident(pages)],exp[grammar(binary_arith),aop(-),exp:ident(page_no),exp:const:int(1)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(sis),ident(highest_bit)],exp[grammar(binary_arith),aop(-),exp:ident(page_no),exp:const:int(1)]]],statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(ret),exp:??(N/H)]],statem(N/H)]],includeN[inc_elem(linux),inc_elem(backing-dev.h)],def[fname(page_queue_congested),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(page),fulltype[typec(N/H)]]],{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(BUG_ON),exp:??(N/H)]],sel_if[exp[grammar(call),exp:ident(PageSwapCache),exp:ident(page)],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(sis),exp[grammar(call),exp:ident(get_swap_info_struct),exp[grammar(call),exp:ident(swp_type),exp:ident(entry)]]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(bdi),exp[grammar(record_ptr),exp[grammar(record_ptr),exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(sis),ident(bdev)],ident(bd_inode)],ident(i_mapping)],ident(backing_dev_info)]]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(bdi),exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(page),ident(mapping)],ident(backing_dev_info)]]]],st_return[exp[grammar(call),exp:ident(bdi_write_congested),exp:ident(bdi)]]]],NCP(N/H),def[fname(swap_start),funtype[fulltype[typec(N/H)],param[reg(),name(swap),fulltype[typec(N/H)]],param[reg(),name(pos),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(mutex_lock),exp:&ref:exp:ident(swapon_mutex)]],sel_if[exp:??(N/H),st_return[exp:ident(SEQ_START_TOKEN)],estmt(NONE)],for[exp[grammar(assign),simple_assi(=),exp:ident(i),exp:const:int(0)],exp[grammar(binary_logi),logiop(??),exp:ident(i),exp:ident(nr_swapfiles)],exp:??(N/H),{}stmt[sel_if[exp[grammar(binary_logi),logiop(or),exp:??(N/H),exp:??(N/H)],statem(N/H),estmt(NONE)],sel_if[exp:??(N/H),st_return[exp:ident(ptr)],estmt(NONE)]]],st_return[exp:ident(NULL)]]],def[fname(swap_next),funtype[fulltype[typec(N/H)],param[reg(),name(swap),fulltype[typec(N/H)]],param[reg(),name(v),fulltype[typec(N/H)]],param[reg(),name(pos),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(v),exp:ident(SEQ_START_TOKEN)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ptr),exp:ident(swap_info)]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(ptr),exp:ident(v)]],estmt[exp:??(N/H)]]],for[expr(NONE),exp[grammar(binary_logi),logiop(??),exp:ident(ptr),exp:ident(endptr)],exp:??(N/H),{}stmt[sel_if[exp[grammar(binary_logi),logiop(or),exp:??(N/H),exp:??(N/H)],statem(N/H),estmt(NONE)],estmt[exp:??(N/H)],st_return[exp:ident(ptr)]]],st_return[exp:ident(NULL)]]],def[fname(swap_stop),funtype[fulltype[ctype[btype(void)]],param[reg(),name(swap),fulltype[typec(N/H)]],param[reg(),name(v),fulltype[typec(N/H)]]],{}stmt[estmt[exp[grammar(call),exp:ident(mutex_unlock),exp:&ref:exp:ident(swapon_mutex)]]]],def[fname(swap_show),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(swap),fulltype[typec(N/H)]],param[reg(),name(v),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(ptr),exp:ident(SEQ_START_TOKEN)],{}stmt[estmt[exp[grammar(call),exp:ident(seq_puts),exp:ident(swap),exp:const:string(Filename\t\t\t\tType\t\tSize\tUsed\tPriority\n)]],st_return[exp:const:int(0)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(file),exp[grammar(record_ptr),exp:ident(ptr),ident(swap_file)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(len),exp[grammar(call),exp:ident(seq_path),exp:ident(swap),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(file),ident(f_path)],exp:const:string( \t\n\\)]]],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(swap),exp:const:string(%*s%s\t%u\t%u\t%d\n),exp[grammar(cond3),exp[grammar(binary_logi),logiop(??),exp:ident(len),exp:const:int(40)],exp[grammar(binary_arith),aop(-),exp:const:int(40),exp:ident(len)],exp:const:int(1)],exp:const:string( ),exp[grammar(cond3),exp[grammar(call),exp:ident(S_ISBLK),exp[grammar(record_ptr),exp[grammar(record_ptr),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(file),ident(f_path)],ident(dentry)],ident(d_inode)],ident(i_mode)]],exp:const:string(partition),exp:const:string(file\t)],exp[grammar(binary_arith),aop(<<),exp[grammar(record_ptr),exp:ident(ptr),ident(pages)],exp[grammar(binary_arith),aop(-),exp:ident(PAGE_SHIFT),exp:const:int(10)]],exp[grammar(binary_arith),aop(<<),exp[grammar(record_ptr),exp:ident(ptr),ident(inuse_pages)],exp[grammar(binary_arith),aop(-),exp:ident(PAGE_SHIFT),exp:const:int(10)]],exp[grammar(record_ptr),exp:ident(ptr),ident(prio)]]],st_return[exp:const:int(0)]]],decl(N/H),def[fname(swaps_open),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(inode),fulltype[typec(N/H)]],param[reg(),name(file),fulltype[typec(N/H)]]],{}stmt[st_return[exp[grammar(call),exp:ident(seq_open),exp:ident(file),exp:&ref:exp:ident(swaps_op)]]]],decl(N/H),NCP(N/H),mtop(N/H),NCP(N/H),def[fname(si_swapinfo),funtype[fulltype[ctype[btype(void)]],param[reg(),name(val),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(swap_lock)]],for[exp[grammar(assign),simple_assi(=),exp:ident(i),exp:const:int(0)],exp[grammar(binary_logi),logiop(??),exp:ident(i),exp:ident(nr_swapfiles)],exp:??(N/H),{}stmt[sel_if[exp[grammar(binary_logi),logiop(or),exp:??(N/H),exp[grammar(binary_arith),aop(&),exp[grammar(record_acc),exp[grammar(array_acc),exp:ident(swap_info),exp:ident(i)],ident(flags)],exp:ident(SWP_WRITEOK)]],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),op_assi(+=),exp:ident(nr_to_be_unused),exp[grammar(record_acc),exp[grammar(array_acc),exp:ident(swap_info),exp:ident(i)],ident(inuse_pages)]]]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(val),ident(freeswap)],exp[grammar(binary_arith),aop(+),exp:ident(nr_swap_pages),exp:ident(nr_to_be_unused)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(val),ident(totalswap)],exp[grammar(binary_arith),aop(+),exp:ident(total_swap_pages),exp:ident(nr_to_be_unused)]]],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]]]],def[fname(swap_duplicate),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(entry),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),sel_if[exp[grammar(call),exp:ident(is_migration_entry),exp:ident(entry)],st_return[exp:const:int(1)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(type),exp[grammar(call),exp:ident(swp_type),exp:ident(entry)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(type),exp:ident(nr_swapfiles)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(p),exp[grammar(binary_arith),aop(+),exp:ident(type),exp:ident(swap_info)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(offset),exp[grammar(call),exp:ident(swp_offset),exp:ident(entry)]]],estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(swap_lock)]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp:ident(offset),exp[grammar(record_ptr),exp:ident(p),ident(max)]],exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(p),ident(swap_map)],exp:ident(offset)]],{}stmt[sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(p),ident(swap_map)],exp:ident(offset)],exp[grammar(binary_arith),aop(-),exp:ident(SWAP_MAP_MAX),exp:const:int(1)]],{}stmt[estmt[exp:??(N/H)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(result),exp:const:int(1)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(p),ident(swap_map)],exp:ident(offset)],exp:ident(SWAP_MAP_MAX)],{}stmt[sel_if[exp[grammar(binary_logi),logiop(??),exp:??(N/H),exp:const:int(5)],estmt[exp[grammar(call),exp:ident(printk),exp:const:other(N/H)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(p),ident(swap_map)],exp:ident(offset)],exp:ident(SWAP_MAP_MAX)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(result),exp:const:int(1)]]],estmt(NONE)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]],statem(N/H),statem(N/H),statem(N/H)]],def[fname(get_swap_info_struct),funtype[fulltype[typec(N/H)],param[reg(),name(type),fulltype[ctype[btype[itype[sgn(unsigned),base(int)]]]]]],{}stmt[st_return[exp[grammar(&ref),grammar(exp),grammar(array_acc),exp:ident(swap_info),exp:ident(type)]]]],def[fname(valid_swaphandles),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(entry),fulltype[typec(N/H)]],param[reg(),name(offset),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),sel_if[exp:??(N/H),st_return[exp:const:int(0)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(si),exp[grammar(&ref),grammar(exp),grammar(array_acc),exp:ident(swap_info),exp[grammar(call),exp:ident(swp_type),exp:ident(entry)]]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(target),exp[grammar(call),exp:ident(swp_offset),exp:ident(entry)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(base),exp[grammar(binary_arith),aop(<<),exp[grammar(binary_arith),aop(>>),exp:ident(target),exp:ident(our_page_cluster)],exp:ident(our_page_cluster)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(end),exp[grammar(binary_arith),aop(+),exp:ident(base),exp[grammar(binary_arith),aop(<<),exp:const:int(1),exp:ident(our_page_cluster)]]]],sel_if[exp:??(N/H),estmt[exp:??(N/H)],estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_lock),exp:&ref:exp:ident(swap_lock)]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(end),exp[grammar(record_ptr),exp:ident(si),ident(max)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(end),exp[grammar(record_ptr),exp:ident(si),ident(max)]]],estmt(NONE)],for[exp[grammar(assign),simple_assi(=),exp:ident(toff),exp:ident(target)],exp[grammar(binary_logi),logiop(??),exp:??(N/H),exp:ident(end)],exp:??(N/H),{}stmt[sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(si),ident(swap_map)],exp:ident(toff)],exp:ident(SWAP_MAP_BAD)],statem(N/H),estmt(NONE)]]],for[exp[grammar(assign),simple_assi(=),exp:ident(toff),exp:ident(target)],exp[grammar(binary_logi),logiop(??),exp:??(N/H),exp:ident(base)],exp:??(N/H),{}stmt[sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(si),ident(swap_map)],exp:ident(toff)],exp:ident(SWAP_MAP_BAD)],statem(N/H),estmt(NONE)]]],estmt[exp[grammar(call),exp:ident(spin_unlock),exp:&ref:exp:ident(swap_lock)]],estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(offset),exp:??(N/H)]],st_return[exp[grammar(cond3),exp:ident(nr_pages),exp:??(N/H),exp:const:int(0)]]]]]
[Diff] resulting abstract updates: 1
[Main] Making safe parts for pair 2
prg2[includeN[inc_elem(linux),inc_elem(mempolicy.h)],includeN[inc_elem(linux),inc_elem(mm.h)],includeN[inc_elem(linux),inc_elem(highmem.h)],includeN[inc_elem(linux),inc_elem(hugetlb.h)],includeN[inc_elem(linux),inc_elem(kernel.h)],includeN[inc_elem(linux),inc_elem(sched.h)],includeN[inc_elem(linux),inc_elem(nodemask.h)],includeN[inc_elem(linux),inc_elem(cpuset.h)],includeN[inc_elem(linux),inc_elem(gfp.h)],includeN[inc_elem(linux),inc_elem(slab.h)],includeN[inc_elem(linux),inc_elem(string.h)],includeN[inc_elem(linux),inc_elem(module.h)],includeN[inc_elem(linux),inc_elem(nsproxy.h)],includeN[inc_elem(linux),inc_elem(interrupt.h)],includeN[inc_elem(linux),inc_elem(init.h)],includeN[inc_elem(linux),inc_elem(compat.h)],includeN[inc_elem(linux),inc_elem(swap.h)],includeN[inc_elem(linux),inc_elem(seq_file.h)],includeN[inc_elem(linux),inc_elem(proc_fs.h)],includeN[inc_elem(linux),inc_elem(migrate.h)],includeN[inc_elem(linux),inc_elem(rmap.h)],includeN[inc_elem(linux),inc_elem(security.h)],includeN[inc_elem(linux),inc_elem(syscalls.h)],includeN[inc_elem(asm),inc_elem(tlbflush.h)],includeN[inc_elem(asm),inc_elem(uaccess.h)],define(N/H),define(N/H),define(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),def[fname(mpol_check_policy),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(mode),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(nodes),fulltype[typec(N/H)]]],{}stmt[statem(N/H),sel_if[exp:??(N/H),st_return[exp:const:int(0)],estmt(NONE)],estmt[exp[grammar(call),exp:ident(cpuset_update_task_memory_state)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(is_empty),exp[grammar(assign),simple_assi(=),exp:ident(was_empty),exp[grammar(call),exp:ident(nodes_empty),exp:*ref:exp:ident(nodes)]]]],sel_if[exp:??(N/H),{}stmt[estmt[exp[grammar(call),exp:ident(nodes_and),exp:*ref:exp:ident(nodes),exp:*ref:exp:ident(nodes),exp:ident(cpuset_current_mems_allowed)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(is_empty),exp[grammar(call),exp:ident(nodes_empty),exp:*ref:exp:ident(nodes)]]]],estmt(NONE)],statem(N/H),st_return[exp:const:int(0)]]],def[fname(bind_zonelist),funtype[fulltype[typec(N/H)],param[reg(),name(nodes),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(max),exp[grammar(binary_arith),aop(+),exp:const:int(1),exp[grammar(binary_arith),aop(*),exp:ident(MAX_NR_ZONES),exp[grammar(call),exp:ident(nodes_weight),exp:*ref:exp:ident(nodes)]]]]],estmt[exp:??(N/H)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(zl),exp[grammar(call),exp:ident(kmalloc),exp[grammar(binary_arith),aop(*),exp[grammar(sizeoftype),grammar(fulltype),typec(N/H)],exp:ident(max)],exp:ident(GFP_KERNEL)]]],sel_if[exp:??(N/H),st_return[exp[grammar(call),exp:ident(ERR_PTR),exp:??(N/H)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(zl),ident(zlcache_ptr)],exp:ident(NULL)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(num),exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(k),exp[grammar(binary_arith),aop(-),exp:ident(MAX_NR_ZONES),exp:const:int(1)]]],while[exp:const:int(1),{}stmt[statem(N/H),sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(k),exp:const:int(0)],statem(N/H),estmt(NONE)],estmt[exp:??(N/H)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(num),exp:const:int(0)],{}stmt[estmt[exp[grammar(call),exp:ident(kfree),exp:ident(zl)]],st_return[exp[grammar(call),exp:ident(ERR_PTR),exp:??(N/H)]]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(zl),ident(zones)],exp:ident(num)],exp:ident(NULL)]],st_return[exp:ident(zl)]]],def[fname(mpol_new),funtype[fulltype[typec(N/H)],param[reg(),name(mode),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(nodes),fulltype[typec(N/H)]]],{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(pr_debug),exp:const:string(setting mode %d nodes[0] %lx\n),exp:ident(mode),exp[grammar(cond3),exp:ident(nodes),exp[grammar(array_acc),exp[grammar(call),exp:ident(nodes_addr),exp:*ref:exp:ident(nodes)],exp:const:int(0)],exp:??(N/H)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(mode),exp:ident(MPOL_DEFAULT)],st_return[exp:ident(NULL)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(policy),exp[grammar(call),exp:ident(kmem_cache_alloc),exp:ident(policy_cache),exp:ident(GFP_KERNEL)]]],sel_if[exp:??(N/H),st_return[exp[grammar(call),exp:ident(ERR_PTR),exp:??(N/H)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(atomic_set),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(policy),ident(refcnt)],exp:const:int(1)]],statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(policy),ident(policy)],exp:ident(mode)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(policy),ident(cpuset_mems_allowed)],exp[grammar(call),exp:ident(cpuset_mems_allowed),exp:ident(current)]]],st_return[exp:ident(policy)]]],decl(N/H),decl(N/H),def[fname(check_pte_range),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(vma),fulltype[typec(N/H)]],param[reg(),name(pmd),fulltype[typec(N/H)]],param[reg(),name(addr),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(end),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(nodes),fulltype[typec(N/H)]],param[reg(),name(flags),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(private),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(orig_pte),exp[grammar(assign),simple_assi(=),exp:ident(pte),exp[grammar(call),exp:ident(pte_offset_map_lock),exp[grammar(record_ptr),exp:ident(vma),ident(vm_mm)],exp:ident(pmd),exp:ident(addr),exp:&ref:exp:ident(ptl)]]]],statem(N/H),estmt[exp[grammar(call),exp:ident(pte_unmap_unlock),exp:ident(orig_pte),exp:ident(ptl)]],st_return[exp[grammar(binary_logi),logiop(??),exp:ident(addr),exp:ident(end)]]]],def[fname(check_pmd_range),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(vma),fulltype[typec(N/H)]],param[reg(),name(pud),fulltype[typec(N/H)]],param[reg(),name(addr),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(end),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(nodes),fulltype[typec(N/H)]],param[reg(),name(flags),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(private),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(pmd),exp[grammar(call),exp:ident(pmd_offset),exp:ident(pud),exp:ident(addr)]]],statem(N/H),st_return[exp:const:int(0)]]],def[fname(check_pud_range),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(vma),fulltype[typec(N/H)]],param[reg(),name(pgd),fulltype[typec(N/H)]],param[reg(),name(addr),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(end),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(nodes),fulltype[typec(N/H)]],param[reg(),name(flags),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(private),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(pud),exp[grammar(call),exp:ident(pud_offset),exp:ident(pgd),exp:ident(addr)]]],statem(N/H),st_return[exp:const:int(0)]]],def[fname(check_pgd_range),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(vma),fulltype[typec(N/H)]],param[reg(),name(addr),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(end),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(nodes),fulltype[typec(N/H)]],param[reg(),name(flags),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(private),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(pgd),exp[grammar(call),exp:ident(pgd_offset),exp[grammar(record_ptr),exp:ident(vma),ident(vm_mm)],exp:ident(addr)]]],statem(N/H),st_return[exp:const:int(0)]]],def[fname(check_range),funtype[fulltype[typec(N/H)],param[reg(),name(mm),fulltype[typec(N/H)]],param[reg(),name(start),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(end),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(nodes),fulltype[typec(N/H)]],param[reg(),name(flags),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(private),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp[grammar(binary_arith),aop(&),exp:ident(flags),exp[grammar(binary_arith),aop(|),exp:ident(MPOL_MF_MOVE),exp:ident(MPOL_MF_MOVE_ALL)]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(migrate_prep)]]],sel_if[exp:ident(err),st_return[exp[grammar(call),exp:ident(ERR_PTR),exp:ident(err)]],estmt(NONE)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(first),exp[grammar(call),exp:ident(find_vma),exp:ident(mm),exp:ident(start)]]],sel_if[exp:??(N/H),st_return[exp[grammar(call),exp:ident(ERR_PTR),exp:??(N/H)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(prev),exp:ident(NULL)]],for[exp[grammar(assign),simple_assi(=),exp:ident(vma),exp:ident(first)],exp[grammar(binary_logi),logiop(and),exp:ident(vma),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp:ident(end)]],exp[grammar(assign),simple_assi(=),exp:ident(vma),exp[grammar(record_ptr),exp:ident(vma),ident(vm_next)]],{}stmt[sel_if[exp:??(N/H),{}stmt[sel_if[exp[grammar(binary_logi),logiop(and),exp:??(N/H),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp:ident(end)]],st_return[exp[grammar(call),exp:ident(ERR_PTR),exp:??(N/H)]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(and),exp:ident(prev),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(prev),ident(vm_end)],exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)]]],st_return[exp[grammar(call),exp:ident(ERR_PTR),exp:??(N/H)]],estmt(NONE)]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(and),exp:??(N/H),exp[grammar(binary_logi),logiop(or),exp[grammar(binary_arith),aop(&),exp:ident(flags),exp:ident(MPOL_MF_STRICT)],exp[grammar(binary_logi),logiop(and),exp[grammar(binary_arith),aop(&),exp:ident(flags),exp[grammar(binary_arith),aop(|),exp:ident(MPOL_MF_MOVE),exp:ident(MPOL_MF_MOVE_ALL)]],exp[grammar(call),exp:ident(vma_migratable),exp:ident(vma)]]]],{}stmt[statem(N/H),sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(endvma),exp:ident(end)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(endvma),exp:ident(end)]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp:ident(start)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(start),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)]]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(check_pgd_range),exp:ident(vma),exp:ident(start),exp:ident(endvma),exp:ident(nodes),exp:ident(flags),exp:ident(private)]]],sel_if[exp:ident(err),{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(first),exp[grammar(call),exp:ident(ERR_PTR),exp:ident(err)]]],statem(N/H)],estmt(NONE)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(prev),exp:ident(vma)]]]],st_return[exp:ident(first)]]],def[fname(policy_vma),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(vma),fulltype[typec(N/H)]],param[reg(),name(new),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(pr_debug),exp:const:string(vma %lx-%lx/%lx vm_ops %p vm_file %p set_policy %p\n),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp[grammar(record_ptr),exp:ident(vma),ident(vm_pgoff)],exp[grammar(record_ptr),exp:ident(vma),ident(vm_ops)],exp[grammar(record_ptr),exp:ident(vma),ident(vm_file)],exp[grammar(cond3),exp[grammar(record_ptr),exp:ident(vma),ident(vm_ops)],exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(vma),ident(vm_ops)],ident(set_policy)],exp:ident(NULL)]]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(record_ptr),exp:ident(vma),ident(vm_ops)],exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(vma),ident(vm_ops)],ident(set_policy)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(vma),ident(vm_ops)],ident(set_policy)],exp:ident(vma),exp:ident(new)]]],estmt(NONE)],sel_if[exp:??(N/H),{}stmt[estmt[exp[grammar(call),exp:ident(mpol_get),exp:ident(new)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(vma),ident(vm_policy)],exp:ident(new)]],estmt[exp[grammar(call),exp:ident(mpol_free),exp:ident(old)]]],estmt(NONE)],st_return[exp:ident(err)]]],def[fname(mbind_range),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(vma),fulltype[typec(N/H)]],param[reg(),name(start),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(end),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(new),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:const:int(0)]],for[expr(NONE),exp[grammar(binary_logi),logiop(and),exp:ident(vma),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp:ident(end)]],exp[grammar(assign),simple_assi(=),exp:ident(vma),exp:ident(next)],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(next),exp[grammar(record_ptr),exp:ident(vma),ident(vm_next)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp:ident(start)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(split_vma),exp[grammar(record_ptr),exp:ident(vma),ident(vm_mm)],exp:ident(vma),exp:ident(start),exp:const:int(1)]]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(and),exp:??(N/H),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp:ident(end)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(split_vma),exp[grammar(record_ptr),exp:ident(vma),ident(vm_mm)],exp:ident(vma),exp:ident(end),exp:const:int(0)]]],estmt(NONE)],sel_if[exp:??(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(policy_vma),exp:ident(vma),exp:ident(new)]]],estmt(NONE)],sel_if[exp:ident(err),statem(N/H),estmt(NONE)]]],st_return[exp:ident(err)]]],def[fname(mpol_fix_fork_child_flag),funtype[fulltype[ctype[btype(void)]],param[reg(),name(p),fulltype[typec(N/H)]]],{}stmt[sel_if[exp[grammar(record_ptr),exp:ident(p),ident(mempolicy)],estmt[exp[grammar(assign),op_assi(|=),exp[grammar(record_ptr),exp:ident(p),ident(flags)],exp:ident(PF_MEMPOLICY)]],estmt[exp[grammar(assign),op_assi(&=),exp[grammar(record_ptr),exp:ident(p),ident(flags)],exp:??(N/H)]]]]],def[fname(mpol_set_task_struct_flag),funtype[fulltype[ctype[btype(void)]],param[reg(),name(),fulltype[ctype[btype(void)]]]],{}stmt[estmt[exp[grammar(call),exp:ident(mpol_fix_fork_child_flag),exp:ident(current)]]]],def[fname(do_set_mempolicy),funtype[fulltype[ctype[btype[itype[sgn(signed),base(long)]]]],param[reg(),name(mode),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(nodes),fulltype[typec(N/H)]]],{}stmt[statem(N/H),sel_if[exp[grammar(call),exp:ident(mpol_check_policy),exp:ident(mode),exp:ident(nodes)],st_return[exp:??(N/H)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(new),exp[grammar(call),exp:ident(mpol_new),exp:ident(mode),exp:ident(nodes)]]],sel_if[exp[grammar(call),exp:ident(IS_ERR),exp:ident(new)],st_return[exp[grammar(call),exp:ident(PTR_ERR),exp:ident(new)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(mpol_free),exp[grammar(record_ptr),exp:ident(current),ident(mempolicy)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(current),ident(mempolicy)],exp:ident(new)]],estmt[exp[grammar(call),exp:ident(mpol_set_task_struct_flag)]],sel_if[exp[grammar(binary_logi),logiop(and),exp:ident(new),exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(new),ident(policy)],exp:ident(MPOL_INTERLEAVE)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(current),ident(il_next)],exp[grammar(call),exp:ident(first_node),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(new),ident(v)],ident(nodes)]]]],estmt(NONE)],st_return[exp:const:int(0)]]],def[fname(get_zonemask),funtype[fulltype[ctype[btype(void)]],param[reg(),name(p),fulltype[typec(N/H)]],param[reg(),name(nodes),fulltype[typec(N/H)]]],{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(nodes_clear),exp:*ref:exp:ident(nodes)]],statem(N/H)]],def[fname(lookup_node),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(mm),fulltype[typec(N/H)]],param[reg(),name(addr),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(get_user_pages),exp:ident(current),exp:ident(mm),exp[grammar(binary_arith),aop(&),exp:ident(addr),exp:ident(PAGE_MASK)],exp:const:int(1),exp:const:int(0),exp:const:int(0),exp:&ref:exp:ident(p),exp:ident(NULL)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(err),exp:const:int(0)],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(page_to_nid),exp:ident(p)]]],estmt[exp[grammar(call),exp:ident(put_page),exp:ident(p)]]],estmt(NONE)],st_return[exp:ident(err)]]],def[fname(do_get_mempolicy),funtype[fulltype[ctype[btype[itype[sgn(signed),base(long)]]]],param[reg(),name(policy),fulltype[typec(N/H)]],param[reg(),name(nmask),fulltype[typec(N/H)]],param[reg(),name(addr),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(flags),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(cpuset_update_task_memory_state)]],sel_if[exp[grammar(binary_arith),aop(&),exp:ident(flags),exp:??(N/H)],st_return[exp:??(N/H)],estmt(NONE)],sel_if[exp[grammar(binary_arith),aop(&),exp:ident(flags),exp:ident(MPOL_F_MEMS_ALLOWED)],{}stmt[sel_if[exp[grammar(binary_arith),aop(&),exp:ident(flags),exp[grammar(binary_arith),aop(|),exp:ident(MPOL_F_NODE),exp:ident(MPOL_F_ADDR)]],st_return[exp:??(N/H)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(policy),exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(nmask),exp:ident(cpuset_current_mems_allowed)]],st_return[exp:const:int(0)]],estmt(NONE)],sel_if[exp[grammar(binary_arith),aop(&),exp:ident(flags),exp:ident(MPOL_F_ADDR)],{}stmt[estmt[exp[grammar(call),exp:ident(down_read),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(mm),ident(mmap_sem)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(vma),exp[grammar(call),exp:ident(find_vma_intersection),exp:ident(mm),exp:ident(addr),exp[grammar(binary_arith),aop(+),exp:ident(addr),exp:const:int(1)]]]],sel_if[exp:??(N/H),{}stmt[estmt[exp[grammar(call),exp:ident(up_read),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(mm),ident(mmap_sem)]]],st_return[exp:??(N/H)]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(record_ptr),exp:ident(vma),ident(vm_ops)],exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(vma),ident(vm_ops)],ident(get_policy)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(pol),exp[grammar(call),exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(vma),ident(vm_ops)],ident(get_policy)],exp:ident(vma),exp:ident(addr)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(pol),exp[grammar(record_ptr),exp:ident(vma),ident(vm_policy)]]]]],sel_if[exp:ident(addr),st_return[exp:??(N/H)],estmt(NONE)]],sel_if[exp:??(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(pol),exp:&ref:exp:ident(default_policy)]],estmt(NONE)],sel_if[exp[grammar(binary_arith),aop(&),exp:ident(flags),exp:ident(MPOL_F_NODE)],{}stmt[sel_if[exp[grammar(binary_arith),aop(&),exp:ident(flags),exp:ident(MPOL_F_ADDR)],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(lookup_node),exp:ident(mm),exp:ident(addr)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(err),exp:const:int(0)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(policy),exp:ident(err)]]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(eq),exp:ident(pol),exp[grammar(record_ptr),exp:ident(current),ident(mempolicy)]],exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(pol),ident(policy)],exp:ident(MPOL_INTERLEAVE)]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(policy),exp[grammar(record_ptr),exp:ident(current),ident(il_next)]]]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],statem(N/H)]]]],estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(policy),exp[grammar(record_ptr),exp:ident(pol),ident(policy)]]]],sel_if[exp:ident(vma),{}stmt[estmt[exp[grammar(call),exp:ident(up_read),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp[grammar(record_ptr),exp:ident(current),ident(mm)],ident(mmap_sem)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(vma),exp:ident(NULL)]]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:const:int(0)]],sel_if[exp:ident(nmask),estmt[exp[grammar(call),exp:ident(get_zonemask),exp:ident(pol),exp:ident(nmask)]],estmt(NONE)],statem(N/H),st_return[exp:ident(err)]]],def[fname(migrate_page_add),funtype[fulltype[ctype[btype(void)]],param[reg(),name(page),fulltype[typec(N/H)]],param[reg(),name(pagelist),fulltype[typec(N/H)]],param[reg(),name(flags),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]]],{}stmt[sel_if[exp[grammar(binary_logi),logiop(or),exp[grammar(binary_arith),aop(&),exp:ident(flags),exp:ident(MPOL_MF_MOVE_ALL)],exp[grammar(binary_logi),logiop(eq),exp[grammar(call),exp:ident(page_mapcount),exp:ident(page)],exp:const:int(1)]],estmt[exp[grammar(call),exp:ident(isolate_lru_page),exp:ident(page),exp:ident(pagelist)]],estmt(NONE)]]],def[fname(new_node_page),funtype[fulltype[typec(N/H)],param[reg(),name(page),fulltype[typec(N/H)]],param[reg(),name(node),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(x),fulltype[typec(N/H)]]],{}stmt[st_return[exp[grammar(call),exp:ident(alloc_pages_node),exp:ident(node),exp:ident(GFP_HIGHUSER_MOVABLE),exp:const:int(0)]]]],def[fname(migrate_to_node),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(mm),fulltype[typec(N/H)]],param[reg(),name(source),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(dest),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(flags),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(LIST_HEAD),exp:ident(pagelist)]],statem(N/H),estmt[exp[grammar(call),exp:ident(nodes_clear),exp:ident(nmask)]],estmt[exp[grammar(call),exp:ident(node_set),exp:ident(source),exp:ident(nmask)]],estmt[exp[grammar(call),exp:ident(check_range),exp:ident(mm),exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(mm),ident(mmap)],ident(vm_start)],exp:ident(TASK_SIZE),exp:&ref:exp:ident(nmask),exp[grammar(binary_arith),aop(|),exp:ident(flags),exp:ident(MPOL_MF_DISCONTIG_OK)],exp:&ref:exp:ident(pagelist)]],sel_if[exp:??(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(migrate_pages),exp:&ref:exp:ident(pagelist),exp:ident(new_node_page),exp:ident(dest)]]],estmt(NONE)],st_return[exp:ident(err)]]],def[fname(do_migrate_pages),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(mm),fulltype[typec(N/H)]],param[reg(),name(from_nodes),fulltype[typec(N/H)]],param[reg(),name(to_nodes),fulltype[typec(N/H)]],param[reg(),name(flags),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[estmt[exp[grammar(call),exp:ident(LIST_HEAD),exp:ident(pagelist)]],statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(down_read),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(mm),ident(mmap_sem)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(migrate_vmas),exp:ident(mm),exp:ident(from_nodes),exp:ident(to_nodes),exp:ident(flags)]]],sel_if[exp:ident(err),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(tmp),exp:*ref:exp:ident(from_nodes)]],while[exp:??(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(source),exp:??(N/H)],statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(node_clear),exp:ident(source),exp:ident(tmp)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(migrate_to_node),exp:ident(mm),exp:ident(source),exp:ident(dest),exp:ident(flags)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(err),exp:const:int(0)],estmt[exp[grammar(assign),op_assi(+=),exp:ident(busy),exp:ident(err)]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(err),exp:const:int(0)],statem(N/H),estmt(NONE)]]],statem(N/H),sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(err),exp:const:int(0)],st_return[exp:ident(err)],estmt(NONE)],st_return[exp:ident(busy)]]],NCP(N/H),def[fname(migrate_page_add),funtype[fulltype[ctype[btype(void)]],param[reg(),name(page),fulltype[typec(N/H)]],param[reg(),name(pagelist),fulltype[typec(N/H)]],param[reg(),name(flags),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]]],{}stmt[]],def[fname(do_migrate_pages),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(mm),fulltype[typec(N/H)]],param[reg(),name(from_nodes),fulltype[typec(N/H)]],param[reg(),name(to_nodes),fulltype[typec(N/H)]],param[reg(),name(flags),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[st_return[exp:??(N/H)]]],def[fname(new_vma_page),funtype[fulltype[typec(N/H)],param[reg(),name(page),fulltype[typec(N/H)]],param[reg(),name(private),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(x),fulltype[typec(N/H)]]],{}stmt[st_return[exp:ident(NULL)]]],def[fname(do_mbind),funtype[fulltype[ctype[btype[itype[sgn(signed),base(long)]]]],param[reg(),name(start),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(len),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(mode),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(nmask),fulltype[typec(N/H)]],param[reg(),name(flags),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(LIST_HEAD),exp:ident(pagelist)]],sel_if[exp[grammar(binary_logi),logiop(or),exp[grammar(binary_arith),aop(&),exp:ident(flags),exp:??(N/H)],exp[grammar(binary_logi),logiop(??),exp:ident(mode),exp:ident(MPOL_MAX)]],st_return[exp:??(N/H)],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_arith),aop(&),exp:ident(flags),exp:ident(MPOL_MF_MOVE_ALL)],exp:??(N/H)],st_return[exp:??(N/H)],estmt(NONE)],sel_if[exp[grammar(binary_arith),aop(&),exp:ident(start),exp:??(N/H)],st_return[exp:??(N/H)],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(mode),exp:ident(MPOL_DEFAULT)],estmt[exp[grammar(assign),op_assi(&=),exp:ident(flags),exp:??(N/H)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(len),exp[grammar(binary_arith),aop(&),exp[grammar(binary_arith),aop(-),exp[grammar(binary_arith),aop(+),exp:ident(len),exp:ident(PAGE_SIZE)],exp:const:int(1)],exp:ident(PAGE_MASK)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(end),exp[grammar(binary_arith),aop(+),exp:ident(start),exp:ident(len)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(end),exp:ident(start)],st_return[exp:??(N/H)],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(end),exp:ident(start)],st_return[exp:const:int(0)],estmt(NONE)],sel_if[exp[grammar(call),exp:ident(mpol_check_policy),exp:ident(mode),exp:ident(nmask)],st_return[exp:??(N/H)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(new),exp[grammar(call),exp:ident(mpol_new),exp:ident(mode),exp:ident(nmask)]]],sel_if[exp[grammar(call),exp:ident(IS_ERR),exp:ident(new)],st_return[exp[grammar(call),exp:ident(PTR_ERR),exp:ident(new)]],estmt(NONE)],sel_if[exp:??(N/H),estmt[exp[grammar(assign),op_assi(|=),exp:ident(flags),exp:ident(MPOL_MF_DISCONTIG_OK)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(pr_debug),exp:const:string(mbind %lx-%lx mode:%ld nodes:%lx\n),exp:ident(start),exp[grammar(binary_arith),aop(+),exp:ident(start),exp:ident(len)],exp:ident(mode),exp[grammar(cond3),exp:ident(nmask),exp[grammar(array_acc),exp[grammar(call),exp:ident(nodes_addr),exp:*ref:exp:ident(nmask)],exp:const:int(0)],exp:??(N/H)]]],estmt[exp[grammar(call),exp:ident(down_write),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(mm),ident(mmap_sem)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(vma),exp[grammar(call),exp:ident(check_range),exp:ident(mm),exp:ident(start),exp:ident(end),exp:ident(nmask),exp[grammar(binary_arith),aop(|),exp:ident(flags),exp:ident(MPOL_MF_INVERT)],exp:&ref:exp:ident(pagelist)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(PTR_ERR),exp:ident(vma)]]],sel_if[exp:??(N/H),{}stmt[statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(mbind_range),exp:ident(vma),exp:ident(start),exp:ident(end),exp:ident(new)]]],sel_if[exp:??(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(nr_failed),exp[grammar(call),exp:ident(migrate_pages),exp:&ref:exp:ident(pagelist),exp:ident(new_vma_page),exp:??(N/H)]]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(and),exp:??(N/H),exp:ident(nr_failed)],exp[grammar(binary_arith),aop(&),exp:ident(flags),exp:ident(MPOL_MF_STRICT)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],estmt(NONE)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(up_write),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(mm),ident(mmap_sem)]]],estmt[exp[grammar(call),exp:ident(mpol_free),exp:ident(new)]],st_return[exp:ident(err)]]],NCP(N/H),NCP(N/H),NCP(N/H),NCP(N/H),NCP(N/H),NCP(N/H),NCP(N/H),NCP(N/H),NCP(N/H),def[fname(get_vma_policy),funtype[fulltype[typec(N/H)],param[reg(),name(task),fulltype[typec(N/H)]],param[reg(),name(vma),fulltype[typec(N/H)]],param[reg(),name(addr),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp:ident(vma),{}stmt[sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(record_ptr),exp:ident(vma),ident(vm_ops)],exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(vma),ident(vm_ops)],ident(get_policy)]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(pol),exp[grammar(call),exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(vma),ident(vm_ops)],ident(get_policy)],exp:ident(vma),exp:ident(addr)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(shared_pol),exp:const:int(1)]]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(record_ptr),exp:ident(vma),ident(vm_policy)],exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(vma),ident(vm_policy)],ident(policy)],exp:ident(MPOL_DEFAULT)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(pol),exp[grammar(record_ptr),exp:ident(vma),ident(vm_policy)]]],estmt(NONE)]]],estmt(NONE)],sel_if[exp:??(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(pol),exp:&ref:exp:ident(default_policy)]],sel_if[exp[grammar(binary_logi),logiop(and),exp:??(N/H),exp[grammar(binary_logi),logiop(??),exp:ident(pol),exp[grammar(record_ptr),exp:ident(current),ident(mempolicy)]]],estmt[exp[grammar(call),exp:ident(mpol_get),exp:ident(pol)]],estmt(NONE)]],st_return[exp:ident(pol)]]],def[fname(zonelist_policy),funtype[fulltype[typec(N/H)],param[reg(),name(gfp),fulltype[typec(N/H)]],param[reg(),name(policy),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),st_return[exp[grammar(binary_arith),aop(+),exp[grammar(record_ptr),exp[grammar(call),exp:ident(NODE_DATA),exp:ident(nd)],ident(node_zonelists)],exp[grammar(call),exp:ident(gfp_zone),exp:ident(gfp)]]]]],def[fname(interleave_nodes),funtype[fulltype[ctype[btype[itype[sgn(unsigned),base(int)]]]],param[reg(),name(policy),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(nid),exp[grammar(record_ptr),exp:ident(me),ident(il_next)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(next),exp[grammar(call),exp:ident(next_node),exp:ident(nid),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(policy),ident(v)],ident(nodes)]]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(next),exp:ident(MAX_NUMNODES)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(next),exp[grammar(call),exp:ident(first_node),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(policy),ident(v)],ident(nodes)]]]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(me),ident(il_next)],exp:ident(next)]],st_return[exp:ident(nid)]]],def[fname(slab_node),funtype[fulltype[ctype[btype[itype[sgn(unsigned),base(int)]]]],param[reg(),name(policy),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H)]],def[fname(offset_il_node),funtype[fulltype[ctype[btype[itype[sgn(unsigned),base(int)]]]],param[reg(),name(pol),fulltype[typec(N/H)]],param[reg(),name(vma),fulltype[typec(N/H)]],param[reg(),name(off),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(c),exp:const:int(0)]],statem(N/H),st_return[exp:ident(nid)]]],def[fname(interleave_nid),funtype[fulltype[ctype[btype[itype[sgn(unsigned),base(int)]]]],param[reg(),name(pol),fulltype[typec(N/H)]],param[reg(),name(vma),fulltype[typec(N/H)]],param[reg(),name(addr),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(shift),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[sel_if[exp:ident(vma),{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(BUG_ON),exp[grammar(binary_logi),logiop(??),exp:ident(shift),exp:ident(PAGE_SHIFT)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(off),exp[grammar(binary_arith),aop(>>),exp[grammar(record_ptr),exp:ident(vma),ident(vm_pgoff)],exp[grammar(binary_arith),aop(-),exp:ident(shift),exp:ident(PAGE_SHIFT)]]]],estmt[exp[grammar(assign),op_assi(+=),exp:ident(off),exp[grammar(binary_arith),aop(>>),exp[grammar(binary_arith),aop(-),exp:ident(addr),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)]],exp:ident(shift)]]],st_return[exp[grammar(call),exp:ident(offset_il_node),exp:ident(pol),exp:ident(vma),exp:ident(off)]]],st_return[exp[grammar(call),exp:ident(interleave_nodes),exp:ident(pol)]]]]],def[fname(huge_zonelist),funtype[fulltype[typec(N/H)],param[reg(),name(vma),fulltype[typec(N/H)]],param[reg(),name(addr),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(gfp_flags),fulltype[typec(N/H)]],param[reg(),name(mpol),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(mpol),exp:ident(NULL)]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(pol),ident(policy)],exp:ident(MPOL_INTERLEAVE)],{}stmt[statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(nid),exp[grammar(call),exp:ident(interleave_nid),exp:ident(pol),exp:ident(vma),exp:ident(addr),exp:ident(HPAGE_SHIFT)]]],estmt[exp[grammar(call),exp:ident(__mpol_free),exp:ident(pol)]],st_return[exp[grammar(binary_arith),aop(+),exp[grammar(record_ptr),exp[grammar(call),exp:ident(NODE_DATA),exp:ident(nid)],ident(node_zonelists)],exp[grammar(call),exp:ident(gfp_zone),exp:ident(gfp_flags)]]]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(zl),exp[grammar(call),exp:ident(zonelist_policy),exp:ident(GFP_HIGHUSER),exp:ident(pol)]]],sel_if[exp[grammar(call),exp:ident(unlikely),exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp:ident(pol),exp:&ref:exp:ident(default_policy)],exp[grammar(binary_logi),logiop(??),exp:ident(pol),exp[grammar(record_ptr),exp:ident(current),ident(mempolicy)]]]],{}stmt[sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(pol),ident(policy)],exp:ident(MPOL_BIND)],estmt[exp[grammar(call),exp:ident(__mpol_free),exp:ident(pol)]],estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(mpol),exp:ident(pol)]]]],estmt(NONE)],st_return[exp:ident(zl)]]],def[fname(alloc_page_interleave),funtype[fulltype[typec(N/H)],param[reg(),name(gfp),fulltype[typec(N/H)]],param[reg(),name(order),fulltype[ctype[btype[itype[sgn(unsigned),base(int)]]]]],param[reg(),name(nid),fulltype[ctype[btype[itype[sgn(unsigned),base(int)]]]]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(zl),exp[grammar(binary_arith),aop(+),exp[grammar(record_ptr),exp[grammar(call),exp:ident(NODE_DATA),exp:ident(nid)],ident(node_zonelists)],exp[grammar(call),exp:ident(gfp_zone),exp:ident(gfp)]]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(page),exp[grammar(call),exp:ident(__alloc_pages),exp:ident(gfp),exp:ident(order),exp:ident(zl)]]],sel_if[exp[grammar(binary_logi),logiop(and),exp:ident(page),exp[grammar(binary_logi),logiop(eq),exp[grammar(call),exp:ident(page_zone),exp:ident(page)],exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(zl),ident(zones)],exp:const:int(0)]]],estmt[exp[grammar(call),exp:ident(inc_zone_page_state),exp:ident(page),exp:ident(NUMA_INTERLEAVE_HIT)]],estmt(NONE)],st_return[exp:ident(page)]]],def[fname(alloc_page_vma),funtype[fulltype[typec(N/H)],param[reg(),name(gfp),fulltype[typec(N/H)]],param[reg(),name(vma),fulltype[typec(N/H)]],param[reg(),name(addr),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(cpuset_update_task_memory_state)]],sel_if[exp[grammar(call),exp:ident(unlikely),exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(pol),ident(policy)],exp:ident(MPOL_INTERLEAVE)]],{}stmt[statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(nid),exp[grammar(call),exp:ident(interleave_nid),exp:ident(pol),exp:ident(vma),exp:ident(addr),exp:ident(PAGE_SHIFT)]]],st_return[exp[grammar(call),exp:ident(alloc_page_interleave),exp:ident(gfp),exp:const:int(0),exp:ident(nid)]]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(zl),exp[grammar(call),exp:ident(zonelist_policy),exp:ident(gfp),exp:ident(pol)]]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp:ident(pol),exp:&ref:exp:ident(default_policy)],exp[grammar(binary_logi),logiop(??),exp:ident(pol),exp[grammar(record_ptr),exp:ident(current),ident(mempolicy)]]],{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(__mpol_free),exp:ident(pol)]],st_return[exp:ident(page)]],estmt(NONE)],st_return[exp[grammar(call),exp:ident(__alloc_pages),exp:ident(gfp),exp:const:int(0),exp:ident(zl)]]]],def[fname(alloc_pages_current),funtype[fulltype[typec(N/H)],param[reg(),name(gfp),fulltype[typec(N/H)]],param[reg(),name(order),fulltype[ctype[btype[itype[sgn(unsigned),base(int)]]]]]],{}stmt[statem(N/H),sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_arith),aop(&),exp:ident(gfp),exp:ident(__GFP_WAIT)],exp:??(N/H)],estmt[exp[grammar(call),exp:ident(cpuset_update_task_memory_state)]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(or),exp[grammar(binary_logi),logiop(or),exp:??(N/H),exp[grammar(call),exp:ident(in_interrupt)]],exp[grammar(binary_arith),aop(&),exp:ident(gfp),exp:ident(__GFP_THISNODE)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(pol),exp:&ref:exp:ident(default_policy)]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(pol),ident(policy)],exp:ident(MPOL_INTERLEAVE)],st_return[exp[grammar(call),exp:ident(alloc_page_interleave),exp:ident(gfp),exp:ident(order),exp[grammar(call),exp:ident(interleave_nodes),exp:ident(pol)]]],estmt(NONE)],st_return[exp[grammar(call),exp:ident(__alloc_pages),exp:ident(gfp),exp:ident(order),exp[grammar(call),exp:ident(zonelist_policy),exp:ident(gfp),exp:ident(pol)]]]]],mtop(N/H),def[fname(__mpol_copy),funtype[fulltype[typec(N/H)],param[reg(),name(old),fulltype[typec(N/H)]]],{}stmt[statem(N/H),sel_if[exp:??(N/H),st_return[exp[grammar(call),exp:ident(ERR_PTR),exp:??(N/H)]],estmt(NONE)],sel_if[exp[grammar(call),exp:ident(current_cpuset_is_being_rebound)],{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(mpol_rebind_policy),exp:ident(old),exp:&ref:exp:ident(mems)]]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(new),exp:*ref:exp:ident(old)]],estmt[exp[grammar(call),exp:ident(atomic_set),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(new),ident(refcnt)],exp:const:int(1)]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(new),ident(policy)],exp:ident(MPOL_BIND)],{}stmt[statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(new),ident(v)],ident(zonelist)],exp[grammar(call),exp:ident(kmemdup),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(old),ident(v)],ident(zonelist)],exp:ident(sz),exp:ident(GFP_KERNEL)]]],sel_if[exp:??(N/H),{}stmt[estmt[exp[grammar(call),exp:ident(kmem_cache_free),exp:ident(policy_cache),exp:ident(new)]],st_return[exp[grammar(call),exp:ident(ERR_PTR),exp:??(N/H)]]],estmt(NONE)]],estmt(NONE)],st_return[exp:ident(new)]]],def[fname(__mpol_equal),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(a),fulltype[typec(N/H)]],param[reg(),name(b),fulltype[typec(N/H)]]],{}stmt[sel_if[exp[grammar(binary_logi),logiop(or),exp:??(N/H),exp:??(N/H)],st_return[exp:const:int(0)],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(a),ident(policy)],exp[grammar(record_ptr),exp:ident(b),ident(policy)]],st_return[exp:const:int(0)],estmt(NONE)],statem(N/H)]],def[fname(__mpol_free),funtype[fulltype[ctype[btype(void)]],param[reg(),name(p),fulltype[typec(N/H)]]],{}stmt[sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(p),ident(policy)],exp:ident(MPOL_BIND)],estmt[exp[grammar(call),exp:ident(kfree),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(p),ident(v)],ident(zonelist)]]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(p),ident(policy)],exp:ident(MPOL_DEFAULT)]],estmt[exp[grammar(call),exp:ident(kmem_cache_free),exp:ident(policy_cache),exp:ident(p)]]]],def[fname(sp_lookup),funtype[fulltype[typec(N/H)],param[reg(),name(sp),fulltype[typec(N/H)]],param[reg(),name(start),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(end),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]]],{}stmt[statem(N/H),while[exp:ident(n),{}stmt[statem(N/H),sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(start),exp[grammar(record_ptr),exp:ident(p),ident(end)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(n),exp[grammar(record_ptr),exp:ident(n),ident(rb_right)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(end),exp[grammar(record_ptr),exp:ident(p),ident(start)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(n),exp[grammar(record_ptr),exp:ident(n),ident(rb_left)]]],statem(N/H)]]]],sel_if[exp:??(N/H),st_return[exp:ident(NULL)],estmt(NONE)],for[expr(NONE),expr(NONE),expr(NONE),{}stmt[statem(N/H),statem(N/H),sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(w),exp[grammar(call),exp:ident(rb_entry),exp:ident(prev),argtype(N/H),exp:ident(nd)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(w),ident(end)],exp:ident(start)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(n),exp:ident(prev)]]]],st_return[exp[grammar(call),exp:ident(rb_entry),exp:ident(n),argtype(N/H),exp:ident(nd)]]]],def[fname(sp_insert),funtype[fulltype[ctype[btype(void)]],param[reg(),name(sp),fulltype[typec(N/H)]],param[reg(),name(new),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),while[exp:*ref:exp:ident(p),{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(parent),exp:*ref:exp:ident(p)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(nd),exp[grammar(call),exp:ident(rb_entry),exp:ident(parent),argtype(N/H),exp:ident(nd)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(new),ident(start)],exp[grammar(record_ptr),exp:ident(nd),ident(start)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(p),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:*ref:exp:ident(p),ident(rb_left)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(new),ident(end)],exp[grammar(record_ptr),exp:ident(nd),ident(end)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(p),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:*ref:exp:ident(p),ident(rb_right)]]],estmt[exp[grammar(call),exp:ident(BUG)]]]]]],estmt[exp[grammar(call),exp:ident(rb_link_node),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(new),ident(nd)],exp:ident(parent),exp:ident(p)]],estmt[exp[grammar(call),exp:ident(rb_insert_color),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(new),ident(nd)],exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(sp),ident(root)]]],estmt[exp[grammar(call),exp:ident(pr_debug),exp:const:string(inserting %lx-%lx: %d\n),exp[grammar(record_ptr),exp:ident(new),ident(start)],exp[grammar(record_ptr),exp:ident(new),ident(end)],exp[grammar(cond3),exp[grammar(record_ptr),exp:ident(new),ident(policy)],exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(new),ident(policy)],ident(policy)],exp:const:int(0)]]]]],def[fname(mpol_shared_policy_lookup),funtype[fulltype[typec(N/H)],param[reg(),name(sp),fulltype[typec(N/H)]],param[reg(),name(idx),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp:??(N/H),st_return[exp:ident(NULL)],estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_lock),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(sp),ident(lock)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(sn),exp[grammar(call),exp:ident(sp_lookup),exp:ident(sp),exp:ident(idx),exp[grammar(binary_arith),aop(+),exp:ident(idx),exp:const:int(1)]]]],sel_if[exp:ident(sn),{}stmt[estmt[exp[grammar(call),exp:ident(mpol_get),exp[grammar(record_ptr),exp:ident(sn),ident(policy)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(pol),exp[grammar(record_ptr),exp:ident(sn),ident(policy)]]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_unlock),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(sp),ident(lock)]]],st_return[exp:ident(pol)]]],def[fname(sp_delete),funtype[fulltype[ctype[btype(void)]],param[reg(),name(sp),fulltype[typec(N/H)]],param[reg(),name(n),fulltype[typec(N/H)]]],{}stmt[estmt[exp[grammar(call),exp:ident(pr_debug),exp:const:string(deleting %lx-l%lx\n),exp[grammar(record_ptr),exp:ident(n),ident(start)],exp[grammar(record_ptr),exp:ident(n),ident(end)]]],estmt[exp[grammar(call),exp:ident(rb_erase),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(n),ident(nd)],exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(sp),ident(root)]]],estmt[exp[grammar(call),exp:ident(mpol_free),exp[grammar(record_ptr),exp:ident(n),ident(policy)]]],estmt[exp[grammar(call),exp:ident(kmem_cache_free),exp:ident(sn_cache),exp:ident(n)]]]],def[fname(sp_alloc),funtype[fulltype[typec(N/H)],param[reg(),name(start),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(end),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(pol),fulltype[typec(N/H)]]],{}stmt[statem(N/H),sel_if[exp:??(N/H),st_return[exp:ident(NULL)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(n),ident(start)],exp:ident(start)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(n),ident(end)],exp:ident(end)]],estmt[exp[grammar(call),exp:ident(mpol_get),exp:ident(pol)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(n),ident(policy)],exp:ident(pol)]],st_return[exp:ident(n)]]],def[fname(shared_policy_replace),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(sp),fulltype[typec(N/H)]],param[reg(),name(start),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(end),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(new),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(n),exp[grammar(call),exp:ident(sp_lookup),exp:ident(sp),exp:ident(start),exp:ident(end)]]],while[exp[grammar(binary_logi),logiop(and),exp:ident(n),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(n),ident(start)],exp:ident(end)]],{}stmt[statem(N/H),sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(n),ident(start)],exp:ident(start)],{}stmt[sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(n),ident(end)],exp:ident(end)],estmt[exp[grammar(call),exp:ident(sp_delete),exp:ident(sp),exp:ident(n)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(n),ident(start)],exp:ident(end)]]]],{}stmt[sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(n),ident(end)],exp:ident(end)],{}stmt[sel_if[exp:??(N/H),{}stmt[estmt[exp[grammar(call),exp:ident(spin_unlock),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(sp),ident(lock)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(new2),exp[grammar(call),exp:ident(sp_alloc),exp:ident(end),exp[grammar(record_ptr),exp:ident(n),ident(end)],exp[grammar(record_ptr),exp:ident(n),ident(policy)]]]],sel_if[exp:??(N/H),st_return[exp:??(N/H)],estmt(NONE)],statem(N/H)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(n),ident(end)],exp:ident(start)]],estmt[exp[grammar(call),exp:ident(sp_insert),exp:ident(sp),exp:ident(new2)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(new2),exp:ident(NULL)]],statem(N/H)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(n),ident(end)],exp:ident(start)]]]]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(n),exp[grammar(call),exp:ident(rb_entry),exp:ident(next),argtype(N/H),exp:ident(nd)]]]]],sel_if[exp:ident(new),estmt[exp[grammar(call),exp:ident(sp_insert),exp:ident(sp),exp:ident(new)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_unlock),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(sp),ident(lock)]]],sel_if[exp:ident(new2),{}stmt[estmt[exp[grammar(call),exp:ident(mpol_free),exp[grammar(record_ptr),exp:ident(new2),ident(policy)]]],estmt[exp[grammar(call),exp:ident(kmem_cache_free),exp:ident(sn_cache),exp:ident(new2)]]],estmt(NONE)],st_return[exp:const:int(0)]]],def[fname(mpol_shared_policy_init),funtype[fulltype[ctype[btype(void)]],param[reg(),name(info),fulltype[typec(N/H)]],param[reg(),name(policy),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(policy_nodes),fulltype[typec(N/H)]]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(info),ident(root)],exp:ident(RB_ROOT)]],estmt[exp[grammar(call),exp:ident(spin_lock_init),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(info),ident(lock)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(policy),exp:ident(MPOL_DEFAULT)],{}stmt[statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(newpol),exp[grammar(call),exp:ident(mpol_new),exp:ident(policy),exp:ident(policy_nodes)]]],sel_if[exp:??(N/H),{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(memset),exp:&ref:exp:ident(pvma),exp:const:int(0),exp[grammar(sizeoftype),grammar(fulltype),typec(N/H)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(pvma),ident(vm_end)],exp:ident(TASK_SIZE)]],estmt[exp[grammar(call),exp:ident(mpol_set_shared_policy),exp:ident(info),exp:&ref:exp:ident(pvma),exp:ident(newpol)]],estmt[exp[grammar(call),exp:ident(mpol_free),exp:ident(newpol)]]],estmt(NONE)]],estmt(NONE)]]],def[fname(mpol_set_shared_policy),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(info),fulltype[typec(N/H)]],param[reg(),name(vma),fulltype[typec(N/H)]],param[reg(),name(npol),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(pr_debug),exp:const:string(set_shared_policy %lx sz %lu %d %lx\n),exp[grammar(record_ptr),exp:ident(vma),ident(vm_pgoff)],exp:ident(sz),exp[grammar(cond3),exp:ident(npol),exp[grammar(record_ptr),exp:ident(npol),ident(policy)],exp:??(N/H)],exp[grammar(cond3),exp:ident(npol),exp[grammar(array_acc),exp[grammar(call),exp:ident(nodes_addr),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(npol),ident(v)],ident(nodes)]],exp:const:int(0)],exp:??(N/H)]]],sel_if[exp:ident(npol),{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(new),exp[grammar(call),exp:ident(sp_alloc),exp[grammar(record_ptr),exp:ident(vma),ident(vm_pgoff)],exp[grammar(binary_arith),aop(+),exp[grammar(record_ptr),exp:ident(vma),ident(vm_pgoff)],exp:ident(sz)],exp:ident(npol)]]],sel_if[exp:??(N/H),st_return[exp:??(N/H)],estmt(NONE)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(shared_policy_replace),exp:ident(info),exp[grammar(record_ptr),exp:ident(vma),ident(vm_pgoff)],exp[grammar(binary_arith),aop(+),exp[grammar(record_ptr),exp:ident(vma),ident(vm_pgoff)],exp:ident(sz)],exp:ident(new)]]],sel_if[exp[grammar(binary_logi),logiop(and),exp:ident(err),exp:ident(new)],estmt[exp[grammar(call),exp:ident(kmem_cache_free),exp:ident(sn_cache),exp:ident(new)]],estmt(NONE)],st_return[exp:ident(err)]]],def[fname(mpol_free_shared_policy),funtype[fulltype[ctype[btype(void)]],param[reg(),name(p),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_lock),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(p),ident(lock)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(next),exp[grammar(call),exp:ident(rb_first),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(p),ident(root)]]]],while[exp:ident(next),{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(n),exp[grammar(call),exp:ident(rb_entry),exp:ident(next),argtype(N/H),exp:ident(nd)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(next),exp[grammar(call),exp:ident(rb_next),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(n),ident(nd)]]]],estmt[exp[grammar(call),exp:ident(rb_erase),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(n),ident(nd)],exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(p),ident(root)]]],estmt[exp[grammar(call),exp:ident(mpol_free),exp[grammar(record_ptr),exp:ident(n),ident(policy)]]],estmt[exp[grammar(call),exp:ident(kmem_cache_free),exp:ident(sn_cache),exp:ident(n)]]]],estmt[exp[grammar(call),exp:ident(spin_unlock),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(p),ident(lock)]]]]],NCP(N/H),def[fname(numa_default_policy),funtype[fulltype[ctype[btype(void)]],param[reg(),name(),fulltype[ctype[btype(void)]]]],{}stmt[estmt[exp[grammar(call),exp:ident(do_set_mempolicy),exp:ident(MPOL_DEFAULT),exp:ident(NULL)]]]],def[fname(mpol_rebind_policy),funtype[fulltype[ctype[btype(void)]],param[reg(),name(pol),fulltype[typec(N/H)]],param[reg(),name(newmask),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(mpolmask),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(pol),ident(cpuset_mems_allowed)]]],sel_if[exp[grammar(call),exp:ident(nodes_equal),exp:*ref:exp:ident(mpolmask),exp:*ref:exp:ident(newmask)],statem(N/H),estmt(NONE)],statem(N/H)]],def[fname(mpol_rebind_task),funtype[fulltype[ctype[btype(void)]],param[reg(),name(tsk),fulltype[typec(N/H)]],param[reg(),name(new),fulltype[typec(N/H)]]],{}stmt[estmt[exp[grammar(call),exp:ident(mpol_rebind_policy),exp[grammar(record_ptr),exp:ident(tsk),ident(mempolicy)],exp:ident(new)]]]],def[fname(mpol_rebind_mm),funtype[fulltype[ctype[btype(void)]],param[reg(),name(mm),fulltype[typec(N/H)]],param[reg(),name(new),fulltype[typec(N/H)]]],{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(down_write),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(mm),ident(mmap_sem)]]],for[exp[grammar(assign),simple_assi(=),exp:ident(vma),exp[grammar(record_ptr),exp:ident(mm),ident(mmap)]],exp:ident(vma),exp[grammar(assign),simple_assi(=),exp:ident(vma),exp[grammar(record_ptr),exp:ident(vma),ident(vm_next)]],estmt[exp[grammar(call),exp:ident(mpol_rebind_policy),exp[grammar(record_ptr),exp:ident(vma),ident(vm_policy)],exp:ident(new)]]],estmt[exp[grammar(call),exp:ident(up_write),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(mm),ident(mmap_sem)]]]]],decl(N/H),def[fname(mpol_to_str),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(buffer),fulltype[typec(N/H)]],param[reg(),name(maxlen),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(pol),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(l),exp[grammar(call),exp:ident(strlen),exp[grammar(array_acc),exp:ident(policy_types),exp:ident(mode)]]]],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(binary_arith),aop(+),exp:ident(buffer),exp:ident(maxlen)],exp[grammar(binary_arith),aop(+),exp[grammar(binary_arith),aop(+),exp:ident(p),exp:ident(l)],exp:const:int(1)]],st_return[exp:??(N/H)],estmt(NONE)],estmt[exp[grammar(call),exp:ident(strcpy),exp:ident(p),exp[grammar(array_acc),exp:ident(policy_types),exp:ident(mode)]]],estmt[exp[grammar(assign),op_assi(+=),exp:ident(p),exp:ident(l)]],sel_if[exp:??(N/H),{}stmt[sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(binary_arith),aop(+),exp:ident(buffer),exp:ident(maxlen)],exp[grammar(binary_arith),aop(+),exp:ident(p),exp:const:int(2)]],st_return[exp:??(N/H)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:??(N/H),exp:const:other(N/H)]],estmt[exp[grammar(assign),op_assi(+=),exp:ident(p),exp[grammar(call),exp:ident(nodelist_scnprintf),exp:ident(p),exp[grammar(binary_arith),aop(-),exp[grammar(binary_arith),aop(+),exp:ident(buffer),exp:ident(maxlen)],exp:ident(p)],exp:ident(nodes)]]]],estmt(NONE)],st_return[exp[grammar(binary_arith),aop(-),exp:ident(p),exp:ident(buffer)]]]],decl(N/H),def[fname(gather_stats),funtype[fulltype[ctype[btype(void)]],param[reg(),name(page),fulltype[typec(N/H)]],param[reg(),name(private),fulltype[typec(N/H)]],param[reg(),name(pte_dirty),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[statem(N/H),statem(N/H),estmt[exp:??(N/H)],sel_if[exp[grammar(binary_logi),logiop(or),exp:ident(pte_dirty),exp[grammar(call),exp:ident(PageDirty),exp:ident(page)]],estmt[exp:??(N/H)],estmt(NONE)],sel_if[exp[grammar(call),exp:ident(PageSwapCache),exp:ident(page)],estmt[exp:??(N/H)],estmt(NONE)],sel_if[exp[grammar(call),exp:ident(PageActive),exp:ident(page)],estmt[exp:??(N/H)],estmt(NONE)],sel_if[exp[grammar(call),exp:ident(PageWriteback),exp:ident(page)],estmt[exp:??(N/H)],estmt(NONE)],sel_if[exp[grammar(call),exp:ident(PageAnon),exp:ident(page)],estmt[exp:??(N/H)],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(count),exp[grammar(record_ptr),exp:ident(md),ident(mapcount_max)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(md),ident(mapcount_max)],exp:ident(count)]],estmt(NONE)],estmt[exp:??(N/H)]]],def[fname(check_huge_range),funtype[fulltype[ctype[btype(void)]],param[reg(),name(vma),fulltype[typec(N/H)]],param[reg(),name(start),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(end),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(md),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),for[exp[grammar(assign),simple_assi(=),exp:ident(addr),exp:ident(start)],exp[grammar(binary_logi),logiop(??),exp:ident(addr),exp:ident(end)],exp[grammar(assign),op_assi(+=),exp:ident(addr),exp:ident(HPAGE_SIZE)],{}stmt[statem(N/H),statem(N/H),sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(pte),exp:*ref:exp:ident(ptep)]],sel_if[exp[grammar(call),exp:ident(pte_none),exp:ident(pte)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(page),exp[grammar(call),exp:ident(pte_page),exp:ident(pte)]]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(gather_stats),exp:ident(page),exp:ident(md),exp[grammar(call),exp:ident(pte_dirty),exp:*ref:exp:ident(ptep)]]]]]]],def[fname(check_huge_range),funtype[fulltype[ctype[btype(void)]],param[reg(),name(vma),fulltype[typec(N/H)]],param[reg(),name(start),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(end),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(md),fulltype[typec(N/H)]]],{}stmt[]],def[fname(show_numa_map),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(v),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),sel_if[exp:??(N/H),st_return[exp:const:int(0)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(md),exp[grammar(call),exp:ident(kzalloc),exp[grammar(sizeoftype),grammar(fulltype),typec(N/H)],exp:ident(GFP_KERNEL)]]],sel_if[exp:??(N/H),st_return[exp:const:int(0)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(pol),exp[grammar(call),exp:ident(get_vma_policy),exp[grammar(record_ptr),exp:ident(priv),ident(task)],exp:ident(vma),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)]]]],estmt[exp[grammar(call),exp:ident(mpol_to_str),exp:ident(buffer),exp:sizeof:exp:ident(buffer),exp:ident(pol)]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp:ident(pol),exp:&ref:exp:ident(default_policy)],exp[grammar(binary_logi),logiop(??),exp:ident(pol),exp[grammar(record_ptr),exp:ident(current),ident(mempolicy)]]],estmt[exp[grammar(call),exp:ident(__mpol_free),exp:ident(pol)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(%08lx %s),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp:ident(buffer)]],sel_if[exp:ident(file),{}stmt[estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( file=)]],estmt[exp[grammar(call),exp:ident(seq_path),exp:ident(m),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(file),ident(f_path)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(file),ident(f_path)],ident(dentry)],exp:const:string(\n\t= )]]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp[grammar(record_ptr),exp:ident(mm),ident(brk)]],exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp[grammar(record_ptr),exp:ident(mm),ident(start_brk)]]],{}stmt[estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( heap)]]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp[grammar(record_ptr),exp:ident(mm),ident(start_stack)]],exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp[grammar(record_ptr),exp:ident(mm),ident(start_stack)]]],{}stmt[estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( stack)]]],estmt(NONE)]]],sel_if[exp[grammar(call),exp:ident(is_vm_hugetlb_page),exp:ident(vma)],{}stmt[estmt[exp[grammar(call),exp:ident(check_huge_range),exp:ident(vma),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp:ident(md)]],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( huge)]]],{}stmt[estmt[exp[grammar(call),exp:ident(check_pgd_range),exp:ident(vma),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp[grammar(&ref),grammar(exp),grammar(array_acc),exp:ident(node_states),exp:ident(N_HIGH_MEMORY)],exp:ident(MPOL_MF_STATS),exp:ident(md)]]]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],sel_if[exp[grammar(record_ptr),exp:ident(md),ident(anon)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( anon=%lu),exp[grammar(record_ptr),exp:ident(md),ident(anon)]]],estmt(NONE)],sel_if[exp[grammar(record_ptr),exp:ident(md),ident(dirty)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( dirty=%lu),exp[grammar(record_ptr),exp:ident(md),ident(dirty)]]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(md),ident(pages)],exp[grammar(record_ptr),exp:ident(md),ident(anon)]],exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(md),ident(pages)],exp[grammar(record_ptr),exp:ident(md),ident(dirty)]]],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( mapped=%lu),exp[grammar(record_ptr),exp:ident(md),ident(pages)]]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(md),ident(mapcount_max)],exp:const:int(1)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( mapmax=%lu),exp[grammar(record_ptr),exp:ident(md),ident(mapcount_max)]]],estmt(NONE)],sel_if[exp[grammar(record_ptr),exp:ident(md),ident(swapcache)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( swapcache=%lu),exp[grammar(record_ptr),exp:ident(md),ident(swapcache)]]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(md),ident(active)],exp[grammar(record_ptr),exp:ident(md),ident(pages)]],exp:??(N/H)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( active=%lu),exp[grammar(record_ptr),exp:ident(md),ident(active)]]],estmt(NONE)],sel_if[exp[grammar(record_ptr),exp:ident(md),ident(writeback)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( writeback=%lu),exp[grammar(record_ptr),exp:ident(md),ident(writeback)]]],estmt(NONE)],statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(kfree),exp:ident(md)]],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(m),ident(count)],exp[grammar(record_ptr),exp:ident(m),ident(size)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(m),ident(version)],exp[grammar(cond3),exp[grammar(binary_logi),logiop(??),exp:ident(vma),exp[grammar(record_ptr),exp:ident(priv),ident(tail_vma)]],exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp:const:int(0)]]],estmt(NONE)],st_return[exp:const:int(0)]]]] ==> prg2[includeN[inc_elem(linux),inc_elem(mempolicy.h)],includeN[inc_elem(linux),inc_elem(mm.h)],includeN[inc_elem(linux),inc_elem(highmem.h)],includeN[inc_elem(linux),inc_elem(hugetlb.h)],includeN[inc_elem(linux),inc_elem(kernel.h)],includeN[inc_elem(linux),inc_elem(sched.h)],includeN[inc_elem(linux),inc_elem(nodemask.h)],includeN[inc_elem(linux),inc_elem(cpuset.h)],includeN[inc_elem(linux),inc_elem(gfp.h)],includeN[inc_elem(linux),inc_elem(slab.h)],includeN[inc_elem(linux),inc_elem(string.h)],includeN[inc_elem(linux),inc_elem(module.h)],includeN[inc_elem(linux),inc_elem(nsproxy.h)],includeN[inc_elem(linux),inc_elem(interrupt.h)],includeN[inc_elem(linux),inc_elem(init.h)],includeN[inc_elem(linux),inc_elem(compat.h)],includeN[inc_elem(linux),inc_elem(swap.h)],includeN[inc_elem(linux),inc_elem(seq_file.h)],includeN[inc_elem(linux),inc_elem(proc_fs.h)],includeN[inc_elem(linux),inc_elem(migrate.h)],includeN[inc_elem(linux),inc_elem(rmap.h)],includeN[inc_elem(linux),inc_elem(security.h)],includeN[inc_elem(linux),inc_elem(syscalls.h)],includeN[inc_elem(asm),inc_elem(tlbflush.h)],includeN[inc_elem(asm),inc_elem(uaccess.h)],define(N/H),define(N/H),define(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),def[fname(mpol_check_policy),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(mode),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(nodes),fulltype[typec(N/H)]]],{}stmt[statem(N/H),sel_if[exp:??(N/H),st_return[exp:const:int(0)],estmt(NONE)],estmt[exp[grammar(call),exp:ident(cpuset_update_task_memory_state)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(is_empty),exp[grammar(assign),simple_assi(=),exp:ident(was_empty),exp[grammar(call),exp:ident(nodes_empty),exp:*ref:exp:ident(nodes)]]]],sel_if[exp:??(N/H),{}stmt[estmt[exp[grammar(call),exp:ident(nodes_and),exp:*ref:exp:ident(nodes),exp:*ref:exp:ident(nodes),exp:ident(cpuset_current_mems_allowed)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(is_empty),exp[grammar(call),exp:ident(nodes_empty),exp:*ref:exp:ident(nodes)]]]],estmt(NONE)],statem(N/H),st_return[exp:const:int(0)]]],def[fname(bind_zonelist),funtype[fulltype[typec(N/H)],param[reg(),name(nodes),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(max),exp[grammar(binary_arith),aop(+),exp:const:int(1),exp[grammar(binary_arith),aop(*),exp:ident(MAX_NR_ZONES),exp[grammar(call),exp:ident(nodes_weight),exp:*ref:exp:ident(nodes)]]]]],estmt[exp:??(N/H)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(zl),exp[grammar(call),exp:ident(kmalloc),exp[grammar(binary_arith),aop(*),exp[grammar(sizeoftype),grammar(fulltype),typec(N/H)],exp:ident(max)],exp:ident(GFP_KERNEL)]]],sel_if[exp:??(N/H),st_return[exp[grammar(call),exp:ident(ERR_PTR),exp:??(N/H)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(zl),ident(zlcache_ptr)],exp:ident(NULL)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(num),exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(k),exp[grammar(binary_arith),aop(-),exp:ident(MAX_NR_ZONES),exp:const:int(1)]]],while[exp:const:int(1),{}stmt[statem(N/H),sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(k),exp:const:int(0)],statem(N/H),estmt(NONE)],estmt[exp:??(N/H)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(num),exp:const:int(0)],{}stmt[estmt[exp[grammar(call),exp:ident(kfree),exp:ident(zl)]],st_return[exp[grammar(call),exp:ident(ERR_PTR),exp:??(N/H)]]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(zl),ident(zones)],exp:ident(num)],exp:ident(NULL)]],st_return[exp:ident(zl)]]],def[fname(mpol_new),funtype[fulltype[typec(N/H)],param[reg(),name(mode),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(nodes),fulltype[typec(N/H)]]],{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(pr_debug),exp:const:string(setting mode %d nodes[0] %lx\n),exp:ident(mode),exp[grammar(cond3),exp:ident(nodes),exp[grammar(array_acc),exp[grammar(call),exp:ident(nodes_addr),exp:*ref:exp:ident(nodes)],exp:const:int(0)],exp:??(N/H)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(mode),exp:ident(MPOL_DEFAULT)],st_return[exp:ident(NULL)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(policy),exp[grammar(call),exp:ident(kmem_cache_alloc),exp:ident(policy_cache),exp:ident(GFP_KERNEL)]]],sel_if[exp:??(N/H),st_return[exp[grammar(call),exp:ident(ERR_PTR),exp:??(N/H)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(atomic_set),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(policy),ident(refcnt)],exp:const:int(1)]],statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(policy),ident(policy)],exp:ident(mode)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(policy),ident(cpuset_mems_allowed)],exp[grammar(call),exp:ident(cpuset_mems_allowed),exp:ident(current)]]],st_return[exp:ident(policy)]]],decl(N/H),decl(N/H),def[fname(check_pte_range),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(vma),fulltype[typec(N/H)]],param[reg(),name(pmd),fulltype[typec(N/H)]],param[reg(),name(addr),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(end),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(nodes),fulltype[typec(N/H)]],param[reg(),name(flags),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(private),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(orig_pte),exp[grammar(assign),simple_assi(=),exp:ident(pte),exp[grammar(call),exp:ident(pte_offset_map_lock),exp[grammar(record_ptr),exp:ident(vma),ident(vm_mm)],exp:ident(pmd),exp:ident(addr),exp:&ref:exp:ident(ptl)]]]],statem(N/H),estmt[exp[grammar(call),exp:ident(pte_unmap_unlock),exp:ident(orig_pte),exp:ident(ptl)]],st_return[exp[grammar(binary_logi),logiop(??),exp:ident(addr),exp:ident(end)]]]],def[fname(check_pmd_range),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(vma),fulltype[typec(N/H)]],param[reg(),name(pud),fulltype[typec(N/H)]],param[reg(),name(addr),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(end),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(nodes),fulltype[typec(N/H)]],param[reg(),name(flags),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(private),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(pmd),exp[grammar(call),exp:ident(pmd_offset),exp:ident(pud),exp:ident(addr)]]],statem(N/H),st_return[exp:const:int(0)]]],def[fname(check_pud_range),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(vma),fulltype[typec(N/H)]],param[reg(),name(pgd),fulltype[typec(N/H)]],param[reg(),name(addr),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(end),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(nodes),fulltype[typec(N/H)]],param[reg(),name(flags),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(private),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(pud),exp[grammar(call),exp:ident(pud_offset),exp:ident(pgd),exp:ident(addr)]]],statem(N/H),st_return[exp:const:int(0)]]],def[fname(check_pgd_range),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(vma),fulltype[typec(N/H)]],param[reg(),name(addr),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(end),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(nodes),fulltype[typec(N/H)]],param[reg(),name(flags),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(private),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(pgd),exp[grammar(call),exp:ident(pgd_offset),exp[grammar(record_ptr),exp:ident(vma),ident(vm_mm)],exp:ident(addr)]]],statem(N/H),st_return[exp:const:int(0)]]],def[fname(check_range),funtype[fulltype[typec(N/H)],param[reg(),name(mm),fulltype[typec(N/H)]],param[reg(),name(start),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(end),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(nodes),fulltype[typec(N/H)]],param[reg(),name(flags),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(private),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp[grammar(binary_arith),aop(&),exp:ident(flags),exp[grammar(binary_arith),aop(|),exp:ident(MPOL_MF_MOVE),exp:ident(MPOL_MF_MOVE_ALL)]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(migrate_prep)]]],sel_if[exp:ident(err),st_return[exp[grammar(call),exp:ident(ERR_PTR),exp:ident(err)]],estmt(NONE)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(first),exp[grammar(call),exp:ident(find_vma),exp:ident(mm),exp:ident(start)]]],sel_if[exp:??(N/H),st_return[exp[grammar(call),exp:ident(ERR_PTR),exp:??(N/H)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(prev),exp:ident(NULL)]],for[exp[grammar(assign),simple_assi(=),exp:ident(vma),exp:ident(first)],exp[grammar(binary_logi),logiop(and),exp:ident(vma),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp:ident(end)]],exp[grammar(assign),simple_assi(=),exp:ident(vma),exp[grammar(record_ptr),exp:ident(vma),ident(vm_next)]],{}stmt[sel_if[exp:??(N/H),{}stmt[sel_if[exp[grammar(binary_logi),logiop(and),exp:??(N/H),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp:ident(end)]],st_return[exp[grammar(call),exp:ident(ERR_PTR),exp:??(N/H)]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(and),exp:ident(prev),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(prev),ident(vm_end)],exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)]]],st_return[exp[grammar(call),exp:ident(ERR_PTR),exp:??(N/H)]],estmt(NONE)]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(and),exp:??(N/H),exp[grammar(binary_logi),logiop(or),exp[grammar(binary_arith),aop(&),exp:ident(flags),exp:ident(MPOL_MF_STRICT)],exp[grammar(binary_logi),logiop(and),exp[grammar(binary_arith),aop(&),exp:ident(flags),exp[grammar(binary_arith),aop(|),exp:ident(MPOL_MF_MOVE),exp:ident(MPOL_MF_MOVE_ALL)]],exp[grammar(call),exp:ident(vma_migratable),exp:ident(vma)]]]],{}stmt[statem(N/H),sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(endvma),exp:ident(end)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(endvma),exp:ident(end)]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp:ident(start)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(start),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)]]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(check_pgd_range),exp:ident(vma),exp:ident(start),exp:ident(endvma),exp:ident(nodes),exp:ident(flags),exp:ident(private)]]],sel_if[exp:ident(err),{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(first),exp[grammar(call),exp:ident(ERR_PTR),exp:ident(err)]]],statem(N/H)],estmt(NONE)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(prev),exp:ident(vma)]]]],st_return[exp:ident(first)]]],def[fname(policy_vma),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(vma),fulltype[typec(N/H)]],param[reg(),name(new),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(pr_debug),exp:const:string(vma %lx-%lx/%lx vm_ops %p vm_file %p set_policy %p\n),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp[grammar(record_ptr),exp:ident(vma),ident(vm_pgoff)],exp[grammar(record_ptr),exp:ident(vma),ident(vm_ops)],exp[grammar(record_ptr),exp:ident(vma),ident(vm_file)],exp[grammar(cond3),exp[grammar(record_ptr),exp:ident(vma),ident(vm_ops)],exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(vma),ident(vm_ops)],ident(set_policy)],exp:ident(NULL)]]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(record_ptr),exp:ident(vma),ident(vm_ops)],exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(vma),ident(vm_ops)],ident(set_policy)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(vma),ident(vm_ops)],ident(set_policy)],exp:ident(vma),exp:ident(new)]]],estmt(NONE)],sel_if[exp:??(N/H),{}stmt[estmt[exp[grammar(call),exp:ident(mpol_get),exp:ident(new)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(vma),ident(vm_policy)],exp:ident(new)]],estmt[exp[grammar(call),exp:ident(mpol_free),exp:ident(old)]]],estmt(NONE)],st_return[exp:ident(err)]]],def[fname(mbind_range),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(vma),fulltype[typec(N/H)]],param[reg(),name(start),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(end),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(new),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:const:int(0)]],for[expr(NONE),exp[grammar(binary_logi),logiop(and),exp:ident(vma),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp:ident(end)]],exp[grammar(assign),simple_assi(=),exp:ident(vma),exp:ident(next)],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(next),exp[grammar(record_ptr),exp:ident(vma),ident(vm_next)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp:ident(start)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(split_vma),exp[grammar(record_ptr),exp:ident(vma),ident(vm_mm)],exp:ident(vma),exp:ident(start),exp:const:int(1)]]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(and),exp:??(N/H),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp:ident(end)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(split_vma),exp[grammar(record_ptr),exp:ident(vma),ident(vm_mm)],exp:ident(vma),exp:ident(end),exp:const:int(0)]]],estmt(NONE)],sel_if[exp:??(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(policy_vma),exp:ident(vma),exp:ident(new)]]],estmt(NONE)],sel_if[exp:ident(err),statem(N/H),estmt(NONE)]]],st_return[exp:ident(err)]]],def[fname(mpol_fix_fork_child_flag),funtype[fulltype[ctype[btype(void)]],param[reg(),name(p),fulltype[typec(N/H)]]],{}stmt[sel_if[exp[grammar(record_ptr),exp:ident(p),ident(mempolicy)],estmt[exp[grammar(assign),op_assi(|=),exp[grammar(record_ptr),exp:ident(p),ident(flags)],exp:ident(PF_MEMPOLICY)]],estmt[exp[grammar(assign),op_assi(&=),exp[grammar(record_ptr),exp:ident(p),ident(flags)],exp:??(N/H)]]]]],def[fname(mpol_set_task_struct_flag),funtype[fulltype[ctype[btype(void)]],param[reg(),name(),fulltype[ctype[btype(void)]]]],{}stmt[estmt[exp[grammar(call),exp:ident(mpol_fix_fork_child_flag),exp:ident(current)]]]],def[fname(do_set_mempolicy),funtype[fulltype[ctype[btype[itype[sgn(signed),base(long)]]]],param[reg(),name(mode),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(nodes),fulltype[typec(N/H)]]],{}stmt[statem(N/H),sel_if[exp[grammar(call),exp:ident(mpol_check_policy),exp:ident(mode),exp:ident(nodes)],st_return[exp:??(N/H)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(new),exp[grammar(call),exp:ident(mpol_new),exp:ident(mode),exp:ident(nodes)]]],sel_if[exp[grammar(call),exp:ident(IS_ERR),exp:ident(new)],st_return[exp[grammar(call),exp:ident(PTR_ERR),exp:ident(new)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(mpol_free),exp[grammar(record_ptr),exp:ident(current),ident(mempolicy)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(current),ident(mempolicy)],exp:ident(new)]],estmt[exp[grammar(call),exp:ident(mpol_set_task_struct_flag)]],sel_if[exp[grammar(binary_logi),logiop(and),exp:ident(new),exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(new),ident(policy)],exp:ident(MPOL_INTERLEAVE)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(current),ident(il_next)],exp[grammar(call),exp:ident(first_node),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(new),ident(v)],ident(nodes)]]]],estmt(NONE)],st_return[exp:const:int(0)]]],def[fname(get_zonemask),funtype[fulltype[ctype[btype(void)]],param[reg(),name(p),fulltype[typec(N/H)]],param[reg(),name(nodes),fulltype[typec(N/H)]]],{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(nodes_clear),exp:*ref:exp:ident(nodes)]],statem(N/H)]],def[fname(lookup_node),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(mm),fulltype[typec(N/H)]],param[reg(),name(addr),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(get_user_pages),exp:ident(current),exp:ident(mm),exp[grammar(binary_arith),aop(&),exp:ident(addr),exp:ident(PAGE_MASK)],exp:const:int(1),exp:const:int(0),exp:const:int(0),exp:&ref:exp:ident(p),exp:ident(NULL)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(err),exp:const:int(0)],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(page_to_nid),exp:ident(p)]]],estmt[exp[grammar(call),exp:ident(put_page),exp:ident(p)]]],estmt(NONE)],st_return[exp:ident(err)]]],def[fname(do_get_mempolicy),funtype[fulltype[ctype[btype[itype[sgn(signed),base(long)]]]],param[reg(),name(policy),fulltype[typec(N/H)]],param[reg(),name(nmask),fulltype[typec(N/H)]],param[reg(),name(addr),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(flags),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(cpuset_update_task_memory_state)]],sel_if[exp[grammar(binary_arith),aop(&),exp:ident(flags),exp:??(N/H)],st_return[exp:??(N/H)],estmt(NONE)],sel_if[exp[grammar(binary_arith),aop(&),exp:ident(flags),exp:ident(MPOL_F_MEMS_ALLOWED)],{}stmt[sel_if[exp[grammar(binary_arith),aop(&),exp:ident(flags),exp[grammar(binary_arith),aop(|),exp:ident(MPOL_F_NODE),exp:ident(MPOL_F_ADDR)]],st_return[exp:??(N/H)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(policy),exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(nmask),exp:ident(cpuset_current_mems_allowed)]],st_return[exp:const:int(0)]],estmt(NONE)],sel_if[exp[grammar(binary_arith),aop(&),exp:ident(flags),exp:ident(MPOL_F_ADDR)],{}stmt[estmt[exp[grammar(call),exp:ident(down_read),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(mm),ident(mmap_sem)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(vma),exp[grammar(call),exp:ident(find_vma_intersection),exp:ident(mm),exp:ident(addr),exp[grammar(binary_arith),aop(+),exp:ident(addr),exp:const:int(1)]]]],sel_if[exp:??(N/H),{}stmt[estmt[exp[grammar(call),exp:ident(up_read),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(mm),ident(mmap_sem)]]],st_return[exp:??(N/H)]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(record_ptr),exp:ident(vma),ident(vm_ops)],exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(vma),ident(vm_ops)],ident(get_policy)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(pol),exp[grammar(call),exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(vma),ident(vm_ops)],ident(get_policy)],exp:ident(vma),exp:ident(addr)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(pol),exp[grammar(record_ptr),exp:ident(vma),ident(vm_policy)]]]]],sel_if[exp:ident(addr),st_return[exp:??(N/H)],estmt(NONE)]],sel_if[exp:??(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(pol),exp:&ref:exp:ident(default_policy)]],estmt(NONE)],sel_if[exp[grammar(binary_arith),aop(&),exp:ident(flags),exp:ident(MPOL_F_NODE)],{}stmt[sel_if[exp[grammar(binary_arith),aop(&),exp:ident(flags),exp:ident(MPOL_F_ADDR)],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(lookup_node),exp:ident(mm),exp:ident(addr)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(err),exp:const:int(0)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(policy),exp:ident(err)]]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(eq),exp:ident(pol),exp[grammar(record_ptr),exp:ident(current),ident(mempolicy)]],exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(pol),ident(policy)],exp:ident(MPOL_INTERLEAVE)]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(policy),exp[grammar(record_ptr),exp:ident(current),ident(il_next)]]]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],statem(N/H)]]]],estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(policy),exp[grammar(record_ptr),exp:ident(pol),ident(policy)]]]],sel_if[exp:ident(vma),{}stmt[estmt[exp[grammar(call),exp:ident(up_read),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp[grammar(record_ptr),exp:ident(current),ident(mm)],ident(mmap_sem)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(vma),exp:ident(NULL)]]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:const:int(0)]],sel_if[exp:ident(nmask),estmt[exp[grammar(call),exp:ident(get_zonemask),exp:ident(pol),exp:ident(nmask)]],estmt(NONE)],statem(N/H),st_return[exp:ident(err)]]],def[fname(migrate_page_add),funtype[fulltype[ctype[btype(void)]],param[reg(),name(page),fulltype[typec(N/H)]],param[reg(),name(pagelist),fulltype[typec(N/H)]],param[reg(),name(flags),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]]],{}stmt[sel_if[exp[grammar(binary_logi),logiop(or),exp[grammar(binary_arith),aop(&),exp:ident(flags),exp:ident(MPOL_MF_MOVE_ALL)],exp[grammar(binary_logi),logiop(eq),exp[grammar(call),exp:ident(page_mapcount),exp:ident(page)],exp:const:int(1)]],estmt[exp[grammar(call),exp:ident(isolate_lru_page),exp:ident(page),exp:ident(pagelist)]],estmt(NONE)]]],def[fname(new_node_page),funtype[fulltype[typec(N/H)],param[reg(),name(page),fulltype[typec(N/H)]],param[reg(),name(node),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(x),fulltype[typec(N/H)]]],{}stmt[st_return[exp[grammar(call),exp:ident(alloc_pages_node),exp:ident(node),exp:ident(GFP_HIGHUSER_MOVABLE),exp:const:int(0)]]]],def[fname(migrate_to_node),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(mm),fulltype[typec(N/H)]],param[reg(),name(source),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(dest),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(flags),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(LIST_HEAD),exp:ident(pagelist)]],statem(N/H),estmt[exp[grammar(call),exp:ident(nodes_clear),exp:ident(nmask)]],estmt[exp[grammar(call),exp:ident(node_set),exp:ident(source),exp:ident(nmask)]],estmt[exp[grammar(call),exp:ident(check_range),exp:ident(mm),exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(mm),ident(mmap)],ident(vm_start)],exp:ident(TASK_SIZE),exp:&ref:exp:ident(nmask),exp[grammar(binary_arith),aop(|),exp:ident(flags),exp:ident(MPOL_MF_DISCONTIG_OK)],exp:&ref:exp:ident(pagelist)]],sel_if[exp:??(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(migrate_pages),exp:&ref:exp:ident(pagelist),exp:ident(new_node_page),exp:ident(dest)]]],estmt(NONE)],st_return[exp:ident(err)]]],def[fname(do_migrate_pages),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(mm),fulltype[typec(N/H)]],param[reg(),name(from_nodes),fulltype[typec(N/H)]],param[reg(),name(to_nodes),fulltype[typec(N/H)]],param[reg(),name(flags),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[estmt[exp[grammar(call),exp:ident(LIST_HEAD),exp:ident(pagelist)]],statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(down_read),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(mm),ident(mmap_sem)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(migrate_vmas),exp:ident(mm),exp:ident(from_nodes),exp:ident(to_nodes),exp:ident(flags)]]],sel_if[exp:ident(err),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(tmp),exp:*ref:exp:ident(from_nodes)]],while[exp:??(N/H),{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(source),exp:??(N/H)],statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(node_clear),exp:ident(source),exp:ident(tmp)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(migrate_to_node),exp:ident(mm),exp:ident(source),exp:ident(dest),exp:ident(flags)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(err),exp:const:int(0)],estmt[exp[grammar(assign),op_assi(+=),exp:ident(busy),exp:ident(err)]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(err),exp:const:int(0)],statem(N/H),estmt(NONE)]]],statem(N/H),sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(err),exp:const:int(0)],st_return[exp:ident(err)],estmt(NONE)],st_return[exp:ident(busy)]]],NCP(N/H),def[fname(migrate_page_add),funtype[fulltype[ctype[btype(void)]],param[reg(),name(page),fulltype[typec(N/H)]],param[reg(),name(pagelist),fulltype[typec(N/H)]],param[reg(),name(flags),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]]],{}stmt[]],def[fname(do_migrate_pages),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(mm),fulltype[typec(N/H)]],param[reg(),name(from_nodes),fulltype[typec(N/H)]],param[reg(),name(to_nodes),fulltype[typec(N/H)]],param[reg(),name(flags),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[st_return[exp:??(N/H)]]],def[fname(new_vma_page),funtype[fulltype[typec(N/H)],param[reg(),name(page),fulltype[typec(N/H)]],param[reg(),name(private),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(x),fulltype[typec(N/H)]]],{}stmt[st_return[exp:ident(NULL)]]],def[fname(do_mbind),funtype[fulltype[ctype[btype[itype[sgn(signed),base(long)]]]],param[reg(),name(start),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(len),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(mode),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(nmask),fulltype[typec(N/H)]],param[reg(),name(flags),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(LIST_HEAD),exp:ident(pagelist)]],sel_if[exp[grammar(binary_logi),logiop(or),exp[grammar(binary_arith),aop(&),exp:ident(flags),exp:??(N/H)],exp[grammar(binary_logi),logiop(??),exp:ident(mode),exp:ident(MPOL_MAX)]],st_return[exp:??(N/H)],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_arith),aop(&),exp:ident(flags),exp:ident(MPOL_MF_MOVE_ALL)],exp:??(N/H)],st_return[exp:??(N/H)],estmt(NONE)],sel_if[exp[grammar(binary_arith),aop(&),exp:ident(start),exp:??(N/H)],st_return[exp:??(N/H)],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(mode),exp:ident(MPOL_DEFAULT)],estmt[exp[grammar(assign),op_assi(&=),exp:ident(flags),exp:??(N/H)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(len),exp[grammar(binary_arith),aop(&),exp[grammar(binary_arith),aop(-),exp[grammar(binary_arith),aop(+),exp:ident(len),exp:ident(PAGE_SIZE)],exp:const:int(1)],exp:ident(PAGE_MASK)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(end),exp[grammar(binary_arith),aop(+),exp:ident(start),exp:ident(len)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(end),exp:ident(start)],st_return[exp:??(N/H)],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(end),exp:ident(start)],st_return[exp:const:int(0)],estmt(NONE)],sel_if[exp[grammar(call),exp:ident(mpol_check_policy),exp:ident(mode),exp:ident(nmask)],st_return[exp:??(N/H)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(new),exp[grammar(call),exp:ident(mpol_new),exp:ident(mode),exp:ident(nmask)]]],sel_if[exp[grammar(call),exp:ident(IS_ERR),exp:ident(new)],st_return[exp[grammar(call),exp:ident(PTR_ERR),exp:ident(new)]],estmt(NONE)],sel_if[exp:??(N/H),estmt[exp[grammar(assign),op_assi(|=),exp:ident(flags),exp:ident(MPOL_MF_DISCONTIG_OK)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(pr_debug),exp:const:string(mbind %lx-%lx mode:%ld nodes:%lx\n),exp:ident(start),exp[grammar(binary_arith),aop(+),exp:ident(start),exp:ident(len)],exp:ident(mode),exp[grammar(cond3),exp:ident(nmask),exp[grammar(array_acc),exp[grammar(call),exp:ident(nodes_addr),exp:*ref:exp:ident(nmask)],exp:const:int(0)],exp:??(N/H)]]],estmt[exp[grammar(call),exp:ident(down_write),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(mm),ident(mmap_sem)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(vma),exp[grammar(call),exp:ident(check_range),exp:ident(mm),exp:ident(start),exp:ident(end),exp:ident(nmask),exp[grammar(binary_arith),aop(|),exp:ident(flags),exp:ident(MPOL_MF_INVERT)],exp:&ref:exp:ident(pagelist)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(PTR_ERR),exp:ident(vma)]]],sel_if[exp:??(N/H),{}stmt[statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(mbind_range),exp:ident(vma),exp:ident(start),exp:ident(end),exp:ident(new)]]],sel_if[exp:??(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(nr_failed),exp[grammar(call),exp:ident(migrate_pages),exp:&ref:exp:ident(pagelist),exp:ident(new_vma_page),exp:??(N/H)]]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(and),exp:??(N/H),exp:ident(nr_failed)],exp[grammar(binary_arith),aop(&),exp:ident(flags),exp:ident(MPOL_MF_STRICT)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],estmt(NONE)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(up_write),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(mm),ident(mmap_sem)]]],estmt[exp[grammar(call),exp:ident(mpol_free),exp:ident(new)]],st_return[exp:ident(err)]]],NCP(N/H),NCP(N/H),NCP(N/H),NCP(N/H),NCP(N/H),NCP(N/H),NCP(N/H),NCP(N/H),NCP(N/H),def[fname(get_vma_policy),funtype[fulltype[typec(N/H)],param[reg(),name(task),fulltype[typec(N/H)]],param[reg(),name(vma),fulltype[typec(N/H)]],param[reg(),name(addr),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp:ident(vma),{}stmt[sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(record_ptr),exp:ident(vma),ident(vm_ops)],exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(vma),ident(vm_ops)],ident(get_policy)]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(pol),exp[grammar(call),exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(vma),ident(vm_ops)],ident(get_policy)],exp:ident(vma),exp:ident(addr)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(shared_pol),exp:const:int(1)]]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(record_ptr),exp:ident(vma),ident(vm_policy)],exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(vma),ident(vm_policy)],ident(policy)],exp:ident(MPOL_DEFAULT)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(pol),exp[grammar(record_ptr),exp:ident(vma),ident(vm_policy)]]],estmt(NONE)]]],estmt(NONE)],sel_if[exp:??(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(pol),exp:&ref:exp:ident(default_policy)]],sel_if[exp[grammar(binary_logi),logiop(and),exp:??(N/H),exp[grammar(binary_logi),logiop(??),exp:ident(pol),exp[grammar(record_ptr),exp:ident(current),ident(mempolicy)]]],estmt[exp[grammar(call),exp:ident(mpol_get),exp:ident(pol)]],estmt(NONE)]],st_return[exp:ident(pol)]]],def[fname(zonelist_policy),funtype[fulltype[typec(N/H)],param[reg(),name(gfp),fulltype[typec(N/H)]],param[reg(),name(policy),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),st_return[exp[grammar(binary_arith),aop(+),exp[grammar(record_ptr),exp[grammar(call),exp:ident(NODE_DATA),exp:ident(nd)],ident(node_zonelists)],exp[grammar(call),exp:ident(gfp_zone),exp:ident(gfp)]]]]],def[fname(interleave_nodes),funtype[fulltype[ctype[btype[itype[sgn(unsigned),base(int)]]]],param[reg(),name(policy),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(nid),exp[grammar(record_ptr),exp:ident(me),ident(il_next)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(next),exp[grammar(call),exp:ident(next_node),exp:ident(nid),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(policy),ident(v)],ident(nodes)]]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(next),exp:ident(MAX_NUMNODES)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(next),exp[grammar(call),exp:ident(first_node),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(policy),ident(v)],ident(nodes)]]]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(me),ident(il_next)],exp:ident(next)]],st_return[exp:ident(nid)]]],def[fname(slab_node),funtype[fulltype[ctype[btype[itype[sgn(unsigned),base(int)]]]],param[reg(),name(policy),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H)]],def[fname(offset_il_node),funtype[fulltype[ctype[btype[itype[sgn(unsigned),base(int)]]]],param[reg(),name(pol),fulltype[typec(N/H)]],param[reg(),name(vma),fulltype[typec(N/H)]],param[reg(),name(off),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(c),exp:const:int(0)]],statem(N/H),st_return[exp:ident(nid)]]],def[fname(interleave_nid),funtype[fulltype[ctype[btype[itype[sgn(unsigned),base(int)]]]],param[reg(),name(pol),fulltype[typec(N/H)]],param[reg(),name(vma),fulltype[typec(N/H)]],param[reg(),name(addr),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(shift),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[sel_if[exp:ident(vma),{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(BUG_ON),exp[grammar(binary_logi),logiop(??),exp:ident(shift),exp:ident(PAGE_SHIFT)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(off),exp[grammar(binary_arith),aop(>>),exp[grammar(record_ptr),exp:ident(vma),ident(vm_pgoff)],exp[grammar(binary_arith),aop(-),exp:ident(shift),exp:ident(PAGE_SHIFT)]]]],estmt[exp[grammar(assign),op_assi(+=),exp:ident(off),exp[grammar(binary_arith),aop(>>),exp[grammar(binary_arith),aop(-),exp:ident(addr),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)]],exp:ident(shift)]]],st_return[exp[grammar(call),exp:ident(offset_il_node),exp:ident(pol),exp:ident(vma),exp:ident(off)]]],st_return[exp[grammar(call),exp:ident(interleave_nodes),exp:ident(pol)]]]]],def[fname(huge_zonelist),funtype[fulltype[typec(N/H)],param[reg(),name(vma),fulltype[typec(N/H)]],param[reg(),name(addr),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(gfp_flags),fulltype[typec(N/H)]],param[reg(),name(mpol),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(mpol),exp:ident(NULL)]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(pol),ident(policy)],exp:ident(MPOL_INTERLEAVE)],{}stmt[statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(nid),exp[grammar(call),exp:ident(interleave_nid),exp:ident(pol),exp:ident(vma),exp:ident(addr),exp:ident(HPAGE_SHIFT)]]],estmt[exp[grammar(call),exp:ident(__mpol_free),exp:ident(pol)]],st_return[exp[grammar(binary_arith),aop(+),exp[grammar(record_ptr),exp[grammar(call),exp:ident(NODE_DATA),exp:ident(nid)],ident(node_zonelists)],exp[grammar(call),exp:ident(gfp_zone),exp:ident(gfp_flags)]]]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(zl),exp[grammar(call),exp:ident(zonelist_policy),exp:ident(GFP_HIGHUSER),exp:ident(pol)]]],sel_if[exp[grammar(call),exp:ident(unlikely),exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp:ident(pol),exp:&ref:exp:ident(default_policy)],exp[grammar(binary_logi),logiop(??),exp:ident(pol),exp[grammar(record_ptr),exp:ident(current),ident(mempolicy)]]]],{}stmt[sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(pol),ident(policy)],exp:ident(MPOL_BIND)],estmt[exp[grammar(call),exp:ident(__mpol_free),exp:ident(pol)]],estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(mpol),exp:ident(pol)]]]],estmt(NONE)],st_return[exp:ident(zl)]]],def[fname(alloc_page_interleave),funtype[fulltype[typec(N/H)],param[reg(),name(gfp),fulltype[typec(N/H)]],param[reg(),name(order),fulltype[ctype[btype[itype[sgn(unsigned),base(int)]]]]],param[reg(),name(nid),fulltype[ctype[btype[itype[sgn(unsigned),base(int)]]]]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(zl),exp[grammar(binary_arith),aop(+),exp[grammar(record_ptr),exp[grammar(call),exp:ident(NODE_DATA),exp:ident(nid)],ident(node_zonelists)],exp[grammar(call),exp:ident(gfp_zone),exp:ident(gfp)]]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(page),exp[grammar(call),exp:ident(__alloc_pages),exp:ident(gfp),exp:ident(order),exp:ident(zl)]]],sel_if[exp[grammar(binary_logi),logiop(and),exp:ident(page),exp[grammar(binary_logi),logiop(eq),exp[grammar(call),exp:ident(page_zone),exp:ident(page)],exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(zl),ident(zones)],exp:const:int(0)]]],estmt[exp[grammar(call),exp:ident(inc_zone_page_state),exp:ident(page),exp:ident(NUMA_INTERLEAVE_HIT)]],estmt(NONE)],st_return[exp:ident(page)]]],def[fname(alloc_page_vma),funtype[fulltype[typec(N/H)],param[reg(),name(gfp),fulltype[typec(N/H)]],param[reg(),name(vma),fulltype[typec(N/H)]],param[reg(),name(addr),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(cpuset_update_task_memory_state)]],sel_if[exp[grammar(call),exp:ident(unlikely),exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(pol),ident(policy)],exp:ident(MPOL_INTERLEAVE)]],{}stmt[statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(nid),exp[grammar(call),exp:ident(interleave_nid),exp:ident(pol),exp:ident(vma),exp:ident(addr),exp:ident(PAGE_SHIFT)]]],st_return[exp[grammar(call),exp:ident(alloc_page_interleave),exp:ident(gfp),exp:const:int(0),exp:ident(nid)]]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(zl),exp[grammar(call),exp:ident(zonelist_policy),exp:ident(gfp),exp:ident(pol)]]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp:ident(pol),exp:&ref:exp:ident(default_policy)],exp[grammar(binary_logi),logiop(??),exp:ident(pol),exp[grammar(record_ptr),exp:ident(current),ident(mempolicy)]]],{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(__mpol_free),exp:ident(pol)]],st_return[exp:ident(page)]],estmt(NONE)],st_return[exp[grammar(call),exp:ident(__alloc_pages),exp:ident(gfp),exp:const:int(0),exp:ident(zl)]]]],def[fname(alloc_pages_current),funtype[fulltype[typec(N/H)],param[reg(),name(gfp),fulltype[typec(N/H)]],param[reg(),name(order),fulltype[ctype[btype[itype[sgn(unsigned),base(int)]]]]]],{}stmt[statem(N/H),sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_arith),aop(&),exp:ident(gfp),exp:ident(__GFP_WAIT)],exp:??(N/H)],estmt[exp[grammar(call),exp:ident(cpuset_update_task_memory_state)]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(or),exp[grammar(binary_logi),logiop(or),exp:??(N/H),exp[grammar(call),exp:ident(in_interrupt)]],exp[grammar(binary_arith),aop(&),exp:ident(gfp),exp:ident(__GFP_THISNODE)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(pol),exp:&ref:exp:ident(default_policy)]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(pol),ident(policy)],exp:ident(MPOL_INTERLEAVE)],st_return[exp[grammar(call),exp:ident(alloc_page_interleave),exp:ident(gfp),exp:ident(order),exp[grammar(call),exp:ident(interleave_nodes),exp:ident(pol)]]],estmt(NONE)],st_return[exp[grammar(call),exp:ident(__alloc_pages),exp:ident(gfp),exp:ident(order),exp[grammar(call),exp:ident(zonelist_policy),exp:ident(gfp),exp:ident(pol)]]]]],mtop(N/H),def[fname(__mpol_copy),funtype[fulltype[typec(N/H)],param[reg(),name(old),fulltype[typec(N/H)]]],{}stmt[statem(N/H),sel_if[exp:??(N/H),st_return[exp[grammar(call),exp:ident(ERR_PTR),exp:??(N/H)]],estmt(NONE)],sel_if[exp[grammar(call),exp:ident(current_cpuset_is_being_rebound)],{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(mpol_rebind_policy),exp:ident(old),exp:&ref:exp:ident(mems)]]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(new),exp:*ref:exp:ident(old)]],estmt[exp[grammar(call),exp:ident(atomic_set),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(new),ident(refcnt)],exp:const:int(1)]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(new),ident(policy)],exp:ident(MPOL_BIND)],{}stmt[statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(new),ident(v)],ident(zonelist)],exp[grammar(call),exp:ident(kmemdup),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(old),ident(v)],ident(zonelist)],exp:ident(sz),exp:ident(GFP_KERNEL)]]],sel_if[exp:??(N/H),{}stmt[estmt[exp[grammar(call),exp:ident(kmem_cache_free),exp:ident(policy_cache),exp:ident(new)]],st_return[exp[grammar(call),exp:ident(ERR_PTR),exp:??(N/H)]]],estmt(NONE)]],estmt(NONE)],st_return[exp:ident(new)]]],def[fname(__mpol_equal),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(a),fulltype[typec(N/H)]],param[reg(),name(b),fulltype[typec(N/H)]]],{}stmt[sel_if[exp[grammar(binary_logi),logiop(or),exp:??(N/H),exp:??(N/H)],st_return[exp:const:int(0)],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(a),ident(policy)],exp[grammar(record_ptr),exp:ident(b),ident(policy)]],st_return[exp:const:int(0)],estmt(NONE)],statem(N/H)]],def[fname(__mpol_free),funtype[fulltype[ctype[btype(void)]],param[reg(),name(p),fulltype[typec(N/H)]]],{}stmt[sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(p),ident(policy)],exp:ident(MPOL_BIND)],estmt[exp[grammar(call),exp:ident(kfree),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(p),ident(v)],ident(zonelist)]]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(p),ident(policy)],exp:ident(MPOL_DEFAULT)]],estmt[exp[grammar(call),exp:ident(kmem_cache_free),exp:ident(policy_cache),exp:ident(p)]]]],def[fname(sp_lookup),funtype[fulltype[typec(N/H)],param[reg(),name(sp),fulltype[typec(N/H)]],param[reg(),name(start),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(end),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]]],{}stmt[statem(N/H),while[exp:ident(n),{}stmt[statem(N/H),sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(start),exp[grammar(record_ptr),exp:ident(p),ident(end)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(n),exp[grammar(record_ptr),exp:ident(n),ident(rb_right)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(end),exp[grammar(record_ptr),exp:ident(p),ident(start)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(n),exp[grammar(record_ptr),exp:ident(n),ident(rb_left)]]],statem(N/H)]]]],sel_if[exp:??(N/H),st_return[exp:ident(NULL)],estmt(NONE)],for[expr(NONE),expr(NONE),expr(NONE),{}stmt[statem(N/H),statem(N/H),sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(w),exp[grammar(call),exp:ident(rb_entry),exp:ident(prev),argtype(N/H),exp:ident(nd)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(w),ident(end)],exp:ident(start)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(n),exp:ident(prev)]]]],st_return[exp[grammar(call),exp:ident(rb_entry),exp:ident(n),argtype(N/H),exp:ident(nd)]]]],def[fname(sp_insert),funtype[fulltype[ctype[btype(void)]],param[reg(),name(sp),fulltype[typec(N/H)]],param[reg(),name(new),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),while[exp:*ref:exp:ident(p),{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(parent),exp:*ref:exp:ident(p)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(nd),exp[grammar(call),exp:ident(rb_entry),exp:ident(parent),argtype(N/H),exp:ident(nd)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(new),ident(start)],exp[grammar(record_ptr),exp:ident(nd),ident(start)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(p),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:*ref:exp:ident(p),ident(rb_left)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(new),ident(end)],exp[grammar(record_ptr),exp:ident(nd),ident(end)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(p),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:*ref:exp:ident(p),ident(rb_right)]]],estmt[exp[grammar(call),exp:ident(BUG)]]]]]],estmt[exp[grammar(call),exp:ident(rb_link_node),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(new),ident(nd)],exp:ident(parent),exp:ident(p)]],estmt[exp[grammar(call),exp:ident(rb_insert_color),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(new),ident(nd)],exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(sp),ident(root)]]],estmt[exp[grammar(call),exp:ident(pr_debug),exp:const:string(inserting %lx-%lx: %d\n),exp[grammar(record_ptr),exp:ident(new),ident(start)],exp[grammar(record_ptr),exp:ident(new),ident(end)],exp[grammar(cond3),exp[grammar(record_ptr),exp:ident(new),ident(policy)],exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(new),ident(policy)],ident(policy)],exp:const:int(0)]]]]],def[fname(mpol_shared_policy_lookup),funtype[fulltype[typec(N/H)],param[reg(),name(sp),fulltype[typec(N/H)]],param[reg(),name(idx),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp:??(N/H),st_return[exp:ident(NULL)],estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_lock),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(sp),ident(lock)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(sn),exp[grammar(call),exp:ident(sp_lookup),exp:ident(sp),exp:ident(idx),exp[grammar(binary_arith),aop(+),exp:ident(idx),exp:const:int(1)]]]],sel_if[exp:ident(sn),{}stmt[estmt[exp[grammar(call),exp:ident(mpol_get),exp[grammar(record_ptr),exp:ident(sn),ident(policy)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(pol),exp[grammar(record_ptr),exp:ident(sn),ident(policy)]]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_unlock),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(sp),ident(lock)]]],st_return[exp:ident(pol)]]],def[fname(sp_delete),funtype[fulltype[ctype[btype(void)]],param[reg(),name(sp),fulltype[typec(N/H)]],param[reg(),name(n),fulltype[typec(N/H)]]],{}stmt[estmt[exp[grammar(call),exp:ident(pr_debug),exp:const:string(deleting %lx-l%lx\n),exp[grammar(record_ptr),exp:ident(n),ident(start)],exp[grammar(record_ptr),exp:ident(n),ident(end)]]],estmt[exp[grammar(call),exp:ident(rb_erase),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(n),ident(nd)],exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(sp),ident(root)]]],estmt[exp[grammar(call),exp:ident(mpol_free),exp[grammar(record_ptr),exp:ident(n),ident(policy)]]],estmt[exp[grammar(call),exp:ident(kmem_cache_free),exp:ident(sn_cache),exp:ident(n)]]]],def[fname(sp_alloc),funtype[fulltype[typec(N/H)],param[reg(),name(start),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(end),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(pol),fulltype[typec(N/H)]]],{}stmt[statem(N/H),sel_if[exp:??(N/H),st_return[exp:ident(NULL)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(n),ident(start)],exp:ident(start)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(n),ident(end)],exp:ident(end)]],estmt[exp[grammar(call),exp:ident(mpol_get),exp:ident(pol)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(n),ident(policy)],exp:ident(pol)]],st_return[exp:ident(n)]]],def[fname(shared_policy_replace),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(sp),fulltype[typec(N/H)]],param[reg(),name(start),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(end),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(new),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(n),exp[grammar(call),exp:ident(sp_lookup),exp:ident(sp),exp:ident(start),exp:ident(end)]]],while[exp[grammar(binary_logi),logiop(and),exp:ident(n),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(n),ident(start)],exp:ident(end)]],{}stmt[statem(N/H),sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(n),ident(start)],exp:ident(start)],{}stmt[sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(n),ident(end)],exp:ident(end)],estmt[exp[grammar(call),exp:ident(sp_delete),exp:ident(sp),exp:ident(n)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(n),ident(start)],exp:ident(end)]]]],{}stmt[sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(n),ident(end)],exp:ident(end)],{}stmt[sel_if[exp:??(N/H),{}stmt[estmt[exp[grammar(call),exp:ident(spin_unlock),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(sp),ident(lock)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(new2),exp[grammar(call),exp:ident(sp_alloc),exp:ident(end),exp[grammar(record_ptr),exp:ident(n),ident(end)],exp[grammar(record_ptr),exp:ident(n),ident(policy)]]]],sel_if[exp:??(N/H),st_return[exp:??(N/H)],estmt(NONE)],statem(N/H)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(n),ident(end)],exp:ident(start)]],estmt[exp[grammar(call),exp:ident(sp_insert),exp:ident(sp),exp:ident(new2)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(new2),exp:ident(NULL)]],statem(N/H)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(n),ident(end)],exp:ident(start)]]]]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(n),exp[grammar(call),exp:ident(rb_entry),exp:ident(next),argtype(N/H),exp:ident(nd)]]]]],sel_if[exp:ident(new),estmt[exp[grammar(call),exp:ident(sp_insert),exp:ident(sp),exp:ident(new)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_unlock),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(sp),ident(lock)]]],sel_if[exp:ident(new2),{}stmt[estmt[exp[grammar(call),exp:ident(mpol_free),exp[grammar(record_ptr),exp:ident(new2),ident(policy)]]],estmt[exp[grammar(call),exp:ident(kmem_cache_free),exp:ident(sn_cache),exp:ident(new2)]]],estmt(NONE)],st_return[exp:const:int(0)]]],def[fname(mpol_shared_policy_init),funtype[fulltype[ctype[btype(void)]],param[reg(),name(info),fulltype[typec(N/H)]],param[reg(),name(policy),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(policy_nodes),fulltype[typec(N/H)]]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(info),ident(root)],exp:ident(RB_ROOT)]],estmt[exp[grammar(call),exp:ident(spin_lock_init),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(info),ident(lock)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(policy),exp:ident(MPOL_DEFAULT)],{}stmt[statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(newpol),exp[grammar(call),exp:ident(mpol_new),exp:ident(policy),exp:ident(policy_nodes)]]],sel_if[exp:??(N/H),{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(memset),exp:&ref:exp:ident(pvma),exp:const:int(0),exp[grammar(sizeoftype),grammar(fulltype),typec(N/H)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(pvma),ident(vm_end)],exp:ident(TASK_SIZE)]],estmt[exp[grammar(call),exp:ident(mpol_set_shared_policy),exp:ident(info),exp:&ref:exp:ident(pvma),exp:ident(newpol)]],estmt[exp[grammar(call),exp:ident(mpol_free),exp:ident(newpol)]]],estmt(NONE)]],estmt(NONE)]]],def[fname(mpol_set_shared_policy),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(info),fulltype[typec(N/H)]],param[reg(),name(vma),fulltype[typec(N/H)]],param[reg(),name(npol),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(pr_debug),exp:const:string(set_shared_policy %lx sz %lu %d %lx\n),exp[grammar(record_ptr),exp:ident(vma),ident(vm_pgoff)],exp:ident(sz),exp[grammar(cond3),exp:ident(npol),exp[grammar(record_ptr),exp:ident(npol),ident(policy)],exp:??(N/H)],exp[grammar(cond3),exp:ident(npol),exp[grammar(array_acc),exp[grammar(call),exp:ident(nodes_addr),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(npol),ident(v)],ident(nodes)]],exp:const:int(0)],exp:??(N/H)]]],sel_if[exp:ident(npol),{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(new),exp[grammar(call),exp:ident(sp_alloc),exp[grammar(record_ptr),exp:ident(vma),ident(vm_pgoff)],exp[grammar(binary_arith),aop(+),exp[grammar(record_ptr),exp:ident(vma),ident(vm_pgoff)],exp:ident(sz)],exp:ident(npol)]]],sel_if[exp:??(N/H),st_return[exp:??(N/H)],estmt(NONE)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(shared_policy_replace),exp:ident(info),exp[grammar(record_ptr),exp:ident(vma),ident(vm_pgoff)],exp[grammar(binary_arith),aop(+),exp[grammar(record_ptr),exp:ident(vma),ident(vm_pgoff)],exp:ident(sz)],exp:ident(new)]]],sel_if[exp[grammar(binary_logi),logiop(and),exp:ident(err),exp:ident(new)],estmt[exp[grammar(call),exp:ident(kmem_cache_free),exp:ident(sn_cache),exp:ident(new)]],estmt(NONE)],st_return[exp:ident(err)]]],def[fname(mpol_free_shared_policy),funtype[fulltype[ctype[btype(void)]],param[reg(),name(p),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(spin_lock),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(p),ident(lock)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(next),exp[grammar(call),exp:ident(rb_first),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(p),ident(root)]]]],while[exp:ident(next),{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(n),exp[grammar(call),exp:ident(rb_entry),exp:ident(next),argtype(N/H),exp:ident(nd)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(next),exp[grammar(call),exp:ident(rb_next),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(n),ident(nd)]]]],estmt[exp[grammar(call),exp:ident(rb_erase),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(n),ident(nd)],exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(p),ident(root)]]],estmt[exp[grammar(call),exp:ident(mpol_free),exp[grammar(record_ptr),exp:ident(n),ident(policy)]]],estmt[exp[grammar(call),exp:ident(kmem_cache_free),exp:ident(sn_cache),exp:ident(n)]]]],estmt[exp[grammar(call),exp:ident(spin_unlock),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(p),ident(lock)]]]]],NCP(N/H),def[fname(numa_default_policy),funtype[fulltype[ctype[btype(void)]],param[reg(),name(),fulltype[ctype[btype(void)]]]],{}stmt[estmt[exp[grammar(call),exp:ident(do_set_mempolicy),exp:ident(MPOL_DEFAULT),exp:ident(NULL)]]]],def[fname(mpol_rebind_policy),funtype[fulltype[ctype[btype(void)]],param[reg(),name(pol),fulltype[typec(N/H)]],param[reg(),name(newmask),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(mpolmask),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(pol),ident(cpuset_mems_allowed)]]],sel_if[exp[grammar(call),exp:ident(nodes_equal),exp:*ref:exp:ident(mpolmask),exp:*ref:exp:ident(newmask)],statem(N/H),estmt(NONE)],statem(N/H)]],def[fname(mpol_rebind_task),funtype[fulltype[ctype[btype(void)]],param[reg(),name(tsk),fulltype[typec(N/H)]],param[reg(),name(new),fulltype[typec(N/H)]]],{}stmt[estmt[exp[grammar(call),exp:ident(mpol_rebind_policy),exp[grammar(record_ptr),exp:ident(tsk),ident(mempolicy)],exp:ident(new)]]]],def[fname(mpol_rebind_mm),funtype[fulltype[ctype[btype(void)]],param[reg(),name(mm),fulltype[typec(N/H)]],param[reg(),name(new),fulltype[typec(N/H)]]],{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(down_write),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(mm),ident(mmap_sem)]]],for[exp[grammar(assign),simple_assi(=),exp:ident(vma),exp[grammar(record_ptr),exp:ident(mm),ident(mmap)]],exp:ident(vma),exp[grammar(assign),simple_assi(=),exp:ident(vma),exp[grammar(record_ptr),exp:ident(vma),ident(vm_next)]],estmt[exp[grammar(call),exp:ident(mpol_rebind_policy),exp[grammar(record_ptr),exp:ident(vma),ident(vm_policy)],exp:ident(new)]]],estmt[exp[grammar(call),exp:ident(up_write),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(mm),ident(mmap_sem)]]]]],decl(N/H),def[fname(mpol_to_str),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(buffer),fulltype[typec(N/H)]],param[reg(),name(maxlen),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(pol),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(l),exp[grammar(call),exp:ident(strlen),exp[grammar(array_acc),exp:ident(policy_types),exp:ident(mode)]]]],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(binary_arith),aop(+),exp:ident(buffer),exp:ident(maxlen)],exp[grammar(binary_arith),aop(+),exp[grammar(binary_arith),aop(+),exp:ident(p),exp:ident(l)],exp:const:int(1)]],st_return[exp:??(N/H)],estmt(NONE)],estmt[exp[grammar(call),exp:ident(strcpy),exp:ident(p),exp[grammar(array_acc),exp:ident(policy_types),exp:ident(mode)]]],estmt[exp[grammar(assign),op_assi(+=),exp:ident(p),exp:ident(l)]],sel_if[exp:??(N/H),{}stmt[sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(binary_arith),aop(+),exp:ident(buffer),exp:ident(maxlen)],exp[grammar(binary_arith),aop(+),exp:ident(p),exp:const:int(2)]],st_return[exp:??(N/H)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:??(N/H),exp:const:other(N/H)]],estmt[exp[grammar(assign),op_assi(+=),exp:ident(p),exp[grammar(call),exp:ident(nodelist_scnprintf),exp:ident(p),exp[grammar(binary_arith),aop(-),exp[grammar(binary_arith),aop(+),exp:ident(buffer),exp:ident(maxlen)],exp:ident(p)],exp:ident(nodes)]]]],estmt(NONE)],st_return[exp[grammar(binary_arith),aop(-),exp:ident(p),exp:ident(buffer)]]]],decl(N/H),def[fname(gather_stats),funtype[fulltype[ctype[btype(void)]],param[reg(),name(page),fulltype[typec(N/H)]],param[reg(),name(private),fulltype[typec(N/H)]],param[reg(),name(pte_dirty),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[statem(N/H),statem(N/H),estmt[exp:??(N/H)],sel_if[exp[grammar(binary_logi),logiop(or),exp:ident(pte_dirty),exp[grammar(call),exp:ident(PageDirty),exp:ident(page)]],estmt[exp:??(N/H)],estmt(NONE)],sel_if[exp[grammar(call),exp:ident(PageSwapCache),exp:ident(page)],estmt[exp:??(N/H)],estmt(NONE)],sel_if[exp[grammar(call),exp:ident(PageActive),exp:ident(page)],estmt[exp:??(N/H)],estmt(NONE)],sel_if[exp[grammar(call),exp:ident(PageWriteback),exp:ident(page)],estmt[exp:??(N/H)],estmt(NONE)],sel_if[exp[grammar(call),exp:ident(PageAnon),exp:ident(page)],estmt[exp:??(N/H)],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(count),exp[grammar(record_ptr),exp:ident(md),ident(mapcount_max)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(md),ident(mapcount_max)],exp:ident(count)]],estmt(NONE)],estmt[exp:??(N/H)]]],def[fname(check_huge_range),funtype[fulltype[ctype[btype(void)]],param[reg(),name(vma),fulltype[typec(N/H)]],param[reg(),name(start),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(end),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(md),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),for[exp[grammar(assign),simple_assi(=),exp:ident(addr),exp:ident(start)],exp[grammar(binary_logi),logiop(??),exp:ident(addr),exp:ident(end)],exp[grammar(assign),op_assi(+=),exp:ident(addr),exp:ident(HPAGE_SIZE)],{}stmt[statem(N/H),statem(N/H),sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(pte),exp:*ref:exp:ident(ptep)]],sel_if[exp[grammar(call),exp:ident(pte_none),exp:ident(pte)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(page),exp[grammar(call),exp:ident(pte_page),exp:ident(pte)]]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(gather_stats),exp:ident(page),exp:ident(md),exp[grammar(call),exp:ident(pte_dirty),exp:*ref:exp:ident(ptep)]]]]]]],def[fname(check_huge_range),funtype[fulltype[ctype[btype(void)]],param[reg(),name(vma),fulltype[typec(N/H)]],param[reg(),name(start),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(end),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(md),fulltype[typec(N/H)]]],{}stmt[]],def[fname(show_numa_map),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(v),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),sel_if[exp:??(N/H),st_return[exp:const:int(0)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(md),exp[grammar(call),exp:ident(kzalloc),exp[grammar(sizeoftype),grammar(fulltype),typec(N/H)],exp:ident(GFP_KERNEL)]]],sel_if[exp:??(N/H),st_return[exp:const:int(0)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(pol),exp[grammar(call),exp:ident(get_vma_policy),exp[grammar(record_ptr),exp:ident(priv),ident(task)],exp:ident(vma),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)]]]],estmt[exp[grammar(call),exp:ident(mpol_to_str),exp:ident(buffer),exp:sizeof:exp:ident(buffer),exp:ident(pol)]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp:ident(pol),exp:&ref:exp:ident(default_policy)],exp[grammar(binary_logi),logiop(??),exp:ident(pol),exp[grammar(record_ptr),exp:ident(current),ident(mempolicy)]]],estmt[exp[grammar(call),exp:ident(__mpol_free),exp:ident(pol)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(%08lx %s),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp:ident(buffer)]],sel_if[exp:ident(file),{}stmt[estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( file=)]],estmt[exp[grammar(call),exp:ident(seq_path),exp:ident(m),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(file),ident(f_path)],exp:const:string(\n\t= )]]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp[grammar(record_ptr),exp:ident(mm),ident(brk)]],exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp[grammar(record_ptr),exp:ident(mm),ident(start_brk)]]],{}stmt[estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( heap)]]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp[grammar(record_ptr),exp:ident(mm),ident(start_stack)]],exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp[grammar(record_ptr),exp:ident(mm),ident(start_stack)]]],{}stmt[estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( stack)]]],estmt(NONE)]]],sel_if[exp[grammar(call),exp:ident(is_vm_hugetlb_page),exp:ident(vma)],{}stmt[estmt[exp[grammar(call),exp:ident(check_huge_range),exp:ident(vma),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp:ident(md)]],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( huge)]]],{}stmt[estmt[exp[grammar(call),exp:ident(check_pgd_range),exp:ident(vma),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp[grammar(&ref),grammar(exp),grammar(array_acc),exp:ident(node_states),exp:ident(N_HIGH_MEMORY)],exp:ident(MPOL_MF_STATS),exp:ident(md)]]]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],sel_if[exp[grammar(record_ptr),exp:ident(md),ident(anon)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( anon=%lu),exp[grammar(record_ptr),exp:ident(md),ident(anon)]]],estmt(NONE)],sel_if[exp[grammar(record_ptr),exp:ident(md),ident(dirty)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( dirty=%lu),exp[grammar(record_ptr),exp:ident(md),ident(dirty)]]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(md),ident(pages)],exp[grammar(record_ptr),exp:ident(md),ident(anon)]],exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(md),ident(pages)],exp[grammar(record_ptr),exp:ident(md),ident(dirty)]]],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( mapped=%lu),exp[grammar(record_ptr),exp:ident(md),ident(pages)]]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(md),ident(mapcount_max)],exp:const:int(1)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( mapmax=%lu),exp[grammar(record_ptr),exp:ident(md),ident(mapcount_max)]]],estmt(NONE)],sel_if[exp[grammar(record_ptr),exp:ident(md),ident(swapcache)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( swapcache=%lu),exp[grammar(record_ptr),exp:ident(md),ident(swapcache)]]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(md),ident(active)],exp[grammar(record_ptr),exp:ident(md),ident(pages)]],exp:??(N/H)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( active=%lu),exp[grammar(record_ptr),exp:ident(md),ident(active)]]],estmt(NONE)],sel_if[exp[grammar(record_ptr),exp:ident(md),ident(writeback)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( writeback=%lu),exp[grammar(record_ptr),exp:ident(md),ident(writeback)]]],estmt(NONE)],statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(kfree),exp:ident(md)]],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(m),ident(count)],exp[grammar(record_ptr),exp:ident(m),ident(size)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(m),ident(version)],exp[grammar(cond3),exp[grammar(binary_logi),logiop(??),exp:ident(vma),exp[grammar(record_ptr),exp:ident(priv),ident(tail_vma)]],exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp:const:int(0)]]],estmt(NONE)],st_return[exp:const:int(0)]]]]
[Main] terms that changed: 
[Diff] abstracting concrete update:exp[grammar(call),exp:ident(seq_path),exp:ident(m),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(file),ident(f_path)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(file),ident(f_path)],ident(dentry)],exp:const:string(\n\t= )] ==> exp[grammar(call),exp:ident(seq_path),exp:ident(m),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(file),ident(f_path)],exp:const:string(\n\t= )]
[Diff] resulting abstract updates: 16
[Diff] abstracting concrete update:estmt[exp[grammar(call),exp:ident(seq_path),exp:ident(m),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(file),ident(f_path)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(file),ident(f_path)],ident(dentry)],exp:const:string(\n\t= )]] ==> estmt[exp[grammar(call),exp:ident(seq_path),exp:ident(m),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(file),ident(f_path)],exp:const:string(\n\t= )]]
[Diff] resulting abstract updates: 1
[Diff] abstracting concrete update:{}stmt[estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( file=)]],estmt[exp[grammar(call),exp:ident(seq_path),exp:ident(m),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(file),ident(f_path)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(file),ident(f_path)],ident(dentry)],exp:const:string(\n\t= )]]] ==> {}stmt[estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( file=)]],estmt[exp[grammar(call),exp:ident(seq_path),exp:ident(m),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(file),ident(f_path)],exp:const:string(\n\t= )]]]
[Diff] resulting abstract updates: 1
[Diff] abstracting concrete update:sel_if[exp:ident(file),{}stmt[estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( file=)]],estmt[exp[grammar(call),exp:ident(seq_path),exp:ident(m),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(file),ident(f_path)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(file),ident(f_path)],ident(dentry)],exp:const:string(\n\t= )]]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp[grammar(record_ptr),exp:ident(mm),ident(brk)]],exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp[grammar(record_ptr),exp:ident(mm),ident(start_brk)]]],{}stmt[estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( heap)]]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp[grammar(record_ptr),exp:ident(mm),ident(start_stack)]],exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp[grammar(record_ptr),exp:ident(mm),ident(start_stack)]]],{}stmt[estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( stack)]]],estmt(NONE)]]] ==> sel_if[exp:ident(file),{}stmt[estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( file=)]],estmt[exp[grammar(call),exp:ident(seq_path),exp:ident(m),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(file),ident(f_path)],exp:const:string(\n\t= )]]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp[grammar(record_ptr),exp:ident(mm),ident(brk)]],exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp[grammar(record_ptr),exp:ident(mm),ident(start_brk)]]],{}stmt[estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( heap)]]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp[grammar(record_ptr),exp:ident(mm),ident(start_stack)]],exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp[grammar(record_ptr),exp:ident(mm),ident(start_stack)]]],{}stmt[estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( stack)]]],estmt(NONE)]]]
[Diff] resulting abstract updates: 1
[Diff] abstracting concrete update:{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),sel_if[exp:??(N/H),st_return[exp:const:int(0)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(md),exp[grammar(call),exp:ident(kzalloc),exp[grammar(sizeoftype),grammar(fulltype),typec(N/H)],exp:ident(GFP_KERNEL)]]],sel_if[exp:??(N/H),st_return[exp:const:int(0)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(pol),exp[grammar(call),exp:ident(get_vma_policy),exp[grammar(record_ptr),exp:ident(priv),ident(task)],exp:ident(vma),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)]]]],estmt[exp[grammar(call),exp:ident(mpol_to_str),exp:ident(buffer),exp:sizeof:exp:ident(buffer),exp:ident(pol)]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp:ident(pol),exp:&ref:exp:ident(default_policy)],exp[grammar(binary_logi),logiop(??),exp:ident(pol),exp[grammar(record_ptr),exp:ident(current),ident(mempolicy)]]],estmt[exp[grammar(call),exp:ident(__mpol_free),exp:ident(pol)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(%08lx %s),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp:ident(buffer)]],sel_if[exp:ident(file),{}stmt[estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( file=)]],estmt[exp[grammar(call),exp:ident(seq_path),exp:ident(m),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(file),ident(f_path)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(file),ident(f_path)],ident(dentry)],exp:const:string(\n\t= )]]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp[grammar(record_ptr),exp:ident(mm),ident(brk)]],exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp[grammar(record_ptr),exp:ident(mm),ident(start_brk)]]],{}stmt[estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( heap)]]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp[grammar(record_ptr),exp:ident(mm),ident(start_stack)]],exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp[grammar(record_ptr),exp:ident(mm),ident(start_stack)]]],{}stmt[estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( stack)]]],estmt(NONE)]]],sel_if[exp[grammar(call),exp:ident(is_vm_hugetlb_page),exp:ident(vma)],{}stmt[estmt[exp[grammar(call),exp:ident(check_huge_range),exp:ident(vma),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp:ident(md)]],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( huge)]]],{}stmt[estmt[exp[grammar(call),exp:ident(check_pgd_range),exp:ident(vma),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp[grammar(&ref),grammar(exp),grammar(array_acc),exp:ident(node_states),exp:ident(N_HIGH_MEMORY)],exp:ident(MPOL_MF_STATS),exp:ident(md)]]]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],sel_if[exp[grammar(record_ptr),exp:ident(md),ident(anon)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( anon=%lu),exp[grammar(record_ptr),exp:ident(md),ident(anon)]]],estmt(NONE)],sel_if[exp[grammar(record_ptr),exp:ident(md),ident(dirty)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( dirty=%lu),exp[grammar(record_ptr),exp:ident(md),ident(dirty)]]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(md),ident(pages)],exp[grammar(record_ptr),exp:ident(md),ident(anon)]],exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(md),ident(pages)],exp[grammar(record_ptr),exp:ident(md),ident(dirty)]]],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( mapped=%lu),exp[grammar(record_ptr),exp:ident(md),ident(pages)]]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(md),ident(mapcount_max)],exp:const:int(1)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( mapmax=%lu),exp[grammar(record_ptr),exp:ident(md),ident(mapcount_max)]]],estmt(NONE)],sel_if[exp[grammar(record_ptr),exp:ident(md),ident(swapcache)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( swapcache=%lu),exp[grammar(record_ptr),exp:ident(md),ident(swapcache)]]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(md),ident(active)],exp[grammar(record_ptr),exp:ident(md),ident(pages)]],exp:??(N/H)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( active=%lu),exp[grammar(record_ptr),exp:ident(md),ident(active)]]],estmt(NONE)],sel_if[exp[grammar(record_ptr),exp:ident(md),ident(writeback)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( writeback=%lu),exp[grammar(record_ptr),exp:ident(md),ident(writeback)]]],estmt(NONE)],statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(kfree),exp:ident(md)]],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(m),ident(count)],exp[grammar(record_ptr),exp:ident(m),ident(size)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(m),ident(version)],exp[grammar(cond3),exp[grammar(binary_logi),logiop(??),exp:ident(vma),exp[grammar(record_ptr),exp:ident(priv),ident(tail_vma)]],exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp:const:int(0)]]],estmt(NONE)],st_return[exp:const:int(0)]] ==> {}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),sel_if[exp:??(N/H),st_return[exp:const:int(0)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(md),exp[grammar(call),exp:ident(kzalloc),exp[grammar(sizeoftype),grammar(fulltype),typec(N/H)],exp:ident(GFP_KERNEL)]]],sel_if[exp:??(N/H),st_return[exp:const:int(0)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(pol),exp[grammar(call),exp:ident(get_vma_policy),exp[grammar(record_ptr),exp:ident(priv),ident(task)],exp:ident(vma),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)]]]],estmt[exp[grammar(call),exp:ident(mpol_to_str),exp:ident(buffer),exp:sizeof:exp:ident(buffer),exp:ident(pol)]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp:ident(pol),exp:&ref:exp:ident(default_policy)],exp[grammar(binary_logi),logiop(??),exp:ident(pol),exp[grammar(record_ptr),exp:ident(current),ident(mempolicy)]]],estmt[exp[grammar(call),exp:ident(__mpol_free),exp:ident(pol)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(%08lx %s),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp:ident(buffer)]],sel_if[exp:ident(file),{}stmt[estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( file=)]],estmt[exp[grammar(call),exp:ident(seq_path),exp:ident(m),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(file),ident(f_path)],exp:const:string(\n\t= )]]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp[grammar(record_ptr),exp:ident(mm),ident(brk)]],exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp[grammar(record_ptr),exp:ident(mm),ident(start_brk)]]],{}stmt[estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( heap)]]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp[grammar(record_ptr),exp:ident(mm),ident(start_stack)]],exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp[grammar(record_ptr),exp:ident(mm),ident(start_stack)]]],{}stmt[estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( stack)]]],estmt(NONE)]]],sel_if[exp[grammar(call),exp:ident(is_vm_hugetlb_page),exp:ident(vma)],{}stmt[estmt[exp[grammar(call),exp:ident(check_huge_range),exp:ident(vma),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp:ident(md)]],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( huge)]]],{}stmt[estmt[exp[grammar(call),exp:ident(check_pgd_range),exp:ident(vma),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp[grammar(&ref),grammar(exp),grammar(array_acc),exp:ident(node_states),exp:ident(N_HIGH_MEMORY)],exp:ident(MPOL_MF_STATS),exp:ident(md)]]]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],sel_if[exp[grammar(record_ptr),exp:ident(md),ident(anon)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( anon=%lu),exp[grammar(record_ptr),exp:ident(md),ident(anon)]]],estmt(NONE)],sel_if[exp[grammar(record_ptr),exp:ident(md),ident(dirty)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( dirty=%lu),exp[grammar(record_ptr),exp:ident(md),ident(dirty)]]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(md),ident(pages)],exp[grammar(record_ptr),exp:ident(md),ident(anon)]],exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(md),ident(pages)],exp[grammar(record_ptr),exp:ident(md),ident(dirty)]]],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( mapped=%lu),exp[grammar(record_ptr),exp:ident(md),ident(pages)]]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(md),ident(mapcount_max)],exp:const:int(1)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( mapmax=%lu),exp[grammar(record_ptr),exp:ident(md),ident(mapcount_max)]]],estmt(NONE)],sel_if[exp[grammar(record_ptr),exp:ident(md),ident(swapcache)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( swapcache=%lu),exp[grammar(record_ptr),exp:ident(md),ident(swapcache)]]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(md),ident(active)],exp[grammar(record_ptr),exp:ident(md),ident(pages)]],exp:??(N/H)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( active=%lu),exp[grammar(record_ptr),exp:ident(md),ident(active)]]],estmt(NONE)],sel_if[exp[grammar(record_ptr),exp:ident(md),ident(writeback)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( writeback=%lu),exp[grammar(record_ptr),exp:ident(md),ident(writeback)]]],estmt(NONE)],statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(kfree),exp:ident(md)]],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(m),ident(count)],exp[grammar(record_ptr),exp:ident(m),ident(size)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(m),ident(version)],exp[grammar(cond3),exp[grammar(binary_logi),logiop(??),exp:ident(vma),exp[grammar(record_ptr),exp:ident(priv),ident(tail_vma)]],exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp:const:int(0)]]],estmt(NONE)],st_return[exp:const:int(0)]]
[Diff] resulting abstract updates: 1
[Diff] abstracting concrete update:def[fname(show_numa_map),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(v),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),sel_if[exp:??(N/H),st_return[exp:const:int(0)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(md),exp[grammar(call),exp:ident(kzalloc),exp[grammar(sizeoftype),grammar(fulltype),typec(N/H)],exp:ident(GFP_KERNEL)]]],sel_if[exp:??(N/H),st_return[exp:const:int(0)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(pol),exp[grammar(call),exp:ident(get_vma_policy),exp[grammar(record_ptr),exp:ident(priv),ident(task)],exp:ident(vma),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)]]]],estmt[exp[grammar(call),exp:ident(mpol_to_str),exp:ident(buffer),exp:sizeof:exp:ident(buffer),exp:ident(pol)]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp:ident(pol),exp:&ref:exp:ident(default_policy)],exp[grammar(binary_logi),logiop(??),exp:ident(pol),exp[grammar(record_ptr),exp:ident(current),ident(mempolicy)]]],estmt[exp[grammar(call),exp:ident(__mpol_free),exp:ident(pol)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(%08lx %s),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp:ident(buffer)]],sel_if[exp:ident(file),{}stmt[estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( file=)]],estmt[exp[grammar(call),exp:ident(seq_path),exp:ident(m),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(file),ident(f_path)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(file),ident(f_path)],ident(dentry)],exp:const:string(\n\t= )]]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp[grammar(record_ptr),exp:ident(mm),ident(brk)]],exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp[grammar(record_ptr),exp:ident(mm),ident(start_brk)]]],{}stmt[estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( heap)]]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp[grammar(record_ptr),exp:ident(mm),ident(start_stack)]],exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp[grammar(record_ptr),exp:ident(mm),ident(start_stack)]]],{}stmt[estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( stack)]]],estmt(NONE)]]],sel_if[exp[grammar(call),exp:ident(is_vm_hugetlb_page),exp:ident(vma)],{}stmt[estmt[exp[grammar(call),exp:ident(check_huge_range),exp:ident(vma),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp:ident(md)]],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( huge)]]],{}stmt[estmt[exp[grammar(call),exp:ident(check_pgd_range),exp:ident(vma),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp[grammar(&ref),grammar(exp),grammar(array_acc),exp:ident(node_states),exp:ident(N_HIGH_MEMORY)],exp:ident(MPOL_MF_STATS),exp:ident(md)]]]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],sel_if[exp[grammar(record_ptr),exp:ident(md),ident(anon)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( anon=%lu),exp[grammar(record_ptr),exp:ident(md),ident(anon)]]],estmt(NONE)],sel_if[exp[grammar(record_ptr),exp:ident(md),ident(dirty)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( dirty=%lu),exp[grammar(record_ptr),exp:ident(md),ident(dirty)]]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(md),ident(pages)],exp[grammar(record_ptr),exp:ident(md),ident(anon)]],exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(md),ident(pages)],exp[grammar(record_ptr),exp:ident(md),ident(dirty)]]],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( mapped=%lu),exp[grammar(record_ptr),exp:ident(md),ident(pages)]]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(md),ident(mapcount_max)],exp:const:int(1)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( mapmax=%lu),exp[grammar(record_ptr),exp:ident(md),ident(mapcount_max)]]],estmt(NONE)],sel_if[exp[grammar(record_ptr),exp:ident(md),ident(swapcache)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( swapcache=%lu),exp[grammar(record_ptr),exp:ident(md),ident(swapcache)]]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(md),ident(active)],exp[grammar(record_ptr),exp:ident(md),ident(pages)]],exp:??(N/H)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( active=%lu),exp[grammar(record_ptr),exp:ident(md),ident(active)]]],estmt(NONE)],sel_if[exp[grammar(record_ptr),exp:ident(md),ident(writeback)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( writeback=%lu),exp[grammar(record_ptr),exp:ident(md),ident(writeback)]]],estmt(NONE)],statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(kfree),exp:ident(md)]],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(m),ident(count)],exp[grammar(record_ptr),exp:ident(m),ident(size)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(m),ident(version)],exp[grammar(cond3),exp[grammar(binary_logi),logiop(??),exp:ident(vma),exp[grammar(record_ptr),exp:ident(priv),ident(tail_vma)]],exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp:const:int(0)]]],estmt(NONE)],st_return[exp:const:int(0)]]] ==> def[fname(show_numa_map),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(v),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),sel_if[exp:??(N/H),st_return[exp:const:int(0)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(md),exp[grammar(call),exp:ident(kzalloc),exp[grammar(sizeoftype),grammar(fulltype),typec(N/H)],exp:ident(GFP_KERNEL)]]],sel_if[exp:??(N/H),st_return[exp:const:int(0)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(pol),exp[grammar(call),exp:ident(get_vma_policy),exp[grammar(record_ptr),exp:ident(priv),ident(task)],exp:ident(vma),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)]]]],estmt[exp[grammar(call),exp:ident(mpol_to_str),exp:ident(buffer),exp:sizeof:exp:ident(buffer),exp:ident(pol)]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp:ident(pol),exp:&ref:exp:ident(default_policy)],exp[grammar(binary_logi),logiop(??),exp:ident(pol),exp[grammar(record_ptr),exp:ident(current),ident(mempolicy)]]],estmt[exp[grammar(call),exp:ident(__mpol_free),exp:ident(pol)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(%08lx %s),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp:ident(buffer)]],sel_if[exp:ident(file),{}stmt[estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( file=)]],estmt[exp[grammar(call),exp:ident(seq_path),exp:ident(m),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(file),ident(f_path)],exp:const:string(\n\t= )]]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp[grammar(record_ptr),exp:ident(mm),ident(brk)]],exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp[grammar(record_ptr),exp:ident(mm),ident(start_brk)]]],{}stmt[estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( heap)]]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp[grammar(record_ptr),exp:ident(mm),ident(start_stack)]],exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp[grammar(record_ptr),exp:ident(mm),ident(start_stack)]]],{}stmt[estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( stack)]]],estmt(NONE)]]],sel_if[exp[grammar(call),exp:ident(is_vm_hugetlb_page),exp:ident(vma)],{}stmt[estmt[exp[grammar(call),exp:ident(check_huge_range),exp:ident(vma),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp:ident(md)]],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( huge)]]],{}stmt[estmt[exp[grammar(call),exp:ident(check_pgd_range),exp:ident(vma),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp[grammar(&ref),grammar(exp),grammar(array_acc),exp:ident(node_states),exp:ident(N_HIGH_MEMORY)],exp:ident(MPOL_MF_STATS),exp:ident(md)]]]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],sel_if[exp[grammar(record_ptr),exp:ident(md),ident(anon)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( anon=%lu),exp[grammar(record_ptr),exp:ident(md),ident(anon)]]],estmt(NONE)],sel_if[exp[grammar(record_ptr),exp:ident(md),ident(dirty)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( dirty=%lu),exp[grammar(record_ptr),exp:ident(md),ident(dirty)]]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(md),ident(pages)],exp[grammar(record_ptr),exp:ident(md),ident(anon)]],exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(md),ident(pages)],exp[grammar(record_ptr),exp:ident(md),ident(dirty)]]],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( mapped=%lu),exp[grammar(record_ptr),exp:ident(md),ident(pages)]]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(md),ident(mapcount_max)],exp:const:int(1)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( mapmax=%lu),exp[grammar(record_ptr),exp:ident(md),ident(mapcount_max)]]],estmt(NONE)],sel_if[exp[grammar(record_ptr),exp:ident(md),ident(swapcache)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( swapcache=%lu),exp[grammar(record_ptr),exp:ident(md),ident(swapcache)]]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(md),ident(active)],exp[grammar(record_ptr),exp:ident(md),ident(pages)]],exp:??(N/H)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( active=%lu),exp[grammar(record_ptr),exp:ident(md),ident(active)]]],estmt(NONE)],sel_if[exp[grammar(record_ptr),exp:ident(md),ident(writeback)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( writeback=%lu),exp[grammar(record_ptr),exp:ident(md),ident(writeback)]]],estmt(NONE)],statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(kfree),exp:ident(md)]],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(m),ident(count)],exp[grammar(record_ptr),exp:ident(m),ident(size)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(m),ident(version)],exp[grammar(cond3),exp[grammar(binary_logi),logiop(??),exp:ident(vma),exp[grammar(record_ptr),exp:ident(priv),ident(tail_vma)]],exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp:const:int(0)]]],estmt(NONE)],st_return[exp:const:int(0)]]]
[Diff] resulting abstract updates: 1
[Main] Making safe parts for pair 3
prg2[includeN[inc_elem(linux),inc_elem(mm.h)],includeN[inc_elem(linux),inc_elem(hugetlb.h)],includeN[inc_elem(linux),inc_elem(mount.h)],includeN[inc_elem(linux),inc_elem(seq_file.h)],includeN[inc_elem(linux),inc_elem(highmem.h)],includeN[inc_elem(linux),inc_elem(ptrace.h)],includeN[inc_elem(linux),inc_elem(pagemap.h)],includeN[inc_elem(linux),inc_elem(ptrace.h)],includeN[inc_elem(linux),inc_elem(mempolicy.h)],includeN[inc_elem(linux),inc_elem(swap.h)],includeN[inc_elem(linux),inc_elem(swapops.h)],includeN[inc_elem(linux),inc_elem(seq_file.h)],includeN[inc_elem(asm),inc_elem(elf.h)],includeN[inc_elem(asm),inc_elem(uaccess.h)],includeN[inc_elem(asm),inc_elem(tlbflush.h)],includeL[inc_elem(internal.h)],def[fname(task_mem),funtype[fulltype[ctype[btype(void)]],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(mm),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(hiwater_vm),exp[grammar(assign),simple_assi(=),exp:ident(total_vm),exp[grammar(record_ptr),exp:ident(mm),ident(total_vm)]]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(hiwater_vm),exp[grammar(record_ptr),exp:ident(mm),ident(hiwater_vm)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(hiwater_vm),exp[grammar(record_ptr),exp:ident(mm),ident(hiwater_vm)]]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(hiwater_rss),exp[grammar(assign),simple_assi(=),exp:ident(total_rss),exp[grammar(call),exp:ident(get_mm_rss),exp:ident(mm)]]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(hiwater_rss),exp[grammar(record_ptr),exp:ident(mm),ident(hiwater_rss)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(hiwater_rss),exp[grammar(record_ptr),exp:ident(mm),ident(hiwater_rss)]]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(data),exp[grammar(binary_arith),aop(-),exp[grammar(binary_arith),aop(-),exp[grammar(record_ptr),exp:ident(mm),ident(total_vm)],exp[grammar(record_ptr),exp:ident(mm),ident(shared_vm)]],exp[grammar(record_ptr),exp:ident(mm),ident(stack_vm)]]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(text),exp[grammar(binary_arith),aop(>>),exp[grammar(binary_arith),aop(-),exp[grammar(call),exp:ident(PAGE_ALIGN),exp[grammar(record_ptr),exp:ident(mm),ident(end_code)]],exp[grammar(binary_arith),aop(&),exp[grammar(record_ptr),exp:ident(mm),ident(start_code)],exp:ident(PAGE_MASK)]],exp:const:int(10)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(lib),exp[grammar(binary_arith),aop(-),exp[grammar(binary_arith),aop(<<),exp[grammar(record_ptr),exp:ident(mm),ident(exec_vm)],exp[grammar(binary_arith),aop(-),exp:ident(PAGE_SHIFT),exp:const:int(10)]],exp:ident(text)]]],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:other(N/H),exp[grammar(binary_arith),aop(<<),exp:ident(hiwater_vm),exp[grammar(binary_arith),aop(-),exp:ident(PAGE_SHIFT),exp:const:int(10)]],exp[grammar(binary_arith),aop(<<),exp[grammar(binary_arith),aop(-),exp:ident(total_vm),exp[grammar(record_ptr),exp:ident(mm),ident(reserved_vm)]],exp[grammar(binary_arith),aop(-),exp:ident(PAGE_SHIFT),exp:const:int(10)]],exp[grammar(binary_arith),aop(<<),exp[grammar(record_ptr),exp:ident(mm),ident(locked_vm)],exp[grammar(binary_arith),aop(-),exp:ident(PAGE_SHIFT),exp:const:int(10)]],exp[grammar(binary_arith),aop(<<),exp:ident(hiwater_rss),exp[grammar(binary_arith),aop(-),exp:ident(PAGE_SHIFT),exp:const:int(10)]],exp[grammar(binary_arith),aop(<<),exp:ident(total_rss),exp[grammar(binary_arith),aop(-),exp:ident(PAGE_SHIFT),exp:const:int(10)]],exp[grammar(binary_arith),aop(<<),exp:ident(data),exp[grammar(binary_arith),aop(-),exp:ident(PAGE_SHIFT),exp:const:int(10)]],exp[grammar(binary_arith),aop(<<),exp[grammar(record_ptr),exp:ident(mm),ident(stack_vm)],exp[grammar(binary_arith),aop(-),exp:ident(PAGE_SHIFT),exp:const:int(10)]],exp:ident(text),exp:ident(lib),exp[grammar(binary_arith),aop(>>),exp[grammar(binary_arith),aop(*),exp[grammar(binary_arith),aop(*),exp:ident(PTRS_PER_PTE),exp[grammar(sizeoftype),grammar(fulltype),typec(N/H)]],exp[grammar(record_ptr),exp:ident(mm),ident(nr_ptes)]],exp:const:int(10)]]]]],def[fname(task_vsize),funtype[fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]],param[reg(),name(mm),fulltype[typec(N/H)]]],{}stmt[st_return[exp[grammar(binary_arith),aop(*),exp:ident(PAGE_SIZE),exp[grammar(record_ptr),exp:ident(mm),ident(total_vm)]]]]],def[fname(task_statm),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(mm),fulltype[typec(N/H)]],param[reg(),name(shared),fulltype[typec(N/H)]],param[reg(),name(text),fulltype[typec(N/H)]],param[reg(),name(data),fulltype[typec(N/H)]],param[reg(),name(resident),fulltype[typec(N/H)]]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(shared),exp[grammar(call),exp:ident(get_mm_counter),exp:ident(mm),exp:ident(file_rss)]]],estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(text),exp[grammar(binary_arith),aop(>>),exp[grammar(binary_arith),aop(-),exp[grammar(call),exp:ident(PAGE_ALIGN),exp[grammar(record_ptr),exp:ident(mm),ident(end_code)]],exp[grammar(binary_arith),aop(&),exp[grammar(record_ptr),exp:ident(mm),ident(start_code)],exp:ident(PAGE_MASK)]],exp:ident(PAGE_SHIFT)]]],estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(data),exp[grammar(binary_arith),aop(-),exp[grammar(record_ptr),exp:ident(mm),ident(total_vm)],exp[grammar(record_ptr),exp:ident(mm),ident(shared_vm)]]]],estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(resident),exp[grammar(binary_arith),aop(+),exp:*ref:exp:ident(shared),exp[grammar(call),exp:ident(get_mm_counter),exp:ident(mm),exp:ident(anon_rss)]]]],st_return[exp[grammar(record_ptr),exp:ident(mm),ident(total_vm)]]]],def[fname(proc_exe_link),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(inode),fulltype[typec(N/H)]],param[reg(),name(path),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),sel_if[exp:ident(task),{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(mm),exp[grammar(call),exp:ident(get_task_mm),exp:ident(task)]]],estmt[exp[grammar(call),exp:ident(put_task_struct),exp:ident(task)]]],estmt(NONE)],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(down_read),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(mm),ident(mmap_sem)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(vma),exp[grammar(record_ptr),exp:ident(mm),ident(mmap)]]],while[exp:ident(vma),{}stmt[sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_arith),aop(&),exp[grammar(record_ptr),exp:ident(vma),ident(vm_flags)],exp:ident(VM_EXECUTABLE)],exp[grammar(record_ptr),exp:ident(vma),ident(vm_file)]],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(vma),exp[grammar(record_ptr),exp:ident(vma),ident(vm_next)]]]]],sel_if[exp:ident(vma),{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(path),exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(vma),ident(vm_file)],ident(f_path)]]],estmt[exp[grammar(call),exp:ident(path_get),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp[grammar(record_ptr),exp:ident(vma),ident(vm_file)],ident(f_path)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(result),exp:const:int(0)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(up_read),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(mm),ident(mmap_sem)]]],estmt[exp[grammar(call),exp:ident(mmput),exp:ident(mm)]],statem(N/H)]],def[fname(pad_len_spaces),funtype[fulltype[ctype[btype(void)]],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(len),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(len),exp[grammar(binary_arith),aop(-),exp[grammar(binary_arith),aop(+),exp:const:int(25),exp[grammar(binary_arith),aop(*),exp[grammar(sizeoftype),grammar(fulltype),typec(N/H)],exp:const:int(6)]],exp:ident(len)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(len),exp:const:int(1)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(len),exp:const:int(1)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(%*c),exp:ident(len),exp:const:other(N/H)]]]],def[fname(vma_stop),funtype[fulltype[ctype[btype(void)]],param[reg(),name(priv),fulltype[typec(N/H)]],param[reg(),name(vma),fulltype[typec(N/H)]]],{}stmt[sel_if[exp[grammar(binary_logi),logiop(and),exp:ident(vma),exp[grammar(binary_logi),logiop(??),exp:ident(vma),exp[grammar(record_ptr),exp:ident(priv),ident(tail_vma)]]],{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(up_read),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(mm),ident(mmap_sem)]]],estmt[exp[grammar(call),exp:ident(mmput),exp:ident(mm)]]],estmt(NONE)]]],def[fname(m_start),funtype[fulltype[typec(N/H)],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(pos),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(priv),ident(task)],exp:ident(NULL)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(priv),ident(tail_vma)],exp:ident(NULL)]],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(last_addr),exp:??(N/H)],st_return[exp:ident(NULL)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(priv),ident(task)],exp[grammar(call),exp:ident(get_pid_task),exp[grammar(record_ptr),exp:ident(priv),ident(pid)],exp:ident(PIDTYPE_PID)]]],sel_if[exp:??(N/H),st_return[exp:ident(NULL)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(mm),exp[grammar(call),exp:ident(mm_for_maps),exp[grammar(record_ptr),exp:ident(priv),ident(task)]]]],sel_if[exp:??(N/H),st_return[exp:ident(NULL)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(tail_vma),exp[grammar(call),exp:ident(get_gate_vma),exp[grammar(record_ptr),exp:ident(priv),ident(task)]]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(priv),ident(tail_vma)],exp:ident(tail_vma)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(vma),exp[grammar(call),exp:ident(find_vma),exp:ident(mm),exp:ident(last_addr)]]],sel_if[exp[grammar(binary_logi),logiop(and),exp:ident(last_addr),exp:ident(vma)],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(vma),exp[grammar(record_ptr),exp:ident(vma),ident(vm_next)]]],statem(N/H)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(vma),exp:ident(NULL)]],sel_if[exp[grammar(binary_logi),logiop(??),exp:??(N/H),exp[grammar(record_ptr),exp:ident(mm),ident(map_count)]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(vma),exp[grammar(record_ptr),exp:ident(mm),ident(mmap)]]],while[exp[grammar(binary_logi),logiop(and),exp:??(N/H),exp:ident(vma)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(vma),exp[grammar(record_ptr),exp:ident(vma),ident(vm_next)]]]],statem(N/H)],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(l),exp[grammar(record_ptr),exp:ident(mm),ident(map_count)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(tail_vma),exp:ident(NULL)]],estmt(NONE)],statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(m),ident(version)],exp[grammar(cond3),exp[grammar(binary_logi),logiop(??),exp:ident(tail_vma),exp:ident(NULL)],exp:const:int(0),exp:??(N/H)]]],estmt[exp[grammar(call),exp:ident(up_read),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(mm),ident(mmap_sem)]]],estmt[exp[grammar(call),exp:ident(mmput),exp:ident(mm)]],st_return[exp:ident(tail_vma)]]],def[fname(m_next),funtype[fulltype[typec(N/H)],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(v),fulltype[typec(N/H)]],param[reg(),name(pos),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp:??(N/H)],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(and),exp:ident(vma),exp[grammar(binary_logi),logiop(??),exp:ident(vma),exp:ident(tail_vma)]],exp[grammar(record_ptr),exp:ident(vma),ident(vm_next)]],st_return[exp[grammar(record_ptr),exp:ident(vma),ident(vm_next)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(vma_stop),exp:ident(priv),exp:ident(vma)]],st_return[exp[grammar(cond3),exp[grammar(binary_logi),logiop(??),exp:ident(vma),exp:ident(tail_vma)],exp:ident(tail_vma),exp:ident(NULL)]]]],def[fname(m_stop),funtype[fulltype[ctype[btype(void)]],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(v),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(vma_stop),exp:ident(priv),exp:ident(vma)]],sel_if[exp[grammar(record_ptr),exp:ident(priv),ident(task)],estmt[exp[grammar(call),exp:ident(put_task_struct),exp[grammar(record_ptr),exp:ident(priv),ident(task)]]],estmt(NONE)]]],def[fname(do_maps_open),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(inode),fulltype[typec(N/H)]],param[reg(),name(file),fulltype[typec(N/H)]],param[reg(),name(ops),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(priv),exp[grammar(call),exp:ident(kzalloc),exp:sizeof:exp:*ref:exp:ident(priv),exp:ident(GFP_KERNEL)]]],sel_if[exp:ident(priv),{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(priv),ident(pid)],exp[grammar(call),exp:ident(proc_pid),exp:ident(inode)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ret),exp[grammar(call),exp:ident(seq_open),exp:ident(file),exp:ident(ops)]]],sel_if[exp:??(N/H),{}stmt[statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(m),ident(private)],exp:ident(priv)]]],{}stmt[estmt[exp[grammar(call),exp:ident(kfree),exp:ident(priv)]]]]],estmt(NONE)],st_return[exp:ident(ret)]]],def[fname(show_map),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(v),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),sel_if[exp[grammar(binary_logi),logiop(and),exp:ident(maps_protect),exp:??(N/H)],st_return[exp:??(N/H)],estmt(NONE)],sel_if[exp:ident(file),{}stmt[statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(dev),exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(inode),ident(i_sb)],ident(s_dev)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ino),exp[grammar(record_ptr),exp:ident(inode),ident(i_ino)]]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(%08lx-%08lx %c%c%c%c %08lx %02x:%02x %lu %n),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp[grammar(cond3),exp[grammar(binary_arith),aop(&),exp:ident(flags),exp:ident(VM_READ)],exp:const:other(N/H),exp:const:other(N/H)],exp[grammar(cond3),exp[grammar(binary_arith),aop(&),exp:ident(flags),exp:ident(VM_WRITE)],exp:const:other(N/H),exp:const:other(N/H)],exp[grammar(cond3),exp[grammar(binary_arith),aop(&),exp:ident(flags),exp:ident(VM_EXEC)],exp:const:other(N/H),exp:const:other(N/H)],exp[grammar(cond3),exp[grammar(binary_arith),aop(&),exp:ident(flags),exp:ident(VM_MAYSHARE)],exp:const:other(N/H),exp:const:other(N/H)],exp[grammar(binary_arith),aop(<<),exp[grammar(record_ptr),exp:ident(vma),ident(vm_pgoff)],exp:ident(PAGE_SHIFT)],exp[grammar(call),exp:ident(MAJOR),exp:ident(dev)],exp[grammar(call),exp:ident(MINOR),exp:ident(dev)],exp:ident(ino),exp:&ref:exp:ident(len)]],sel_if[exp:ident(file),{}stmt[estmt[exp[grammar(call),exp:ident(pad_len_spaces),exp:ident(m),exp:ident(len)]],estmt[exp[grammar(call),exp:ident(seq_path),exp:ident(m),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(file),ident(f_path)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(file),ident(f_path)],ident(dentry)],exp:const:string(\n)]]],{}stmt[statem(N/H),sel_if[exp:??(N/H),{}stmt[sel_if[exp:ident(mm),{}stmt[sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp[grammar(record_ptr),exp:ident(mm),ident(start_brk)]],exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp[grammar(record_ptr),exp:ident(mm),ident(brk)]]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(name),exp:const:string([heap])]]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp[grammar(record_ptr),exp:ident(mm),ident(start_stack)]],exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp[grammar(record_ptr),exp:ident(mm),ident(start_stack)]]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(name),exp:const:string([stack])]]],estmt(NONE)]]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(name),exp:const:string([vdso])]]]]],estmt(NONE)],sel_if[exp:ident(name),{}stmt[estmt[exp[grammar(call),exp:ident(pad_len_spaces),exp:ident(m),exp:ident(len)]],estmt[exp[grammar(call),exp:ident(seq_puts),exp:ident(m),exp:ident(name)]]],estmt(NONE)]]],estmt[exp[grammar(call),exp:ident(seq_putc),exp:ident(m),exp:const:other(N/H)]],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(m),ident(count)],exp[grammar(record_ptr),exp:ident(m),ident(size)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(m),ident(version)],exp[grammar(cond3),exp[grammar(binary_logi),logiop(??),exp:ident(vma),exp[grammar(call),exp:ident(get_gate_vma),exp:ident(task)]],exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp:const:int(0)]]],estmt(NONE)],st_return[exp:const:int(0)]]],decl(N/H),def[fname(maps_open),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(inode),fulltype[typec(N/H)]],param[reg(),name(file),fulltype[typec(N/H)]]],{}stmt[st_return[exp[grammar(call),exp:ident(do_maps_open),exp:ident(inode),exp:ident(file),exp:&ref:exp:ident(proc_pid_maps_op)]]]],decl(N/H),define(N/H),decl(N/H),def[fname(smaps_pte_range),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(pmd),fulltype[typec(N/H)]],param[reg(),name(addr),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(end),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(private),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(pte),exp[grammar(call),exp:ident(pte_offset_map_lock),exp[grammar(record_ptr),exp:ident(vma),ident(vm_mm)],exp:ident(pmd),exp:ident(addr),exp:&ref:exp:ident(ptl)]]],for[expr(NONE),exp[grammar(binary_logi),logiop(??),exp:ident(addr),exp:ident(end)],exp:??(N/H),{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(ptent),exp:*ref:exp:ident(pte)]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),op_assi(+=),exp[grammar(record_ptr),exp:ident(mss),ident(resident)],exp:ident(PAGE_SIZE)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(page),exp[grammar(call),exp:ident(vm_normal_page),exp:ident(vma),exp:ident(addr),exp:ident(ptent)]]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(or),exp[grammar(call),exp:ident(pte_young),exp:ident(ptent)],exp[grammar(call),exp:ident(PageReferenced),exp:ident(page)]],estmt[exp[grammar(assign),op_assi(+=),exp[grammar(record_ptr),exp:ident(mss),ident(referenced)],exp:ident(PAGE_SIZE)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(mapcount),exp[grammar(call),exp:ident(page_mapcount),exp:ident(page)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(mapcount),exp:const:int(2)],{}stmt[sel_if[exp[grammar(call),exp:ident(pte_dirty),exp:ident(ptent)],estmt[exp[grammar(assign),op_assi(+=),exp[grammar(record_ptr),exp:ident(mss),ident(shared_dirty)],exp:ident(PAGE_SIZE)]],estmt[exp[grammar(assign),op_assi(+=),exp[grammar(record_ptr),exp:ident(mss),ident(shared_clean)],exp:ident(PAGE_SIZE)]]],estmt[exp[grammar(assign),op_assi(+=),exp[grammar(record_ptr),exp:ident(mss),ident(pss)],exp[grammar(binary_arith),aop(/),exp[grammar(binary_arith),aop(<<),exp:ident(PAGE_SIZE),exp:ident(PSS_SHIFT)],exp:ident(mapcount)]]]],{}stmt[sel_if[exp[grammar(call),exp:ident(pte_dirty),exp:ident(ptent)],estmt[exp[grammar(assign),op_assi(+=),exp[grammar(record_ptr),exp:ident(mss),ident(private_dirty)],exp:ident(PAGE_SIZE)]],estmt[exp[grammar(assign),op_assi(+=),exp[grammar(record_ptr),exp:ident(mss),ident(private_clean)],exp:ident(PAGE_SIZE)]]],estmt[exp[grammar(assign),op_assi(+=),exp[grammar(record_ptr),exp:ident(mss),ident(pss)],exp[grammar(binary_arith),aop(<<),exp:ident(PAGE_SIZE),exp:ident(PSS_SHIFT)]]]]]]],estmt[exp[grammar(call),exp:ident(pte_unmap_unlock),exp[grammar(binary_arith),aop(-),exp:ident(pte),exp:const:int(1)],exp:ident(ptl)]],estmt[exp[grammar(call),exp:ident(cond_resched)]],st_return[exp:const:int(0)]]],decl(N/H),def[fname(show_smap),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(v),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(memset),exp:&ref:exp:ident(mss),exp:const:int(0),exp:sizeof:exp:ident(mss)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(mss),ident(vma)],exp:ident(vma)]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(record_ptr),exp:ident(vma),ident(vm_mm)],exp:??(N/H)],estmt[exp[grammar(call),exp:ident(walk_page_range),exp[grammar(record_ptr),exp:ident(vma),ident(vm_mm)],exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp:&ref:exp:ident(smaps_walk),exp:&ref:exp:ident(mss)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ret),exp[grammar(call),exp:ident(show_map),exp:ident(m),exp:ident(v)]]],sel_if[exp:ident(ret),st_return[exp:ident(ret)],estmt(NONE)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:other(N/H),exp[grammar(binary_arith),aop(>>),exp[grammar(binary_arith),aop(-),exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)]],exp:const:int(10)],exp[grammar(binary_arith),aop(>>),exp[grammar(record_acc),exp:ident(mss),ident(resident)],exp:const:int(10)],exp:??(N/H),exp[grammar(binary_arith),aop(>>),exp[grammar(record_acc),exp:ident(mss),ident(shared_clean)],exp:const:int(10)],exp[grammar(binary_arith),aop(>>),exp[grammar(record_acc),exp:ident(mss),ident(shared_dirty)],exp:const:int(10)],exp[grammar(binary_arith),aop(>>),exp[grammar(record_acc),exp:ident(mss),ident(private_clean)],exp:const:int(10)],exp[grammar(binary_arith),aop(>>),exp[grammar(record_acc),exp:ident(mss),ident(private_dirty)],exp:const:int(10)],exp[grammar(binary_arith),aop(>>),exp[grammar(record_acc),exp:ident(mss),ident(referenced)],exp:const:int(10)]]],st_return[exp:ident(ret)]]],decl(N/H),def[fname(smaps_open),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(inode),fulltype[typec(N/H)]],param[reg(),name(file),fulltype[typec(N/H)]]],{}stmt[st_return[exp[grammar(call),exp:ident(do_maps_open),exp:ident(inode),exp:ident(file),exp:&ref:exp:ident(proc_pid_smaps_op)]]]],decl(N/H),def[fname(clear_refs_pte_range),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(pmd),fulltype[typec(N/H)]],param[reg(),name(addr),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(end),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(private),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(pte),exp[grammar(call),exp:ident(pte_offset_map_lock),exp[grammar(record_ptr),exp:ident(vma),ident(vm_mm)],exp:ident(pmd),exp:ident(addr),exp:&ref:exp:ident(ptl)]]],for[expr(NONE),exp[grammar(binary_logi),logiop(??),exp:ident(addr),exp:ident(end)],exp:??(N/H),{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(ptent),exp:*ref:exp:ident(pte)]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(page),exp[grammar(call),exp:ident(vm_normal_page),exp:ident(vma),exp:ident(addr),exp:ident(ptent)]]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(ptep_test_and_clear_young),exp:ident(vma),exp:ident(addr),exp:ident(pte)]],estmt[exp[grammar(call),exp:ident(ClearPageReferenced),exp:ident(page)]]]],estmt[exp[grammar(call),exp:ident(pte_unmap_unlock),exp[grammar(binary_arith),aop(-),exp:ident(pte),exp:const:int(1)],exp:ident(ptl)]],estmt[exp[grammar(call),exp:ident(cond_resched)]],st_return[exp:const:int(0)]]],decl(N/H),NCP(N/H),decl(N/H),NCP(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),def[fname(add_to_pagemap),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(addr),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(pfn),fulltype[typec(N/H)]],param[reg(),name(pm),fulltype[typec(N/H)]]],{}stmt[sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(binary_arith),aop(+),exp[grammar(record_ptr),exp:ident(pm),ident(out)],exp:ident(PM_ENTRY_BYTES)],exp[grammar(record_ptr),exp:ident(pm),ident(end)]],{}stmt[sel_if[exp[grammar(call),exp:ident(copy_to_user),exp[grammar(record_ptr),exp:ident(pm),ident(out)],exp:&ref:exp:ident(pfn),exp[grammar(binary_arith),aop(-),exp[grammar(record_ptr),exp:ident(pm),ident(end)],exp[grammar(record_ptr),exp:ident(pm),ident(out)]]],st_return[exp:??(N/H)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(pm),ident(out)],exp[grammar(record_ptr),exp:ident(pm),ident(end)]]],st_return[exp:ident(PM_END_OF_BUFFER)]],estmt(NONE)],sel_if[exp[grammar(call),exp:ident(put_user),exp:ident(pfn),exp[grammar(record_ptr),exp:ident(pm),ident(out)]],st_return[exp:??(N/H)],estmt(NONE)],estmt[exp[grammar(assign),op_assi(+=),exp[grammar(record_ptr),exp:ident(pm),ident(out)],exp:ident(PM_ENTRY_BYTES)]],st_return[exp:const:int(0)]]],def[fname(pagemap_pte_hole),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(start),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(end),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(private),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),for[exp[grammar(assign),simple_assi(=),exp:ident(addr),exp:ident(start)],exp[grammar(binary_logi),logiop(??),exp:ident(addr),exp:ident(end)],exp[grammar(assign),op_assi(+=),exp:ident(addr),exp:ident(PAGE_SIZE)],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(add_to_pagemap),exp:ident(addr),exp:ident(PM_NOT_PRESENT),exp:ident(pm)]]],sel_if[exp:ident(err),statem(N/H),estmt(NONE)]]],st_return[exp:ident(err)]]],def[fname(swap_pte_to_pagemap_entry),funtype[fulltype[typec(N/H)],param[reg(),name(pte),fulltype[typec(N/H)]]],{}stmt[statem(N/H),st_return[exp[grammar(binary_arith),aop(|),exp[grammar(binary_arith),aop(|),exp:ident(PM_SWAP),exp[grammar(call),exp:ident(swp_type),exp:ident(e)]],exp[grammar(binary_arith),aop(<<),exp[grammar(call),exp:ident(swp_offset),exp:ident(e)],exp:ident(MAX_SWAPFILES_SHIFT)]]]]],def[fname(pagemap_pte_range),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(pmd),fulltype[typec(N/H)]],param[reg(),name(addr),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(end),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(private),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),for[expr(NONE),exp[grammar(binary_logi),logiop(??),exp:ident(addr),exp:ident(end)],exp[grammar(assign),op_assi(+=),exp:ident(addr),exp:ident(PAGE_SIZE)],{}stmt[statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(pte),exp[grammar(call),exp:ident(pte_offset_map),exp:ident(pmd),exp:ident(addr)]]],sel_if[exp[grammar(call),exp:ident(is_swap_pte),exp:*ref:exp:ident(pte)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(pfn),exp[grammar(call),exp:ident(swap_pte_to_pagemap_entry),exp:*ref:exp:ident(pte)]]],sel_if[exp[grammar(call),exp:ident(pte_present),exp:*ref:exp:ident(pte)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(pfn),exp[grammar(call),exp:ident(pte_pfn),exp:*ref:exp:ident(pte)]]],estmt(NONE)]],estmt[exp[grammar(call),exp:ident(pte_unmap),exp:ident(pte)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(add_to_pagemap),exp:ident(addr),exp:ident(pfn),exp:ident(pm)]]],sel_if[exp:ident(err),st_return[exp:ident(err)],estmt(NONE)]]],estmt[exp[grammar(call),exp:ident(cond_resched)]],st_return[exp:ident(err)]]],decl(N/H),NCP(N/H),decl(N/H),decl(N/H),def[fname(show_numa_map_checked),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(v),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp[grammar(binary_logi),logiop(and),exp:ident(maps_protect),exp:??(N/H)],st_return[exp:??(N/H)],estmt(NONE)],st_return[exp[grammar(call),exp:ident(show_numa_map),exp:ident(m),exp:ident(v)]]]],decl(N/H),def[fname(numa_maps_open),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(inode),fulltype[typec(N/H)]],param[reg(),name(file),fulltype[typec(N/H)]]],{}stmt[st_return[exp[grammar(call),exp:ident(do_maps_open),exp:ident(inode),exp:ident(file),exp:&ref:exp:ident(proc_pid_numa_maps_op)]]]],decl(N/H)] ==> prg2[includeN[inc_elem(linux),inc_elem(mm.h)],includeN[inc_elem(linux),inc_elem(hugetlb.h)],includeN[inc_elem(linux),inc_elem(mount.h)],includeN[inc_elem(linux),inc_elem(seq_file.h)],includeN[inc_elem(linux),inc_elem(highmem.h)],includeN[inc_elem(linux),inc_elem(ptrace.h)],includeN[inc_elem(linux),inc_elem(pagemap.h)],includeN[inc_elem(linux),inc_elem(ptrace.h)],includeN[inc_elem(linux),inc_elem(mempolicy.h)],includeN[inc_elem(linux),inc_elem(swap.h)],includeN[inc_elem(linux),inc_elem(swapops.h)],includeN[inc_elem(linux),inc_elem(seq_file.h)],includeN[inc_elem(asm),inc_elem(elf.h)],includeN[inc_elem(asm),inc_elem(uaccess.h)],includeN[inc_elem(asm),inc_elem(tlbflush.h)],includeL[inc_elem(internal.h)],def[fname(task_mem),funtype[fulltype[ctype[btype(void)]],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(mm),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(hiwater_vm),exp[grammar(assign),simple_assi(=),exp:ident(total_vm),exp[grammar(record_ptr),exp:ident(mm),ident(total_vm)]]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(hiwater_vm),exp[grammar(record_ptr),exp:ident(mm),ident(hiwater_vm)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(hiwater_vm),exp[grammar(record_ptr),exp:ident(mm),ident(hiwater_vm)]]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(hiwater_rss),exp[grammar(assign),simple_assi(=),exp:ident(total_rss),exp[grammar(call),exp:ident(get_mm_rss),exp:ident(mm)]]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(hiwater_rss),exp[grammar(record_ptr),exp:ident(mm),ident(hiwater_rss)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(hiwater_rss),exp[grammar(record_ptr),exp:ident(mm),ident(hiwater_rss)]]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(data),exp[grammar(binary_arith),aop(-),exp[grammar(binary_arith),aop(-),exp[grammar(record_ptr),exp:ident(mm),ident(total_vm)],exp[grammar(record_ptr),exp:ident(mm),ident(shared_vm)]],exp[grammar(record_ptr),exp:ident(mm),ident(stack_vm)]]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(text),exp[grammar(binary_arith),aop(>>),exp[grammar(binary_arith),aop(-),exp[grammar(call),exp:ident(PAGE_ALIGN),exp[grammar(record_ptr),exp:ident(mm),ident(end_code)]],exp[grammar(binary_arith),aop(&),exp[grammar(record_ptr),exp:ident(mm),ident(start_code)],exp:ident(PAGE_MASK)]],exp:const:int(10)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(lib),exp[grammar(binary_arith),aop(-),exp[grammar(binary_arith),aop(<<),exp[grammar(record_ptr),exp:ident(mm),ident(exec_vm)],exp[grammar(binary_arith),aop(-),exp:ident(PAGE_SHIFT),exp:const:int(10)]],exp:ident(text)]]],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:other(N/H),exp[grammar(binary_arith),aop(<<),exp:ident(hiwater_vm),exp[grammar(binary_arith),aop(-),exp:ident(PAGE_SHIFT),exp:const:int(10)]],exp[grammar(binary_arith),aop(<<),exp[grammar(binary_arith),aop(-),exp:ident(total_vm),exp[grammar(record_ptr),exp:ident(mm),ident(reserved_vm)]],exp[grammar(binary_arith),aop(-),exp:ident(PAGE_SHIFT),exp:const:int(10)]],exp[grammar(binary_arith),aop(<<),exp[grammar(record_ptr),exp:ident(mm),ident(locked_vm)],exp[grammar(binary_arith),aop(-),exp:ident(PAGE_SHIFT),exp:const:int(10)]],exp[grammar(binary_arith),aop(<<),exp:ident(hiwater_rss),exp[grammar(binary_arith),aop(-),exp:ident(PAGE_SHIFT),exp:const:int(10)]],exp[grammar(binary_arith),aop(<<),exp:ident(total_rss),exp[grammar(binary_arith),aop(-),exp:ident(PAGE_SHIFT),exp:const:int(10)]],exp[grammar(binary_arith),aop(<<),exp:ident(data),exp[grammar(binary_arith),aop(-),exp:ident(PAGE_SHIFT),exp:const:int(10)]],exp[grammar(binary_arith),aop(<<),exp[grammar(record_ptr),exp:ident(mm),ident(stack_vm)],exp[grammar(binary_arith),aop(-),exp:ident(PAGE_SHIFT),exp:const:int(10)]],exp:ident(text),exp:ident(lib),exp[grammar(binary_arith),aop(>>),exp[grammar(binary_arith),aop(*),exp[grammar(binary_arith),aop(*),exp:ident(PTRS_PER_PTE),exp[grammar(sizeoftype),grammar(fulltype),typec(N/H)]],exp[grammar(record_ptr),exp:ident(mm),ident(nr_ptes)]],exp:const:int(10)]]]]],def[fname(task_vsize),funtype[fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]],param[reg(),name(mm),fulltype[typec(N/H)]]],{}stmt[st_return[exp[grammar(binary_arith),aop(*),exp:ident(PAGE_SIZE),exp[grammar(record_ptr),exp:ident(mm),ident(total_vm)]]]]],def[fname(task_statm),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(mm),fulltype[typec(N/H)]],param[reg(),name(shared),fulltype[typec(N/H)]],param[reg(),name(text),fulltype[typec(N/H)]],param[reg(),name(data),fulltype[typec(N/H)]],param[reg(),name(resident),fulltype[typec(N/H)]]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(shared),exp[grammar(call),exp:ident(get_mm_counter),exp:ident(mm),exp:ident(file_rss)]]],estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(text),exp[grammar(binary_arith),aop(>>),exp[grammar(binary_arith),aop(-),exp[grammar(call),exp:ident(PAGE_ALIGN),exp[grammar(record_ptr),exp:ident(mm),ident(end_code)]],exp[grammar(binary_arith),aop(&),exp[grammar(record_ptr),exp:ident(mm),ident(start_code)],exp:ident(PAGE_MASK)]],exp:ident(PAGE_SHIFT)]]],estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(data),exp[grammar(binary_arith),aop(-),exp[grammar(record_ptr),exp:ident(mm),ident(total_vm)],exp[grammar(record_ptr),exp:ident(mm),ident(shared_vm)]]]],estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(resident),exp[grammar(binary_arith),aop(+),exp:*ref:exp:ident(shared),exp[grammar(call),exp:ident(get_mm_counter),exp:ident(mm),exp:ident(anon_rss)]]]],st_return[exp[grammar(record_ptr),exp:ident(mm),ident(total_vm)]]]],def[fname(proc_exe_link),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(inode),fulltype[typec(N/H)]],param[reg(),name(path),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),sel_if[exp:ident(task),{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(mm),exp[grammar(call),exp:ident(get_task_mm),exp:ident(task)]]],estmt[exp[grammar(call),exp:ident(put_task_struct),exp:ident(task)]]],estmt(NONE)],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(down_read),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(mm),ident(mmap_sem)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(vma),exp[grammar(record_ptr),exp:ident(mm),ident(mmap)]]],while[exp:ident(vma),{}stmt[sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_arith),aop(&),exp[grammar(record_ptr),exp:ident(vma),ident(vm_flags)],exp:ident(VM_EXECUTABLE)],exp[grammar(record_ptr),exp:ident(vma),ident(vm_file)]],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(vma),exp[grammar(record_ptr),exp:ident(vma),ident(vm_next)]]]]],sel_if[exp:ident(vma),{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(path),exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(vma),ident(vm_file)],ident(f_path)]]],estmt[exp[grammar(call),exp:ident(path_get),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp[grammar(record_ptr),exp:ident(vma),ident(vm_file)],ident(f_path)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(result),exp:const:int(0)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(up_read),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(mm),ident(mmap_sem)]]],estmt[exp[grammar(call),exp:ident(mmput),exp:ident(mm)]],statem(N/H)]],def[fname(pad_len_spaces),funtype[fulltype[ctype[btype(void)]],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(len),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(len),exp[grammar(binary_arith),aop(-),exp[grammar(binary_arith),aop(+),exp:const:int(25),exp[grammar(binary_arith),aop(*),exp[grammar(sizeoftype),grammar(fulltype),typec(N/H)],exp:const:int(6)]],exp:ident(len)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(len),exp:const:int(1)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(len),exp:const:int(1)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(%*c),exp:ident(len),exp:const:other(N/H)]]]],def[fname(vma_stop),funtype[fulltype[ctype[btype(void)]],param[reg(),name(priv),fulltype[typec(N/H)]],param[reg(),name(vma),fulltype[typec(N/H)]]],{}stmt[sel_if[exp[grammar(binary_logi),logiop(and),exp:ident(vma),exp[grammar(binary_logi),logiop(??),exp:ident(vma),exp[grammar(record_ptr),exp:ident(priv),ident(tail_vma)]]],{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(up_read),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(mm),ident(mmap_sem)]]],estmt[exp[grammar(call),exp:ident(mmput),exp:ident(mm)]]],estmt(NONE)]]],def[fname(m_start),funtype[fulltype[typec(N/H)],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(pos),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(priv),ident(task)],exp:ident(NULL)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(priv),ident(tail_vma)],exp:ident(NULL)]],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(last_addr),exp:??(N/H)],st_return[exp:ident(NULL)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(priv),ident(task)],exp[grammar(call),exp:ident(get_pid_task),exp[grammar(record_ptr),exp:ident(priv),ident(pid)],exp:ident(PIDTYPE_PID)]]],sel_if[exp:??(N/H),st_return[exp:ident(NULL)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(mm),exp[grammar(call),exp:ident(mm_for_maps),exp[grammar(record_ptr),exp:ident(priv),ident(task)]]]],sel_if[exp:??(N/H),st_return[exp:ident(NULL)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(tail_vma),exp[grammar(call),exp:ident(get_gate_vma),exp[grammar(record_ptr),exp:ident(priv),ident(task)]]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(priv),ident(tail_vma)],exp:ident(tail_vma)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(vma),exp[grammar(call),exp:ident(find_vma),exp:ident(mm),exp:ident(last_addr)]]],sel_if[exp[grammar(binary_logi),logiop(and),exp:ident(last_addr),exp:ident(vma)],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(vma),exp[grammar(record_ptr),exp:ident(vma),ident(vm_next)]]],statem(N/H)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(vma),exp:ident(NULL)]],sel_if[exp[grammar(binary_logi),logiop(??),exp:??(N/H),exp[grammar(record_ptr),exp:ident(mm),ident(map_count)]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(vma),exp[grammar(record_ptr),exp:ident(mm),ident(mmap)]]],while[exp[grammar(binary_logi),logiop(and),exp:??(N/H),exp:ident(vma)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(vma),exp[grammar(record_ptr),exp:ident(vma),ident(vm_next)]]]],statem(N/H)],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(l),exp[grammar(record_ptr),exp:ident(mm),ident(map_count)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(tail_vma),exp:ident(NULL)]],estmt(NONE)],statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(m),ident(version)],exp[grammar(cond3),exp[grammar(binary_logi),logiop(??),exp:ident(tail_vma),exp:ident(NULL)],exp:const:int(0),exp:??(N/H)]]],estmt[exp[grammar(call),exp:ident(up_read),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(mm),ident(mmap_sem)]]],estmt[exp[grammar(call),exp:ident(mmput),exp:ident(mm)]],st_return[exp:ident(tail_vma)]]],def[fname(m_next),funtype[fulltype[typec(N/H)],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(v),fulltype[typec(N/H)]],param[reg(),name(pos),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp:??(N/H)],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(and),exp:ident(vma),exp[grammar(binary_logi),logiop(??),exp:ident(vma),exp:ident(tail_vma)]],exp[grammar(record_ptr),exp:ident(vma),ident(vm_next)]],st_return[exp[grammar(record_ptr),exp:ident(vma),ident(vm_next)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(vma_stop),exp:ident(priv),exp:ident(vma)]],st_return[exp[grammar(cond3),exp[grammar(binary_logi),logiop(??),exp:ident(vma),exp:ident(tail_vma)],exp:ident(tail_vma),exp:ident(NULL)]]]],def[fname(m_stop),funtype[fulltype[ctype[btype(void)]],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(v),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(vma_stop),exp:ident(priv),exp:ident(vma)]],sel_if[exp[grammar(record_ptr),exp:ident(priv),ident(task)],estmt[exp[grammar(call),exp:ident(put_task_struct),exp[grammar(record_ptr),exp:ident(priv),ident(task)]]],estmt(NONE)]]],def[fname(do_maps_open),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(inode),fulltype[typec(N/H)]],param[reg(),name(file),fulltype[typec(N/H)]],param[reg(),name(ops),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(priv),exp[grammar(call),exp:ident(kzalloc),exp:sizeof:exp:*ref:exp:ident(priv),exp:ident(GFP_KERNEL)]]],sel_if[exp:ident(priv),{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(priv),ident(pid)],exp[grammar(call),exp:ident(proc_pid),exp:ident(inode)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ret),exp[grammar(call),exp:ident(seq_open),exp:ident(file),exp:ident(ops)]]],sel_if[exp:??(N/H),{}stmt[statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(m),ident(private)],exp:ident(priv)]]],{}stmt[estmt[exp[grammar(call),exp:ident(kfree),exp:ident(priv)]]]]],estmt(NONE)],st_return[exp:ident(ret)]]],def[fname(show_map),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(v),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),sel_if[exp[grammar(binary_logi),logiop(and),exp:ident(maps_protect),exp:??(N/H)],st_return[exp:??(N/H)],estmt(NONE)],sel_if[exp:ident(file),{}stmt[statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(dev),exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(inode),ident(i_sb)],ident(s_dev)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ino),exp[grammar(record_ptr),exp:ident(inode),ident(i_ino)]]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(%08lx-%08lx %c%c%c%c %08lx %02x:%02x %lu %n),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp[grammar(cond3),exp[grammar(binary_arith),aop(&),exp:ident(flags),exp:ident(VM_READ)],exp:const:other(N/H),exp:const:other(N/H)],exp[grammar(cond3),exp[grammar(binary_arith),aop(&),exp:ident(flags),exp:ident(VM_WRITE)],exp:const:other(N/H),exp:const:other(N/H)],exp[grammar(cond3),exp[grammar(binary_arith),aop(&),exp:ident(flags),exp:ident(VM_EXEC)],exp:const:other(N/H),exp:const:other(N/H)],exp[grammar(cond3),exp[grammar(binary_arith),aop(&),exp:ident(flags),exp:ident(VM_MAYSHARE)],exp:const:other(N/H),exp:const:other(N/H)],exp[grammar(binary_arith),aop(<<),exp[grammar(record_ptr),exp:ident(vma),ident(vm_pgoff)],exp:ident(PAGE_SHIFT)],exp[grammar(call),exp:ident(MAJOR),exp:ident(dev)],exp[grammar(call),exp:ident(MINOR),exp:ident(dev)],exp:ident(ino),exp:&ref:exp:ident(len)]],sel_if[exp:ident(file),{}stmt[estmt[exp[grammar(call),exp:ident(pad_len_spaces),exp:ident(m),exp:ident(len)]],estmt[exp[grammar(call),exp:ident(seq_path),exp:ident(m),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(file),ident(f_path)],exp:const:string(\n)]]],{}stmt[statem(N/H),sel_if[exp:??(N/H),{}stmt[sel_if[exp:ident(mm),{}stmt[sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp[grammar(record_ptr),exp:ident(mm),ident(start_brk)]],exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp[grammar(record_ptr),exp:ident(mm),ident(brk)]]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(name),exp:const:string([heap])]]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp[grammar(record_ptr),exp:ident(mm),ident(start_stack)]],exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp[grammar(record_ptr),exp:ident(mm),ident(start_stack)]]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(name),exp:const:string([stack])]]],estmt(NONE)]]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(name),exp:const:string([vdso])]]]]],estmt(NONE)],sel_if[exp:ident(name),{}stmt[estmt[exp[grammar(call),exp:ident(pad_len_spaces),exp:ident(m),exp:ident(len)]],estmt[exp[grammar(call),exp:ident(seq_puts),exp:ident(m),exp:ident(name)]]],estmt(NONE)]]],estmt[exp[grammar(call),exp:ident(seq_putc),exp:ident(m),exp:const:other(N/H)]],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(m),ident(count)],exp[grammar(record_ptr),exp:ident(m),ident(size)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(m),ident(version)],exp[grammar(cond3),exp[grammar(binary_logi),logiop(??),exp:ident(vma),exp[grammar(call),exp:ident(get_gate_vma),exp:ident(task)]],exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp:const:int(0)]]],estmt(NONE)],st_return[exp:const:int(0)]]],decl(N/H),def[fname(maps_open),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(inode),fulltype[typec(N/H)]],param[reg(),name(file),fulltype[typec(N/H)]]],{}stmt[st_return[exp[grammar(call),exp:ident(do_maps_open),exp:ident(inode),exp:ident(file),exp:&ref:exp:ident(proc_pid_maps_op)]]]],decl(N/H),define(N/H),decl(N/H),def[fname(smaps_pte_range),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(pmd),fulltype[typec(N/H)]],param[reg(),name(addr),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(end),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(private),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(pte),exp[grammar(call),exp:ident(pte_offset_map_lock),exp[grammar(record_ptr),exp:ident(vma),ident(vm_mm)],exp:ident(pmd),exp:ident(addr),exp:&ref:exp:ident(ptl)]]],for[expr(NONE),exp[grammar(binary_logi),logiop(??),exp:ident(addr),exp:ident(end)],exp:??(N/H),{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(ptent),exp:*ref:exp:ident(pte)]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),op_assi(+=),exp[grammar(record_ptr),exp:ident(mss),ident(resident)],exp:ident(PAGE_SIZE)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(page),exp[grammar(call),exp:ident(vm_normal_page),exp:ident(vma),exp:ident(addr),exp:ident(ptent)]]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(or),exp[grammar(call),exp:ident(pte_young),exp:ident(ptent)],exp[grammar(call),exp:ident(PageReferenced),exp:ident(page)]],estmt[exp[grammar(assign),op_assi(+=),exp[grammar(record_ptr),exp:ident(mss),ident(referenced)],exp:ident(PAGE_SIZE)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(mapcount),exp[grammar(call),exp:ident(page_mapcount),exp:ident(page)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(mapcount),exp:const:int(2)],{}stmt[sel_if[exp[grammar(call),exp:ident(pte_dirty),exp:ident(ptent)],estmt[exp[grammar(assign),op_assi(+=),exp[grammar(record_ptr),exp:ident(mss),ident(shared_dirty)],exp:ident(PAGE_SIZE)]],estmt[exp[grammar(assign),op_assi(+=),exp[grammar(record_ptr),exp:ident(mss),ident(shared_clean)],exp:ident(PAGE_SIZE)]]],estmt[exp[grammar(assign),op_assi(+=),exp[grammar(record_ptr),exp:ident(mss),ident(pss)],exp[grammar(binary_arith),aop(/),exp[grammar(binary_arith),aop(<<),exp:ident(PAGE_SIZE),exp:ident(PSS_SHIFT)],exp:ident(mapcount)]]]],{}stmt[sel_if[exp[grammar(call),exp:ident(pte_dirty),exp:ident(ptent)],estmt[exp[grammar(assign),op_assi(+=),exp[grammar(record_ptr),exp:ident(mss),ident(private_dirty)],exp:ident(PAGE_SIZE)]],estmt[exp[grammar(assign),op_assi(+=),exp[grammar(record_ptr),exp:ident(mss),ident(private_clean)],exp:ident(PAGE_SIZE)]]],estmt[exp[grammar(assign),op_assi(+=),exp[grammar(record_ptr),exp:ident(mss),ident(pss)],exp[grammar(binary_arith),aop(<<),exp:ident(PAGE_SIZE),exp:ident(PSS_SHIFT)]]]]]]],estmt[exp[grammar(call),exp:ident(pte_unmap_unlock),exp[grammar(binary_arith),aop(-),exp:ident(pte),exp:const:int(1)],exp:ident(ptl)]],estmt[exp[grammar(call),exp:ident(cond_resched)]],st_return[exp:const:int(0)]]],decl(N/H),def[fname(show_smap),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(v),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(memset),exp:&ref:exp:ident(mss),exp:const:int(0),exp:sizeof:exp:ident(mss)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(mss),ident(vma)],exp:ident(vma)]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(record_ptr),exp:ident(vma),ident(vm_mm)],exp:??(N/H)],estmt[exp[grammar(call),exp:ident(walk_page_range),exp[grammar(record_ptr),exp:ident(vma),ident(vm_mm)],exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp:&ref:exp:ident(smaps_walk),exp:&ref:exp:ident(mss)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ret),exp[grammar(call),exp:ident(show_map),exp:ident(m),exp:ident(v)]]],sel_if[exp:ident(ret),st_return[exp:ident(ret)],estmt(NONE)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:other(N/H),exp[grammar(binary_arith),aop(>>),exp[grammar(binary_arith),aop(-),exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)]],exp:const:int(10)],exp[grammar(binary_arith),aop(>>),exp[grammar(record_acc),exp:ident(mss),ident(resident)],exp:const:int(10)],exp:??(N/H),exp[grammar(binary_arith),aop(>>),exp[grammar(record_acc),exp:ident(mss),ident(shared_clean)],exp:const:int(10)],exp[grammar(binary_arith),aop(>>),exp[grammar(record_acc),exp:ident(mss),ident(shared_dirty)],exp:const:int(10)],exp[grammar(binary_arith),aop(>>),exp[grammar(record_acc),exp:ident(mss),ident(private_clean)],exp:const:int(10)],exp[grammar(binary_arith),aop(>>),exp[grammar(record_acc),exp:ident(mss),ident(private_dirty)],exp:const:int(10)],exp[grammar(binary_arith),aop(>>),exp[grammar(record_acc),exp:ident(mss),ident(referenced)],exp:const:int(10)]]],st_return[exp:ident(ret)]]],decl(N/H),def[fname(smaps_open),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(inode),fulltype[typec(N/H)]],param[reg(),name(file),fulltype[typec(N/H)]]],{}stmt[st_return[exp[grammar(call),exp:ident(do_maps_open),exp:ident(inode),exp:ident(file),exp:&ref:exp:ident(proc_pid_smaps_op)]]]],decl(N/H),def[fname(clear_refs_pte_range),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(pmd),fulltype[typec(N/H)]],param[reg(),name(addr),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(end),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(private),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(pte),exp[grammar(call),exp:ident(pte_offset_map_lock),exp[grammar(record_ptr),exp:ident(vma),ident(vm_mm)],exp:ident(pmd),exp:ident(addr),exp:&ref:exp:ident(ptl)]]],for[expr(NONE),exp[grammar(binary_logi),logiop(??),exp:ident(addr),exp:ident(end)],exp:??(N/H),{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(ptent),exp:*ref:exp:ident(pte)]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(page),exp[grammar(call),exp:ident(vm_normal_page),exp:ident(vma),exp:ident(addr),exp:ident(ptent)]]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(ptep_test_and_clear_young),exp:ident(vma),exp:ident(addr),exp:ident(pte)]],estmt[exp[grammar(call),exp:ident(ClearPageReferenced),exp:ident(page)]]]],estmt[exp[grammar(call),exp:ident(pte_unmap_unlock),exp[grammar(binary_arith),aop(-),exp:ident(pte),exp:const:int(1)],exp:ident(ptl)]],estmt[exp[grammar(call),exp:ident(cond_resched)]],st_return[exp:const:int(0)]]],decl(N/H),NCP(N/H),decl(N/H),NCP(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),def[fname(add_to_pagemap),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(addr),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(pfn),fulltype[typec(N/H)]],param[reg(),name(pm),fulltype[typec(N/H)]]],{}stmt[sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(binary_arith),aop(+),exp[grammar(record_ptr),exp:ident(pm),ident(out)],exp:ident(PM_ENTRY_BYTES)],exp[grammar(record_ptr),exp:ident(pm),ident(end)]],{}stmt[sel_if[exp[grammar(call),exp:ident(copy_to_user),exp[grammar(record_ptr),exp:ident(pm),ident(out)],exp:&ref:exp:ident(pfn),exp[grammar(binary_arith),aop(-),exp[grammar(record_ptr),exp:ident(pm),ident(end)],exp[grammar(record_ptr),exp:ident(pm),ident(out)]]],st_return[exp:??(N/H)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(pm),ident(out)],exp[grammar(record_ptr),exp:ident(pm),ident(end)]]],st_return[exp:ident(PM_END_OF_BUFFER)]],estmt(NONE)],sel_if[exp[grammar(call),exp:ident(put_user),exp:ident(pfn),exp[grammar(record_ptr),exp:ident(pm),ident(out)]],st_return[exp:??(N/H)],estmt(NONE)],estmt[exp[grammar(assign),op_assi(+=),exp[grammar(record_ptr),exp:ident(pm),ident(out)],exp:ident(PM_ENTRY_BYTES)]],st_return[exp:const:int(0)]]],def[fname(pagemap_pte_hole),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(start),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(end),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(private),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),for[exp[grammar(assign),simple_assi(=),exp:ident(addr),exp:ident(start)],exp[grammar(binary_logi),logiop(??),exp:ident(addr),exp:ident(end)],exp[grammar(assign),op_assi(+=),exp:ident(addr),exp:ident(PAGE_SIZE)],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(add_to_pagemap),exp:ident(addr),exp:ident(PM_NOT_PRESENT),exp:ident(pm)]]],sel_if[exp:ident(err),statem(N/H),estmt(NONE)]]],st_return[exp:ident(err)]]],def[fname(swap_pte_to_pagemap_entry),funtype[fulltype[typec(N/H)],param[reg(),name(pte),fulltype[typec(N/H)]]],{}stmt[statem(N/H),st_return[exp[grammar(binary_arith),aop(|),exp[grammar(binary_arith),aop(|),exp:ident(PM_SWAP),exp[grammar(call),exp:ident(swp_type),exp:ident(e)]],exp[grammar(binary_arith),aop(<<),exp[grammar(call),exp:ident(swp_offset),exp:ident(e)],exp:ident(MAX_SWAPFILES_SHIFT)]]]]],def[fname(pagemap_pte_range),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(pmd),fulltype[typec(N/H)]],param[reg(),name(addr),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(end),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(private),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),for[expr(NONE),exp[grammar(binary_logi),logiop(??),exp:ident(addr),exp:ident(end)],exp[grammar(assign),op_assi(+=),exp:ident(addr),exp:ident(PAGE_SIZE)],{}stmt[statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(pte),exp[grammar(call),exp:ident(pte_offset_map),exp:ident(pmd),exp:ident(addr)]]],sel_if[exp[grammar(call),exp:ident(is_swap_pte),exp:*ref:exp:ident(pte)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(pfn),exp[grammar(call),exp:ident(swap_pte_to_pagemap_entry),exp:*ref:exp:ident(pte)]]],sel_if[exp[grammar(call),exp:ident(pte_present),exp:*ref:exp:ident(pte)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(pfn),exp[grammar(call),exp:ident(pte_pfn),exp:*ref:exp:ident(pte)]]],estmt(NONE)]],estmt[exp[grammar(call),exp:ident(pte_unmap),exp:ident(pte)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(add_to_pagemap),exp:ident(addr),exp:ident(pfn),exp:ident(pm)]]],sel_if[exp:ident(err),st_return[exp:ident(err)],estmt(NONE)]]],estmt[exp[grammar(call),exp:ident(cond_resched)]],st_return[exp:ident(err)]]],decl(N/H),NCP(N/H),decl(N/H),decl(N/H),def[fname(show_numa_map_checked),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(v),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp[grammar(binary_logi),logiop(and),exp:ident(maps_protect),exp:??(N/H)],st_return[exp:??(N/H)],estmt(NONE)],st_return[exp[grammar(call),exp:ident(show_numa_map),exp:ident(m),exp:ident(v)]]]],decl(N/H),def[fname(numa_maps_open),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(inode),fulltype[typec(N/H)]],param[reg(),name(file),fulltype[typec(N/H)]]],{}stmt[st_return[exp[grammar(call),exp:ident(do_maps_open),exp:ident(inode),exp:ident(file),exp:&ref:exp:ident(proc_pid_numa_maps_op)]]]],decl(N/H)]
[Main] terms that changed: 
[Diff] abstracting concrete update:exp[grammar(call),exp:ident(seq_path),exp:ident(m),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(file),ident(f_path)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(file),ident(f_path)],ident(dentry)],exp:const:string(\n)] ==> exp[grammar(call),exp:ident(seq_path),exp:ident(m),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(file),ident(f_path)],exp:const:string(\n)]
[Diff] resulting abstract updates: 16
[Diff] abstracting concrete update:estmt[exp[grammar(call),exp:ident(seq_path),exp:ident(m),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(file),ident(f_path)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(file),ident(f_path)],ident(dentry)],exp:const:string(\n)]] ==> estmt[exp[grammar(call),exp:ident(seq_path),exp:ident(m),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(file),ident(f_path)],exp:const:string(\n)]]
[Diff] resulting abstract updates: 1
[Diff] abstracting concrete update:{}stmt[estmt[exp[grammar(call),exp:ident(pad_len_spaces),exp:ident(m),exp:ident(len)]],estmt[exp[grammar(call),exp:ident(seq_path),exp:ident(m),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(file),ident(f_path)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(file),ident(f_path)],ident(dentry)],exp:const:string(\n)]]] ==> {}stmt[estmt[exp[grammar(call),exp:ident(pad_len_spaces),exp:ident(m),exp:ident(len)]],estmt[exp[grammar(call),exp:ident(seq_path),exp:ident(m),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(file),ident(f_path)],exp:const:string(\n)]]]
[Diff] resulting abstract updates: 1
[Diff] abstracting concrete update:sel_if[exp:ident(file),{}stmt[estmt[exp[grammar(call),exp:ident(pad_len_spaces),exp:ident(m),exp:ident(len)]],estmt[exp[grammar(call),exp:ident(seq_path),exp:ident(m),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(file),ident(f_path)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(file),ident(f_path)],ident(dentry)],exp:const:string(\n)]]],{}stmt[statem(N/H),sel_if[exp:??(N/H),{}stmt[sel_if[exp:ident(mm),{}stmt[sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp[grammar(record_ptr),exp:ident(mm),ident(start_brk)]],exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp[grammar(record_ptr),exp:ident(mm),ident(brk)]]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(name),exp:const:string([heap])]]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp[grammar(record_ptr),exp:ident(mm),ident(start_stack)]],exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp[grammar(record_ptr),exp:ident(mm),ident(start_stack)]]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(name),exp:const:string([stack])]]],estmt(NONE)]]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(name),exp:const:string([vdso])]]]]],estmt(NONE)],sel_if[exp:ident(name),{}stmt[estmt[exp[grammar(call),exp:ident(pad_len_spaces),exp:ident(m),exp:ident(len)]],estmt[exp[grammar(call),exp:ident(seq_puts),exp:ident(m),exp:ident(name)]]],estmt(NONE)]]] ==> sel_if[exp:ident(file),{}stmt[estmt[exp[grammar(call),exp:ident(pad_len_spaces),exp:ident(m),exp:ident(len)]],estmt[exp[grammar(call),exp:ident(seq_path),exp:ident(m),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(file),ident(f_path)],exp:const:string(\n)]]],{}stmt[statem(N/H),sel_if[exp:??(N/H),{}stmt[sel_if[exp:ident(mm),{}stmt[sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp[grammar(record_ptr),exp:ident(mm),ident(start_brk)]],exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp[grammar(record_ptr),exp:ident(mm),ident(brk)]]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(name),exp:const:string([heap])]]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp[grammar(record_ptr),exp:ident(mm),ident(start_stack)]],exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp[grammar(record_ptr),exp:ident(mm),ident(start_stack)]]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(name),exp:const:string([stack])]]],estmt(NONE)]]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(name),exp:const:string([vdso])]]]]],estmt(NONE)],sel_if[exp:ident(name),{}stmt[estmt[exp[grammar(call),exp:ident(pad_len_spaces),exp:ident(m),exp:ident(len)]],estmt[exp[grammar(call),exp:ident(seq_puts),exp:ident(m),exp:ident(name)]]],estmt(NONE)]]]
[Diff] resulting abstract updates: 1
[Diff] abstracting concrete update:{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),sel_if[exp[grammar(binary_logi),logiop(and),exp:ident(maps_protect),exp:??(N/H)],st_return[exp:??(N/H)],estmt(NONE)],sel_if[exp:ident(file),{}stmt[statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(dev),exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(inode),ident(i_sb)],ident(s_dev)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ino),exp[grammar(record_ptr),exp:ident(inode),ident(i_ino)]]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(%08lx-%08lx %c%c%c%c %08lx %02x:%02x %lu %n),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp[grammar(cond3),exp[grammar(binary_arith),aop(&),exp:ident(flags),exp:ident(VM_READ)],exp:const:other(N/H),exp:const:other(N/H)],exp[grammar(cond3),exp[grammar(binary_arith),aop(&),exp:ident(flags),exp:ident(VM_WRITE)],exp:const:other(N/H),exp:const:other(N/H)],exp[grammar(cond3),exp[grammar(binary_arith),aop(&),exp:ident(flags),exp:ident(VM_EXEC)],exp:const:other(N/H),exp:const:other(N/H)],exp[grammar(cond3),exp[grammar(binary_arith),aop(&),exp:ident(flags),exp:ident(VM_MAYSHARE)],exp:const:other(N/H),exp:const:other(N/H)],exp[grammar(binary_arith),aop(<<),exp[grammar(record_ptr),exp:ident(vma),ident(vm_pgoff)],exp:ident(PAGE_SHIFT)],exp[grammar(call),exp:ident(MAJOR),exp:ident(dev)],exp[grammar(call),exp:ident(MINOR),exp:ident(dev)],exp:ident(ino),exp:&ref:exp:ident(len)]],sel_if[exp:ident(file),{}stmt[estmt[exp[grammar(call),exp:ident(pad_len_spaces),exp:ident(m),exp:ident(len)]],estmt[exp[grammar(call),exp:ident(seq_path),exp:ident(m),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(file),ident(f_path)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(file),ident(f_path)],ident(dentry)],exp:const:string(\n)]]],{}stmt[statem(N/H),sel_if[exp:??(N/H),{}stmt[sel_if[exp:ident(mm),{}stmt[sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp[grammar(record_ptr),exp:ident(mm),ident(start_brk)]],exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp[grammar(record_ptr),exp:ident(mm),ident(brk)]]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(name),exp:const:string([heap])]]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp[grammar(record_ptr),exp:ident(mm),ident(start_stack)]],exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp[grammar(record_ptr),exp:ident(mm),ident(start_stack)]]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(name),exp:const:string([stack])]]],estmt(NONE)]]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(name),exp:const:string([vdso])]]]]],estmt(NONE)],sel_if[exp:ident(name),{}stmt[estmt[exp[grammar(call),exp:ident(pad_len_spaces),exp:ident(m),exp:ident(len)]],estmt[exp[grammar(call),exp:ident(seq_puts),exp:ident(m),exp:ident(name)]]],estmt(NONE)]]],estmt[exp[grammar(call),exp:ident(seq_putc),exp:ident(m),exp:const:other(N/H)]],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(m),ident(count)],exp[grammar(record_ptr),exp:ident(m),ident(size)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(m),ident(version)],exp[grammar(cond3),exp[grammar(binary_logi),logiop(??),exp:ident(vma),exp[grammar(call),exp:ident(get_gate_vma),exp:ident(task)]],exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp:const:int(0)]]],estmt(NONE)],st_return[exp:const:int(0)]] ==> {}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),sel_if[exp[grammar(binary_logi),logiop(and),exp:ident(maps_protect),exp:??(N/H)],st_return[exp:??(N/H)],estmt(NONE)],sel_if[exp:ident(file),{}stmt[statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(dev),exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(inode),ident(i_sb)],ident(s_dev)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ino),exp[grammar(record_ptr),exp:ident(inode),ident(i_ino)]]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(%08lx-%08lx %c%c%c%c %08lx %02x:%02x %lu %n),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp[grammar(cond3),exp[grammar(binary_arith),aop(&),exp:ident(flags),exp:ident(VM_READ)],exp:const:other(N/H),exp:const:other(N/H)],exp[grammar(cond3),exp[grammar(binary_arith),aop(&),exp:ident(flags),exp:ident(VM_WRITE)],exp:const:other(N/H),exp:const:other(N/H)],exp[grammar(cond3),exp[grammar(binary_arith),aop(&),exp:ident(flags),exp:ident(VM_EXEC)],exp:const:other(N/H),exp:const:other(N/H)],exp[grammar(cond3),exp[grammar(binary_arith),aop(&),exp:ident(flags),exp:ident(VM_MAYSHARE)],exp:const:other(N/H),exp:const:other(N/H)],exp[grammar(binary_arith),aop(<<),exp[grammar(record_ptr),exp:ident(vma),ident(vm_pgoff)],exp:ident(PAGE_SHIFT)],exp[grammar(call),exp:ident(MAJOR),exp:ident(dev)],exp[grammar(call),exp:ident(MINOR),exp:ident(dev)],exp:ident(ino),exp:&ref:exp:ident(len)]],sel_if[exp:ident(file),{}stmt[estmt[exp[grammar(call),exp:ident(pad_len_spaces),exp:ident(m),exp:ident(len)]],estmt[exp[grammar(call),exp:ident(seq_path),exp:ident(m),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(file),ident(f_path)],exp:const:string(\n)]]],{}stmt[statem(N/H),sel_if[exp:??(N/H),{}stmt[sel_if[exp:ident(mm),{}stmt[sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp[grammar(record_ptr),exp:ident(mm),ident(start_brk)]],exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp[grammar(record_ptr),exp:ident(mm),ident(brk)]]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(name),exp:const:string([heap])]]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp[grammar(record_ptr),exp:ident(mm),ident(start_stack)]],exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp[grammar(record_ptr),exp:ident(mm),ident(start_stack)]]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(name),exp:const:string([stack])]]],estmt(NONE)]]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(name),exp:const:string([vdso])]]]]],estmt(NONE)],sel_if[exp:ident(name),{}stmt[estmt[exp[grammar(call),exp:ident(pad_len_spaces),exp:ident(m),exp:ident(len)]],estmt[exp[grammar(call),exp:ident(seq_puts),exp:ident(m),exp:ident(name)]]],estmt(NONE)]]],estmt[exp[grammar(call),exp:ident(seq_putc),exp:ident(m),exp:const:other(N/H)]],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(m),ident(count)],exp[grammar(record_ptr),exp:ident(m),ident(size)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(m),ident(version)],exp[grammar(cond3),exp[grammar(binary_logi),logiop(??),exp:ident(vma),exp[grammar(call),exp:ident(get_gate_vma),exp:ident(task)]],exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp:const:int(0)]]],estmt(NONE)],st_return[exp:const:int(0)]]
[Diff] resulting abstract updates: 1
[Diff] abstracting concrete update:def[fname(show_map),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(v),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),sel_if[exp[grammar(binary_logi),logiop(and),exp:ident(maps_protect),exp:??(N/H)],st_return[exp:??(N/H)],estmt(NONE)],sel_if[exp:ident(file),{}stmt[statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(dev),exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(inode),ident(i_sb)],ident(s_dev)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ino),exp[grammar(record_ptr),exp:ident(inode),ident(i_ino)]]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(%08lx-%08lx %c%c%c%c %08lx %02x:%02x %lu %n),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp[grammar(cond3),exp[grammar(binary_arith),aop(&),exp:ident(flags),exp:ident(VM_READ)],exp:const:other(N/H),exp:const:other(N/H)],exp[grammar(cond3),exp[grammar(binary_arith),aop(&),exp:ident(flags),exp:ident(VM_WRITE)],exp:const:other(N/H),exp:const:other(N/H)],exp[grammar(cond3),exp[grammar(binary_arith),aop(&),exp:ident(flags),exp:ident(VM_EXEC)],exp:const:other(N/H),exp:const:other(N/H)],exp[grammar(cond3),exp[grammar(binary_arith),aop(&),exp:ident(flags),exp:ident(VM_MAYSHARE)],exp:const:other(N/H),exp:const:other(N/H)],exp[grammar(binary_arith),aop(<<),exp[grammar(record_ptr),exp:ident(vma),ident(vm_pgoff)],exp:ident(PAGE_SHIFT)],exp[grammar(call),exp:ident(MAJOR),exp:ident(dev)],exp[grammar(call),exp:ident(MINOR),exp:ident(dev)],exp:ident(ino),exp:&ref:exp:ident(len)]],sel_if[exp:ident(file),{}stmt[estmt[exp[grammar(call),exp:ident(pad_len_spaces),exp:ident(m),exp:ident(len)]],estmt[exp[grammar(call),exp:ident(seq_path),exp:ident(m),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(file),ident(f_path)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(file),ident(f_path)],ident(dentry)],exp:const:string(\n)]]],{}stmt[statem(N/H),sel_if[exp:??(N/H),{}stmt[sel_if[exp:ident(mm),{}stmt[sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp[grammar(record_ptr),exp:ident(mm),ident(start_brk)]],exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp[grammar(record_ptr),exp:ident(mm),ident(brk)]]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(name),exp:const:string([heap])]]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp[grammar(record_ptr),exp:ident(mm),ident(start_stack)]],exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp[grammar(record_ptr),exp:ident(mm),ident(start_stack)]]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(name),exp:const:string([stack])]]],estmt(NONE)]]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(name),exp:const:string([vdso])]]]]],estmt(NONE)],sel_if[exp:ident(name),{}stmt[estmt[exp[grammar(call),exp:ident(pad_len_spaces),exp:ident(m),exp:ident(len)]],estmt[exp[grammar(call),exp:ident(seq_puts),exp:ident(m),exp:ident(name)]]],estmt(NONE)]]],estmt[exp[grammar(call),exp:ident(seq_putc),exp:ident(m),exp:const:other(N/H)]],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(m),ident(count)],exp[grammar(record_ptr),exp:ident(m),ident(size)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(m),ident(version)],exp[grammar(cond3),exp[grammar(binary_logi),logiop(??),exp:ident(vma),exp[grammar(call),exp:ident(get_gate_vma),exp:ident(task)]],exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp:const:int(0)]]],estmt(NONE)],st_return[exp:const:int(0)]]] ==> def[fname(show_map),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(v),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),sel_if[exp[grammar(binary_logi),logiop(and),exp:ident(maps_protect),exp:??(N/H)],st_return[exp:??(N/H)],estmt(NONE)],sel_if[exp:ident(file),{}stmt[statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(dev),exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(inode),ident(i_sb)],ident(s_dev)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ino),exp[grammar(record_ptr),exp:ident(inode),ident(i_ino)]]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(%08lx-%08lx %c%c%c%c %08lx %02x:%02x %lu %n),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp[grammar(cond3),exp[grammar(binary_arith),aop(&),exp:ident(flags),exp:ident(VM_READ)],exp:const:other(N/H),exp:const:other(N/H)],exp[grammar(cond3),exp[grammar(binary_arith),aop(&),exp:ident(flags),exp:ident(VM_WRITE)],exp:const:other(N/H),exp:const:other(N/H)],exp[grammar(cond3),exp[grammar(binary_arith),aop(&),exp:ident(flags),exp:ident(VM_EXEC)],exp:const:other(N/H),exp:const:other(N/H)],exp[grammar(cond3),exp[grammar(binary_arith),aop(&),exp:ident(flags),exp:ident(VM_MAYSHARE)],exp:const:other(N/H),exp:const:other(N/H)],exp[grammar(binary_arith),aop(<<),exp[grammar(record_ptr),exp:ident(vma),ident(vm_pgoff)],exp:ident(PAGE_SHIFT)],exp[grammar(call),exp:ident(MAJOR),exp:ident(dev)],exp[grammar(call),exp:ident(MINOR),exp:ident(dev)],exp:ident(ino),exp:&ref:exp:ident(len)]],sel_if[exp:ident(file),{}stmt[estmt[exp[grammar(call),exp:ident(pad_len_spaces),exp:ident(m),exp:ident(len)]],estmt[exp[grammar(call),exp:ident(seq_path),exp:ident(m),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(file),ident(f_path)],exp:const:string(\n)]]],{}stmt[statem(N/H),sel_if[exp:??(N/H),{}stmt[sel_if[exp:ident(mm),{}stmt[sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp[grammar(record_ptr),exp:ident(mm),ident(start_brk)]],exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp[grammar(record_ptr),exp:ident(mm),ident(brk)]]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(name),exp:const:string([heap])]]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp[grammar(record_ptr),exp:ident(mm),ident(start_stack)]],exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp[grammar(record_ptr),exp:ident(mm),ident(start_stack)]]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(name),exp:const:string([stack])]]],estmt(NONE)]]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(name),exp:const:string([vdso])]]]]],estmt(NONE)],sel_if[exp:ident(name),{}stmt[estmt[exp[grammar(call),exp:ident(pad_len_spaces),exp:ident(m),exp:ident(len)]],estmt[exp[grammar(call),exp:ident(seq_puts),exp:ident(m),exp:ident(name)]]],estmt(NONE)]]],estmt[exp[grammar(call),exp:ident(seq_putc),exp:ident(m),exp:const:other(N/H)]],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(m),ident(count)],exp[grammar(record_ptr),exp:ident(m),ident(size)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(m),ident(version)],exp[grammar(cond3),exp[grammar(binary_logi),logiop(??),exp:ident(vma),exp[grammar(call),exp:ident(get_gate_vma),exp:ident(task)]],exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp:const:int(0)]]],estmt(NONE)],st_return[exp:const:int(0)]]]
[Diff] resulting abstract updates: 1
[Diff] abstracting concrete update:prg2[includeN[inc_elem(linux),inc_elem(mm.h)],includeN[inc_elem(linux),inc_elem(hugetlb.h)],includeN[inc_elem(linux),inc_elem(mount.h)],includeN[inc_elem(linux),inc_elem(seq_file.h)],includeN[inc_elem(linux),inc_elem(highmem.h)],includeN[inc_elem(linux),inc_elem(ptrace.h)],includeN[inc_elem(linux),inc_elem(pagemap.h)],includeN[inc_elem(linux),inc_elem(ptrace.h)],includeN[inc_elem(linux),inc_elem(mempolicy.h)],includeN[inc_elem(linux),inc_elem(swap.h)],includeN[inc_elem(linux),inc_elem(swapops.h)],includeN[inc_elem(linux),inc_elem(seq_file.h)],includeN[inc_elem(asm),inc_elem(elf.h)],includeN[inc_elem(asm),inc_elem(uaccess.h)],includeN[inc_elem(asm),inc_elem(tlbflush.h)],includeL[inc_elem(internal.h)],def[fname(task_mem),funtype[fulltype[ctype[btype(void)]],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(mm),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(hiwater_vm),exp[grammar(assign),simple_assi(=),exp:ident(total_vm),exp[grammar(record_ptr),exp:ident(mm),ident(total_vm)]]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(hiwater_vm),exp[grammar(record_ptr),exp:ident(mm),ident(hiwater_vm)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(hiwater_vm),exp[grammar(record_ptr),exp:ident(mm),ident(hiwater_vm)]]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(hiwater_rss),exp[grammar(assign),simple_assi(=),exp:ident(total_rss),exp[grammar(call),exp:ident(get_mm_rss),exp:ident(mm)]]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(hiwater_rss),exp[grammar(record_ptr),exp:ident(mm),ident(hiwater_rss)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(hiwater_rss),exp[grammar(record_ptr),exp:ident(mm),ident(hiwater_rss)]]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(data),exp[grammar(binary_arith),aop(-),exp[grammar(binary_arith),aop(-),exp[grammar(record_ptr),exp:ident(mm),ident(total_vm)],exp[grammar(record_ptr),exp:ident(mm),ident(shared_vm)]],exp[grammar(record_ptr),exp:ident(mm),ident(stack_vm)]]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(text),exp[grammar(binary_arith),aop(>>),exp[grammar(binary_arith),aop(-),exp[grammar(call),exp:ident(PAGE_ALIGN),exp[grammar(record_ptr),exp:ident(mm),ident(end_code)]],exp[grammar(binary_arith),aop(&),exp[grammar(record_ptr),exp:ident(mm),ident(start_code)],exp:ident(PAGE_MASK)]],exp:const:int(10)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(lib),exp[grammar(binary_arith),aop(-),exp[grammar(binary_arith),aop(<<),exp[grammar(record_ptr),exp:ident(mm),ident(exec_vm)],exp[grammar(binary_arith),aop(-),exp:ident(PAGE_SHIFT),exp:const:int(10)]],exp:ident(text)]]],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:other(N/H),exp[grammar(binary_arith),aop(<<),exp:ident(hiwater_vm),exp[grammar(binary_arith),aop(-),exp:ident(PAGE_SHIFT),exp:const:int(10)]],exp[grammar(binary_arith),aop(<<),exp[grammar(binary_arith),aop(-),exp:ident(total_vm),exp[grammar(record_ptr),exp:ident(mm),ident(reserved_vm)]],exp[grammar(binary_arith),aop(-),exp:ident(PAGE_SHIFT),exp:const:int(10)]],exp[grammar(binary_arith),aop(<<),exp[grammar(record_ptr),exp:ident(mm),ident(locked_vm)],exp[grammar(binary_arith),aop(-),exp:ident(PAGE_SHIFT),exp:const:int(10)]],exp[grammar(binary_arith),aop(<<),exp:ident(hiwater_rss),exp[grammar(binary_arith),aop(-),exp:ident(PAGE_SHIFT),exp:const:int(10)]],exp[grammar(binary_arith),aop(<<),exp:ident(total_rss),exp[grammar(binary_arith),aop(-),exp:ident(PAGE_SHIFT),exp:const:int(10)]],exp[grammar(binary_arith),aop(<<),exp:ident(data),exp[grammar(binary_arith),aop(-),exp:ident(PAGE_SHIFT),exp:const:int(10)]],exp[grammar(binary_arith),aop(<<),exp[grammar(record_ptr),exp:ident(mm),ident(stack_vm)],exp[grammar(binary_arith),aop(-),exp:ident(PAGE_SHIFT),exp:const:int(10)]],exp:ident(text),exp:ident(lib),exp[grammar(binary_arith),aop(>>),exp[grammar(binary_arith),aop(*),exp[grammar(binary_arith),aop(*),exp:ident(PTRS_PER_PTE),exp[grammar(sizeoftype),grammar(fulltype),typec(N/H)]],exp[grammar(record_ptr),exp:ident(mm),ident(nr_ptes)]],exp:const:int(10)]]]]],def[fname(task_vsize),funtype[fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]],param[reg(),name(mm),fulltype[typec(N/H)]]],{}stmt[st_return[exp[grammar(binary_arith),aop(*),exp:ident(PAGE_SIZE),exp[grammar(record_ptr),exp:ident(mm),ident(total_vm)]]]]],def[fname(task_statm),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(mm),fulltype[typec(N/H)]],param[reg(),name(shared),fulltype[typec(N/H)]],param[reg(),name(text),fulltype[typec(N/H)]],param[reg(),name(data),fulltype[typec(N/H)]],param[reg(),name(resident),fulltype[typec(N/H)]]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(shared),exp[grammar(call),exp:ident(get_mm_counter),exp:ident(mm),exp:ident(file_rss)]]],estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(text),exp[grammar(binary_arith),aop(>>),exp[grammar(binary_arith),aop(-),exp[grammar(call),exp:ident(PAGE_ALIGN),exp[grammar(record_ptr),exp:ident(mm),ident(end_code)]],exp[grammar(binary_arith),aop(&),exp[grammar(record_ptr),exp:ident(mm),ident(start_code)],exp:ident(PAGE_MASK)]],exp:ident(PAGE_SHIFT)]]],estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(data),exp[grammar(binary_arith),aop(-),exp[grammar(record_ptr),exp:ident(mm),ident(total_vm)],exp[grammar(record_ptr),exp:ident(mm),ident(shared_vm)]]]],estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(resident),exp[grammar(binary_arith),aop(+),exp:*ref:exp:ident(shared),exp[grammar(call),exp:ident(get_mm_counter),exp:ident(mm),exp:ident(anon_rss)]]]],st_return[exp[grammar(record_ptr),exp:ident(mm),ident(total_vm)]]]],def[fname(proc_exe_link),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(inode),fulltype[typec(N/H)]],param[reg(),name(path),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),sel_if[exp:ident(task),{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(mm),exp[grammar(call),exp:ident(get_task_mm),exp:ident(task)]]],estmt[exp[grammar(call),exp:ident(put_task_struct),exp:ident(task)]]],estmt(NONE)],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(down_read),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(mm),ident(mmap_sem)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(vma),exp[grammar(record_ptr),exp:ident(mm),ident(mmap)]]],while[exp:ident(vma),{}stmt[sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_arith),aop(&),exp[grammar(record_ptr),exp:ident(vma),ident(vm_flags)],exp:ident(VM_EXECUTABLE)],exp[grammar(record_ptr),exp:ident(vma),ident(vm_file)]],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(vma),exp[grammar(record_ptr),exp:ident(vma),ident(vm_next)]]]]],sel_if[exp:ident(vma),{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(path),exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(vma),ident(vm_file)],ident(f_path)]]],estmt[exp[grammar(call),exp:ident(path_get),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp[grammar(record_ptr),exp:ident(vma),ident(vm_file)],ident(f_path)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(result),exp:const:int(0)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(up_read),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(mm),ident(mmap_sem)]]],estmt[exp[grammar(call),exp:ident(mmput),exp:ident(mm)]],statem(N/H)]],def[fname(pad_len_spaces),funtype[fulltype[ctype[btype(void)]],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(len),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(len),exp[grammar(binary_arith),aop(-),exp[grammar(binary_arith),aop(+),exp:const:int(25),exp[grammar(binary_arith),aop(*),exp[grammar(sizeoftype),grammar(fulltype),typec(N/H)],exp:const:int(6)]],exp:ident(len)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(len),exp:const:int(1)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(len),exp:const:int(1)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(%*c),exp:ident(len),exp:const:other(N/H)]]]],def[fname(vma_stop),funtype[fulltype[ctype[btype(void)]],param[reg(),name(priv),fulltype[typec(N/H)]],param[reg(),name(vma),fulltype[typec(N/H)]]],{}stmt[sel_if[exp[grammar(binary_logi),logiop(and),exp:ident(vma),exp[grammar(binary_logi),logiop(??),exp:ident(vma),exp[grammar(record_ptr),exp:ident(priv),ident(tail_vma)]]],{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(up_read),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(mm),ident(mmap_sem)]]],estmt[exp[grammar(call),exp:ident(mmput),exp:ident(mm)]]],estmt(NONE)]]],def[fname(m_start),funtype[fulltype[typec(N/H)],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(pos),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(priv),ident(task)],exp:ident(NULL)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(priv),ident(tail_vma)],exp:ident(NULL)]],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(last_addr),exp:??(N/H)],st_return[exp:ident(NULL)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(priv),ident(task)],exp[grammar(call),exp:ident(get_pid_task),exp[grammar(record_ptr),exp:ident(priv),ident(pid)],exp:ident(PIDTYPE_PID)]]],sel_if[exp:??(N/H),st_return[exp:ident(NULL)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(mm),exp[grammar(call),exp:ident(mm_for_maps),exp[grammar(record_ptr),exp:ident(priv),ident(task)]]]],sel_if[exp:??(N/H),st_return[exp:ident(NULL)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(tail_vma),exp[grammar(call),exp:ident(get_gate_vma),exp[grammar(record_ptr),exp:ident(priv),ident(task)]]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(priv),ident(tail_vma)],exp:ident(tail_vma)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(vma),exp[grammar(call),exp:ident(find_vma),exp:ident(mm),exp:ident(last_addr)]]],sel_if[exp[grammar(binary_logi),logiop(and),exp:ident(last_addr),exp:ident(vma)],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(vma),exp[grammar(record_ptr),exp:ident(vma),ident(vm_next)]]],statem(N/H)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(vma),exp:ident(NULL)]],sel_if[exp[grammar(binary_logi),logiop(??),exp:??(N/H),exp[grammar(record_ptr),exp:ident(mm),ident(map_count)]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(vma),exp[grammar(record_ptr),exp:ident(mm),ident(mmap)]]],while[exp[grammar(binary_logi),logiop(and),exp:??(N/H),exp:ident(vma)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(vma),exp[grammar(record_ptr),exp:ident(vma),ident(vm_next)]]]],statem(N/H)],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(l),exp[grammar(record_ptr),exp:ident(mm),ident(map_count)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(tail_vma),exp:ident(NULL)]],estmt(NONE)],statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(m),ident(version)],exp[grammar(cond3),exp[grammar(binary_logi),logiop(??),exp:ident(tail_vma),exp:ident(NULL)],exp:const:int(0),exp:??(N/H)]]],estmt[exp[grammar(call),exp:ident(up_read),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(mm),ident(mmap_sem)]]],estmt[exp[grammar(call),exp:ident(mmput),exp:ident(mm)]],st_return[exp:ident(tail_vma)]]],def[fname(m_next),funtype[fulltype[typec(N/H)],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(v),fulltype[typec(N/H)]],param[reg(),name(pos),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp:??(N/H)],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(and),exp:ident(vma),exp[grammar(binary_logi),logiop(??),exp:ident(vma),exp:ident(tail_vma)]],exp[grammar(record_ptr),exp:ident(vma),ident(vm_next)]],st_return[exp[grammar(record_ptr),exp:ident(vma),ident(vm_next)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(vma_stop),exp:ident(priv),exp:ident(vma)]],st_return[exp[grammar(cond3),exp[grammar(binary_logi),logiop(??),exp:ident(vma),exp:ident(tail_vma)],exp:ident(tail_vma),exp:ident(NULL)]]]],def[fname(m_stop),funtype[fulltype[ctype[btype(void)]],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(v),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(vma_stop),exp:ident(priv),exp:ident(vma)]],sel_if[exp[grammar(record_ptr),exp:ident(priv),ident(task)],estmt[exp[grammar(call),exp:ident(put_task_struct),exp[grammar(record_ptr),exp:ident(priv),ident(task)]]],estmt(NONE)]]],def[fname(do_maps_open),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(inode),fulltype[typec(N/H)]],param[reg(),name(file),fulltype[typec(N/H)]],param[reg(),name(ops),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(priv),exp[grammar(call),exp:ident(kzalloc),exp:sizeof:exp:*ref:exp:ident(priv),exp:ident(GFP_KERNEL)]]],sel_if[exp:ident(priv),{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(priv),ident(pid)],exp[grammar(call),exp:ident(proc_pid),exp:ident(inode)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ret),exp[grammar(call),exp:ident(seq_open),exp:ident(file),exp:ident(ops)]]],sel_if[exp:??(N/H),{}stmt[statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(m),ident(private)],exp:ident(priv)]]],{}stmt[estmt[exp[grammar(call),exp:ident(kfree),exp:ident(priv)]]]]],estmt(NONE)],st_return[exp:ident(ret)]]],def[fname(show_map),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(v),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),sel_if[exp[grammar(binary_logi),logiop(and),exp:ident(maps_protect),exp:??(N/H)],st_return[exp:??(N/H)],estmt(NONE)],sel_if[exp:ident(file),{}stmt[statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(dev),exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(inode),ident(i_sb)],ident(s_dev)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ino),exp[grammar(record_ptr),exp:ident(inode),ident(i_ino)]]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(%08lx-%08lx %c%c%c%c %08lx %02x:%02x %lu %n),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp[grammar(cond3),exp[grammar(binary_arith),aop(&),exp:ident(flags),exp:ident(VM_READ)],exp:const:other(N/H),exp:const:other(N/H)],exp[grammar(cond3),exp[grammar(binary_arith),aop(&),exp:ident(flags),exp:ident(VM_WRITE)],exp:const:other(N/H),exp:const:other(N/H)],exp[grammar(cond3),exp[grammar(binary_arith),aop(&),exp:ident(flags),exp:ident(VM_EXEC)],exp:const:other(N/H),exp:const:other(N/H)],exp[grammar(cond3),exp[grammar(binary_arith),aop(&),exp:ident(flags),exp:ident(VM_MAYSHARE)],exp:const:other(N/H),exp:const:other(N/H)],exp[grammar(binary_arith),aop(<<),exp[grammar(record_ptr),exp:ident(vma),ident(vm_pgoff)],exp:ident(PAGE_SHIFT)],exp[grammar(call),exp:ident(MAJOR),exp:ident(dev)],exp[grammar(call),exp:ident(MINOR),exp:ident(dev)],exp:ident(ino),exp:&ref:exp:ident(len)]],sel_if[exp:ident(file),{}stmt[estmt[exp[grammar(call),exp:ident(pad_len_spaces),exp:ident(m),exp:ident(len)]],estmt[exp[grammar(call),exp:ident(seq_path),exp:ident(m),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(file),ident(f_path)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(file),ident(f_path)],ident(dentry)],exp:const:string(\n)]]],{}stmt[statem(N/H),sel_if[exp:??(N/H),{}stmt[sel_if[exp:ident(mm),{}stmt[sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp[grammar(record_ptr),exp:ident(mm),ident(start_brk)]],exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp[grammar(record_ptr),exp:ident(mm),ident(brk)]]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(name),exp:const:string([heap])]]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp[grammar(record_ptr),exp:ident(mm),ident(start_stack)]],exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp[grammar(record_ptr),exp:ident(mm),ident(start_stack)]]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(name),exp:const:string([stack])]]],estmt(NONE)]]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(name),exp:const:string([vdso])]]]]],estmt(NONE)],sel_if[exp:ident(name),{}stmt[estmt[exp[grammar(call),exp:ident(pad_len_spaces),exp:ident(m),exp:ident(len)]],estmt[exp[grammar(call),exp:ident(seq_puts),exp:ident(m),exp:ident(name)]]],estmt(NONE)]]],estmt[exp[grammar(call),exp:ident(seq_putc),exp:ident(m),exp:const:other(N/H)]],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(m),ident(count)],exp[grammar(record_ptr),exp:ident(m),ident(size)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(m),ident(version)],exp[grammar(cond3),exp[grammar(binary_logi),logiop(??),exp:ident(vma),exp[grammar(call),exp:ident(get_gate_vma),exp:ident(task)]],exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp:const:int(0)]]],estmt(NONE)],st_return[exp:const:int(0)]]],decl(N/H),def[fname(maps_open),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(inode),fulltype[typec(N/H)]],param[reg(),name(file),fulltype[typec(N/H)]]],{}stmt[st_return[exp[grammar(call),exp:ident(do_maps_open),exp:ident(inode),exp:ident(file),exp:&ref:exp:ident(proc_pid_maps_op)]]]],decl(N/H),define(N/H),decl(N/H),def[fname(smaps_pte_range),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(pmd),fulltype[typec(N/H)]],param[reg(),name(addr),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(end),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(private),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(pte),exp[grammar(call),exp:ident(pte_offset_map_lock),exp[grammar(record_ptr),exp:ident(vma),ident(vm_mm)],exp:ident(pmd),exp:ident(addr),exp:&ref:exp:ident(ptl)]]],for[expr(NONE),exp[grammar(binary_logi),logiop(??),exp:ident(addr),exp:ident(end)],exp:??(N/H),{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(ptent),exp:*ref:exp:ident(pte)]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),op_assi(+=),exp[grammar(record_ptr),exp:ident(mss),ident(resident)],exp:ident(PAGE_SIZE)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(page),exp[grammar(call),exp:ident(vm_normal_page),exp:ident(vma),exp:ident(addr),exp:ident(ptent)]]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(or),exp[grammar(call),exp:ident(pte_young),exp:ident(ptent)],exp[grammar(call),exp:ident(PageReferenced),exp:ident(page)]],estmt[exp[grammar(assign),op_assi(+=),exp[grammar(record_ptr),exp:ident(mss),ident(referenced)],exp:ident(PAGE_SIZE)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(mapcount),exp[grammar(call),exp:ident(page_mapcount),exp:ident(page)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(mapcount),exp:const:int(2)],{}stmt[sel_if[exp[grammar(call),exp:ident(pte_dirty),exp:ident(ptent)],estmt[exp[grammar(assign),op_assi(+=),exp[grammar(record_ptr),exp:ident(mss),ident(shared_dirty)],exp:ident(PAGE_SIZE)]],estmt[exp[grammar(assign),op_assi(+=),exp[grammar(record_ptr),exp:ident(mss),ident(shared_clean)],exp:ident(PAGE_SIZE)]]],estmt[exp[grammar(assign),op_assi(+=),exp[grammar(record_ptr),exp:ident(mss),ident(pss)],exp[grammar(binary_arith),aop(/),exp[grammar(binary_arith),aop(<<),exp:ident(PAGE_SIZE),exp:ident(PSS_SHIFT)],exp:ident(mapcount)]]]],{}stmt[sel_if[exp[grammar(call),exp:ident(pte_dirty),exp:ident(ptent)],estmt[exp[grammar(assign),op_assi(+=),exp[grammar(record_ptr),exp:ident(mss),ident(private_dirty)],exp:ident(PAGE_SIZE)]],estmt[exp[grammar(assign),op_assi(+=),exp[grammar(record_ptr),exp:ident(mss),ident(private_clean)],exp:ident(PAGE_SIZE)]]],estmt[exp[grammar(assign),op_assi(+=),exp[grammar(record_ptr),exp:ident(mss),ident(pss)],exp[grammar(binary_arith),aop(<<),exp:ident(PAGE_SIZE),exp:ident(PSS_SHIFT)]]]]]]],estmt[exp[grammar(call),exp:ident(pte_unmap_unlock),exp[grammar(binary_arith),aop(-),exp:ident(pte),exp:const:int(1)],exp:ident(ptl)]],estmt[exp[grammar(call),exp:ident(cond_resched)]],st_return[exp:const:int(0)]]],decl(N/H),def[fname(show_smap),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(v),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(memset),exp:&ref:exp:ident(mss),exp:const:int(0),exp:sizeof:exp:ident(mss)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(mss),ident(vma)],exp:ident(vma)]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(record_ptr),exp:ident(vma),ident(vm_mm)],exp:??(N/H)],estmt[exp[grammar(call),exp:ident(walk_page_range),exp[grammar(record_ptr),exp:ident(vma),ident(vm_mm)],exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp:&ref:exp:ident(smaps_walk),exp:&ref:exp:ident(mss)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ret),exp[grammar(call),exp:ident(show_map),exp:ident(m),exp:ident(v)]]],sel_if[exp:ident(ret),st_return[exp:ident(ret)],estmt(NONE)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:other(N/H),exp[grammar(binary_arith),aop(>>),exp[grammar(binary_arith),aop(-),exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)]],exp:const:int(10)],exp[grammar(binary_arith),aop(>>),exp[grammar(record_acc),exp:ident(mss),ident(resident)],exp:const:int(10)],exp:??(N/H),exp[grammar(binary_arith),aop(>>),exp[grammar(record_acc),exp:ident(mss),ident(shared_clean)],exp:const:int(10)],exp[grammar(binary_arith),aop(>>),exp[grammar(record_acc),exp:ident(mss),ident(shared_dirty)],exp:const:int(10)],exp[grammar(binary_arith),aop(>>),exp[grammar(record_acc),exp:ident(mss),ident(private_clean)],exp:const:int(10)],exp[grammar(binary_arith),aop(>>),exp[grammar(record_acc),exp:ident(mss),ident(private_dirty)],exp:const:int(10)],exp[grammar(binary_arith),aop(>>),exp[grammar(record_acc),exp:ident(mss),ident(referenced)],exp:const:int(10)]]],st_return[exp:ident(ret)]]],decl(N/H),def[fname(smaps_open),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(inode),fulltype[typec(N/H)]],param[reg(),name(file),fulltype[typec(N/H)]]],{}stmt[st_return[exp[grammar(call),exp:ident(do_maps_open),exp:ident(inode),exp:ident(file),exp:&ref:exp:ident(proc_pid_smaps_op)]]]],decl(N/H),def[fname(clear_refs_pte_range),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(pmd),fulltype[typec(N/H)]],param[reg(),name(addr),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(end),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(private),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(pte),exp[grammar(call),exp:ident(pte_offset_map_lock),exp[grammar(record_ptr),exp:ident(vma),ident(vm_mm)],exp:ident(pmd),exp:ident(addr),exp:&ref:exp:ident(ptl)]]],for[expr(NONE),exp[grammar(binary_logi),logiop(??),exp:ident(addr),exp:ident(end)],exp:??(N/H),{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(ptent),exp:*ref:exp:ident(pte)]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(page),exp[grammar(call),exp:ident(vm_normal_page),exp:ident(vma),exp:ident(addr),exp:ident(ptent)]]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(ptep_test_and_clear_young),exp:ident(vma),exp:ident(addr),exp:ident(pte)]],estmt[exp[grammar(call),exp:ident(ClearPageReferenced),exp:ident(page)]]]],estmt[exp[grammar(call),exp:ident(pte_unmap_unlock),exp[grammar(binary_arith),aop(-),exp:ident(pte),exp:const:int(1)],exp:ident(ptl)]],estmt[exp[grammar(call),exp:ident(cond_resched)]],st_return[exp:const:int(0)]]],decl(N/H),NCP(N/H),decl(N/H),NCP(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),def[fname(add_to_pagemap),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(addr),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(pfn),fulltype[typec(N/H)]],param[reg(),name(pm),fulltype[typec(N/H)]]],{}stmt[sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(binary_arith),aop(+),exp[grammar(record_ptr),exp:ident(pm),ident(out)],exp:ident(PM_ENTRY_BYTES)],exp[grammar(record_ptr),exp:ident(pm),ident(end)]],{}stmt[sel_if[exp[grammar(call),exp:ident(copy_to_user),exp[grammar(record_ptr),exp:ident(pm),ident(out)],exp:&ref:exp:ident(pfn),exp[grammar(binary_arith),aop(-),exp[grammar(record_ptr),exp:ident(pm),ident(end)],exp[grammar(record_ptr),exp:ident(pm),ident(out)]]],st_return[exp:??(N/H)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(pm),ident(out)],exp[grammar(record_ptr),exp:ident(pm),ident(end)]]],st_return[exp:ident(PM_END_OF_BUFFER)]],estmt(NONE)],sel_if[exp[grammar(call),exp:ident(put_user),exp:ident(pfn),exp[grammar(record_ptr),exp:ident(pm),ident(out)]],st_return[exp:??(N/H)],estmt(NONE)],estmt[exp[grammar(assign),op_assi(+=),exp[grammar(record_ptr),exp:ident(pm),ident(out)],exp:ident(PM_ENTRY_BYTES)]],st_return[exp:const:int(0)]]],def[fname(pagemap_pte_hole),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(start),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(end),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(private),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),for[exp[grammar(assign),simple_assi(=),exp:ident(addr),exp:ident(start)],exp[grammar(binary_logi),logiop(??),exp:ident(addr),exp:ident(end)],exp[grammar(assign),op_assi(+=),exp:ident(addr),exp:ident(PAGE_SIZE)],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(add_to_pagemap),exp:ident(addr),exp:ident(PM_NOT_PRESENT),exp:ident(pm)]]],sel_if[exp:ident(err),statem(N/H),estmt(NONE)]]],st_return[exp:ident(err)]]],def[fname(swap_pte_to_pagemap_entry),funtype[fulltype[typec(N/H)],param[reg(),name(pte),fulltype[typec(N/H)]]],{}stmt[statem(N/H),st_return[exp[grammar(binary_arith),aop(|),exp[grammar(binary_arith),aop(|),exp:ident(PM_SWAP),exp[grammar(call),exp:ident(swp_type),exp:ident(e)]],exp[grammar(binary_arith),aop(<<),exp[grammar(call),exp:ident(swp_offset),exp:ident(e)],exp:ident(MAX_SWAPFILES_SHIFT)]]]]],def[fname(pagemap_pte_range),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(pmd),fulltype[typec(N/H)]],param[reg(),name(addr),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(end),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(private),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),for[expr(NONE),exp[grammar(binary_logi),logiop(??),exp:ident(addr),exp:ident(end)],exp[grammar(assign),op_assi(+=),exp:ident(addr),exp:ident(PAGE_SIZE)],{}stmt[statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(pte),exp[grammar(call),exp:ident(pte_offset_map),exp:ident(pmd),exp:ident(addr)]]],sel_if[exp[grammar(call),exp:ident(is_swap_pte),exp:*ref:exp:ident(pte)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(pfn),exp[grammar(call),exp:ident(swap_pte_to_pagemap_entry),exp:*ref:exp:ident(pte)]]],sel_if[exp[grammar(call),exp:ident(pte_present),exp:*ref:exp:ident(pte)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(pfn),exp[grammar(call),exp:ident(pte_pfn),exp:*ref:exp:ident(pte)]]],estmt(NONE)]],estmt[exp[grammar(call),exp:ident(pte_unmap),exp:ident(pte)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(add_to_pagemap),exp:ident(addr),exp:ident(pfn),exp:ident(pm)]]],sel_if[exp:ident(err),st_return[exp:ident(err)],estmt(NONE)]]],estmt[exp[grammar(call),exp:ident(cond_resched)]],st_return[exp:ident(err)]]],decl(N/H),NCP(N/H),decl(N/H),decl(N/H),def[fname(show_numa_map_checked),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(v),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp[grammar(binary_logi),logiop(and),exp:ident(maps_protect),exp:??(N/H)],st_return[exp:??(N/H)],estmt(NONE)],st_return[exp[grammar(call),exp:ident(show_numa_map),exp:ident(m),exp:ident(v)]]]],decl(N/H),def[fname(numa_maps_open),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(inode),fulltype[typec(N/H)]],param[reg(),name(file),fulltype[typec(N/H)]]],{}stmt[st_return[exp[grammar(call),exp:ident(do_maps_open),exp:ident(inode),exp:ident(file),exp:&ref:exp:ident(proc_pid_numa_maps_op)]]]],decl(N/H)] ==> prg2[includeN[inc_elem(linux),inc_elem(mm.h)],includeN[inc_elem(linux),inc_elem(hugetlb.h)],includeN[inc_elem(linux),inc_elem(mount.h)],includeN[inc_elem(linux),inc_elem(seq_file.h)],includeN[inc_elem(linux),inc_elem(highmem.h)],includeN[inc_elem(linux),inc_elem(ptrace.h)],includeN[inc_elem(linux),inc_elem(pagemap.h)],includeN[inc_elem(linux),inc_elem(ptrace.h)],includeN[inc_elem(linux),inc_elem(mempolicy.h)],includeN[inc_elem(linux),inc_elem(swap.h)],includeN[inc_elem(linux),inc_elem(swapops.h)],includeN[inc_elem(linux),inc_elem(seq_file.h)],includeN[inc_elem(asm),inc_elem(elf.h)],includeN[inc_elem(asm),inc_elem(uaccess.h)],includeN[inc_elem(asm),inc_elem(tlbflush.h)],includeL[inc_elem(internal.h)],def[fname(task_mem),funtype[fulltype[ctype[btype(void)]],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(mm),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(hiwater_vm),exp[grammar(assign),simple_assi(=),exp:ident(total_vm),exp[grammar(record_ptr),exp:ident(mm),ident(total_vm)]]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(hiwater_vm),exp[grammar(record_ptr),exp:ident(mm),ident(hiwater_vm)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(hiwater_vm),exp[grammar(record_ptr),exp:ident(mm),ident(hiwater_vm)]]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(hiwater_rss),exp[grammar(assign),simple_assi(=),exp:ident(total_rss),exp[grammar(call),exp:ident(get_mm_rss),exp:ident(mm)]]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(hiwater_rss),exp[grammar(record_ptr),exp:ident(mm),ident(hiwater_rss)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(hiwater_rss),exp[grammar(record_ptr),exp:ident(mm),ident(hiwater_rss)]]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(data),exp[grammar(binary_arith),aop(-),exp[grammar(binary_arith),aop(-),exp[grammar(record_ptr),exp:ident(mm),ident(total_vm)],exp[grammar(record_ptr),exp:ident(mm),ident(shared_vm)]],exp[grammar(record_ptr),exp:ident(mm),ident(stack_vm)]]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(text),exp[grammar(binary_arith),aop(>>),exp[grammar(binary_arith),aop(-),exp[grammar(call),exp:ident(PAGE_ALIGN),exp[grammar(record_ptr),exp:ident(mm),ident(end_code)]],exp[grammar(binary_arith),aop(&),exp[grammar(record_ptr),exp:ident(mm),ident(start_code)],exp:ident(PAGE_MASK)]],exp:const:int(10)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(lib),exp[grammar(binary_arith),aop(-),exp[grammar(binary_arith),aop(<<),exp[grammar(record_ptr),exp:ident(mm),ident(exec_vm)],exp[grammar(binary_arith),aop(-),exp:ident(PAGE_SHIFT),exp:const:int(10)]],exp:ident(text)]]],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:other(N/H),exp[grammar(binary_arith),aop(<<),exp:ident(hiwater_vm),exp[grammar(binary_arith),aop(-),exp:ident(PAGE_SHIFT),exp:const:int(10)]],exp[grammar(binary_arith),aop(<<),exp[grammar(binary_arith),aop(-),exp:ident(total_vm),exp[grammar(record_ptr),exp:ident(mm),ident(reserved_vm)]],exp[grammar(binary_arith),aop(-),exp:ident(PAGE_SHIFT),exp:const:int(10)]],exp[grammar(binary_arith),aop(<<),exp[grammar(record_ptr),exp:ident(mm),ident(locked_vm)],exp[grammar(binary_arith),aop(-),exp:ident(PAGE_SHIFT),exp:const:int(10)]],exp[grammar(binary_arith),aop(<<),exp:ident(hiwater_rss),exp[grammar(binary_arith),aop(-),exp:ident(PAGE_SHIFT),exp:const:int(10)]],exp[grammar(binary_arith),aop(<<),exp:ident(total_rss),exp[grammar(binary_arith),aop(-),exp:ident(PAGE_SHIFT),exp:const:int(10)]],exp[grammar(binary_arith),aop(<<),exp:ident(data),exp[grammar(binary_arith),aop(-),exp:ident(PAGE_SHIFT),exp:const:int(10)]],exp[grammar(binary_arith),aop(<<),exp[grammar(record_ptr),exp:ident(mm),ident(stack_vm)],exp[grammar(binary_arith),aop(-),exp:ident(PAGE_SHIFT),exp:const:int(10)]],exp:ident(text),exp:ident(lib),exp[grammar(binary_arith),aop(>>),exp[grammar(binary_arith),aop(*),exp[grammar(binary_arith),aop(*),exp:ident(PTRS_PER_PTE),exp[grammar(sizeoftype),grammar(fulltype),typec(N/H)]],exp[grammar(record_ptr),exp:ident(mm),ident(nr_ptes)]],exp:const:int(10)]]]]],def[fname(task_vsize),funtype[fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]],param[reg(),name(mm),fulltype[typec(N/H)]]],{}stmt[st_return[exp[grammar(binary_arith),aop(*),exp:ident(PAGE_SIZE),exp[grammar(record_ptr),exp:ident(mm),ident(total_vm)]]]]],def[fname(task_statm),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(mm),fulltype[typec(N/H)]],param[reg(),name(shared),fulltype[typec(N/H)]],param[reg(),name(text),fulltype[typec(N/H)]],param[reg(),name(data),fulltype[typec(N/H)]],param[reg(),name(resident),fulltype[typec(N/H)]]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(shared),exp[grammar(call),exp:ident(get_mm_counter),exp:ident(mm),exp:ident(file_rss)]]],estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(text),exp[grammar(binary_arith),aop(>>),exp[grammar(binary_arith),aop(-),exp[grammar(call),exp:ident(PAGE_ALIGN),exp[grammar(record_ptr),exp:ident(mm),ident(end_code)]],exp[grammar(binary_arith),aop(&),exp[grammar(record_ptr),exp:ident(mm),ident(start_code)],exp:ident(PAGE_MASK)]],exp:ident(PAGE_SHIFT)]]],estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(data),exp[grammar(binary_arith),aop(-),exp[grammar(record_ptr),exp:ident(mm),ident(total_vm)],exp[grammar(record_ptr),exp:ident(mm),ident(shared_vm)]]]],estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(resident),exp[grammar(binary_arith),aop(+),exp:*ref:exp:ident(shared),exp[grammar(call),exp:ident(get_mm_counter),exp:ident(mm),exp:ident(anon_rss)]]]],st_return[exp[grammar(record_ptr),exp:ident(mm),ident(total_vm)]]]],def[fname(proc_exe_link),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(inode),fulltype[typec(N/H)]],param[reg(),name(path),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),sel_if[exp:ident(task),{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(mm),exp[grammar(call),exp:ident(get_task_mm),exp:ident(task)]]],estmt[exp[grammar(call),exp:ident(put_task_struct),exp:ident(task)]]],estmt(NONE)],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(down_read),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(mm),ident(mmap_sem)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(vma),exp[grammar(record_ptr),exp:ident(mm),ident(mmap)]]],while[exp:ident(vma),{}stmt[sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_arith),aop(&),exp[grammar(record_ptr),exp:ident(vma),ident(vm_flags)],exp:ident(VM_EXECUTABLE)],exp[grammar(record_ptr),exp:ident(vma),ident(vm_file)]],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(vma),exp[grammar(record_ptr),exp:ident(vma),ident(vm_next)]]]]],sel_if[exp:ident(vma),{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:*ref:exp:ident(path),exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(vma),ident(vm_file)],ident(f_path)]]],estmt[exp[grammar(call),exp:ident(path_get),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp[grammar(record_ptr),exp:ident(vma),ident(vm_file)],ident(f_path)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(result),exp:const:int(0)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(up_read),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(mm),ident(mmap_sem)]]],estmt[exp[grammar(call),exp:ident(mmput),exp:ident(mm)]],statem(N/H)]],def[fname(pad_len_spaces),funtype[fulltype[ctype[btype(void)]],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(len),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(len),exp[grammar(binary_arith),aop(-),exp[grammar(binary_arith),aop(+),exp:const:int(25),exp[grammar(binary_arith),aop(*),exp[grammar(sizeoftype),grammar(fulltype),typec(N/H)],exp:const:int(6)]],exp:ident(len)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(len),exp:const:int(1)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(len),exp:const:int(1)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(%*c),exp:ident(len),exp:const:other(N/H)]]]],def[fname(vma_stop),funtype[fulltype[ctype[btype(void)]],param[reg(),name(priv),fulltype[typec(N/H)]],param[reg(),name(vma),fulltype[typec(N/H)]]],{}stmt[sel_if[exp[grammar(binary_logi),logiop(and),exp:ident(vma),exp[grammar(binary_logi),logiop(??),exp:ident(vma),exp[grammar(record_ptr),exp:ident(priv),ident(tail_vma)]]],{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(up_read),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(mm),ident(mmap_sem)]]],estmt[exp[grammar(call),exp:ident(mmput),exp:ident(mm)]]],estmt(NONE)]]],def[fname(m_start),funtype[fulltype[typec(N/H)],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(pos),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(priv),ident(task)],exp:ident(NULL)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(priv),ident(tail_vma)],exp:ident(NULL)]],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(last_addr),exp:??(N/H)],st_return[exp:ident(NULL)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(priv),ident(task)],exp[grammar(call),exp:ident(get_pid_task),exp[grammar(record_ptr),exp:ident(priv),ident(pid)],exp:ident(PIDTYPE_PID)]]],sel_if[exp:??(N/H),st_return[exp:ident(NULL)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(mm),exp[grammar(call),exp:ident(mm_for_maps),exp[grammar(record_ptr),exp:ident(priv),ident(task)]]]],sel_if[exp:??(N/H),st_return[exp:ident(NULL)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(tail_vma),exp[grammar(call),exp:ident(get_gate_vma),exp[grammar(record_ptr),exp:ident(priv),ident(task)]]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(priv),ident(tail_vma)],exp:ident(tail_vma)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(vma),exp[grammar(call),exp:ident(find_vma),exp:ident(mm),exp:ident(last_addr)]]],sel_if[exp[grammar(binary_logi),logiop(and),exp:ident(last_addr),exp:ident(vma)],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(vma),exp[grammar(record_ptr),exp:ident(vma),ident(vm_next)]]],statem(N/H)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(vma),exp:ident(NULL)]],sel_if[exp[grammar(binary_logi),logiop(??),exp:??(N/H),exp[grammar(record_ptr),exp:ident(mm),ident(map_count)]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(vma),exp[grammar(record_ptr),exp:ident(mm),ident(mmap)]]],while[exp[grammar(binary_logi),logiop(and),exp:??(N/H),exp:ident(vma)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(vma),exp[grammar(record_ptr),exp:ident(vma),ident(vm_next)]]]],statem(N/H)],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(l),exp[grammar(record_ptr),exp:ident(mm),ident(map_count)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(tail_vma),exp:ident(NULL)]],estmt(NONE)],statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(m),ident(version)],exp[grammar(cond3),exp[grammar(binary_logi),logiop(??),exp:ident(tail_vma),exp:ident(NULL)],exp:const:int(0),exp:??(N/H)]]],estmt[exp[grammar(call),exp:ident(up_read),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(mm),ident(mmap_sem)]]],estmt[exp[grammar(call),exp:ident(mmput),exp:ident(mm)]],st_return[exp:ident(tail_vma)]]],def[fname(m_next),funtype[fulltype[typec(N/H)],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(v),fulltype[typec(N/H)]],param[reg(),name(pos),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp:??(N/H)],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(and),exp:ident(vma),exp[grammar(binary_logi),logiop(??),exp:ident(vma),exp:ident(tail_vma)]],exp[grammar(record_ptr),exp:ident(vma),ident(vm_next)]],st_return[exp[grammar(record_ptr),exp:ident(vma),ident(vm_next)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(vma_stop),exp:ident(priv),exp:ident(vma)]],st_return[exp[grammar(cond3),exp[grammar(binary_logi),logiop(??),exp:ident(vma),exp:ident(tail_vma)],exp:ident(tail_vma),exp:ident(NULL)]]]],def[fname(m_stop),funtype[fulltype[ctype[btype(void)]],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(v),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(vma_stop),exp:ident(priv),exp:ident(vma)]],sel_if[exp[grammar(record_ptr),exp:ident(priv),ident(task)],estmt[exp[grammar(call),exp:ident(put_task_struct),exp[grammar(record_ptr),exp:ident(priv),ident(task)]]],estmt(NONE)]]],def[fname(do_maps_open),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(inode),fulltype[typec(N/H)]],param[reg(),name(file),fulltype[typec(N/H)]],param[reg(),name(ops),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(priv),exp[grammar(call),exp:ident(kzalloc),exp:sizeof:exp:*ref:exp:ident(priv),exp:ident(GFP_KERNEL)]]],sel_if[exp:ident(priv),{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(priv),ident(pid)],exp[grammar(call),exp:ident(proc_pid),exp:ident(inode)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ret),exp[grammar(call),exp:ident(seq_open),exp:ident(file),exp:ident(ops)]]],sel_if[exp:??(N/H),{}stmt[statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(m),ident(private)],exp:ident(priv)]]],{}stmt[estmt[exp[grammar(call),exp:ident(kfree),exp:ident(priv)]]]]],estmt(NONE)],st_return[exp:ident(ret)]]],def[fname(show_map),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(v),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),sel_if[exp[grammar(binary_logi),logiop(and),exp:ident(maps_protect),exp:??(N/H)],st_return[exp:??(N/H)],estmt(NONE)],sel_if[exp:ident(file),{}stmt[statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(dev),exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(inode),ident(i_sb)],ident(s_dev)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ino),exp[grammar(record_ptr),exp:ident(inode),ident(i_ino)]]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(%08lx-%08lx %c%c%c%c %08lx %02x:%02x %lu %n),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp[grammar(cond3),exp[grammar(binary_arith),aop(&),exp:ident(flags),exp:ident(VM_READ)],exp:const:other(N/H),exp:const:other(N/H)],exp[grammar(cond3),exp[grammar(binary_arith),aop(&),exp:ident(flags),exp:ident(VM_WRITE)],exp:const:other(N/H),exp:const:other(N/H)],exp[grammar(cond3),exp[grammar(binary_arith),aop(&),exp:ident(flags),exp:ident(VM_EXEC)],exp:const:other(N/H),exp:const:other(N/H)],exp[grammar(cond3),exp[grammar(binary_arith),aop(&),exp:ident(flags),exp:ident(VM_MAYSHARE)],exp:const:other(N/H),exp:const:other(N/H)],exp[grammar(binary_arith),aop(<<),exp[grammar(record_ptr),exp:ident(vma),ident(vm_pgoff)],exp:ident(PAGE_SHIFT)],exp[grammar(call),exp:ident(MAJOR),exp:ident(dev)],exp[grammar(call),exp:ident(MINOR),exp:ident(dev)],exp:ident(ino),exp:&ref:exp:ident(len)]],sel_if[exp:ident(file),{}stmt[estmt[exp[grammar(call),exp:ident(pad_len_spaces),exp:ident(m),exp:ident(len)]],estmt[exp[grammar(call),exp:ident(seq_path),exp:ident(m),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(file),ident(f_path)],exp:const:string(\n)]]],{}stmt[statem(N/H),sel_if[exp:??(N/H),{}stmt[sel_if[exp:ident(mm),{}stmt[sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp[grammar(record_ptr),exp:ident(mm),ident(start_brk)]],exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp[grammar(record_ptr),exp:ident(mm),ident(brk)]]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(name),exp:const:string([heap])]]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp[grammar(record_ptr),exp:ident(mm),ident(start_stack)]],exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp[grammar(record_ptr),exp:ident(mm),ident(start_stack)]]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(name),exp:const:string([stack])]]],estmt(NONE)]]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(name),exp:const:string([vdso])]]]]],estmt(NONE)],sel_if[exp:ident(name),{}stmt[estmt[exp[grammar(call),exp:ident(pad_len_spaces),exp:ident(m),exp:ident(len)]],estmt[exp[grammar(call),exp:ident(seq_puts),exp:ident(m),exp:ident(name)]]],estmt(NONE)]]],estmt[exp[grammar(call),exp:ident(seq_putc),exp:ident(m),exp:const:other(N/H)]],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(m),ident(count)],exp[grammar(record_ptr),exp:ident(m),ident(size)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(m),ident(version)],exp[grammar(cond3),exp[grammar(binary_logi),logiop(??),exp:ident(vma),exp[grammar(call),exp:ident(get_gate_vma),exp:ident(task)]],exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp:const:int(0)]]],estmt(NONE)],st_return[exp:const:int(0)]]],decl(N/H),def[fname(maps_open),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(inode),fulltype[typec(N/H)]],param[reg(),name(file),fulltype[typec(N/H)]]],{}stmt[st_return[exp[grammar(call),exp:ident(do_maps_open),exp:ident(inode),exp:ident(file),exp:&ref:exp:ident(proc_pid_maps_op)]]]],decl(N/H),define(N/H),decl(N/H),def[fname(smaps_pte_range),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(pmd),fulltype[typec(N/H)]],param[reg(),name(addr),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(end),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(private),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(pte),exp[grammar(call),exp:ident(pte_offset_map_lock),exp[grammar(record_ptr),exp:ident(vma),ident(vm_mm)],exp:ident(pmd),exp:ident(addr),exp:&ref:exp:ident(ptl)]]],for[expr(NONE),exp[grammar(binary_logi),logiop(??),exp:ident(addr),exp:ident(end)],exp:??(N/H),{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(ptent),exp:*ref:exp:ident(pte)]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),op_assi(+=),exp[grammar(record_ptr),exp:ident(mss),ident(resident)],exp:ident(PAGE_SIZE)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(page),exp[grammar(call),exp:ident(vm_normal_page),exp:ident(vma),exp:ident(addr),exp:ident(ptent)]]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(or),exp[grammar(call),exp:ident(pte_young),exp:ident(ptent)],exp[grammar(call),exp:ident(PageReferenced),exp:ident(page)]],estmt[exp[grammar(assign),op_assi(+=),exp[grammar(record_ptr),exp:ident(mss),ident(referenced)],exp:ident(PAGE_SIZE)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(mapcount),exp[grammar(call),exp:ident(page_mapcount),exp:ident(page)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(mapcount),exp:const:int(2)],{}stmt[sel_if[exp[grammar(call),exp:ident(pte_dirty),exp:ident(ptent)],estmt[exp[grammar(assign),op_assi(+=),exp[grammar(record_ptr),exp:ident(mss),ident(shared_dirty)],exp:ident(PAGE_SIZE)]],estmt[exp[grammar(assign),op_assi(+=),exp[grammar(record_ptr),exp:ident(mss),ident(shared_clean)],exp:ident(PAGE_SIZE)]]],estmt[exp[grammar(assign),op_assi(+=),exp[grammar(record_ptr),exp:ident(mss),ident(pss)],exp[grammar(binary_arith),aop(/),exp[grammar(binary_arith),aop(<<),exp:ident(PAGE_SIZE),exp:ident(PSS_SHIFT)],exp:ident(mapcount)]]]],{}stmt[sel_if[exp[grammar(call),exp:ident(pte_dirty),exp:ident(ptent)],estmt[exp[grammar(assign),op_assi(+=),exp[grammar(record_ptr),exp:ident(mss),ident(private_dirty)],exp:ident(PAGE_SIZE)]],estmt[exp[grammar(assign),op_assi(+=),exp[grammar(record_ptr),exp:ident(mss),ident(private_clean)],exp:ident(PAGE_SIZE)]]],estmt[exp[grammar(assign),op_assi(+=),exp[grammar(record_ptr),exp:ident(mss),ident(pss)],exp[grammar(binary_arith),aop(<<),exp:ident(PAGE_SIZE),exp:ident(PSS_SHIFT)]]]]]]],estmt[exp[grammar(call),exp:ident(pte_unmap_unlock),exp[grammar(binary_arith),aop(-),exp:ident(pte),exp:const:int(1)],exp:ident(ptl)]],estmt[exp[grammar(call),exp:ident(cond_resched)]],st_return[exp:const:int(0)]]],decl(N/H),def[fname(show_smap),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(v),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(memset),exp:&ref:exp:ident(mss),exp:const:int(0),exp:sizeof:exp:ident(mss)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(mss),ident(vma)],exp:ident(vma)]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(record_ptr),exp:ident(vma),ident(vm_mm)],exp:??(N/H)],estmt[exp[grammar(call),exp:ident(walk_page_range),exp[grammar(record_ptr),exp:ident(vma),ident(vm_mm)],exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)],exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp:&ref:exp:ident(smaps_walk),exp:&ref:exp:ident(mss)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ret),exp[grammar(call),exp:ident(show_map),exp:ident(m),exp:ident(v)]]],sel_if[exp:ident(ret),st_return[exp:ident(ret)],estmt(NONE)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:other(N/H),exp[grammar(binary_arith),aop(>>),exp[grammar(binary_arith),aop(-),exp[grammar(record_ptr),exp:ident(vma),ident(vm_end)],exp[grammar(record_ptr),exp:ident(vma),ident(vm_start)]],exp:const:int(10)],exp[grammar(binary_arith),aop(>>),exp[grammar(record_acc),exp:ident(mss),ident(resident)],exp:const:int(10)],exp:??(N/H),exp[grammar(binary_arith),aop(>>),exp[grammar(record_acc),exp:ident(mss),ident(shared_clean)],exp:const:int(10)],exp[grammar(binary_arith),aop(>>),exp[grammar(record_acc),exp:ident(mss),ident(shared_dirty)],exp:const:int(10)],exp[grammar(binary_arith),aop(>>),exp[grammar(record_acc),exp:ident(mss),ident(private_clean)],exp:const:int(10)],exp[grammar(binary_arith),aop(>>),exp[grammar(record_acc),exp:ident(mss),ident(private_dirty)],exp:const:int(10)],exp[grammar(binary_arith),aop(>>),exp[grammar(record_acc),exp:ident(mss),ident(referenced)],exp:const:int(10)]]],st_return[exp:ident(ret)]]],decl(N/H),def[fname(smaps_open),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(inode),fulltype[typec(N/H)]],param[reg(),name(file),fulltype[typec(N/H)]]],{}stmt[st_return[exp[grammar(call),exp:ident(do_maps_open),exp:ident(inode),exp:ident(file),exp:&ref:exp:ident(proc_pid_smaps_op)]]]],decl(N/H),def[fname(clear_refs_pte_range),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(pmd),fulltype[typec(N/H)]],param[reg(),name(addr),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(end),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(private),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(pte),exp[grammar(call),exp:ident(pte_offset_map_lock),exp[grammar(record_ptr),exp:ident(vma),ident(vm_mm)],exp:ident(pmd),exp:ident(addr),exp:&ref:exp:ident(ptl)]]],for[expr(NONE),exp[grammar(binary_logi),logiop(??),exp:ident(addr),exp:ident(end)],exp:??(N/H),{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(ptent),exp:*ref:exp:ident(pte)]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(page),exp[grammar(call),exp:ident(vm_normal_page),exp:ident(vma),exp:ident(addr),exp:ident(ptent)]]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(ptep_test_and_clear_young),exp:ident(vma),exp:ident(addr),exp:ident(pte)]],estmt[exp[grammar(call),exp:ident(ClearPageReferenced),exp:ident(page)]]]],estmt[exp[grammar(call),exp:ident(pte_unmap_unlock),exp[grammar(binary_arith),aop(-),exp:ident(pte),exp:const:int(1)],exp:ident(ptl)]],estmt[exp[grammar(call),exp:ident(cond_resched)]],st_return[exp:const:int(0)]]],decl(N/H),NCP(N/H),decl(N/H),NCP(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),define(N/H),def[fname(add_to_pagemap),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(addr),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(pfn),fulltype[typec(N/H)]],param[reg(),name(pm),fulltype[typec(N/H)]]],{}stmt[sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(binary_arith),aop(+),exp[grammar(record_ptr),exp:ident(pm),ident(out)],exp:ident(PM_ENTRY_BYTES)],exp[grammar(record_ptr),exp:ident(pm),ident(end)]],{}stmt[sel_if[exp[grammar(call),exp:ident(copy_to_user),exp[grammar(record_ptr),exp:ident(pm),ident(out)],exp:&ref:exp:ident(pfn),exp[grammar(binary_arith),aop(-),exp[grammar(record_ptr),exp:ident(pm),ident(end)],exp[grammar(record_ptr),exp:ident(pm),ident(out)]]],st_return[exp:??(N/H)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(pm),ident(out)],exp[grammar(record_ptr),exp:ident(pm),ident(end)]]],st_return[exp:ident(PM_END_OF_BUFFER)]],estmt(NONE)],sel_if[exp[grammar(call),exp:ident(put_user),exp:ident(pfn),exp[grammar(record_ptr),exp:ident(pm),ident(out)]],st_return[exp:??(N/H)],estmt(NONE)],estmt[exp[grammar(assign),op_assi(+=),exp[grammar(record_ptr),exp:ident(pm),ident(out)],exp:ident(PM_ENTRY_BYTES)]],st_return[exp:const:int(0)]]],def[fname(pagemap_pte_hole),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(start),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(end),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(private),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),for[exp[grammar(assign),simple_assi(=),exp:ident(addr),exp:ident(start)],exp[grammar(binary_logi),logiop(??),exp:ident(addr),exp:ident(end)],exp[grammar(assign),op_assi(+=),exp:ident(addr),exp:ident(PAGE_SIZE)],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(add_to_pagemap),exp:ident(addr),exp:ident(PM_NOT_PRESENT),exp:ident(pm)]]],sel_if[exp:ident(err),statem(N/H),estmt(NONE)]]],st_return[exp:ident(err)]]],def[fname(swap_pte_to_pagemap_entry),funtype[fulltype[typec(N/H)],param[reg(),name(pte),fulltype[typec(N/H)]]],{}stmt[statem(N/H),st_return[exp[grammar(binary_arith),aop(|),exp[grammar(binary_arith),aop(|),exp:ident(PM_SWAP),exp[grammar(call),exp:ident(swp_type),exp:ident(e)]],exp[grammar(binary_arith),aop(<<),exp[grammar(call),exp:ident(swp_offset),exp:ident(e)],exp:ident(MAX_SWAPFILES_SHIFT)]]]]],def[fname(pagemap_pte_range),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(pmd),fulltype[typec(N/H)]],param[reg(),name(addr),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(end),fulltype[ctype[btype[itype[sgn(unsigned),base(long)]]]]],param[reg(),name(private),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),for[expr(NONE),exp[grammar(binary_logi),logiop(??),exp:ident(addr),exp:ident(end)],exp[grammar(assign),op_assi(+=),exp:ident(addr),exp:ident(PAGE_SIZE)],{}stmt[statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(pte),exp[grammar(call),exp:ident(pte_offset_map),exp:ident(pmd),exp:ident(addr)]]],sel_if[exp[grammar(call),exp:ident(is_swap_pte),exp:*ref:exp:ident(pte)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(pfn),exp[grammar(call),exp:ident(swap_pte_to_pagemap_entry),exp:*ref:exp:ident(pte)]]],sel_if[exp[grammar(call),exp:ident(pte_present),exp:*ref:exp:ident(pte)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(pfn),exp[grammar(call),exp:ident(pte_pfn),exp:*ref:exp:ident(pte)]]],estmt(NONE)]],estmt[exp[grammar(call),exp:ident(pte_unmap),exp:ident(pte)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(add_to_pagemap),exp:ident(addr),exp:ident(pfn),exp:ident(pm)]]],sel_if[exp:ident(err),st_return[exp:ident(err)],estmt(NONE)]]],estmt[exp[grammar(call),exp:ident(cond_resched)]],st_return[exp:ident(err)]]],decl(N/H),NCP(N/H),decl(N/H),decl(N/H),def[fname(show_numa_map_checked),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(v),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp[grammar(binary_logi),logiop(and),exp:ident(maps_protect),exp:??(N/H)],st_return[exp:??(N/H)],estmt(NONE)],st_return[exp[grammar(call),exp:ident(show_numa_map),exp:ident(m),exp:ident(v)]]]],decl(N/H),def[fname(numa_maps_open),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(inode),fulltype[typec(N/H)]],param[reg(),name(file),fulltype[typec(N/H)]]],{}stmt[st_return[exp[grammar(call),exp:ident(do_maps_open),exp:ident(inode),exp:ident(file),exp:&ref:exp:ident(proc_pid_numa_maps_op)]]]],decl(N/H)]
[Diff] resulting abstract updates: 1
[Main] Making safe parts for pair 4
prg2[define(N/H),includeN[inc_elem(linux),inc_elem(unistd.h)],includeN[inc_elem(linux),inc_elem(slab.h)],includeN[inc_elem(linux),inc_elem(stat.h)],includeN[inc_elem(linux),inc_elem(in.h)],includeN[inc_elem(linux),inc_elem(seq_file.h)],includeN[inc_elem(linux),inc_elem(syscalls.h)],includeN[inc_elem(linux),inc_elem(rwsem.h)],includeN[inc_elem(linux),inc_elem(dcache.h)],includeN[inc_elem(linux),inc_elem(namei.h)],includeN[inc_elem(linux),inc_elem(mount.h)],includeN[inc_elem(linux),inc_elem(hash.h)],includeN[inc_elem(linux),inc_elem(module.h)],includeN[inc_elem(linux),inc_elem(exportfs.h)],includeN[inc_elem(linux),inc_elem(sunrpc),inc_elem(svc.h)],includeN[inc_elem(linux),inc_elem(nfsd),inc_elem(nfsd.h)],includeN[inc_elem(linux),inc_elem(nfsd),inc_elem(nfsfh.h)],includeN[inc_elem(linux),inc_elem(nfsd),inc_elem(syscall.h)],includeN[inc_elem(linux),inc_elem(lockd),inc_elem(bind.h)],includeN[inc_elem(linux),inc_elem(sunrpc),inc_elem(msg_prot.h)],includeN[inc_elem(linux),inc_elem(sunrpc),inc_elem(gss_api.h)],define(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),define(N/H),define(N/H),define(N/H),decl(N/H),def[fname(expkey_put),funtype[fulltype[ctype[btype(void)]],param[reg(),name(ref),fulltype[typec(N/H)]]],{}stmt[statem(N/H),sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(call),exp:ident(test_bit),exp:ident(CACHE_VALID),exp[grammar(&ref),grammar(exp),grammar(record_acc),exp[grammar(record_ptr),exp:ident(key),ident(h)],ident(flags)]],exp:??(N/H)],estmt[exp[grammar(call),exp:ident(path_put),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(key),ident(ek_path)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(auth_domain_put),exp[grammar(record_ptr),exp:ident(key),ident(ek_client)]]],estmt[exp[grammar(call),exp:ident(kfree),exp:ident(key)]]]],def[fname(expkey_request),funtype[fulltype[ctype[btype(void)]],param[reg(),name(cd),fulltype[typec(N/H)]],param[reg(),name(h),fulltype[typec(N/H)]],param[reg(),name(bpp),fulltype[typec(N/H)]],param[reg(),name(blen),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(qword_add),exp:ident(bpp),exp:ident(blen),exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(ek),ident(ek_client)],ident(name)]]],estmt[exp[grammar(call),exp:ident(snprintf),exp:ident(type),exp:const:int(5),exp:const:string(%d),exp[grammar(record_ptr),exp:ident(ek),ident(ek_fsidtype)]]],estmt[exp[grammar(call),exp:ident(qword_add),exp:ident(bpp),exp:ident(blen),exp:ident(type)]],estmt[exp[grammar(call),exp:ident(qword_addhex),exp:ident(bpp),exp:ident(blen),exp:??(N/H),exp[grammar(call),exp:ident(key_len),exp[grammar(record_ptr),exp:ident(ek),ident(ek_fsidtype)]]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(array_acc),exp:*ref:exp:ident(bpp),exp:??(N/H)],exp:const:other(N/H)]]]],decl(N/H),decl(N/H),decl(N/H),def[fname(expkey_parse),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(cd),fulltype[typec(N/H)]],param[reg(),name(mesg),fulltype[typec(N/H)]],param[reg(),name(mlen),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(array_acc),exp:ident(mesg),exp[grammar(binary_arith),aop(-),exp:ident(mlen),exp:const:int(1)]],exp:const:other(N/H)],st_return[exp:??(N/H)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(array_acc),exp:ident(mesg),exp[grammar(binary_arith),aop(-),exp:ident(mlen),exp:const:int(1)]],exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(buf),exp[grammar(call),exp:ident(kmalloc),exp:ident(PAGE_SIZE),exp:ident(GFP_KERNEL)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(assign),simple_assi(=),exp:ident(len),exp[grammar(call),exp:ident(qword_get),exp:&ref:exp:ident(mesg),exp:ident(buf),exp:ident(PAGE_SIZE)]],exp:const:int(0)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(dom),exp[grammar(call),exp:ident(auth_domain_find),exp:ident(buf)]]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(dprintk),exp:const:string(found domain %s\n),exp:ident(buf)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(assign),simple_assi(=),exp:ident(len),exp[grammar(call),exp:ident(qword_get),exp:&ref:exp:ident(mesg),exp:ident(buf),exp:ident(PAGE_SIZE)]],exp:const:int(0)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(fsidtype),exp[grammar(call),exp:ident(simple_strtoul),exp:ident(buf),exp:&ref:exp:ident(ep),exp:const:int(10)]]],sel_if[exp:*ref:exp:ident(ep),statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(dprintk),exp:const:string(found fsidtype %d\n),exp:ident(fsidtype)]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(call),exp:ident(key_len),exp:ident(fsidtype)],exp:const:int(0)],statem(N/H),estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(assign),simple_assi(=),exp:ident(len),exp[grammar(call),exp:ident(qword_get),exp:&ref:exp:ident(mesg),exp:ident(buf),exp:ident(PAGE_SIZE)]],exp:const:int(0)],statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(dprintk),exp:const:string(found fsid length %d\n),exp:ident(len)]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(len),exp[grammar(call),exp:ident(key_len),exp:ident(fsidtype)]],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(key),ident(h)],ident(flags)],exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(key),ident(h)],ident(expiry_time)],exp[grammar(call),exp:ident(get_expiry),exp:&ref:exp:ident(mesg)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(key),ident(h)],ident(expiry_time)],exp:const:int(0)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(key),ident(ek_client)],exp:ident(dom)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(key),ident(ek_fsidtype)],exp:ident(fsidtype)]],estmt[exp[grammar(call),exp:ident(memcpy),exp[grammar(record_acc),exp:ident(key),ident(ek_fsid)],exp:ident(buf),exp:ident(len)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ek),exp[grammar(call),exp:ident(svc_expkey_lookup),exp:&ref:exp:ident(key)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(assign),simple_assi(=),exp:ident(len),exp[grammar(call),exp:ident(qword_get),exp:&ref:exp:ident(mesg),exp:ident(buf),exp:ident(PAGE_SIZE)]],exp:const:int(0)],statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(dprintk),exp:const:string(Path seems to be <%s>\n),exp:ident(buf)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:const:int(0)]],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(len),exp:const:int(0)],{}stmt[estmt[exp[grammar(call),exp:ident(set_bit),exp:ident(CACHE_NEGATIVE),exp[grammar(&ref),grammar(exp),grammar(record_acc),exp[grammar(record_acc),exp:ident(key),ident(h)],ident(flags)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ek),exp[grammar(call),exp:ident(svc_expkey_update),exp:&ref:exp:ident(key),exp:ident(ek)]]],sel_if[exp:ident(ek),estmt[exp[grammar(call),exp:ident(cache_put),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(ek),ident(h)],exp:&ref:exp:ident(svc_expkey_cache)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]]]],{}stmt[statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(path_lookup),exp:ident(buf),exp:const:int(0),exp:&ref:exp:ident(nd)]]],sel_if[exp:ident(err),statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(dprintk),exp:const:string(Found the path %s\n),exp:ident(buf)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(key),ident(ek_path)],exp[grammar(record_acc),exp:ident(nd),ident(path)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ek),exp[grammar(call),exp:ident(svc_expkey_update),exp:&ref:exp:ident(key),exp:ident(ek)]]],sel_if[exp:ident(ek),estmt[exp[grammar(call),exp:ident(cache_put),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(ek),ident(h)],exp:&ref:exp:ident(svc_expkey_cache)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]]],estmt[exp[grammar(call),exp:ident(path_put),exp[grammar(&ref),grammar(exp),grammar(record_acc),exp:ident(nd),ident(path)]]]]],estmt[exp[grammar(call),exp:ident(cache_flush)]],statem(N/H),estmt[exp[grammar(call),exp:ident(kfree),exp:ident(buf)]],st_return[exp:ident(err)]]],def[fname(expkey_show),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(cd),fulltype[typec(N/H)]],param[reg(),name(h),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(h),exp:ident(NULL)],{}stmt[estmt[exp[grammar(call),exp:ident(seq_puts),exp:ident(m),exp:const:string(#domain fsidtype fsid [path]\n)]],st_return[exp:const:int(0)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ek),exp[grammar(call),exp:ident(container_of),exp:ident(h),argtype(N/H),exp:ident(h)]]],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(%s %d 0x),exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(ek),ident(ek_client)],ident(name)],exp[grammar(record_ptr),exp:ident(ek),ident(ek_fsidtype)]]],for[exp[grammar(assign),simple_assi(=),exp:ident(i),exp:const:int(0)],exp[grammar(binary_logi),logiop(??),exp:ident(i),exp[grammar(binary_arith),aop(/),exp[grammar(call),exp:ident(key_len),exp[grammar(record_ptr),exp:ident(ek),ident(ek_fsidtype)]],exp:const:int(4)]],exp:??(N/H),estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(%08x),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(ek),ident(ek_fsid)],exp:ident(i)]]]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(call),exp:ident(test_bit),exp:ident(CACHE_VALID),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(h),ident(flags)]],exp:??(N/H)],{}stmt[estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( )]],estmt[exp[grammar(call),exp:ident(seq_path),exp:ident(m),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(ek),ident(ek_path)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(ek),ident(ek_path)],ident(dentry)],exp:const:string(\\ \t\n)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(\n)]],st_return[exp:const:int(0)]]],def[fname(expkey_match),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(a),fulltype[typec(N/H)]],param[reg(),name(b),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp[grammar(binary_logi),logiop(or),exp[grammar(binary_logi),logiop(or),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(orig),ident(ek_fsidtype)],exp[grammar(record_ptr),exp:ident(new),ident(ek_fsidtype)]],exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(orig),ident(ek_client)],exp[grammar(record_ptr),exp:ident(new),ident(ek_client)]]],exp[grammar(binary_logi),logiop(??),exp[grammar(call),exp:ident(memcmp),exp[grammar(record_ptr),exp:ident(orig),ident(ek_fsid)],exp[grammar(record_ptr),exp:ident(new),ident(ek_fsid)],exp[grammar(call),exp:ident(key_len),exp[grammar(record_ptr),exp:ident(orig),ident(ek_fsidtype)]]],exp:const:int(0)]],st_return[exp:const:int(0)],estmt(NONE)],st_return[exp:const:int(1)]]],def[fname(expkey_init),funtype[fulltype[ctype[btype(void)]],param[reg(),name(cnew),fulltype[typec(N/H)]],param[reg(),name(citem),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(kref_get),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp[grammar(record_ptr),exp:ident(item),ident(ek_client)],ident(ref)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(new),ident(ek_client)],exp[grammar(record_ptr),exp:ident(item),ident(ek_client)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(new),ident(ek_fsidtype)],exp[grammar(record_ptr),exp:ident(item),ident(ek_fsidtype)]]],estmt[exp[grammar(call),exp:ident(memcpy),exp[grammar(record_ptr),exp:ident(new),ident(ek_fsid)],exp[grammar(record_ptr),exp:ident(item),ident(ek_fsid)],exp[grammar(sizeof),grammar(exp),grammar(record_ptr),exp:ident(new),ident(ek_fsid)]]]]],def[fname(expkey_update),funtype[fulltype[ctype[btype(void)]],param[reg(),name(cnew),fulltype[typec(N/H)]],param[reg(),name(citem),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(new),ident(ek_path)],exp[grammar(record_ptr),exp:ident(item),ident(ek_path)]]],estmt[exp[grammar(call),exp:ident(path_get),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(item),ident(ek_path)]]]]],def[fname(expkey_alloc),funtype[fulltype[typec(N/H)],param[reg(),name(),fulltype[ctype[btype(void)]]]],{}stmt[statem(N/H),sel_if[exp:ident(i),st_return[exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(i),ident(h)]],st_return[exp:ident(NULL)]]]],decl(N/H),def[fname(svc_expkey_lookup),funtype[fulltype[typec(N/H)],param[reg(),name(item),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),op_assi(x=),exp:ident(hash),exp[grammar(call),exp:ident(hash_mem),exp:ident(cp),exp:ident(len),exp:ident(EXPKEY_HASHBITS)]]],estmt[exp[grammar(assign),op_assi(x=),exp:ident(hash),exp[grammar(call),exp:ident(hash_ptr),exp[grammar(record_ptr),exp:ident(item),ident(ek_client)],exp:ident(EXPKEY_HASHBITS)]]],estmt[exp[grammar(assign),op_assi(&=),exp:ident(hash),exp:ident(EXPKEY_HASHMASK)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ch),exp[grammar(call),exp:ident(sunrpc_cache_lookup),exp:&ref:exp:ident(svc_expkey_cache),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(item),ident(h)],exp:ident(hash)]]],sel_if[exp:ident(ch),st_return[exp[grammar(call),exp:ident(container_of),exp:ident(ch),argtype(N/H),exp:ident(h)]],st_return[exp:ident(NULL)]]]],def[fname(svc_expkey_update),funtype[fulltype[typec(N/H)],param[reg(),name(new),fulltype[typec(N/H)]],param[reg(),name(old),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),op_assi(x=),exp:ident(hash),exp[grammar(call),exp:ident(hash_mem),exp:ident(cp),exp:ident(len),exp:ident(EXPKEY_HASHBITS)]]],estmt[exp[grammar(assign),op_assi(x=),exp:ident(hash),exp[grammar(call),exp:ident(hash_ptr),exp[grammar(record_ptr),exp:ident(new),ident(ek_client)],exp:ident(EXPKEY_HASHBITS)]]],estmt[exp[grammar(assign),op_assi(&=),exp:ident(hash),exp:ident(EXPKEY_HASHMASK)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ch),exp[grammar(call),exp:ident(sunrpc_cache_update),exp:&ref:exp:ident(svc_expkey_cache),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(new),ident(h)],exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(old),ident(h)],exp:ident(hash)]]],sel_if[exp:ident(ch),st_return[exp[grammar(call),exp:ident(container_of),exp:ident(ch),argtype(N/H),exp:ident(h)]],st_return[exp:ident(NULL)]]]],define(N/H),define(N/H),define(N/H),decl(N/H),def[fname(nfsd4_fslocs_free),funtype[fulltype[ctype[btype(void)]],param[reg(),name(fsloc),fulltype[typec(N/H)]]],{}stmt[statem(N/H),for[exp[grammar(assign),simple_assi(=),exp:ident(i),exp:const:int(0)],exp[grammar(binary_logi),logiop(??),exp:ident(i),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations_count)]],exp:??(N/H),{}stmt[estmt[exp[grammar(call),exp:ident(kfree),exp[grammar(record_acc),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations)],exp:ident(i)],ident(path)]]],estmt[exp[grammar(call),exp:ident(kfree),exp[grammar(record_acc),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations)],exp:ident(i)],ident(hosts)]]]]],estmt[exp[grammar(call),exp:ident(kfree),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations)]]]]],def[fname(svc_export_put),funtype[fulltype[ctype[btype(void)]],param[reg(),name(ref),fulltype[typec(N/H)]]],{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(path_put),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(exp),ident(ex_path)]]],estmt[exp[grammar(call),exp:ident(auth_domain_put),exp[grammar(record_ptr),exp:ident(exp),ident(ex_client)]]],estmt[exp[grammar(call),exp:ident(kfree),exp[grammar(record_ptr),exp:ident(exp),ident(ex_pathname)]]],estmt[exp[grammar(call),exp:ident(nfsd4_fslocs_free),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(exp),ident(ex_fslocs)]]],estmt[exp[grammar(call),exp:ident(kfree),exp:ident(exp)]]]],def[fname(svc_export_request),funtype[fulltype[ctype[btype(void)]],param[reg(),name(cd),fulltype[typec(N/H)]],param[reg(),name(h),fulltype[typec(N/H)]],param[reg(),name(bpp),fulltype[typec(N/H)]],param[reg(),name(blen),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(qword_add),exp:ident(bpp),exp:ident(blen),exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(exp),ident(ex_client)],ident(name)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(pth),exp[grammar(call),exp:ident(d_path),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(exp),ident(ex_path)],ident(dentry)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(exp),ident(ex_path)],ident(mnt)],exp:*ref:exp:ident(bpp),exp:*ref:exp:ident(blen)]]],sel_if[exp[grammar(call),exp:ident(IS_ERR),exp:ident(pth)],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp[grammar(array_acc),exp:*ref:exp:ident(bpp),exp:const:int(0)],exp:const:other(N/H)]],statem(N/H)],estmt(NONE)],estmt[exp[grammar(call),exp:ident(qword_add),exp:ident(bpp),exp:ident(blen),exp:ident(pth)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(array_acc),exp:*ref:exp:ident(bpp),exp:??(N/H)],exp:const:other(N/H)]]]],decl(N/H),decl(N/H),def[fname(check_export),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(inode),fulltype[typec(N/H)]],param[reg(),name(flags),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(uuid),fulltype[typec(N/H)]]],{}stmt[sel_if[exp[grammar(binary_logi),logiop(and),exp:??(N/H),exp:??(N/H)],st_return[exp:??(N/H)],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(and),exp:??(N/H),exp:??(N/H)],exp[grammar(binary_logi),logiop(eq),exp:ident(uuid),exp:ident(NULL)]],{}stmt[estmt[exp[grammar(call),exp:ident(dprintk),exp:const:string(exp_export: export of non-dev fs without fsid\n)]],st_return[exp:??(N/H)]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(or),exp:??(N/H),exp:??(N/H)],{}stmt[estmt[exp[grammar(call),exp:ident(dprintk),exp:const:string(exp_export: export of invalid fs type.\n)]],st_return[exp:??(N/H)]],estmt(NONE)],st_return[exp:const:int(0)]]],def[fname(fsloc_parse),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(mesg),fulltype[typec(N/H)]],param[reg(),name(buf),fulltype[typec(N/H)]],param[reg(),name(fsloc),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(get_int),exp:ident(mesg),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(fsloc),ident(locations_count)]]]],sel_if[exp:ident(err),st_return[exp:ident(err)],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations_count)],exp:ident(MAX_FS_LOCATIONS)],st_return[exp:??(N/H)],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations_count)],exp:const:int(0)],st_return[exp:const:int(0)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations)],exp[grammar(call),exp:ident(kzalloc),exp[grammar(binary_arith),aop(*),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations_count)],exp[grammar(sizeoftype),grammar(fulltype),typec(N/H)]],exp:ident(GFP_KERNEL)]]],sel_if[exp:??(N/H),st_return[exp:??(N/H)],estmt(NONE)],for[exp[grammar(assign),simple_assi(=),exp:ident(i),exp:const:int(0)],exp[grammar(binary_logi),logiop(??),exp:ident(i),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations_count)]],exp:??(N/H),{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(len),exp[grammar(call),exp:ident(qword_get),exp:ident(mesg),exp:ident(buf),exp:ident(PAGE_SIZE)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(len),exp:const:int(0)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations)],exp:ident(i)],ident(hosts)],exp[grammar(call),exp:ident(kstrdup),exp:ident(buf),exp:ident(GFP_KERNEL)]]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(len),exp[grammar(call),exp:ident(qword_get),exp:ident(mesg),exp:ident(buf),exp:ident(PAGE_SIZE)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(len),exp:const:int(0)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations)],exp:ident(i)],ident(path)],exp[grammar(call),exp:ident(kstrdup),exp:ident(buf),exp:ident(GFP_KERNEL)]]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(get_int),exp:ident(mesg),exp:&ref:exp:ident(migrated)]]],sel_if[exp:ident(err),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],sel_if[exp[grammar(binary_logi),logiop(or),exp[grammar(binary_logi),logiop(??),exp:ident(migrated),exp:const:int(0)],exp[grammar(binary_logi),logiop(??),exp:ident(migrated),exp:const:int(1)]],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(fsloc),ident(migrated)],exp:ident(migrated)]],st_return[exp:const:int(0)],statem(N/H),st_return[exp:ident(err)]]],def[fname(secinfo_parse),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(mesg),fulltype[typec(N/H)]],param[reg(),name(buf),fulltype[typec(N/H)]],param[reg(),name(exp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(get_int),exp:ident(mesg),exp:&ref:exp:ident(listsize)]]],sel_if[exp:ident(err),st_return[exp:ident(err)],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(or),exp[grammar(binary_logi),logiop(??),exp:ident(listsize),exp:const:int(0)],exp[grammar(binary_logi),logiop(??),exp:ident(listsize),exp:ident(MAX_SECINFO_LIST)]],st_return[exp:??(N/H)],estmt(NONE)],for[exp[grammar(assign),simple_assi(=),exp:ident(f),exp[grammar(record_ptr),exp:ident(exp),ident(ex_flavors)]],exp[grammar(binary_logi),logiop(??),exp:ident(f),exp[grammar(binary_arith),aop(+),exp[grammar(record_ptr),exp:ident(exp),ident(ex_flavors)],exp:ident(listsize)]],exp:??(N/H),{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(get_int),exp:ident(mesg),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(f),ident(pseudoflavor)]]]],sel_if[exp:ident(err),st_return[exp:ident(err)],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(f),ident(pseudoflavor)],exp:const:int(0)],st_return[exp:??(N/H)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(get_int),exp:ident(mesg),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(f),ident(flags)]]]],sel_if[exp:ident(err),st_return[exp:ident(err)],estmt(NONE)],sel_if[exp[grammar(binary_arith),aop(&),exp:??(N/H),exp[grammar(binary_arith),aop(N/H),exp[grammar(record_ptr),exp:ident(f),ident(flags)],exp[grammar(record_ptr),exp:ident(exp),ident(ex_flags)]]],st_return[exp:??(N/H)],estmt(NONE)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(exp),ident(ex_nflavors)],exp:ident(listsize)]],st_return[exp:const:int(0)]]],def[fname(fsloc_parse),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(mesg),fulltype[typec(N/H)]],param[reg(),name(buf),fulltype[typec(N/H)]],param[reg(),name(fsloc),fulltype[typec(N/H)]]],{}stmt[st_return[exp:const:int(0)]]],def[fname(secinfo_parse),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(mesg),fulltype[typec(N/H)]],param[reg(),name(buf),fulltype[typec(N/H)]],param[reg(),name(exp),fulltype[typec(N/H)]]],{}stmt[st_return[exp:const:int(0)]]],def[fname(svc_export_parse),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(cd),fulltype[typec(N/H)]],param[reg(),name(mesg),fulltype[typec(N/H)]],param[reg(),name(mlen),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(dentry)],exp:ident(NULL)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(exp),ident(ex_pathname)],exp:ident(NULL)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(exp),ident(ex_fslocs)],ident(locations)],exp:ident(NULL)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(exp),ident(ex_fslocs)],ident(locations_count)],exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(exp),ident(ex_fslocs)],ident(migrated)],exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(exp),ident(ex_uuid)],exp:ident(NULL)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(exp),ident(ex_nflavors)],exp:const:int(0)]],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(array_acc),exp:ident(mesg),exp[grammar(binary_arith),aop(-),exp:ident(mlen),exp:const:int(1)]],exp:const:other(N/H)],st_return[exp:??(N/H)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(array_acc),exp:ident(mesg),exp[grammar(binary_arith),aop(-),exp:ident(mlen),exp:const:int(1)]],exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(buf),exp[grammar(call),exp:ident(kmalloc),exp:ident(PAGE_SIZE),exp:ident(GFP_KERNEL)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(len),exp[grammar(call),exp:ident(qword_get),exp:&ref:exp:ident(mesg),exp:ident(buf),exp:ident(PAGE_SIZE)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(len),exp:const:int(0)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(dom),exp[grammar(call),exp:ident(auth_domain_find),exp:ident(buf)]]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(assign),simple_assi(=),exp:ident(len),exp[grammar(call),exp:ident(qword_get),exp:&ref:exp:ident(mesg),exp:ident(buf),exp:ident(PAGE_SIZE)]],exp:const:int(0)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(path_lookup),exp:ident(buf),exp:const:int(0),exp:&ref:exp:ident(nd)]]],sel_if[exp:ident(err),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(exp),ident(h)],ident(flags)],exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(exp),ident(ex_client)],exp:ident(dom)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(exp),ident(ex_path)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(mnt)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(exp),ident(ex_path)],ident(dentry)],exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(dentry)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(exp),ident(ex_pathname)],exp[grammar(call),exp:ident(kstrdup),exp:ident(buf),exp:ident(GFP_KERNEL)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(exp),ident(h)],ident(expiry_time)],exp[grammar(call),exp:ident(get_expiry),exp:&ref:exp:ident(mesg)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(exp),ident(h)],ident(expiry_time)],exp:const:int(0)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(get_int),exp:&ref:exp:ident(mesg),exp:&ref:exp:ident(an_int)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(err),exp:??(N/H)],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:const:int(0)]],estmt[exp[grammar(call),exp:ident(set_bit),exp:ident(CACHE_NEGATIVE),exp[grammar(&ref),grammar(exp),grammar(record_acc),exp[grammar(record_acc),exp:ident(exp),ident(h)],ident(flags)]]]],{}stmt[sel_if[exp[grammar(binary_logi),logiop(or),exp:ident(err),exp[grammar(binary_logi),logiop(??),exp:ident(an_int),exp:const:int(0)]],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(exp),ident(ex_flags)],exp:ident(an_int)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(get_int),exp:&ref:exp:ident(mesg),exp:&ref:exp:ident(an_int)]]],sel_if[exp:ident(err),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(exp),ident(ex_anon_uid)],exp:ident(an_int)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(get_int),exp:&ref:exp:ident(mesg),exp:&ref:exp:ident(an_int)]]],sel_if[exp:ident(err),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(exp),ident(ex_anon_gid)],exp:ident(an_int)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(get_int),exp:&ref:exp:ident(mesg),exp:&ref:exp:ident(an_int)]]],sel_if[exp:ident(err),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(exp),ident(ex_fsid)],exp:ident(an_int)]],while[exp[grammar(binary_logi),logiop(??),exp[grammar(assign),simple_assi(=),exp:ident(len),exp[grammar(call),exp:ident(qword_get),exp:&ref:exp:ident(mesg),exp:ident(buf),exp:ident(PAGE_SIZE)]],exp:const:int(0)],{}stmt[sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(call),exp:ident(strcmp),exp:ident(buf),exp:const:string(fsloc)],exp:const:int(0)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(fsloc_parse),exp:&ref:exp:ident(mesg),exp:ident(buf),exp[grammar(&ref),grammar(exp),grammar(record_acc),exp:ident(exp),ident(ex_fslocs)]]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(call),exp:ident(strcmp),exp:ident(buf),exp:const:string(uuid)],exp:const:int(0)],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(len),exp[grammar(call),exp:ident(qword_get),exp:&ref:exp:ident(mesg),exp:ident(buf),exp:ident(PAGE_SIZE)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(len),exp:const:int(16)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(exp),ident(ex_uuid)],exp[grammar(call),exp:ident(kmemdup),exp:ident(buf),exp:const:int(16),exp:ident(GFP_KERNEL)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(record_acc),exp:ident(exp),ident(ex_uuid)],exp:ident(NULL)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],estmt(NONE)]]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(call),exp:ident(strcmp),exp:ident(buf),exp:const:string(secinfo)],exp:const:int(0)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(secinfo_parse),exp:&ref:exp:ident(mesg),exp:ident(buf),exp:&ref:exp:ident(exp)]]],statem(N/H)]]],sel_if[exp:ident(err),statem(N/H),estmt(NONE)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(check_export),exp[grammar(record_ptr),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(dentry)],ident(d_inode)],exp[grammar(record_acc),exp:ident(exp),ident(ex_flags)],exp[grammar(record_acc),exp:ident(exp),ident(ex_uuid)]]]],sel_if[exp:ident(err),statem(N/H),estmt(NONE)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(expp),exp[grammar(call),exp:ident(svc_export_lookup),exp:&ref:exp:ident(exp)]]],sel_if[exp:ident(expp),estmt[exp[grammar(assign),simple_assi(=),exp:ident(expp),exp[grammar(call),exp:ident(svc_export_update),exp:&ref:exp:ident(exp),exp:ident(expp)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]]],estmt[exp[grammar(call),exp:ident(cache_flush)]],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(expp),exp:ident(NULL)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],estmt[exp[grammar(call),exp:ident(exp_put),exp:ident(expp)]]],statem(N/H),estmt[exp[grammar(call),exp:ident(kfree),exp[grammar(record_acc),exp:ident(exp),ident(ex_uuid)]]],estmt[exp[grammar(call),exp:ident(kfree),exp[grammar(record_acc),exp:ident(exp),ident(ex_pathname)]]],sel_if[exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(dentry)],estmt[exp[grammar(call),exp:ident(path_put),exp[grammar(&ref),grammar(exp),grammar(record_acc),exp:ident(nd),ident(path)]]],estmt(NONE)],statem(N/H),estmt[exp[grammar(call),exp:ident(kfree),exp:ident(buf)]],st_return[exp:ident(err)]]],decl(N/H),decl(N/H),def[fname(svc_export_show),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(cd),fulltype[typec(N/H)]],param[reg(),name(h),fulltype[typec(N/H)]]],{}stmt[statem(N/H),sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(h),exp:ident(NULL)],{}stmt[estmt[exp[grammar(call),exp:ident(seq_puts),exp:ident(m),exp:const:string(#path domain(flags)\n)]],st_return[exp:const:int(0)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(container_of),exp:ident(h),argtype(N/H),exp:ident(h)]]],estmt[exp[grammar(call),exp:ident(seq_path),exp:ident(m),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(exp),ident(ex_path)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(exp),ident(ex_path)],ident(dentry)],exp:const:string( \t\n\\)]],estmt[exp[grammar(call),exp:ident(seq_putc),exp:ident(m),exp:const:other(N/H)]],estmt[exp[grammar(call),exp:ident(seq_escape),exp:ident(m),exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(exp),ident(ex_client)],ident(name)],exp:const:string( \t\n\\)]],estmt[exp[grammar(call),exp:ident(seq_putc),exp:ident(m),exp:const:other(N/H)]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(call),exp:ident(test_bit),exp:ident(CACHE_VALID),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(h),ident(flags)]],exp:??(N/H)],{}stmt[estmt[exp[grammar(call),exp:ident(exp_flags),exp:ident(m),exp[grammar(record_ptr),exp:ident(exp),ident(ex_flags)],exp[grammar(record_ptr),exp:ident(exp),ident(ex_fsid)],exp[grammar(record_ptr),exp:ident(exp),ident(ex_anon_uid)],exp[grammar(record_ptr),exp:ident(exp),ident(ex_anon_gid)],exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(exp),ident(ex_fslocs)]]],sel_if[exp[grammar(record_ptr),exp:ident(exp),ident(ex_uuid)],{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(seq_puts),exp:ident(m),exp:const:string(,uuid=)]],for[exp[grammar(assign),simple_assi(=),exp:ident(i),exp:const:int(0)],exp[grammar(binary_logi),logiop(??),exp:ident(i),exp:const:int(16)],exp:??(N/H),{}stmt[sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(eq),exp[grammar(binary_arith),aop(&),exp:ident(i),exp:const:int(3)],exp:const:int(0)],exp:ident(i)],estmt[exp[grammar(call),exp:ident(seq_putc),exp:ident(m),exp:const:other(N/H)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(%02x),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(exp),ident(ex_uuid)],exp:ident(i)]]]]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(show_secinfo),exp:ident(m),exp:ident(exp)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(seq_puts),exp:ident(m),exp:const:string()\n)]],st_return[exp:const:int(0)]]],def[fname(svc_export_match),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(a),fulltype[typec(N/H)]],param[reg(),name(b),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),st_return[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(orig),ident(ex_client)],exp[grammar(record_ptr),exp:ident(new),ident(ex_client)]],exp[grammar(binary_logi),logiop(eq),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(orig),ident(ex_path)],ident(dentry)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(new),ident(ex_path)],ident(dentry)]]],exp[grammar(binary_logi),logiop(eq),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(orig),ident(ex_path)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(new),ident(ex_path)],ident(mnt)]]]]]],def[fname(svc_export_init),funtype[fulltype[ctype[btype(void)]],param[reg(),name(cnew),fulltype[typec(N/H)]],param[reg(),name(citem),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(kref_get),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp[grammar(record_ptr),exp:ident(item),ident(ex_client)],ident(ref)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(new),ident(ex_client)],exp[grammar(record_ptr),exp:ident(item),ident(ex_client)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(new),ident(ex_path)],ident(dentry)],exp[grammar(call),exp:ident(dget),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(item),ident(ex_path)],ident(dentry)]]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(new),ident(ex_path)],ident(mnt)],exp[grammar(call),exp:ident(mntget),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(item),ident(ex_path)],ident(mnt)]]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(new),ident(ex_pathname)],exp:ident(NULL)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(new),ident(ex_fslocs)],ident(locations)],exp:ident(NULL)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(new),ident(ex_fslocs)],ident(locations_count)],exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(new),ident(ex_fslocs)],ident(migrated)],exp:const:int(0)]]]],def[fname(export_update),funtype[fulltype[ctype[btype(void)]],param[reg(),name(cnew),fulltype[typec(N/H)]],param[reg(),name(citem),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(new),ident(ex_flags)],exp[grammar(record_ptr),exp:ident(item),ident(ex_flags)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(new),ident(ex_anon_uid)],exp[grammar(record_ptr),exp:ident(item),ident(ex_anon_uid)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(new),ident(ex_anon_gid)],exp[grammar(record_ptr),exp:ident(item),ident(ex_anon_gid)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(new),ident(ex_fsid)],exp[grammar(record_ptr),exp:ident(item),ident(ex_fsid)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(new),ident(ex_uuid)],exp[grammar(record_ptr),exp:ident(item),ident(ex_uuid)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(item),ident(ex_uuid)],exp:ident(NULL)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(new),ident(ex_pathname)],exp[grammar(record_ptr),exp:ident(item),ident(ex_pathname)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(item),ident(ex_pathname)],exp:ident(NULL)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(new),ident(ex_fslocs)],ident(locations)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(item),ident(ex_fslocs)],ident(locations)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(item),ident(ex_fslocs)],ident(locations)],exp:ident(NULL)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(new),ident(ex_fslocs)],ident(locations_count)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(item),ident(ex_fslocs)],ident(locations_count)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(item),ident(ex_fslocs)],ident(locations_count)],exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(new),ident(ex_fslocs)],ident(migrated)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(item),ident(ex_fslocs)],ident(migrated)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(item),ident(ex_fslocs)],ident(migrated)],exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(new),ident(ex_nflavors)],exp[grammar(record_ptr),exp:ident(item),ident(ex_nflavors)]]],for[exp[grammar(assign),simple_assi(=),exp:ident(i),exp:const:int(0)],exp[grammar(binary_logi),logiop(??),exp:ident(i),exp:ident(MAX_SECINFO_LIST)],exp:??(N/H),{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(new),ident(ex_flavors)],exp:ident(i)],exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(item),ident(ex_flavors)],exp:ident(i)]]]]]]],def[fname(svc_export_alloc),funtype[fulltype[typec(N/H)],param[reg(),name(),fulltype[ctype[btype(void)]]]],{}stmt[statem(N/H),sel_if[exp:ident(i),st_return[exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(i),ident(h)]],st_return[exp:ident(NULL)]]]],decl(N/H),def[fname(svc_export_lookup),funtype[fulltype[typec(N/H)],param[reg(),name(exp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(hash),exp[grammar(call),exp:ident(hash_ptr),exp[grammar(record_ptr),exp:ident(exp),ident(ex_client)],exp:ident(EXPORT_HASHBITS)]]],estmt[exp[grammar(assign),op_assi(x=),exp:ident(hash),exp[grammar(call),exp:ident(hash_ptr),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(exp),ident(ex_path)],ident(dentry)],exp:ident(EXPORT_HASHBITS)]]],estmt[exp[grammar(assign),op_assi(x=),exp:ident(hash),exp[grammar(call),exp:ident(hash_ptr),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(exp),ident(ex_path)],ident(mnt)],exp:ident(EXPORT_HASHBITS)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ch),exp[grammar(call),exp:ident(sunrpc_cache_lookup),exp:&ref:exp:ident(svc_export_cache),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(exp),ident(h)],exp:ident(hash)]]],sel_if[exp:ident(ch),st_return[exp[grammar(call),exp:ident(container_of),exp:ident(ch),argtype(N/H),exp:ident(h)]],st_return[exp:ident(NULL)]]]],def[fname(svc_export_update),funtype[fulltype[typec(N/H)],param[reg(),name(new),fulltype[typec(N/H)]],param[reg(),name(old),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(hash),exp[grammar(call),exp:ident(hash_ptr),exp[grammar(record_ptr),exp:ident(old),ident(ex_client)],exp:ident(EXPORT_HASHBITS)]]],estmt[exp[grammar(assign),op_assi(x=),exp:ident(hash),exp[grammar(call),exp:ident(hash_ptr),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(old),ident(ex_path)],ident(dentry)],exp:ident(EXPORT_HASHBITS)]]],estmt[exp[grammar(assign),op_assi(x=),exp:ident(hash),exp[grammar(call),exp:ident(hash_ptr),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(old),ident(ex_path)],ident(mnt)],exp:ident(EXPORT_HASHBITS)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ch),exp[grammar(call),exp:ident(sunrpc_cache_update),exp:&ref:exp:ident(svc_export_cache),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(new),ident(h)],exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(old),ident(h)],exp:ident(hash)]]],sel_if[exp:ident(ch),st_return[exp[grammar(call),exp:ident(container_of),exp:ident(ch),argtype(N/H),exp:ident(h)]],st_return[exp:ident(NULL)]]]],def[fname(exp_find_key),funtype[fulltype[typec(N/H)],param[reg(),name(clp),fulltype[typec(N/H)]],param[reg(),name(fsid_type),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(fsidv),fulltype[typec(N/H)]],param[reg(),name(reqp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp:??(N/H),st_return[exp[grammar(call),exp:ident(ERR_PTR),exp:??(N/H)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(key),ident(ek_client)],exp:ident(clp)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(key),ident(ek_fsidtype)],exp:ident(fsid_type)]],estmt[exp[grammar(call),exp:ident(memcpy),exp[grammar(record_acc),exp:ident(key),ident(ek_fsid)],exp:ident(fsidv),exp[grammar(call),exp:ident(key_len),exp:ident(fsid_type)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ek),exp[grammar(call),exp:ident(svc_expkey_lookup),exp:&ref:exp:ident(key)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(ek),exp:ident(NULL)],st_return[exp[grammar(call),exp:ident(ERR_PTR),exp:??(N/H)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(cache_check),exp:&ref:exp:ident(svc_expkey_cache),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(ek),ident(h)],exp:ident(reqp)]]],sel_if[exp:ident(err),st_return[exp[grammar(call),exp:ident(ERR_PTR),exp:ident(err)]],estmt(NONE)],st_return[exp:ident(ek)]]],def[fname(exp_set_key),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(clp),fulltype[typec(N/H)]],param[reg(),name(fsid_type),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(fsidv),fulltype[typec(N/H)]],param[reg(),name(exp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(key),ident(ek_client)],exp:ident(clp)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(key),ident(ek_fsidtype)],exp:ident(fsid_type)]],estmt[exp[grammar(call),exp:ident(memcpy),exp[grammar(record_acc),exp:ident(key),ident(ek_fsid)],exp:ident(fsidv),exp[grammar(call),exp:ident(key_len),exp:ident(fsid_type)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(key),ident(ek_path)],exp[grammar(record_ptr),exp:ident(exp),ident(ex_path)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(key),ident(h)],ident(expiry_time)],exp:ident(NEVER)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(key),ident(h)],ident(flags)],exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ek),exp[grammar(call),exp:ident(svc_expkey_lookup),exp:&ref:exp:ident(key)]]],sel_if[exp:ident(ek),estmt[exp[grammar(assign),simple_assi(=),exp:ident(ek),exp[grammar(call),exp:ident(svc_expkey_update),exp:&ref:exp:ident(key),exp:ident(ek)]]],estmt(NONE)],sel_if[exp:ident(ek),{}stmt[estmt[exp[grammar(call),exp:ident(cache_put),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(ek),ident(h)],exp:&ref:exp:ident(svc_expkey_cache)]],st_return[exp:const:int(0)]],estmt(NONE)],st_return[exp:??(N/H)]]],def[fname(exp_get_key),funtype[fulltype[typec(N/H)],param[reg(),name(clp),fulltype[typec(N/H)]],param[reg(),name(dev),fulltype[typec(N/H)]],param[reg(),name(ino),fulltype[typec(N/H)]]],{}stmt[statem(N/H),sel_if[exp[grammar(call),exp:ident(old_valid_dev),exp:ident(dev)],{}stmt[estmt[exp[grammar(call),exp:ident(mk_fsid),exp:ident(FSID_DEV),exp:ident(fsidv),exp:ident(dev),exp:ident(ino),exp:const:int(0),exp:ident(NULL)]],st_return[exp[grammar(call),exp:ident(exp_find_key),exp:ident(clp),exp:ident(FSID_DEV),exp:ident(fsidv),exp:ident(NULL)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(mk_fsid),exp:ident(FSID_ENCODE_DEV),exp:ident(fsidv),exp:ident(dev),exp:ident(ino),exp:const:int(0),exp:ident(NULL)]],st_return[exp[grammar(call),exp:ident(exp_find_key),exp:ident(clp),exp:ident(FSID_ENCODE_DEV),exp:ident(fsidv),exp:ident(NULL)]]]],def[fname(exp_get_fsid_key),funtype[fulltype[typec(N/H)],param[reg(),name(clp),fulltype[typec(N/H)]],param[reg(),name(fsid),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(mk_fsid),exp:ident(FSID_NUM),exp:ident(fsidv),exp:const:int(0),exp:const:int(0),exp:ident(fsid),exp:ident(NULL)]],st_return[exp[grammar(call),exp:ident(exp_find_key),exp:ident(clp),exp:ident(FSID_NUM),exp:ident(fsidv),exp:ident(NULL)]]]],def[fname(exp_get_by_name),funtype[fulltype[typec(N/H)],param[reg(),name(clp),fulltype[typec(N/H)]],param[reg(),name(mnt),fulltype[typec(N/H)]],param[reg(),name(dentry),fulltype[typec(N/H)]],param[reg(),name(reqp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp:??(N/H),st_return[exp[grammar(call),exp:ident(ERR_PTR),exp:??(N/H)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(key),ident(ex_client)],exp:ident(clp)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(key),ident(ex_path)],ident(mnt)],exp:ident(mnt)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(key),ident(ex_path)],ident(dentry)],exp:ident(dentry)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(svc_export_lookup),exp:&ref:exp:ident(key)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(exp),exp:ident(NULL)],st_return[exp[grammar(call),exp:ident(ERR_PTR),exp:??(N/H)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(cache_check),exp:&ref:exp:ident(svc_export_cache),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(exp),ident(h)],exp:ident(reqp)]]],sel_if[exp:ident(err),st_return[exp[grammar(call),exp:ident(ERR_PTR),exp:ident(err)]],estmt(NONE)],st_return[exp:ident(exp)]]],def[fname(exp_parent),funtype[fulltype[typec(N/H)],param[reg(),name(clp),fulltype[typec(N/H)]],param[reg(),name(mnt),fulltype[typec(N/H)]],param[reg(),name(dentry),fulltype[typec(N/H)]],param[reg(),name(reqp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(dget),exp:ident(dentry)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(exp_get_by_name),exp:ident(clp),exp:ident(mnt),exp:ident(dentry),exp:ident(reqp)]]],while[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(eq),exp[grammar(call),exp:ident(PTR_ERR),exp:ident(exp)],exp:??(N/H)],exp:??(N/H)],{}stmt[statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(parent),exp[grammar(call),exp:ident(dget_parent),exp:ident(dentry)]]],estmt[exp[grammar(call),exp:ident(dput),exp:ident(dentry)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(dentry),exp:ident(parent)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(exp_get_by_name),exp:ident(clp),exp:ident(mnt),exp:ident(dentry),exp:ident(reqp)]]]]],estmt[exp[grammar(call),exp:ident(dput),exp:ident(dentry)]],st_return[exp:ident(exp)]]],decl(N/H),def[fname(exp_readlock),funtype[fulltype[ctype[btype(void)]],param[reg(),name(),fulltype[ctype[btype(void)]]]],{}stmt[estmt[exp[grammar(call),exp:ident(down_read),exp:&ref:exp:ident(hash_sem)]]]],def[fname(exp_writelock),funtype[fulltype[ctype[btype(void)]],param[reg(),name(),fulltype[ctype[btype(void)]]]],{}stmt[estmt[exp[grammar(call),exp:ident(down_write),exp:&ref:exp:ident(hash_sem)]]]],def[fname(exp_readunlock),funtype[fulltype[ctype[btype(void)]],param[reg(),name(),fulltype[ctype[btype(void)]]]],{}stmt[estmt[exp[grammar(call),exp:ident(up_read),exp:&ref:exp:ident(hash_sem)]]]],def[fname(exp_writeunlock),funtype[fulltype[ctype[btype(void)]],param[reg(),name(),fulltype[ctype[btype(void)]]]],{}stmt[estmt[exp[grammar(call),exp:ident(up_write),exp:&ref:exp:ident(hash_sem)]]]],def[fname(exp_fsid_unhash),funtype[fulltype[ctype[btype(void)]],param[reg(),name(exp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(binary_arith),aop(&),exp[grammar(record_ptr),exp:ident(exp),ident(ex_flags)],exp:ident(NFSEXP_FSID)],exp:const:int(0)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ek),exp[grammar(call),exp:ident(exp_get_fsid_key),exp[grammar(record_ptr),exp:ident(exp),ident(ex_client)],exp[grammar(record_ptr),exp:ident(exp),ident(ex_fsid)]]]],sel_if[exp:??(N/H),{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(ek),ident(h)],ident(expiry_time)],exp[grammar(binary_arith),aop(-),exp[grammar(call),exp:ident(get_seconds)],exp:const:int(1)]]],estmt[exp[grammar(call),exp:ident(cache_put),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(ek),ident(h)],exp:&ref:exp:ident(svc_expkey_cache)]]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(svc_expkey_cache),ident(nextcheck)],exp[grammar(call),exp:ident(get_seconds)]]]]],def[fname(exp_fsid_hash),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(clp),fulltype[typec(N/H)]],param[reg(),name(exp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(binary_arith),aop(&),exp[grammar(record_ptr),exp:ident(exp),ident(ex_flags)],exp:ident(NFSEXP_FSID)],exp:const:int(0)],st_return[exp:const:int(0)],estmt(NONE)],estmt[exp[grammar(call),exp:ident(mk_fsid),exp:ident(FSID_NUM),exp:ident(fsid),exp:const:int(0),exp:const:int(0),exp[grammar(record_ptr),exp:ident(exp),ident(ex_fsid)],exp:ident(NULL)]],st_return[exp[grammar(call),exp:ident(exp_set_key),exp:ident(clp),exp:ident(FSID_NUM),exp:ident(fsid),exp:ident(exp)]]]],def[fname(exp_hash),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(clp),fulltype[typec(N/H)]],param[reg(),name(exp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),sel_if[exp[grammar(call),exp:ident(old_valid_dev),exp:ident(dev)],{}stmt[estmt[exp[grammar(call),exp:ident(mk_fsid),exp:ident(FSID_DEV),exp:ident(fsid),exp:ident(dev),exp[grammar(record_ptr),exp:ident(inode),ident(i_ino)],exp:const:int(0),exp:ident(NULL)]],st_return[exp[grammar(call),exp:ident(exp_set_key),exp:ident(clp),exp:ident(FSID_DEV),exp:ident(fsid),exp:ident(exp)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(mk_fsid),exp:ident(FSID_ENCODE_DEV),exp:ident(fsid),exp:ident(dev),exp[grammar(record_ptr),exp:ident(inode),ident(i_ino)],exp:const:int(0),exp:ident(NULL)]],st_return[exp[grammar(call),exp:ident(exp_set_key),exp:ident(clp),exp:ident(FSID_ENCODE_DEV),exp:ident(fsid),exp:ident(exp)]]]],def[fname(exp_unhash),funtype[fulltype[ctype[btype(void)]],param[reg(),name(exp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(ek),exp[grammar(call),exp:ident(exp_get_key),exp[grammar(record_ptr),exp:ident(exp),ident(ex_client)],exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(inode),ident(i_sb)],ident(s_dev)],exp[grammar(record_ptr),exp:ident(inode),ident(i_ino)]]]],sel_if[exp:??(N/H),{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(ek),ident(h)],ident(expiry_time)],exp[grammar(binary_arith),aop(-),exp[grammar(call),exp:ident(get_seconds)],exp:const:int(1)]]],estmt[exp[grammar(call),exp:ident(cache_put),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(ek),ident(h)],exp:&ref:exp:ident(svc_expkey_cache)]]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(svc_expkey_cache),ident(nextcheck)],exp[grammar(call),exp:ident(get_seconds)]]]]],def[fname(exp_export),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(nxp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],sel_if[exp[grammar(binary_logi),logiop(or),exp:??(N/H),exp:??(N/H)],statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(dprintk),exp:const:string(exp_export called for %s:%s (%x/%ld fl %x).\n),exp[grammar(record_ptr),exp:ident(nxp),ident(ex_client)],exp[grammar(record_ptr),exp:ident(nxp),ident(ex_path)],exp:??(N/H),exp:??(N/H),exp[grammar(record_ptr),exp:ident(nxp),ident(ex_flags)]]],estmt[exp[grammar(call),exp:ident(exp_writelock)]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(path_lookup),exp[grammar(record_ptr),exp:ident(nxp),ident(ex_path)],exp:const:int(0),exp:&ref:exp:ident(nd)]]],sel_if[exp:ident(err),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(exp_get_by_name),exp:ident(clp),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(dentry)],exp:ident(NULL)]]],estmt[exp[grammar(call),exp:ident(memset),exp:&ref:exp:ident(new),exp:const:int(0),exp:sizeof:exp:ident(new)]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(and),exp[grammar(binary_arith),aop(&),exp[grammar(record_ptr),exp:ident(nxp),ident(ex_flags)],exp:ident(NFSEXP_FSID)],exp:??(N/H)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(fsid_key),ident(ek_path)],ident(mnt)]],exp[grammar(binary_logi),logiop(or),exp[grammar(binary_logi),logiop(??),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(fsid_key),ident(ek_path)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(mnt)]],exp[grammar(binary_logi),logiop(??),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(fsid_key),ident(ek_path)],ident(dentry)],exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(dentry)]]]],statem(N/H),estmt(NONE)],sel_if[exp:??(N/H),{}stmt[estmt[exp[grammar(call),exp:ident(exp_fsid_unhash),exp:ident(exp)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(exp),ident(ex_flags)],exp[grammar(record_ptr),exp:ident(nxp),ident(ex_flags)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(exp),ident(ex_anon_uid)],exp[grammar(record_ptr),exp:ident(nxp),ident(ex_anon_uid)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(exp),ident(ex_anon_gid)],exp[grammar(record_ptr),exp:ident(nxp),ident(ex_anon_gid)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(exp),ident(ex_fsid)],exp[grammar(record_ptr),exp:ident(nxp),ident(ex_dev)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(exp_fsid_hash),exp:ident(clp),exp:ident(exp)]]],statem(N/H)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(check_export),exp[grammar(record_ptr),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(dentry)],ident(d_inode)],exp[grammar(record_ptr),exp:ident(nxp),ident(ex_flags)],exp:ident(NULL)]]],sel_if[exp:ident(err),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],estmt[exp[grammar(call),exp:ident(dprintk),exp:const:string(nfsd: creating export entry %p for client %p\n),exp:ident(exp),exp:ident(clp)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(new),ident(h)],ident(expiry_time)],exp:ident(NEVER)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(new),ident(h)],ident(flags)],exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(new),ident(ex_pathname)],exp[grammar(call),exp:ident(kstrdup),exp[grammar(record_ptr),exp:ident(nxp),ident(ex_path)],exp:ident(GFP_KERNEL)]]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(new),ident(ex_client)],exp:ident(clp)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(new),ident(ex_path)],exp[grammar(record_acc),exp:ident(nd),ident(path)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(new),ident(ex_flags)],exp[grammar(record_ptr),exp:ident(nxp),ident(ex_flags)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(new),ident(ex_anon_uid)],exp[grammar(record_ptr),exp:ident(nxp),ident(ex_anon_uid)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(new),ident(ex_anon_gid)],exp[grammar(record_ptr),exp:ident(nxp),ident(ex_anon_gid)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(new),ident(ex_fsid)],exp[grammar(record_ptr),exp:ident(nxp),ident(ex_dev)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(svc_export_lookup),exp:&ref:exp:ident(new)]]],sel_if[exp:ident(exp),estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(svc_export_update),exp:&ref:exp:ident(new),exp:ident(exp)]]],estmt(NONE)],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(or),exp[grammar(call),exp:ident(exp_hash),exp:ident(clp),exp:ident(exp)],exp[grammar(call),exp:ident(exp_fsid_hash),exp:ident(clp),exp:ident(exp)]],{}stmt[estmt[exp[grammar(call),exp:ident(exp_do_unexport),exp:ident(exp)]],estmt[exp[grammar(call),exp:ident(cache_flush)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:const:int(0)]]],statem(N/H),sel_if[exp:ident(exp),estmt[exp[grammar(call),exp:ident(exp_put),exp:ident(exp)]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(and),exp:ident(fsid_key),exp:??(N/H)],estmt[exp[grammar(call),exp:ident(cache_put),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(fsid_key),ident(h)],exp:&ref:exp:ident(svc_expkey_cache)]],estmt(NONE)],sel_if[exp:ident(clp),estmt[exp[grammar(call),exp:ident(auth_domain_put),exp:ident(clp)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(path_put),exp[grammar(&ref),grammar(exp),grammar(record_acc),exp:ident(nd),ident(path)]]],statem(N/H),statem(N/H)]],def[fname(exp_do_unexport),funtype[fulltype[ctype[btype(void)]],param[reg(),name(unexp),fulltype[typec(N/H)]]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(unexp),ident(h)],ident(expiry_time)],exp[grammar(binary_arith),aop(-),exp[grammar(call),exp:ident(get_seconds)],exp:const:int(1)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(svc_export_cache),ident(nextcheck)],exp[grammar(call),exp:ident(get_seconds)]]],estmt[exp[grammar(call),exp:ident(exp_unhash),exp:ident(unexp)]],estmt[exp[grammar(call),exp:ident(exp_fsid_unhash),exp:ident(unexp)]]]],def[fname(exp_unexport),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(nxp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),sel_if[exp[grammar(binary_logi),logiop(or),exp:??(N/H),exp:??(N/H)],st_return[exp:??(N/H)],estmt(NONE)],estmt[exp[grammar(call),exp:ident(exp_writelock)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(dom),exp[grammar(call),exp:ident(auth_domain_find),exp[grammar(record_ptr),exp:ident(nxp),ident(ex_client)]]]],sel_if[exp:??(N/H),{}stmt[estmt[exp[grammar(call),exp:ident(dprintk),exp:const:string(nfsd: unexport couldn't find %s\n),exp[grammar(record_ptr),exp:ident(nxp),ident(ex_client)]]],statem(N/H)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(path_lookup),exp[grammar(record_ptr),exp:ident(nxp),ident(ex_path)],exp:const:int(0),exp:&ref:exp:ident(nd)]]],sel_if[exp:ident(err),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(exp_get_by_name),exp:ident(dom),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(dentry)],exp:ident(NULL)]]],estmt[exp[grammar(call),exp:ident(path_put),exp[grammar(&ref),grammar(exp),grammar(record_acc),exp:ident(nd),ident(path)]]],sel_if[exp[grammar(call),exp:ident(IS_ERR),exp:ident(exp)],statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(exp_do_unexport),exp:ident(exp)]],estmt[exp[grammar(call),exp:ident(exp_put),exp:ident(exp)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:const:int(0)]],statem(N/H),estmt[exp[grammar(call),exp:ident(cache_flush)]],statem(N/H),st_return[exp:ident(err)]]],def[fname(exp_rootfh),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(clp),fulltype[typec(N/H)]],param[reg(),name(path),fulltype[typec(N/H)]],param[reg(),name(f),fulltype[typec(N/H)]],param[reg(),name(maxsize),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],sel_if[exp[grammar(call),exp:ident(path_lookup),exp:ident(path),exp:const:int(0),exp:&ref:exp:ident(nd)],{}stmt[estmt[exp[grammar(call),exp:ident(printk),exp:const:string(nfsd: exp_rootfh path not found %s),exp:ident(path)]],st_return[exp:ident(err)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(inode),exp[grammar(record_ptr),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(dentry)],ident(d_inode)]]],estmt[exp[grammar(call),exp:ident(dprintk),exp:const:string(nfsd: exp_rootfh(%s [%p] %s:%s/%ld)\n),exp:ident(path),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(dentry)],exp[grammar(record_ptr),exp:ident(clp),ident(name)],exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(inode),ident(i_sb)],ident(s_id)],exp[grammar(record_ptr),exp:ident(inode),ident(i_ino)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(exp_parent),exp:ident(clp),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(dentry)],exp:ident(NULL)]]],sel_if[exp[grammar(call),exp:ident(IS_ERR),exp:ident(exp)],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(PTR_ERR),exp:ident(exp)]]],statem(N/H)],estmt(NONE)],estmt[exp[grammar(call),exp:ident(fh_init),exp:&ref:exp:ident(fh),exp:ident(maxsize)]],sel_if[exp[grammar(call),exp:ident(fh_compose),exp:&ref:exp:ident(fh),exp:ident(exp),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(dentry)],exp:ident(NULL)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:const:int(0)]]],estmt[exp[grammar(call),exp:ident(memcpy),exp:ident(f),exp[grammar(&ref),grammar(exp),grammar(record_acc),exp:ident(fh),ident(fh_handle)],exp[grammar(sizeoftype),grammar(fulltype),typec(N/H)]]],estmt[exp[grammar(call),exp:ident(fh_put),exp:&ref:exp:ident(fh)]],estmt[exp[grammar(call),exp:ident(exp_put),exp:ident(exp)]],statem(N/H),st_return[exp:ident(err)]]],def[fname(exp_find),funtype[fulltype[typec(N/H)],param[reg(),name(clp),fulltype[typec(N/H)]],param[reg(),name(fsid_type),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(fsidv),fulltype[typec(N/H)]],param[reg(),name(reqp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp[grammar(call),exp:ident(IS_ERR),exp:ident(ek)],st_return[exp[grammar(call),exp:ident(ERR_CAST),exp:ident(ek)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(exp_get_by_name),exp:ident(clp),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(ek),ident(ek_path)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(ek),ident(ek_path)],ident(dentry)],exp:ident(reqp)]]],estmt[exp[grammar(call),exp:ident(cache_put),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(ek),ident(h)],exp:&ref:exp:ident(svc_expkey_cache)]],sel_if[exp[grammar(call),exp:ident(IS_ERR),exp:ident(exp)],st_return[exp[grammar(call),exp:ident(ERR_CAST),exp:ident(exp)]],estmt(NONE)],st_return[exp:ident(exp)]]],def[fname(check_nfsd_access),funtype[fulltype[typec(N/H)],param[reg(),name(exp),fulltype[typec(N/H)]],param[reg(),name(rqstp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(exp),ident(ex_client)],exp[grammar(record_ptr),exp:ident(rqstp),ident(rq_gssclient)]],st_return[exp:const:int(0)],estmt(NONE)],for[exp[grammar(assign),simple_assi(=),exp:ident(f),exp[grammar(record_ptr),exp:ident(exp),ident(ex_flavors)]],exp[grammar(binary_logi),logiop(??),exp:ident(f),exp:ident(end)],exp:??(N/H),{}stmt[sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(f),ident(pseudoflavor)],exp[grammar(record_ptr),exp:ident(rqstp),ident(rq_flavor)]],st_return[exp:const:int(0)],estmt(NONE)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(exp),ident(ex_nflavors)],exp:const:int(0)],{}stmt[sel_if[exp[grammar(binary_logi),logiop(or),exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(rqstp),ident(rq_flavor)],exp:ident(RPC_AUTH_NULL)],exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(rqstp),ident(rq_flavor)],exp:ident(RPC_AUTH_UNIX)]],st_return[exp:const:int(0)],estmt(NONE)]],estmt(NONE)],st_return[exp:ident(nfserr_wrongsec)]]],def[fname(rqst_exp_get_by_name),funtype[fulltype[typec(N/H)],param[reg(),name(rqstp),fulltype[typec(N/H)]],param[reg(),name(mnt),fulltype[typec(N/H)]],param[reg(),name(dentry),fulltype[typec(N/H)]]],{}stmt[statem(N/H),sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(rqstp),ident(rq_client)],exp:ident(NULL)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(exp_get_by_name),exp[grammar(record_ptr),exp:ident(rqstp),ident(rq_client)],exp:ident(mnt),exp:ident(dentry),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(rqstp),ident(rq_chandle)]]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(call),exp:ident(PTR_ERR),exp:ident(exp)],exp:??(N/H)],statem(N/H),estmt(NONE)],sel_if[exp[grammar(call),exp:ident(IS_ERR),exp:ident(exp)],st_return[exp:ident(exp)],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(exp),ident(ex_nflavors)],exp:const:int(0)],st_return[exp:ident(exp)],estmt(NONE)],statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(gssexp),exp[grammar(call),exp:ident(exp_get_by_name),exp[grammar(record_ptr),exp:ident(rqstp),ident(rq_gssclient)],exp:ident(mnt),exp:ident(dentry),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(rqstp),ident(rq_chandle)]]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(call),exp:ident(PTR_ERR),exp:ident(gssexp)],exp:??(N/H)],st_return[exp:ident(exp)],estmt(NONE)],sel_if[exp:??(N/H),estmt[exp[grammar(call),exp:ident(exp_put),exp:ident(exp)]],estmt(NONE)],st_return[exp:ident(gssexp)]]],def[fname(rqst_exp_find),funtype[fulltype[typec(N/H)],param[reg(),name(rqstp),fulltype[typec(N/H)]],param[reg(),name(fsid_type),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(fsidv),fulltype[typec(N/H)]]],{}stmt[statem(N/H),sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(rqstp),ident(rq_client)],exp:ident(NULL)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(exp_find),exp[grammar(record_ptr),exp:ident(rqstp),ident(rq_client)],exp:ident(fsid_type),exp:ident(fsidv),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(rqstp),ident(rq_chandle)]]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(call),exp:ident(PTR_ERR),exp:ident(exp)],exp:??(N/H)],statem(N/H),estmt(NONE)],sel_if[exp[grammar(call),exp:ident(IS_ERR),exp:ident(exp)],st_return[exp:ident(exp)],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(exp),ident(ex_nflavors)],exp:const:int(0)],st_return[exp:ident(exp)],estmt(NONE)],statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(gssexp),exp[grammar(call),exp:ident(exp_find),exp[grammar(record_ptr),exp:ident(rqstp),ident(rq_gssclient)],exp:ident(fsid_type),exp:ident(fsidv),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(rqstp),ident(rq_chandle)]]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(call),exp:ident(PTR_ERR),exp:ident(gssexp)],exp:??(N/H)],st_return[exp:ident(exp)],estmt(NONE)],sel_if[exp:??(N/H),estmt[exp[grammar(call),exp:ident(exp_put),exp:ident(exp)]],estmt(NONE)],st_return[exp:ident(gssexp)]]],def[fname(rqst_exp_parent),funtype[fulltype[typec(N/H)],param[reg(),name(rqstp),fulltype[typec(N/H)]],param[reg(),name(mnt),fulltype[typec(N/H)]],param[reg(),name(dentry),fulltype[typec(N/H)]]],{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(dget),exp:ident(dentry)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(rqst_exp_get_by_name),exp:ident(rqstp),exp:ident(mnt),exp:ident(dentry)]]],while[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(eq),exp[grammar(call),exp:ident(PTR_ERR),exp:ident(exp)],exp:??(N/H)],exp:??(N/H)],{}stmt[statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(parent),exp[grammar(call),exp:ident(dget_parent),exp:ident(dentry)]]],estmt[exp[grammar(call),exp:ident(dput),exp:ident(dentry)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(dentry),exp:ident(parent)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(rqst_exp_get_by_name),exp:ident(rqstp),exp:ident(mnt),exp:ident(dentry)]]]]],estmt[exp[grammar(call),exp:ident(dput),exp:ident(dentry)]],st_return[exp:ident(exp)]]],def[fname(exp_pseudoroot),funtype[fulltype[typec(N/H)],param[reg(),name(rqstp),fulltype[typec(N/H)]],param[reg(),name(fhp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(mk_fsid),exp:ident(FSID_NUM),exp:ident(fsidv),exp:const:int(0),exp:const:int(0),exp:const:int(0),exp:ident(NULL)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(rqst_exp_find),exp:ident(rqstp),exp:ident(FSID_NUM),exp:ident(fsidv)]]],sel_if[exp[grammar(call),exp:ident(IS_ERR),exp:ident(exp)],st_return[exp[grammar(call),exp:ident(nfserrno),exp[grammar(call),exp:ident(PTR_ERR),exp:ident(exp)]]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(rv),exp[grammar(call),exp:ident(fh_compose),exp:ident(fhp),exp:ident(exp),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(exp),ident(ex_path)],ident(dentry)],exp:ident(NULL)]]],sel_if[exp:ident(rv),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(rv),exp[grammar(call),exp:ident(check_nfsd_access),exp:ident(exp),exp:ident(rqstp)]]],statem(N/H),st_return[exp:ident(rv)]]],NCP(N/H),def[fname(e_next),funtype[fulltype[typec(N/H)],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(p),fulltype[typec(N/H)]],param[reg(),name(pos),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(p),exp:ident(SEQ_START_TOKEN)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(hash),exp:const:int(0)]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(ch),ident(next)],exp:ident(NULL)],{}stmt[estmt[exp:??(N/H)],estmt[exp[grammar(assign),op_assi(+=),exp:*ref:exp:ident(pos),exp[grammar(binary_arith),aop(<<),exp:const:int(1LL),exp:const:int(32)]]]],{}stmt[estmt[exp:??(N/H)],st_return[exp[grammar(record_ptr),exp:ident(ch),ident(next)]]]]],estmt[exp[grammar(assign),op_assi(&=),exp:*ref:exp:ident(pos),exp:??(N/H)]],while[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp:ident(hash),exp:ident(EXPORT_HASHMAX)],exp[grammar(binary_logi),logiop(eq),exp[grammar(array_acc),exp:ident(export_table),exp:ident(hash)],exp:ident(NULL)]],{}stmt[estmt[exp:??(N/H)],estmt[exp[grammar(assign),op_assi(+=),exp:*ref:exp:ident(pos),exp[grammar(binary_arith),aop(<<),exp:const:int(1LL),exp:const:int(32)]]]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(hash),exp:ident(EXPORT_HASHMAX)],st_return[exp:ident(NULL)],estmt(NONE)],estmt[exp:??(N/H)],st_return[exp[grammar(array_acc),exp:ident(export_table),exp:ident(hash)]]]],NCP(N/H),decl(N/H),def[fname(show_expflags),funtype[fulltype[ctype[btype(void)]],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(flags),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(mask),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[statem(N/H),statem(N/H),for[exp[grammar(assign),simple_assi(=),exp:ident(flg),exp:ident(expflags)],exp[grammar(record_ptr),exp:ident(flg),ident(flag)],exp:??(N/H),{}stmt[sel_if[exp[grammar(binary_arith),aop(&),exp[grammar(record_ptr),exp:ident(flg),ident(flag)],exp:??(N/H)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(state),exp[grammar(cond3),exp[grammar(binary_arith),aop(&),exp[grammar(record_ptr),exp:ident(flg),ident(flag)],exp:ident(flags)],exp:const:int(0),exp:const:int(1)]]],sel_if[exp[grammar(*ref),grammar(exp),grammar(array_acc),exp[grammar(record_ptr),exp:ident(flg),ident(name)],exp:ident(state)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(%s%s),exp[grammar(cond3),exp:??(N/H),exp:const:string(,),exp:const:string()],exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(flg),ident(name)],exp:ident(state)]]],estmt(NONE)]]]]],def[fname(show_secinfo_flags),funtype[fulltype[ctype[btype(void)]],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(flags),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(,)]],estmt[exp[grammar(call),exp:ident(show_expflags),exp:ident(m),exp:ident(flags),exp:ident(NFSEXP_SECINFO_FLAGS)]]]],def[fname(show_secinfo),funtype[fulltype[ctype[btype(void)]],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(exp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(exp),ident(ex_nflavors)],exp:const:int(0)],statem(N/H),estmt(NONE)],for[exp[grammar(assign),simple_assi(=),exp:ident(f),exp[grammar(record_ptr),exp:ident(exp),ident(ex_flavors)]],exp[grammar(binary_logi),logiop(??),exp:ident(f),exp:ident(end)],exp:??(N/H),{}stmt[sel_if[exp[grammar(binary_logi),logiop(or),exp:ident(first),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(f),ident(flags)],exp:ident(lastflags)]],{}stmt[sel_if[exp:??(N/H),estmt[exp[grammar(call),exp:ident(show_secinfo_flags),exp:ident(m),exp:ident(lastflags)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(,sec=%d),exp[grammar(record_ptr),exp:ident(f),ident(pseudoflavor)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(lastflags),exp[grammar(record_ptr),exp:ident(f),ident(flags)]]]],{}stmt[estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(:%d),exp[grammar(record_ptr),exp:ident(f),ident(pseudoflavor)]]]]]]],estmt[exp[grammar(call),exp:ident(show_secinfo_flags),exp:ident(m),exp:ident(lastflags)]]]],def[fname(exp_flags),funtype[fulltype[ctype[btype(void)]],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(flag),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(fsid),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(anonu),fulltype[typec(N/H)]],param[reg(),name(anong),fulltype[typec(N/H)]],param[reg(),name(fsloc),fulltype[typec(N/H)]]],{}stmt[estmt[exp[grammar(call),exp:ident(show_expflags),exp:ident(m),exp:ident(flag),exp:ident(NFSEXP_ALLFLAGS)]],sel_if[exp[grammar(binary_arith),aop(&),exp:ident(flag),exp:ident(NFSEXP_FSID)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(,fsid=%d),exp:ident(fsid)]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp:ident(anonu),exp:??(N/H)],exp[grammar(binary_logi),logiop(??),exp:ident(anonu),exp[grammar(binary_arith),aop(-),exp:const:int(0x10000),exp:const:int(2)]]],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(,anonuid=%u),exp:ident(anonu)]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp:ident(anong),exp[grammar(binary_arith),aop(-),exp:ident(gid_t),exp:const:int(2)]],exp[grammar(binary_logi),logiop(??),exp:ident(anong),exp[grammar(binary_arith),aop(-),exp:const:int(0x10000),exp:const:int(2)]]],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(,anongid=%u),exp:ident(anong)]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(and),exp:ident(fsloc),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations_count)],exp:const:int(0)]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(,%s=),exp:ident(loctype)]],estmt[exp[grammar(call),exp:ident(seq_escape),exp:ident(m),exp[grammar(record_acc),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations)],exp:const:int(0)],ident(path)],exp:const:string(,;@ \t\n\\)]],estmt[exp[grammar(call),exp:ident(seq_putc),exp:ident(m),exp:const:other(N/H)]],estmt[exp[grammar(call),exp:ident(seq_escape),exp:ident(m),exp[grammar(record_acc),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations)],exp:const:int(0)],ident(hosts)],exp:const:string(,;@ \t\n\\)]],for[exp[grammar(assign),simple_assi(=),exp:ident(i),exp:const:int(1)],exp[grammar(binary_logi),logiop(??),exp:ident(i),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations_count)]],exp:??(N/H),{}stmt[estmt[exp[grammar(call),exp:ident(seq_putc),exp:ident(m),exp:const:other(N/H)]],estmt[exp[grammar(call),exp:ident(seq_escape),exp:ident(m),exp[grammar(record_acc),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations)],exp:ident(i)],ident(path)],exp:const:string(,;@ \t\n\\)]],estmt[exp[grammar(call),exp:ident(seq_putc),exp:ident(m),exp:const:other(N/H)]],estmt[exp[grammar(call),exp:ident(seq_escape),exp:ident(m),exp[grammar(record_acc),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations)],exp:ident(i)],ident(hosts)],exp:const:string(,;@ \t\n\\)]]]]],estmt(NONE)]]],def[fname(e_show),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(p),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(p),exp:ident(SEQ_START_TOKEN)],{}stmt[estmt[exp[grammar(call),exp:ident(seq_puts),exp:ident(m),exp:const:string(# Version 1.1\n)]],estmt[exp[grammar(call),exp:ident(seq_puts),exp:ident(m),exp:const:string(# Path Client(Flags) # IPs\n)]],st_return[exp:const:int(0)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(cache_get),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(exp),ident(h)]]],sel_if[exp[grammar(call),exp:ident(cache_check),exp:&ref:exp:ident(svc_export_cache),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(exp),ident(h)],exp:ident(NULL)],st_return[exp:const:int(0)],estmt(NONE)],estmt[exp[grammar(call),exp:ident(cache_put),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(exp),ident(h)],exp:&ref:exp:ident(svc_export_cache)]],st_return[exp[grammar(call),exp:ident(svc_export_show),exp:ident(m),exp:&ref:exp:ident(svc_export_cache),exp:ident(cp)]]]],decl(N/H),def[fname(exp_addclient),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(ncp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(ncp),ident(cl_naddr)],exp:ident(NFSCLNT_ADDRMAX)],statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(exp_writelock)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(dom),exp[grammar(call),exp:ident(unix_domain_find),exp[grammar(record_ptr),exp:ident(ncp),ident(cl_ident)]]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],for[exp[grammar(assign),simple_assi(=),exp:ident(i),exp:const:int(0)],exp[grammar(binary_logi),logiop(??),exp:ident(i),exp[grammar(record_ptr),exp:ident(ncp),ident(cl_naddr)]],exp:??(N/H),estmt[exp[grammar(call),exp:ident(auth_unix_add_addr),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(ncp),ident(cl_addrlist)],exp:ident(i)],exp:ident(dom)]]],estmt[exp[grammar(call),exp:ident(auth_unix_forget_old),exp:ident(dom)]],estmt[exp[grammar(call),exp:ident(auth_domain_put),exp:ident(dom)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:const:int(0)]],statem(N/H),statem(N/H)]],def[fname(exp_delclient),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(ncp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(exp_writelock)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(dom),exp[grammar(call),exp:ident(auth_domain_find),exp[grammar(record_ptr),exp:ident(ncp),ident(cl_ident)]]]],sel_if[exp:ident(dom),{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(auth_unix_forget_old),exp:ident(dom)]]],estmt[exp[grammar(call),exp:ident(auth_domain_put),exp:ident(dom)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(exp_writeunlock)]],statem(N/H)]],def[fname(exp_verify_string),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(cp),fulltype[typec(N/H)]],param[reg(),name(max),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[statem(N/H),for[exp[grammar(assign),simple_assi(=),exp:ident(i),exp:const:int(0)],exp[grammar(binary_logi),logiop(??),exp:ident(i),exp:ident(max)],exp:??(N/H),sel_if[exp:??(N/H),st_return[exp:ident(i)],estmt(NONE)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(array_acc),exp:ident(cp),exp:ident(i)],exp:const:int(0)]],estmt[exp[grammar(call),exp:ident(printk),exp:const:other(N/H),exp:ident(cp)]],st_return[exp:const:int(0)]]],def[fname(nfsd_export_init),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(),fulltype[ctype[btype(void)]]]],{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(dprintk),exp:const:string(nfsd: initializing export module.\n)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(rv),exp[grammar(call),exp:ident(cache_register),exp:&ref:exp:ident(svc_export_cache)]]],sel_if[exp:ident(rv),st_return[exp:ident(rv)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(rv),exp[grammar(call),exp:ident(cache_register),exp:&ref:exp:ident(svc_expkey_cache)]]],sel_if[exp:ident(rv),estmt[exp[grammar(call),exp:ident(cache_unregister),exp:&ref:exp:ident(svc_export_cache)]],estmt(NONE)],st_return[exp:ident(rv)]]],def[fname(nfsd_export_flush),funtype[fulltype[ctype[btype(void)]],param[reg(),name(),fulltype[ctype[btype(void)]]]],{}stmt[estmt[exp[grammar(call),exp:ident(exp_writelock)]],estmt[exp[grammar(call),exp:ident(cache_purge),exp:&ref:exp:ident(svc_expkey_cache)]],estmt[exp[grammar(call),exp:ident(cache_purge),exp:&ref:exp:ident(svc_export_cache)]],estmt[exp[grammar(call),exp:ident(exp_writeunlock)]]]],def[fname(nfsd_export_shutdown),funtype[fulltype[ctype[btype(void)]],param[reg(),name(),fulltype[ctype[btype(void)]]]],{}stmt[estmt[exp[grammar(call),exp:ident(dprintk),exp:const:string(nfsd: shutting down export module.\n)]],estmt[exp[grammar(call),exp:ident(exp_writelock)]],estmt[exp[grammar(call),exp:ident(cache_unregister),exp:&ref:exp:ident(svc_expkey_cache)]],estmt[exp[grammar(call),exp:ident(cache_unregister),exp:&ref:exp:ident(svc_export_cache)]],estmt[exp[grammar(call),exp:ident(svcauth_unix_purge)]],estmt[exp[grammar(call),exp:ident(exp_writeunlock)]],estmt[exp[grammar(call),exp:ident(dprintk),exp:const:string(nfsd: export shutdown complete.\n)]]]]] ==> prg2[define(N/H),includeN[inc_elem(linux),inc_elem(unistd.h)],includeN[inc_elem(linux),inc_elem(slab.h)],includeN[inc_elem(linux),inc_elem(stat.h)],includeN[inc_elem(linux),inc_elem(in.h)],includeN[inc_elem(linux),inc_elem(seq_file.h)],includeN[inc_elem(linux),inc_elem(syscalls.h)],includeN[inc_elem(linux),inc_elem(rwsem.h)],includeN[inc_elem(linux),inc_elem(dcache.h)],includeN[inc_elem(linux),inc_elem(namei.h)],includeN[inc_elem(linux),inc_elem(mount.h)],includeN[inc_elem(linux),inc_elem(hash.h)],includeN[inc_elem(linux),inc_elem(module.h)],includeN[inc_elem(linux),inc_elem(exportfs.h)],includeN[inc_elem(linux),inc_elem(sunrpc),inc_elem(svc.h)],includeN[inc_elem(linux),inc_elem(nfsd),inc_elem(nfsd.h)],includeN[inc_elem(linux),inc_elem(nfsd),inc_elem(nfsfh.h)],includeN[inc_elem(linux),inc_elem(nfsd),inc_elem(syscall.h)],includeN[inc_elem(linux),inc_elem(lockd),inc_elem(bind.h)],includeN[inc_elem(linux),inc_elem(sunrpc),inc_elem(msg_prot.h)],includeN[inc_elem(linux),inc_elem(sunrpc),inc_elem(gss_api.h)],define(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),define(N/H),define(N/H),define(N/H),decl(N/H),def[fname(expkey_put),funtype[fulltype[ctype[btype(void)]],param[reg(),name(ref),fulltype[typec(N/H)]]],{}stmt[statem(N/H),sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(call),exp:ident(test_bit),exp:ident(CACHE_VALID),exp[grammar(&ref),grammar(exp),grammar(record_acc),exp[grammar(record_ptr),exp:ident(key),ident(h)],ident(flags)]],exp:??(N/H)],estmt[exp[grammar(call),exp:ident(path_put),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(key),ident(ek_path)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(auth_domain_put),exp[grammar(record_ptr),exp:ident(key),ident(ek_client)]]],estmt[exp[grammar(call),exp:ident(kfree),exp:ident(key)]]]],def[fname(expkey_request),funtype[fulltype[ctype[btype(void)]],param[reg(),name(cd),fulltype[typec(N/H)]],param[reg(),name(h),fulltype[typec(N/H)]],param[reg(),name(bpp),fulltype[typec(N/H)]],param[reg(),name(blen),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(qword_add),exp:ident(bpp),exp:ident(blen),exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(ek),ident(ek_client)],ident(name)]]],estmt[exp[grammar(call),exp:ident(snprintf),exp:ident(type),exp:const:int(5),exp:const:string(%d),exp[grammar(record_ptr),exp:ident(ek),ident(ek_fsidtype)]]],estmt[exp[grammar(call),exp:ident(qword_add),exp:ident(bpp),exp:ident(blen),exp:ident(type)]],estmt[exp[grammar(call),exp:ident(qword_addhex),exp:ident(bpp),exp:ident(blen),exp:??(N/H),exp[grammar(call),exp:ident(key_len),exp[grammar(record_ptr),exp:ident(ek),ident(ek_fsidtype)]]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(array_acc),exp:*ref:exp:ident(bpp),exp:??(N/H)],exp:const:other(N/H)]]]],decl(N/H),decl(N/H),decl(N/H),def[fname(expkey_parse),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(cd),fulltype[typec(N/H)]],param[reg(),name(mesg),fulltype[typec(N/H)]],param[reg(),name(mlen),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(array_acc),exp:ident(mesg),exp[grammar(binary_arith),aop(-),exp:ident(mlen),exp:const:int(1)]],exp:const:other(N/H)],st_return[exp:??(N/H)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(array_acc),exp:ident(mesg),exp[grammar(binary_arith),aop(-),exp:ident(mlen),exp:const:int(1)]],exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(buf),exp[grammar(call),exp:ident(kmalloc),exp:ident(PAGE_SIZE),exp:ident(GFP_KERNEL)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(assign),simple_assi(=),exp:ident(len),exp[grammar(call),exp:ident(qword_get),exp:&ref:exp:ident(mesg),exp:ident(buf),exp:ident(PAGE_SIZE)]],exp:const:int(0)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(dom),exp[grammar(call),exp:ident(auth_domain_find),exp:ident(buf)]]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(dprintk),exp:const:string(found domain %s\n),exp:ident(buf)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(assign),simple_assi(=),exp:ident(len),exp[grammar(call),exp:ident(qword_get),exp:&ref:exp:ident(mesg),exp:ident(buf),exp:ident(PAGE_SIZE)]],exp:const:int(0)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(fsidtype),exp[grammar(call),exp:ident(simple_strtoul),exp:ident(buf),exp:&ref:exp:ident(ep),exp:const:int(10)]]],sel_if[exp:*ref:exp:ident(ep),statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(dprintk),exp:const:string(found fsidtype %d\n),exp:ident(fsidtype)]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(call),exp:ident(key_len),exp:ident(fsidtype)],exp:const:int(0)],statem(N/H),estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(assign),simple_assi(=),exp:ident(len),exp[grammar(call),exp:ident(qword_get),exp:&ref:exp:ident(mesg),exp:ident(buf),exp:ident(PAGE_SIZE)]],exp:const:int(0)],statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(dprintk),exp:const:string(found fsid length %d\n),exp:ident(len)]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(len),exp[grammar(call),exp:ident(key_len),exp:ident(fsidtype)]],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(key),ident(h)],ident(flags)],exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(key),ident(h)],ident(expiry_time)],exp[grammar(call),exp:ident(get_expiry),exp:&ref:exp:ident(mesg)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(key),ident(h)],ident(expiry_time)],exp:const:int(0)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(key),ident(ek_client)],exp:ident(dom)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(key),ident(ek_fsidtype)],exp:ident(fsidtype)]],estmt[exp[grammar(call),exp:ident(memcpy),exp[grammar(record_acc),exp:ident(key),ident(ek_fsid)],exp:ident(buf),exp:ident(len)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ek),exp[grammar(call),exp:ident(svc_expkey_lookup),exp:&ref:exp:ident(key)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(assign),simple_assi(=),exp:ident(len),exp[grammar(call),exp:ident(qword_get),exp:&ref:exp:ident(mesg),exp:ident(buf),exp:ident(PAGE_SIZE)]],exp:const:int(0)],statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(dprintk),exp:const:string(Path seems to be <%s>\n),exp:ident(buf)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:const:int(0)]],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(len),exp:const:int(0)],{}stmt[estmt[exp[grammar(call),exp:ident(set_bit),exp:ident(CACHE_NEGATIVE),exp[grammar(&ref),grammar(exp),grammar(record_acc),exp[grammar(record_acc),exp:ident(key),ident(h)],ident(flags)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ek),exp[grammar(call),exp:ident(svc_expkey_update),exp:&ref:exp:ident(key),exp:ident(ek)]]],sel_if[exp:ident(ek),estmt[exp[grammar(call),exp:ident(cache_put),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(ek),ident(h)],exp:&ref:exp:ident(svc_expkey_cache)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]]]],{}stmt[statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(path_lookup),exp:ident(buf),exp:const:int(0),exp:&ref:exp:ident(nd)]]],sel_if[exp:ident(err),statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(dprintk),exp:const:string(Found the path %s\n),exp:ident(buf)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(key),ident(ek_path)],exp[grammar(record_acc),exp:ident(nd),ident(path)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ek),exp[grammar(call),exp:ident(svc_expkey_update),exp:&ref:exp:ident(key),exp:ident(ek)]]],sel_if[exp:ident(ek),estmt[exp[grammar(call),exp:ident(cache_put),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(ek),ident(h)],exp:&ref:exp:ident(svc_expkey_cache)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]]],estmt[exp[grammar(call),exp:ident(path_put),exp[grammar(&ref),grammar(exp),grammar(record_acc),exp:ident(nd),ident(path)]]]]],estmt[exp[grammar(call),exp:ident(cache_flush)]],statem(N/H),estmt[exp[grammar(call),exp:ident(kfree),exp:ident(buf)]],st_return[exp:ident(err)]]],def[fname(expkey_show),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(cd),fulltype[typec(N/H)]],param[reg(),name(h),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(h),exp:ident(NULL)],{}stmt[estmt[exp[grammar(call),exp:ident(seq_puts),exp:ident(m),exp:const:string(#domain fsidtype fsid [path]\n)]],st_return[exp:const:int(0)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ek),exp[grammar(call),exp:ident(container_of),exp:ident(h),argtype(N/H),exp:ident(h)]]],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(%s %d 0x),exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(ek),ident(ek_client)],ident(name)],exp[grammar(record_ptr),exp:ident(ek),ident(ek_fsidtype)]]],for[exp[grammar(assign),simple_assi(=),exp:ident(i),exp:const:int(0)],exp[grammar(binary_logi),logiop(??),exp:ident(i),exp[grammar(binary_arith),aop(/),exp[grammar(call),exp:ident(key_len),exp[grammar(record_ptr),exp:ident(ek),ident(ek_fsidtype)]],exp:const:int(4)]],exp:??(N/H),estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(%08x),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(ek),ident(ek_fsid)],exp:ident(i)]]]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(call),exp:ident(test_bit),exp:ident(CACHE_VALID),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(h),ident(flags)]],exp:??(N/H)],{}stmt[estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( )]],estmt[exp[grammar(call),exp:ident(seq_path),exp:ident(m),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(ek),ident(ek_path)],exp:const:string(\\ \t\n)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(\n)]],st_return[exp:const:int(0)]]],def[fname(expkey_match),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(a),fulltype[typec(N/H)]],param[reg(),name(b),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp[grammar(binary_logi),logiop(or),exp[grammar(binary_logi),logiop(or),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(orig),ident(ek_fsidtype)],exp[grammar(record_ptr),exp:ident(new),ident(ek_fsidtype)]],exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(orig),ident(ek_client)],exp[grammar(record_ptr),exp:ident(new),ident(ek_client)]]],exp[grammar(binary_logi),logiop(??),exp[grammar(call),exp:ident(memcmp),exp[grammar(record_ptr),exp:ident(orig),ident(ek_fsid)],exp[grammar(record_ptr),exp:ident(new),ident(ek_fsid)],exp[grammar(call),exp:ident(key_len),exp[grammar(record_ptr),exp:ident(orig),ident(ek_fsidtype)]]],exp:const:int(0)]],st_return[exp:const:int(0)],estmt(NONE)],st_return[exp:const:int(1)]]],def[fname(expkey_init),funtype[fulltype[ctype[btype(void)]],param[reg(),name(cnew),fulltype[typec(N/H)]],param[reg(),name(citem),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(kref_get),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp[grammar(record_ptr),exp:ident(item),ident(ek_client)],ident(ref)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(new),ident(ek_client)],exp[grammar(record_ptr),exp:ident(item),ident(ek_client)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(new),ident(ek_fsidtype)],exp[grammar(record_ptr),exp:ident(item),ident(ek_fsidtype)]]],estmt[exp[grammar(call),exp:ident(memcpy),exp[grammar(record_ptr),exp:ident(new),ident(ek_fsid)],exp[grammar(record_ptr),exp:ident(item),ident(ek_fsid)],exp[grammar(sizeof),grammar(exp),grammar(record_ptr),exp:ident(new),ident(ek_fsid)]]]]],def[fname(expkey_update),funtype[fulltype[ctype[btype(void)]],param[reg(),name(cnew),fulltype[typec(N/H)]],param[reg(),name(citem),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(new),ident(ek_path)],exp[grammar(record_ptr),exp:ident(item),ident(ek_path)]]],estmt[exp[grammar(call),exp:ident(path_get),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(item),ident(ek_path)]]]]],def[fname(expkey_alloc),funtype[fulltype[typec(N/H)],param[reg(),name(),fulltype[ctype[btype(void)]]]],{}stmt[statem(N/H),sel_if[exp:ident(i),st_return[exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(i),ident(h)]],st_return[exp:ident(NULL)]]]],decl(N/H),def[fname(svc_expkey_lookup),funtype[fulltype[typec(N/H)],param[reg(),name(item),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),op_assi(x=),exp:ident(hash),exp[grammar(call),exp:ident(hash_mem),exp:ident(cp),exp:ident(len),exp:ident(EXPKEY_HASHBITS)]]],estmt[exp[grammar(assign),op_assi(x=),exp:ident(hash),exp[grammar(call),exp:ident(hash_ptr),exp[grammar(record_ptr),exp:ident(item),ident(ek_client)],exp:ident(EXPKEY_HASHBITS)]]],estmt[exp[grammar(assign),op_assi(&=),exp:ident(hash),exp:ident(EXPKEY_HASHMASK)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ch),exp[grammar(call),exp:ident(sunrpc_cache_lookup),exp:&ref:exp:ident(svc_expkey_cache),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(item),ident(h)],exp:ident(hash)]]],sel_if[exp:ident(ch),st_return[exp[grammar(call),exp:ident(container_of),exp:ident(ch),argtype(N/H),exp:ident(h)]],st_return[exp:ident(NULL)]]]],def[fname(svc_expkey_update),funtype[fulltype[typec(N/H)],param[reg(),name(new),fulltype[typec(N/H)]],param[reg(),name(old),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),op_assi(x=),exp:ident(hash),exp[grammar(call),exp:ident(hash_mem),exp:ident(cp),exp:ident(len),exp:ident(EXPKEY_HASHBITS)]]],estmt[exp[grammar(assign),op_assi(x=),exp:ident(hash),exp[grammar(call),exp:ident(hash_ptr),exp[grammar(record_ptr),exp:ident(new),ident(ek_client)],exp:ident(EXPKEY_HASHBITS)]]],estmt[exp[grammar(assign),op_assi(&=),exp:ident(hash),exp:ident(EXPKEY_HASHMASK)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ch),exp[grammar(call),exp:ident(sunrpc_cache_update),exp:&ref:exp:ident(svc_expkey_cache),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(new),ident(h)],exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(old),ident(h)],exp:ident(hash)]]],sel_if[exp:ident(ch),st_return[exp[grammar(call),exp:ident(container_of),exp:ident(ch),argtype(N/H),exp:ident(h)]],st_return[exp:ident(NULL)]]]],define(N/H),define(N/H),define(N/H),decl(N/H),def[fname(nfsd4_fslocs_free),funtype[fulltype[ctype[btype(void)]],param[reg(),name(fsloc),fulltype[typec(N/H)]]],{}stmt[statem(N/H),for[exp[grammar(assign),simple_assi(=),exp:ident(i),exp:const:int(0)],exp[grammar(binary_logi),logiop(??),exp:ident(i),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations_count)]],exp:??(N/H),{}stmt[estmt[exp[grammar(call),exp:ident(kfree),exp[grammar(record_acc),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations)],exp:ident(i)],ident(path)]]],estmt[exp[grammar(call),exp:ident(kfree),exp[grammar(record_acc),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations)],exp:ident(i)],ident(hosts)]]]]],estmt[exp[grammar(call),exp:ident(kfree),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations)]]]]],def[fname(svc_export_put),funtype[fulltype[ctype[btype(void)]],param[reg(),name(ref),fulltype[typec(N/H)]]],{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(path_put),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(exp),ident(ex_path)]]],estmt[exp[grammar(call),exp:ident(auth_domain_put),exp[grammar(record_ptr),exp:ident(exp),ident(ex_client)]]],estmt[exp[grammar(call),exp:ident(kfree),exp[grammar(record_ptr),exp:ident(exp),ident(ex_pathname)]]],estmt[exp[grammar(call),exp:ident(nfsd4_fslocs_free),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(exp),ident(ex_fslocs)]]],estmt[exp[grammar(call),exp:ident(kfree),exp:ident(exp)]]]],def[fname(svc_export_request),funtype[fulltype[ctype[btype(void)]],param[reg(),name(cd),fulltype[typec(N/H)]],param[reg(),name(h),fulltype[typec(N/H)]],param[reg(),name(bpp),fulltype[typec(N/H)]],param[reg(),name(blen),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(qword_add),exp:ident(bpp),exp:ident(blen),exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(exp),ident(ex_client)],ident(name)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(pth),exp[grammar(call),exp:ident(d_path),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(exp),ident(ex_path)],ident(dentry)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(exp),ident(ex_path)],ident(mnt)],exp:*ref:exp:ident(bpp),exp:*ref:exp:ident(blen)]]],sel_if[exp[grammar(call),exp:ident(IS_ERR),exp:ident(pth)],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp[grammar(array_acc),exp:*ref:exp:ident(bpp),exp:const:int(0)],exp:const:other(N/H)]],statem(N/H)],estmt(NONE)],estmt[exp[grammar(call),exp:ident(qword_add),exp:ident(bpp),exp:ident(blen),exp:ident(pth)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(array_acc),exp:*ref:exp:ident(bpp),exp:??(N/H)],exp:const:other(N/H)]]]],decl(N/H),decl(N/H),def[fname(check_export),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(inode),fulltype[typec(N/H)]],param[reg(),name(flags),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(uuid),fulltype[typec(N/H)]]],{}stmt[sel_if[exp[grammar(binary_logi),logiop(and),exp:??(N/H),exp:??(N/H)],st_return[exp:??(N/H)],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(and),exp:??(N/H),exp:??(N/H)],exp[grammar(binary_logi),logiop(eq),exp:ident(uuid),exp:ident(NULL)]],{}stmt[estmt[exp[grammar(call),exp:ident(dprintk),exp:const:string(exp_export: export of non-dev fs without fsid\n)]],st_return[exp:??(N/H)]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(or),exp:??(N/H),exp:??(N/H)],{}stmt[estmt[exp[grammar(call),exp:ident(dprintk),exp:const:string(exp_export: export of invalid fs type.\n)]],st_return[exp:??(N/H)]],estmt(NONE)],st_return[exp:const:int(0)]]],def[fname(fsloc_parse),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(mesg),fulltype[typec(N/H)]],param[reg(),name(buf),fulltype[typec(N/H)]],param[reg(),name(fsloc),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(get_int),exp:ident(mesg),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(fsloc),ident(locations_count)]]]],sel_if[exp:ident(err),st_return[exp:ident(err)],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations_count)],exp:ident(MAX_FS_LOCATIONS)],st_return[exp:??(N/H)],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations_count)],exp:const:int(0)],st_return[exp:const:int(0)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations)],exp[grammar(call),exp:ident(kzalloc),exp[grammar(binary_arith),aop(*),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations_count)],exp[grammar(sizeoftype),grammar(fulltype),typec(N/H)]],exp:ident(GFP_KERNEL)]]],sel_if[exp:??(N/H),st_return[exp:??(N/H)],estmt(NONE)],for[exp[grammar(assign),simple_assi(=),exp:ident(i),exp:const:int(0)],exp[grammar(binary_logi),logiop(??),exp:ident(i),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations_count)]],exp:??(N/H),{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(len),exp[grammar(call),exp:ident(qword_get),exp:ident(mesg),exp:ident(buf),exp:ident(PAGE_SIZE)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(len),exp:const:int(0)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations)],exp:ident(i)],ident(hosts)],exp[grammar(call),exp:ident(kstrdup),exp:ident(buf),exp:ident(GFP_KERNEL)]]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(len),exp[grammar(call),exp:ident(qword_get),exp:ident(mesg),exp:ident(buf),exp:ident(PAGE_SIZE)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(len),exp:const:int(0)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations)],exp:ident(i)],ident(path)],exp[grammar(call),exp:ident(kstrdup),exp:ident(buf),exp:ident(GFP_KERNEL)]]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(get_int),exp:ident(mesg),exp:&ref:exp:ident(migrated)]]],sel_if[exp:ident(err),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],sel_if[exp[grammar(binary_logi),logiop(or),exp[grammar(binary_logi),logiop(??),exp:ident(migrated),exp:const:int(0)],exp[grammar(binary_logi),logiop(??),exp:ident(migrated),exp:const:int(1)]],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(fsloc),ident(migrated)],exp:ident(migrated)]],st_return[exp:const:int(0)],statem(N/H),st_return[exp:ident(err)]]],def[fname(secinfo_parse),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(mesg),fulltype[typec(N/H)]],param[reg(),name(buf),fulltype[typec(N/H)]],param[reg(),name(exp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(get_int),exp:ident(mesg),exp:&ref:exp:ident(listsize)]]],sel_if[exp:ident(err),st_return[exp:ident(err)],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(or),exp[grammar(binary_logi),logiop(??),exp:ident(listsize),exp:const:int(0)],exp[grammar(binary_logi),logiop(??),exp:ident(listsize),exp:ident(MAX_SECINFO_LIST)]],st_return[exp:??(N/H)],estmt(NONE)],for[exp[grammar(assign),simple_assi(=),exp:ident(f),exp[grammar(record_ptr),exp:ident(exp),ident(ex_flavors)]],exp[grammar(binary_logi),logiop(??),exp:ident(f),exp[grammar(binary_arith),aop(+),exp[grammar(record_ptr),exp:ident(exp),ident(ex_flavors)],exp:ident(listsize)]],exp:??(N/H),{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(get_int),exp:ident(mesg),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(f),ident(pseudoflavor)]]]],sel_if[exp:ident(err),st_return[exp:ident(err)],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(f),ident(pseudoflavor)],exp:const:int(0)],st_return[exp:??(N/H)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(get_int),exp:ident(mesg),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(f),ident(flags)]]]],sel_if[exp:ident(err),st_return[exp:ident(err)],estmt(NONE)],sel_if[exp[grammar(binary_arith),aop(&),exp:??(N/H),exp[grammar(binary_arith),aop(N/H),exp[grammar(record_ptr),exp:ident(f),ident(flags)],exp[grammar(record_ptr),exp:ident(exp),ident(ex_flags)]]],st_return[exp:??(N/H)],estmt(NONE)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(exp),ident(ex_nflavors)],exp:ident(listsize)]],st_return[exp:const:int(0)]]],def[fname(fsloc_parse),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(mesg),fulltype[typec(N/H)]],param[reg(),name(buf),fulltype[typec(N/H)]],param[reg(),name(fsloc),fulltype[typec(N/H)]]],{}stmt[st_return[exp:const:int(0)]]],def[fname(secinfo_parse),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(mesg),fulltype[typec(N/H)]],param[reg(),name(buf),fulltype[typec(N/H)]],param[reg(),name(exp),fulltype[typec(N/H)]]],{}stmt[st_return[exp:const:int(0)]]],def[fname(svc_export_parse),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(cd),fulltype[typec(N/H)]],param[reg(),name(mesg),fulltype[typec(N/H)]],param[reg(),name(mlen),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(dentry)],exp:ident(NULL)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(exp),ident(ex_pathname)],exp:ident(NULL)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(exp),ident(ex_fslocs)],ident(locations)],exp:ident(NULL)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(exp),ident(ex_fslocs)],ident(locations_count)],exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(exp),ident(ex_fslocs)],ident(migrated)],exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(exp),ident(ex_uuid)],exp:ident(NULL)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(exp),ident(ex_nflavors)],exp:const:int(0)]],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(array_acc),exp:ident(mesg),exp[grammar(binary_arith),aop(-),exp:ident(mlen),exp:const:int(1)]],exp:const:other(N/H)],st_return[exp:??(N/H)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(array_acc),exp:ident(mesg),exp[grammar(binary_arith),aop(-),exp:ident(mlen),exp:const:int(1)]],exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(buf),exp[grammar(call),exp:ident(kmalloc),exp:ident(PAGE_SIZE),exp:ident(GFP_KERNEL)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(len),exp[grammar(call),exp:ident(qword_get),exp:&ref:exp:ident(mesg),exp:ident(buf),exp:ident(PAGE_SIZE)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(len),exp:const:int(0)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(dom),exp[grammar(call),exp:ident(auth_domain_find),exp:ident(buf)]]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(assign),simple_assi(=),exp:ident(len),exp[grammar(call),exp:ident(qword_get),exp:&ref:exp:ident(mesg),exp:ident(buf),exp:ident(PAGE_SIZE)]],exp:const:int(0)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(path_lookup),exp:ident(buf),exp:const:int(0),exp:&ref:exp:ident(nd)]]],sel_if[exp:ident(err),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(exp),ident(h)],ident(flags)],exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(exp),ident(ex_client)],exp:ident(dom)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(exp),ident(ex_path)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(mnt)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(exp),ident(ex_path)],ident(dentry)],exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(dentry)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(exp),ident(ex_pathname)],exp[grammar(call),exp:ident(kstrdup),exp:ident(buf),exp:ident(GFP_KERNEL)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(exp),ident(h)],ident(expiry_time)],exp[grammar(call),exp:ident(get_expiry),exp:&ref:exp:ident(mesg)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(exp),ident(h)],ident(expiry_time)],exp:const:int(0)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(get_int),exp:&ref:exp:ident(mesg),exp:&ref:exp:ident(an_int)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(err),exp:??(N/H)],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:const:int(0)]],estmt[exp[grammar(call),exp:ident(set_bit),exp:ident(CACHE_NEGATIVE),exp[grammar(&ref),grammar(exp),grammar(record_acc),exp[grammar(record_acc),exp:ident(exp),ident(h)],ident(flags)]]]],{}stmt[sel_if[exp[grammar(binary_logi),logiop(or),exp:ident(err),exp[grammar(binary_logi),logiop(??),exp:ident(an_int),exp:const:int(0)]],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(exp),ident(ex_flags)],exp:ident(an_int)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(get_int),exp:&ref:exp:ident(mesg),exp:&ref:exp:ident(an_int)]]],sel_if[exp:ident(err),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(exp),ident(ex_anon_uid)],exp:ident(an_int)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(get_int),exp:&ref:exp:ident(mesg),exp:&ref:exp:ident(an_int)]]],sel_if[exp:ident(err),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(exp),ident(ex_anon_gid)],exp:ident(an_int)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(get_int),exp:&ref:exp:ident(mesg),exp:&ref:exp:ident(an_int)]]],sel_if[exp:ident(err),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(exp),ident(ex_fsid)],exp:ident(an_int)]],while[exp[grammar(binary_logi),logiop(??),exp[grammar(assign),simple_assi(=),exp:ident(len),exp[grammar(call),exp:ident(qword_get),exp:&ref:exp:ident(mesg),exp:ident(buf),exp:ident(PAGE_SIZE)]],exp:const:int(0)],{}stmt[sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(call),exp:ident(strcmp),exp:ident(buf),exp:const:string(fsloc)],exp:const:int(0)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(fsloc_parse),exp:&ref:exp:ident(mesg),exp:ident(buf),exp[grammar(&ref),grammar(exp),grammar(record_acc),exp:ident(exp),ident(ex_fslocs)]]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(call),exp:ident(strcmp),exp:ident(buf),exp:const:string(uuid)],exp:const:int(0)],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(len),exp[grammar(call),exp:ident(qword_get),exp:&ref:exp:ident(mesg),exp:ident(buf),exp:ident(PAGE_SIZE)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(len),exp:const:int(16)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(exp),ident(ex_uuid)],exp[grammar(call),exp:ident(kmemdup),exp:ident(buf),exp:const:int(16),exp:ident(GFP_KERNEL)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(record_acc),exp:ident(exp),ident(ex_uuid)],exp:ident(NULL)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],estmt(NONE)]]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(call),exp:ident(strcmp),exp:ident(buf),exp:const:string(secinfo)],exp:const:int(0)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(secinfo_parse),exp:&ref:exp:ident(mesg),exp:ident(buf),exp:&ref:exp:ident(exp)]]],statem(N/H)]]],sel_if[exp:ident(err),statem(N/H),estmt(NONE)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(check_export),exp[grammar(record_ptr),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(dentry)],ident(d_inode)],exp[grammar(record_acc),exp:ident(exp),ident(ex_flags)],exp[grammar(record_acc),exp:ident(exp),ident(ex_uuid)]]]],sel_if[exp:ident(err),statem(N/H),estmt(NONE)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(expp),exp[grammar(call),exp:ident(svc_export_lookup),exp:&ref:exp:ident(exp)]]],sel_if[exp:ident(expp),estmt[exp[grammar(assign),simple_assi(=),exp:ident(expp),exp[grammar(call),exp:ident(svc_export_update),exp:&ref:exp:ident(exp),exp:ident(expp)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]]],estmt[exp[grammar(call),exp:ident(cache_flush)]],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(expp),exp:ident(NULL)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],estmt[exp[grammar(call),exp:ident(exp_put),exp:ident(expp)]]],statem(N/H),estmt[exp[grammar(call),exp:ident(kfree),exp[grammar(record_acc),exp:ident(exp),ident(ex_uuid)]]],estmt[exp[grammar(call),exp:ident(kfree),exp[grammar(record_acc),exp:ident(exp),ident(ex_pathname)]]],sel_if[exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(dentry)],estmt[exp[grammar(call),exp:ident(path_put),exp[grammar(&ref),grammar(exp),grammar(record_acc),exp:ident(nd),ident(path)]]],estmt(NONE)],statem(N/H),estmt[exp[grammar(call),exp:ident(kfree),exp:ident(buf)]],st_return[exp:ident(err)]]],decl(N/H),decl(N/H),def[fname(svc_export_show),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(cd),fulltype[typec(N/H)]],param[reg(),name(h),fulltype[typec(N/H)]]],{}stmt[statem(N/H),sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(h),exp:ident(NULL)],{}stmt[estmt[exp[grammar(call),exp:ident(seq_puts),exp:ident(m),exp:const:string(#path domain(flags)\n)]],st_return[exp:const:int(0)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(container_of),exp:ident(h),argtype(N/H),exp:ident(h)]]],estmt[exp[grammar(call),exp:ident(seq_path),exp:ident(m),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(exp),ident(ex_path)],exp:const:string( \t\n\\)]],estmt[exp[grammar(call),exp:ident(seq_putc),exp:ident(m),exp:const:other(N/H)]],estmt[exp[grammar(call),exp:ident(seq_escape),exp:ident(m),exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(exp),ident(ex_client)],ident(name)],exp:const:string( \t\n\\)]],estmt[exp[grammar(call),exp:ident(seq_putc),exp:ident(m),exp:const:other(N/H)]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(call),exp:ident(test_bit),exp:ident(CACHE_VALID),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(h),ident(flags)]],exp:??(N/H)],{}stmt[estmt[exp[grammar(call),exp:ident(exp_flags),exp:ident(m),exp[grammar(record_ptr),exp:ident(exp),ident(ex_flags)],exp[grammar(record_ptr),exp:ident(exp),ident(ex_fsid)],exp[grammar(record_ptr),exp:ident(exp),ident(ex_anon_uid)],exp[grammar(record_ptr),exp:ident(exp),ident(ex_anon_gid)],exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(exp),ident(ex_fslocs)]]],sel_if[exp[grammar(record_ptr),exp:ident(exp),ident(ex_uuid)],{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(seq_puts),exp:ident(m),exp:const:string(,uuid=)]],for[exp[grammar(assign),simple_assi(=),exp:ident(i),exp:const:int(0)],exp[grammar(binary_logi),logiop(??),exp:ident(i),exp:const:int(16)],exp:??(N/H),{}stmt[sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(eq),exp[grammar(binary_arith),aop(&),exp:ident(i),exp:const:int(3)],exp:const:int(0)],exp:ident(i)],estmt[exp[grammar(call),exp:ident(seq_putc),exp:ident(m),exp:const:other(N/H)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(%02x),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(exp),ident(ex_uuid)],exp:ident(i)]]]]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(show_secinfo),exp:ident(m),exp:ident(exp)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(seq_puts),exp:ident(m),exp:const:string()\n)]],st_return[exp:const:int(0)]]],def[fname(svc_export_match),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(a),fulltype[typec(N/H)]],param[reg(),name(b),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),st_return[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(orig),ident(ex_client)],exp[grammar(record_ptr),exp:ident(new),ident(ex_client)]],exp[grammar(binary_logi),logiop(eq),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(orig),ident(ex_path)],ident(dentry)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(new),ident(ex_path)],ident(dentry)]]],exp[grammar(binary_logi),logiop(eq),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(orig),ident(ex_path)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(new),ident(ex_path)],ident(mnt)]]]]]],def[fname(svc_export_init),funtype[fulltype[ctype[btype(void)]],param[reg(),name(cnew),fulltype[typec(N/H)]],param[reg(),name(citem),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(kref_get),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp[grammar(record_ptr),exp:ident(item),ident(ex_client)],ident(ref)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(new),ident(ex_client)],exp[grammar(record_ptr),exp:ident(item),ident(ex_client)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(new),ident(ex_path)],ident(dentry)],exp[grammar(call),exp:ident(dget),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(item),ident(ex_path)],ident(dentry)]]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(new),ident(ex_path)],ident(mnt)],exp[grammar(call),exp:ident(mntget),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(item),ident(ex_path)],ident(mnt)]]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(new),ident(ex_pathname)],exp:ident(NULL)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(new),ident(ex_fslocs)],ident(locations)],exp:ident(NULL)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(new),ident(ex_fslocs)],ident(locations_count)],exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(new),ident(ex_fslocs)],ident(migrated)],exp:const:int(0)]]]],def[fname(export_update),funtype[fulltype[ctype[btype(void)]],param[reg(),name(cnew),fulltype[typec(N/H)]],param[reg(),name(citem),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(new),ident(ex_flags)],exp[grammar(record_ptr),exp:ident(item),ident(ex_flags)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(new),ident(ex_anon_uid)],exp[grammar(record_ptr),exp:ident(item),ident(ex_anon_uid)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(new),ident(ex_anon_gid)],exp[grammar(record_ptr),exp:ident(item),ident(ex_anon_gid)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(new),ident(ex_fsid)],exp[grammar(record_ptr),exp:ident(item),ident(ex_fsid)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(new),ident(ex_uuid)],exp[grammar(record_ptr),exp:ident(item),ident(ex_uuid)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(item),ident(ex_uuid)],exp:ident(NULL)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(new),ident(ex_pathname)],exp[grammar(record_ptr),exp:ident(item),ident(ex_pathname)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(item),ident(ex_pathname)],exp:ident(NULL)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(new),ident(ex_fslocs)],ident(locations)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(item),ident(ex_fslocs)],ident(locations)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(item),ident(ex_fslocs)],ident(locations)],exp:ident(NULL)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(new),ident(ex_fslocs)],ident(locations_count)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(item),ident(ex_fslocs)],ident(locations_count)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(item),ident(ex_fslocs)],ident(locations_count)],exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(new),ident(ex_fslocs)],ident(migrated)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(item),ident(ex_fslocs)],ident(migrated)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(item),ident(ex_fslocs)],ident(migrated)],exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(new),ident(ex_nflavors)],exp[grammar(record_ptr),exp:ident(item),ident(ex_nflavors)]]],for[exp[grammar(assign),simple_assi(=),exp:ident(i),exp:const:int(0)],exp[grammar(binary_logi),logiop(??),exp:ident(i),exp:ident(MAX_SECINFO_LIST)],exp:??(N/H),{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(new),ident(ex_flavors)],exp:ident(i)],exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(item),ident(ex_flavors)],exp:ident(i)]]]]]]],def[fname(svc_export_alloc),funtype[fulltype[typec(N/H)],param[reg(),name(),fulltype[ctype[btype(void)]]]],{}stmt[statem(N/H),sel_if[exp:ident(i),st_return[exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(i),ident(h)]],st_return[exp:ident(NULL)]]]],decl(N/H),def[fname(svc_export_lookup),funtype[fulltype[typec(N/H)],param[reg(),name(exp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(hash),exp[grammar(call),exp:ident(hash_ptr),exp[grammar(record_ptr),exp:ident(exp),ident(ex_client)],exp:ident(EXPORT_HASHBITS)]]],estmt[exp[grammar(assign),op_assi(x=),exp:ident(hash),exp[grammar(call),exp:ident(hash_ptr),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(exp),ident(ex_path)],ident(dentry)],exp:ident(EXPORT_HASHBITS)]]],estmt[exp[grammar(assign),op_assi(x=),exp:ident(hash),exp[grammar(call),exp:ident(hash_ptr),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(exp),ident(ex_path)],ident(mnt)],exp:ident(EXPORT_HASHBITS)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ch),exp[grammar(call),exp:ident(sunrpc_cache_lookup),exp:&ref:exp:ident(svc_export_cache),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(exp),ident(h)],exp:ident(hash)]]],sel_if[exp:ident(ch),st_return[exp[grammar(call),exp:ident(container_of),exp:ident(ch),argtype(N/H),exp:ident(h)]],st_return[exp:ident(NULL)]]]],def[fname(svc_export_update),funtype[fulltype[typec(N/H)],param[reg(),name(new),fulltype[typec(N/H)]],param[reg(),name(old),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(hash),exp[grammar(call),exp:ident(hash_ptr),exp[grammar(record_ptr),exp:ident(old),ident(ex_client)],exp:ident(EXPORT_HASHBITS)]]],estmt[exp[grammar(assign),op_assi(x=),exp:ident(hash),exp[grammar(call),exp:ident(hash_ptr),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(old),ident(ex_path)],ident(dentry)],exp:ident(EXPORT_HASHBITS)]]],estmt[exp[grammar(assign),op_assi(x=),exp:ident(hash),exp[grammar(call),exp:ident(hash_ptr),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(old),ident(ex_path)],ident(mnt)],exp:ident(EXPORT_HASHBITS)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ch),exp[grammar(call),exp:ident(sunrpc_cache_update),exp:&ref:exp:ident(svc_export_cache),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(new),ident(h)],exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(old),ident(h)],exp:ident(hash)]]],sel_if[exp:ident(ch),st_return[exp[grammar(call),exp:ident(container_of),exp:ident(ch),argtype(N/H),exp:ident(h)]],st_return[exp:ident(NULL)]]]],def[fname(exp_find_key),funtype[fulltype[typec(N/H)],param[reg(),name(clp),fulltype[typec(N/H)]],param[reg(),name(fsid_type),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(fsidv),fulltype[typec(N/H)]],param[reg(),name(reqp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp:??(N/H),st_return[exp[grammar(call),exp:ident(ERR_PTR),exp:??(N/H)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(key),ident(ek_client)],exp:ident(clp)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(key),ident(ek_fsidtype)],exp:ident(fsid_type)]],estmt[exp[grammar(call),exp:ident(memcpy),exp[grammar(record_acc),exp:ident(key),ident(ek_fsid)],exp:ident(fsidv),exp[grammar(call),exp:ident(key_len),exp:ident(fsid_type)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ek),exp[grammar(call),exp:ident(svc_expkey_lookup),exp:&ref:exp:ident(key)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(ek),exp:ident(NULL)],st_return[exp[grammar(call),exp:ident(ERR_PTR),exp:??(N/H)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(cache_check),exp:&ref:exp:ident(svc_expkey_cache),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(ek),ident(h)],exp:ident(reqp)]]],sel_if[exp:ident(err),st_return[exp[grammar(call),exp:ident(ERR_PTR),exp:ident(err)]],estmt(NONE)],st_return[exp:ident(ek)]]],def[fname(exp_set_key),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(clp),fulltype[typec(N/H)]],param[reg(),name(fsid_type),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(fsidv),fulltype[typec(N/H)]],param[reg(),name(exp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(key),ident(ek_client)],exp:ident(clp)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(key),ident(ek_fsidtype)],exp:ident(fsid_type)]],estmt[exp[grammar(call),exp:ident(memcpy),exp[grammar(record_acc),exp:ident(key),ident(ek_fsid)],exp:ident(fsidv),exp[grammar(call),exp:ident(key_len),exp:ident(fsid_type)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(key),ident(ek_path)],exp[grammar(record_ptr),exp:ident(exp),ident(ex_path)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(key),ident(h)],ident(expiry_time)],exp:ident(NEVER)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(key),ident(h)],ident(flags)],exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ek),exp[grammar(call),exp:ident(svc_expkey_lookup),exp:&ref:exp:ident(key)]]],sel_if[exp:ident(ek),estmt[exp[grammar(assign),simple_assi(=),exp:ident(ek),exp[grammar(call),exp:ident(svc_expkey_update),exp:&ref:exp:ident(key),exp:ident(ek)]]],estmt(NONE)],sel_if[exp:ident(ek),{}stmt[estmt[exp[grammar(call),exp:ident(cache_put),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(ek),ident(h)],exp:&ref:exp:ident(svc_expkey_cache)]],st_return[exp:const:int(0)]],estmt(NONE)],st_return[exp:??(N/H)]]],def[fname(exp_get_key),funtype[fulltype[typec(N/H)],param[reg(),name(clp),fulltype[typec(N/H)]],param[reg(),name(dev),fulltype[typec(N/H)]],param[reg(),name(ino),fulltype[typec(N/H)]]],{}stmt[statem(N/H),sel_if[exp[grammar(call),exp:ident(old_valid_dev),exp:ident(dev)],{}stmt[estmt[exp[grammar(call),exp:ident(mk_fsid),exp:ident(FSID_DEV),exp:ident(fsidv),exp:ident(dev),exp:ident(ino),exp:const:int(0),exp:ident(NULL)]],st_return[exp[grammar(call),exp:ident(exp_find_key),exp:ident(clp),exp:ident(FSID_DEV),exp:ident(fsidv),exp:ident(NULL)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(mk_fsid),exp:ident(FSID_ENCODE_DEV),exp:ident(fsidv),exp:ident(dev),exp:ident(ino),exp:const:int(0),exp:ident(NULL)]],st_return[exp[grammar(call),exp:ident(exp_find_key),exp:ident(clp),exp:ident(FSID_ENCODE_DEV),exp:ident(fsidv),exp:ident(NULL)]]]],def[fname(exp_get_fsid_key),funtype[fulltype[typec(N/H)],param[reg(),name(clp),fulltype[typec(N/H)]],param[reg(),name(fsid),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(mk_fsid),exp:ident(FSID_NUM),exp:ident(fsidv),exp:const:int(0),exp:const:int(0),exp:ident(fsid),exp:ident(NULL)]],st_return[exp[grammar(call),exp:ident(exp_find_key),exp:ident(clp),exp:ident(FSID_NUM),exp:ident(fsidv),exp:ident(NULL)]]]],def[fname(exp_get_by_name),funtype[fulltype[typec(N/H)],param[reg(),name(clp),fulltype[typec(N/H)]],param[reg(),name(mnt),fulltype[typec(N/H)]],param[reg(),name(dentry),fulltype[typec(N/H)]],param[reg(),name(reqp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp:??(N/H),st_return[exp[grammar(call),exp:ident(ERR_PTR),exp:??(N/H)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(key),ident(ex_client)],exp:ident(clp)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(key),ident(ex_path)],ident(mnt)],exp:ident(mnt)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(key),ident(ex_path)],ident(dentry)],exp:ident(dentry)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(svc_export_lookup),exp:&ref:exp:ident(key)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(exp),exp:ident(NULL)],st_return[exp[grammar(call),exp:ident(ERR_PTR),exp:??(N/H)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(cache_check),exp:&ref:exp:ident(svc_export_cache),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(exp),ident(h)],exp:ident(reqp)]]],sel_if[exp:ident(err),st_return[exp[grammar(call),exp:ident(ERR_PTR),exp:ident(err)]],estmt(NONE)],st_return[exp:ident(exp)]]],def[fname(exp_parent),funtype[fulltype[typec(N/H)],param[reg(),name(clp),fulltype[typec(N/H)]],param[reg(),name(mnt),fulltype[typec(N/H)]],param[reg(),name(dentry),fulltype[typec(N/H)]],param[reg(),name(reqp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(dget),exp:ident(dentry)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(exp_get_by_name),exp:ident(clp),exp:ident(mnt),exp:ident(dentry),exp:ident(reqp)]]],while[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(eq),exp[grammar(call),exp:ident(PTR_ERR),exp:ident(exp)],exp:??(N/H)],exp:??(N/H)],{}stmt[statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(parent),exp[grammar(call),exp:ident(dget_parent),exp:ident(dentry)]]],estmt[exp[grammar(call),exp:ident(dput),exp:ident(dentry)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(dentry),exp:ident(parent)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(exp_get_by_name),exp:ident(clp),exp:ident(mnt),exp:ident(dentry),exp:ident(reqp)]]]]],estmt[exp[grammar(call),exp:ident(dput),exp:ident(dentry)]],st_return[exp:ident(exp)]]],decl(N/H),def[fname(exp_readlock),funtype[fulltype[ctype[btype(void)]],param[reg(),name(),fulltype[ctype[btype(void)]]]],{}stmt[estmt[exp[grammar(call),exp:ident(down_read),exp:&ref:exp:ident(hash_sem)]]]],def[fname(exp_writelock),funtype[fulltype[ctype[btype(void)]],param[reg(),name(),fulltype[ctype[btype(void)]]]],{}stmt[estmt[exp[grammar(call),exp:ident(down_write),exp:&ref:exp:ident(hash_sem)]]]],def[fname(exp_readunlock),funtype[fulltype[ctype[btype(void)]],param[reg(),name(),fulltype[ctype[btype(void)]]]],{}stmt[estmt[exp[grammar(call),exp:ident(up_read),exp:&ref:exp:ident(hash_sem)]]]],def[fname(exp_writeunlock),funtype[fulltype[ctype[btype(void)]],param[reg(),name(),fulltype[ctype[btype(void)]]]],{}stmt[estmt[exp[grammar(call),exp:ident(up_write),exp:&ref:exp:ident(hash_sem)]]]],def[fname(exp_fsid_unhash),funtype[fulltype[ctype[btype(void)]],param[reg(),name(exp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(binary_arith),aop(&),exp[grammar(record_ptr),exp:ident(exp),ident(ex_flags)],exp:ident(NFSEXP_FSID)],exp:const:int(0)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ek),exp[grammar(call),exp:ident(exp_get_fsid_key),exp[grammar(record_ptr),exp:ident(exp),ident(ex_client)],exp[grammar(record_ptr),exp:ident(exp),ident(ex_fsid)]]]],sel_if[exp:??(N/H),{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(ek),ident(h)],ident(expiry_time)],exp[grammar(binary_arith),aop(-),exp[grammar(call),exp:ident(get_seconds)],exp:const:int(1)]]],estmt[exp[grammar(call),exp:ident(cache_put),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(ek),ident(h)],exp:&ref:exp:ident(svc_expkey_cache)]]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(svc_expkey_cache),ident(nextcheck)],exp[grammar(call),exp:ident(get_seconds)]]]]],def[fname(exp_fsid_hash),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(clp),fulltype[typec(N/H)]],param[reg(),name(exp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(binary_arith),aop(&),exp[grammar(record_ptr),exp:ident(exp),ident(ex_flags)],exp:ident(NFSEXP_FSID)],exp:const:int(0)],st_return[exp:const:int(0)],estmt(NONE)],estmt[exp[grammar(call),exp:ident(mk_fsid),exp:ident(FSID_NUM),exp:ident(fsid),exp:const:int(0),exp:const:int(0),exp[grammar(record_ptr),exp:ident(exp),ident(ex_fsid)],exp:ident(NULL)]],st_return[exp[grammar(call),exp:ident(exp_set_key),exp:ident(clp),exp:ident(FSID_NUM),exp:ident(fsid),exp:ident(exp)]]]],def[fname(exp_hash),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(clp),fulltype[typec(N/H)]],param[reg(),name(exp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),sel_if[exp[grammar(call),exp:ident(old_valid_dev),exp:ident(dev)],{}stmt[estmt[exp[grammar(call),exp:ident(mk_fsid),exp:ident(FSID_DEV),exp:ident(fsid),exp:ident(dev),exp[grammar(record_ptr),exp:ident(inode),ident(i_ino)],exp:const:int(0),exp:ident(NULL)]],st_return[exp[grammar(call),exp:ident(exp_set_key),exp:ident(clp),exp:ident(FSID_DEV),exp:ident(fsid),exp:ident(exp)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(mk_fsid),exp:ident(FSID_ENCODE_DEV),exp:ident(fsid),exp:ident(dev),exp[grammar(record_ptr),exp:ident(inode),ident(i_ino)],exp:const:int(0),exp:ident(NULL)]],st_return[exp[grammar(call),exp:ident(exp_set_key),exp:ident(clp),exp:ident(FSID_ENCODE_DEV),exp:ident(fsid),exp:ident(exp)]]]],def[fname(exp_unhash),funtype[fulltype[ctype[btype(void)]],param[reg(),name(exp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(ek),exp[grammar(call),exp:ident(exp_get_key),exp[grammar(record_ptr),exp:ident(exp),ident(ex_client)],exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(inode),ident(i_sb)],ident(s_dev)],exp[grammar(record_ptr),exp:ident(inode),ident(i_ino)]]]],sel_if[exp:??(N/H),{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(ek),ident(h)],ident(expiry_time)],exp[grammar(binary_arith),aop(-),exp[grammar(call),exp:ident(get_seconds)],exp:const:int(1)]]],estmt[exp[grammar(call),exp:ident(cache_put),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(ek),ident(h)],exp:&ref:exp:ident(svc_expkey_cache)]]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(svc_expkey_cache),ident(nextcheck)],exp[grammar(call),exp:ident(get_seconds)]]]]],def[fname(exp_export),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(nxp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],sel_if[exp[grammar(binary_logi),logiop(or),exp:??(N/H),exp:??(N/H)],statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(dprintk),exp:const:string(exp_export called for %s:%s (%x/%ld fl %x).\n),exp[grammar(record_ptr),exp:ident(nxp),ident(ex_client)],exp[grammar(record_ptr),exp:ident(nxp),ident(ex_path)],exp:??(N/H),exp:??(N/H),exp[grammar(record_ptr),exp:ident(nxp),ident(ex_flags)]]],estmt[exp[grammar(call),exp:ident(exp_writelock)]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(path_lookup),exp[grammar(record_ptr),exp:ident(nxp),ident(ex_path)],exp:const:int(0),exp:&ref:exp:ident(nd)]]],sel_if[exp:ident(err),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(exp_get_by_name),exp:ident(clp),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(dentry)],exp:ident(NULL)]]],estmt[exp[grammar(call),exp:ident(memset),exp:&ref:exp:ident(new),exp:const:int(0),exp:sizeof:exp:ident(new)]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(and),exp[grammar(binary_arith),aop(&),exp[grammar(record_ptr),exp:ident(nxp),ident(ex_flags)],exp:ident(NFSEXP_FSID)],exp:??(N/H)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(fsid_key),ident(ek_path)],ident(mnt)]],exp[grammar(binary_logi),logiop(or),exp[grammar(binary_logi),logiop(??),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(fsid_key),ident(ek_path)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(mnt)]],exp[grammar(binary_logi),logiop(??),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(fsid_key),ident(ek_path)],ident(dentry)],exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(dentry)]]]],statem(N/H),estmt(NONE)],sel_if[exp:??(N/H),{}stmt[estmt[exp[grammar(call),exp:ident(exp_fsid_unhash),exp:ident(exp)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(exp),ident(ex_flags)],exp[grammar(record_ptr),exp:ident(nxp),ident(ex_flags)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(exp),ident(ex_anon_uid)],exp[grammar(record_ptr),exp:ident(nxp),ident(ex_anon_uid)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(exp),ident(ex_anon_gid)],exp[grammar(record_ptr),exp:ident(nxp),ident(ex_anon_gid)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(exp),ident(ex_fsid)],exp[grammar(record_ptr),exp:ident(nxp),ident(ex_dev)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(exp_fsid_hash),exp:ident(clp),exp:ident(exp)]]],statem(N/H)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(check_export),exp[grammar(record_ptr),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(dentry)],ident(d_inode)],exp[grammar(record_ptr),exp:ident(nxp),ident(ex_flags)],exp:ident(NULL)]]],sel_if[exp:ident(err),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],estmt[exp[grammar(call),exp:ident(dprintk),exp:const:string(nfsd: creating export entry %p for client %p\n),exp:ident(exp),exp:ident(clp)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(new),ident(h)],ident(expiry_time)],exp:ident(NEVER)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(new),ident(h)],ident(flags)],exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(new),ident(ex_pathname)],exp[grammar(call),exp:ident(kstrdup),exp[grammar(record_ptr),exp:ident(nxp),ident(ex_path)],exp:ident(GFP_KERNEL)]]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(new),ident(ex_client)],exp:ident(clp)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(new),ident(ex_path)],exp[grammar(record_acc),exp:ident(nd),ident(path)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(new),ident(ex_flags)],exp[grammar(record_ptr),exp:ident(nxp),ident(ex_flags)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(new),ident(ex_anon_uid)],exp[grammar(record_ptr),exp:ident(nxp),ident(ex_anon_uid)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(new),ident(ex_anon_gid)],exp[grammar(record_ptr),exp:ident(nxp),ident(ex_anon_gid)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(new),ident(ex_fsid)],exp[grammar(record_ptr),exp:ident(nxp),ident(ex_dev)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(svc_export_lookup),exp:&ref:exp:ident(new)]]],sel_if[exp:ident(exp),estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(svc_export_update),exp:&ref:exp:ident(new),exp:ident(exp)]]],estmt(NONE)],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(or),exp[grammar(call),exp:ident(exp_hash),exp:ident(clp),exp:ident(exp)],exp[grammar(call),exp:ident(exp_fsid_hash),exp:ident(clp),exp:ident(exp)]],{}stmt[estmt[exp[grammar(call),exp:ident(exp_do_unexport),exp:ident(exp)]],estmt[exp[grammar(call),exp:ident(cache_flush)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:const:int(0)]]],statem(N/H),sel_if[exp:ident(exp),estmt[exp[grammar(call),exp:ident(exp_put),exp:ident(exp)]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(and),exp:ident(fsid_key),exp:??(N/H)],estmt[exp[grammar(call),exp:ident(cache_put),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(fsid_key),ident(h)],exp:&ref:exp:ident(svc_expkey_cache)]],estmt(NONE)],sel_if[exp:ident(clp),estmt[exp[grammar(call),exp:ident(auth_domain_put),exp:ident(clp)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(path_put),exp[grammar(&ref),grammar(exp),grammar(record_acc),exp:ident(nd),ident(path)]]],statem(N/H),statem(N/H)]],def[fname(exp_do_unexport),funtype[fulltype[ctype[btype(void)]],param[reg(),name(unexp),fulltype[typec(N/H)]]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(unexp),ident(h)],ident(expiry_time)],exp[grammar(binary_arith),aop(-),exp[grammar(call),exp:ident(get_seconds)],exp:const:int(1)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(svc_export_cache),ident(nextcheck)],exp[grammar(call),exp:ident(get_seconds)]]],estmt[exp[grammar(call),exp:ident(exp_unhash),exp:ident(unexp)]],estmt[exp[grammar(call),exp:ident(exp_fsid_unhash),exp:ident(unexp)]]]],def[fname(exp_unexport),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(nxp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),sel_if[exp[grammar(binary_logi),logiop(or),exp:??(N/H),exp:??(N/H)],st_return[exp:??(N/H)],estmt(NONE)],estmt[exp[grammar(call),exp:ident(exp_writelock)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(dom),exp[grammar(call),exp:ident(auth_domain_find),exp[grammar(record_ptr),exp:ident(nxp),ident(ex_client)]]]],sel_if[exp:??(N/H),{}stmt[estmt[exp[grammar(call),exp:ident(dprintk),exp:const:string(nfsd: unexport couldn't find %s\n),exp[grammar(record_ptr),exp:ident(nxp),ident(ex_client)]]],statem(N/H)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(path_lookup),exp[grammar(record_ptr),exp:ident(nxp),ident(ex_path)],exp:const:int(0),exp:&ref:exp:ident(nd)]]],sel_if[exp:ident(err),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(exp_get_by_name),exp:ident(dom),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(dentry)],exp:ident(NULL)]]],estmt[exp[grammar(call),exp:ident(path_put),exp[grammar(&ref),grammar(exp),grammar(record_acc),exp:ident(nd),ident(path)]]],sel_if[exp[grammar(call),exp:ident(IS_ERR),exp:ident(exp)],statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(exp_do_unexport),exp:ident(exp)]],estmt[exp[grammar(call),exp:ident(exp_put),exp:ident(exp)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:const:int(0)]],statem(N/H),estmt[exp[grammar(call),exp:ident(cache_flush)]],statem(N/H),st_return[exp:ident(err)]]],def[fname(exp_rootfh),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(clp),fulltype[typec(N/H)]],param[reg(),name(path),fulltype[typec(N/H)]],param[reg(),name(f),fulltype[typec(N/H)]],param[reg(),name(maxsize),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],sel_if[exp[grammar(call),exp:ident(path_lookup),exp:ident(path),exp:const:int(0),exp:&ref:exp:ident(nd)],{}stmt[estmt[exp[grammar(call),exp:ident(printk),exp:const:string(nfsd: exp_rootfh path not found %s),exp:ident(path)]],st_return[exp:ident(err)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(inode),exp[grammar(record_ptr),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(dentry)],ident(d_inode)]]],estmt[exp[grammar(call),exp:ident(dprintk),exp:const:string(nfsd: exp_rootfh(%s [%p] %s:%s/%ld)\n),exp:ident(path),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(dentry)],exp[grammar(record_ptr),exp:ident(clp),ident(name)],exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(inode),ident(i_sb)],ident(s_id)],exp[grammar(record_ptr),exp:ident(inode),ident(i_ino)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(exp_parent),exp:ident(clp),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(dentry)],exp:ident(NULL)]]],sel_if[exp[grammar(call),exp:ident(IS_ERR),exp:ident(exp)],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(PTR_ERR),exp:ident(exp)]]],statem(N/H)],estmt(NONE)],estmt[exp[grammar(call),exp:ident(fh_init),exp:&ref:exp:ident(fh),exp:ident(maxsize)]],sel_if[exp[grammar(call),exp:ident(fh_compose),exp:&ref:exp:ident(fh),exp:ident(exp),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(dentry)],exp:ident(NULL)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:const:int(0)]]],estmt[exp[grammar(call),exp:ident(memcpy),exp:ident(f),exp[grammar(&ref),grammar(exp),grammar(record_acc),exp:ident(fh),ident(fh_handle)],exp[grammar(sizeoftype),grammar(fulltype),typec(N/H)]]],estmt[exp[grammar(call),exp:ident(fh_put),exp:&ref:exp:ident(fh)]],estmt[exp[grammar(call),exp:ident(exp_put),exp:ident(exp)]],statem(N/H),st_return[exp:ident(err)]]],def[fname(exp_find),funtype[fulltype[typec(N/H)],param[reg(),name(clp),fulltype[typec(N/H)]],param[reg(),name(fsid_type),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(fsidv),fulltype[typec(N/H)]],param[reg(),name(reqp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp[grammar(call),exp:ident(IS_ERR),exp:ident(ek)],st_return[exp[grammar(call),exp:ident(ERR_CAST),exp:ident(ek)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(exp_get_by_name),exp:ident(clp),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(ek),ident(ek_path)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(ek),ident(ek_path)],ident(dentry)],exp:ident(reqp)]]],estmt[exp[grammar(call),exp:ident(cache_put),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(ek),ident(h)],exp:&ref:exp:ident(svc_expkey_cache)]],sel_if[exp[grammar(call),exp:ident(IS_ERR),exp:ident(exp)],st_return[exp[grammar(call),exp:ident(ERR_CAST),exp:ident(exp)]],estmt(NONE)],st_return[exp:ident(exp)]]],def[fname(check_nfsd_access),funtype[fulltype[typec(N/H)],param[reg(),name(exp),fulltype[typec(N/H)]],param[reg(),name(rqstp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(exp),ident(ex_client)],exp[grammar(record_ptr),exp:ident(rqstp),ident(rq_gssclient)]],st_return[exp:const:int(0)],estmt(NONE)],for[exp[grammar(assign),simple_assi(=),exp:ident(f),exp[grammar(record_ptr),exp:ident(exp),ident(ex_flavors)]],exp[grammar(binary_logi),logiop(??),exp:ident(f),exp:ident(end)],exp:??(N/H),{}stmt[sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(f),ident(pseudoflavor)],exp[grammar(record_ptr),exp:ident(rqstp),ident(rq_flavor)]],st_return[exp:const:int(0)],estmt(NONE)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(exp),ident(ex_nflavors)],exp:const:int(0)],{}stmt[sel_if[exp[grammar(binary_logi),logiop(or),exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(rqstp),ident(rq_flavor)],exp:ident(RPC_AUTH_NULL)],exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(rqstp),ident(rq_flavor)],exp:ident(RPC_AUTH_UNIX)]],st_return[exp:const:int(0)],estmt(NONE)]],estmt(NONE)],st_return[exp:ident(nfserr_wrongsec)]]],def[fname(rqst_exp_get_by_name),funtype[fulltype[typec(N/H)],param[reg(),name(rqstp),fulltype[typec(N/H)]],param[reg(),name(mnt),fulltype[typec(N/H)]],param[reg(),name(dentry),fulltype[typec(N/H)]]],{}stmt[statem(N/H),sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(rqstp),ident(rq_client)],exp:ident(NULL)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(exp_get_by_name),exp[grammar(record_ptr),exp:ident(rqstp),ident(rq_client)],exp:ident(mnt),exp:ident(dentry),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(rqstp),ident(rq_chandle)]]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(call),exp:ident(PTR_ERR),exp:ident(exp)],exp:??(N/H)],statem(N/H),estmt(NONE)],sel_if[exp[grammar(call),exp:ident(IS_ERR),exp:ident(exp)],st_return[exp:ident(exp)],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(exp),ident(ex_nflavors)],exp:const:int(0)],st_return[exp:ident(exp)],estmt(NONE)],statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(gssexp),exp[grammar(call),exp:ident(exp_get_by_name),exp[grammar(record_ptr),exp:ident(rqstp),ident(rq_gssclient)],exp:ident(mnt),exp:ident(dentry),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(rqstp),ident(rq_chandle)]]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(call),exp:ident(PTR_ERR),exp:ident(gssexp)],exp:??(N/H)],st_return[exp:ident(exp)],estmt(NONE)],sel_if[exp:??(N/H),estmt[exp[grammar(call),exp:ident(exp_put),exp:ident(exp)]],estmt(NONE)],st_return[exp:ident(gssexp)]]],def[fname(rqst_exp_find),funtype[fulltype[typec(N/H)],param[reg(),name(rqstp),fulltype[typec(N/H)]],param[reg(),name(fsid_type),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(fsidv),fulltype[typec(N/H)]]],{}stmt[statem(N/H),sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(rqstp),ident(rq_client)],exp:ident(NULL)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(exp_find),exp[grammar(record_ptr),exp:ident(rqstp),ident(rq_client)],exp:ident(fsid_type),exp:ident(fsidv),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(rqstp),ident(rq_chandle)]]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(call),exp:ident(PTR_ERR),exp:ident(exp)],exp:??(N/H)],statem(N/H),estmt(NONE)],sel_if[exp[grammar(call),exp:ident(IS_ERR),exp:ident(exp)],st_return[exp:ident(exp)],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(exp),ident(ex_nflavors)],exp:const:int(0)],st_return[exp:ident(exp)],estmt(NONE)],statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(gssexp),exp[grammar(call),exp:ident(exp_find),exp[grammar(record_ptr),exp:ident(rqstp),ident(rq_gssclient)],exp:ident(fsid_type),exp:ident(fsidv),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(rqstp),ident(rq_chandle)]]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(call),exp:ident(PTR_ERR),exp:ident(gssexp)],exp:??(N/H)],st_return[exp:ident(exp)],estmt(NONE)],sel_if[exp:??(N/H),estmt[exp[grammar(call),exp:ident(exp_put),exp:ident(exp)]],estmt(NONE)],st_return[exp:ident(gssexp)]]],def[fname(rqst_exp_parent),funtype[fulltype[typec(N/H)],param[reg(),name(rqstp),fulltype[typec(N/H)]],param[reg(),name(mnt),fulltype[typec(N/H)]],param[reg(),name(dentry),fulltype[typec(N/H)]]],{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(dget),exp:ident(dentry)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(rqst_exp_get_by_name),exp:ident(rqstp),exp:ident(mnt),exp:ident(dentry)]]],while[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(eq),exp[grammar(call),exp:ident(PTR_ERR),exp:ident(exp)],exp:??(N/H)],exp:??(N/H)],{}stmt[statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(parent),exp[grammar(call),exp:ident(dget_parent),exp:ident(dentry)]]],estmt[exp[grammar(call),exp:ident(dput),exp:ident(dentry)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(dentry),exp:ident(parent)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(rqst_exp_get_by_name),exp:ident(rqstp),exp:ident(mnt),exp:ident(dentry)]]]]],estmt[exp[grammar(call),exp:ident(dput),exp:ident(dentry)]],st_return[exp:ident(exp)]]],def[fname(exp_pseudoroot),funtype[fulltype[typec(N/H)],param[reg(),name(rqstp),fulltype[typec(N/H)]],param[reg(),name(fhp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(mk_fsid),exp:ident(FSID_NUM),exp:ident(fsidv),exp:const:int(0),exp:const:int(0),exp:const:int(0),exp:ident(NULL)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(rqst_exp_find),exp:ident(rqstp),exp:ident(FSID_NUM),exp:ident(fsidv)]]],sel_if[exp[grammar(call),exp:ident(IS_ERR),exp:ident(exp)],st_return[exp[grammar(call),exp:ident(nfserrno),exp[grammar(call),exp:ident(PTR_ERR),exp:ident(exp)]]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(rv),exp[grammar(call),exp:ident(fh_compose),exp:ident(fhp),exp:ident(exp),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(exp),ident(ex_path)],ident(dentry)],exp:ident(NULL)]]],sel_if[exp:ident(rv),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(rv),exp[grammar(call),exp:ident(check_nfsd_access),exp:ident(exp),exp:ident(rqstp)]]],statem(N/H),st_return[exp:ident(rv)]]],NCP(N/H),def[fname(e_next),funtype[fulltype[typec(N/H)],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(p),fulltype[typec(N/H)]],param[reg(),name(pos),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(p),exp:ident(SEQ_START_TOKEN)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(hash),exp:const:int(0)]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(ch),ident(next)],exp:ident(NULL)],{}stmt[estmt[exp:??(N/H)],estmt[exp[grammar(assign),op_assi(+=),exp:*ref:exp:ident(pos),exp[grammar(binary_arith),aop(<<),exp:const:int(1LL),exp:const:int(32)]]]],{}stmt[estmt[exp:??(N/H)],st_return[exp[grammar(record_ptr),exp:ident(ch),ident(next)]]]]],estmt[exp[grammar(assign),op_assi(&=),exp:*ref:exp:ident(pos),exp:??(N/H)]],while[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp:ident(hash),exp:ident(EXPORT_HASHMAX)],exp[grammar(binary_logi),logiop(eq),exp[grammar(array_acc),exp:ident(export_table),exp:ident(hash)],exp:ident(NULL)]],{}stmt[estmt[exp:??(N/H)],estmt[exp[grammar(assign),op_assi(+=),exp:*ref:exp:ident(pos),exp[grammar(binary_arith),aop(<<),exp:const:int(1LL),exp:const:int(32)]]]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(hash),exp:ident(EXPORT_HASHMAX)],st_return[exp:ident(NULL)],estmt(NONE)],estmt[exp:??(N/H)],st_return[exp[grammar(array_acc),exp:ident(export_table),exp:ident(hash)]]]],NCP(N/H),decl(N/H),def[fname(show_expflags),funtype[fulltype[ctype[btype(void)]],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(flags),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(mask),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[statem(N/H),statem(N/H),for[exp[grammar(assign),simple_assi(=),exp:ident(flg),exp:ident(expflags)],exp[grammar(record_ptr),exp:ident(flg),ident(flag)],exp:??(N/H),{}stmt[sel_if[exp[grammar(binary_arith),aop(&),exp[grammar(record_ptr),exp:ident(flg),ident(flag)],exp:??(N/H)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(state),exp[grammar(cond3),exp[grammar(binary_arith),aop(&),exp[grammar(record_ptr),exp:ident(flg),ident(flag)],exp:ident(flags)],exp:const:int(0),exp:const:int(1)]]],sel_if[exp[grammar(*ref),grammar(exp),grammar(array_acc),exp[grammar(record_ptr),exp:ident(flg),ident(name)],exp:ident(state)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(%s%s),exp[grammar(cond3),exp:??(N/H),exp:const:string(,),exp:const:string()],exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(flg),ident(name)],exp:ident(state)]]],estmt(NONE)]]]]],def[fname(show_secinfo_flags),funtype[fulltype[ctype[btype(void)]],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(flags),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(,)]],estmt[exp[grammar(call),exp:ident(show_expflags),exp:ident(m),exp:ident(flags),exp:ident(NFSEXP_SECINFO_FLAGS)]]]],def[fname(show_secinfo),funtype[fulltype[ctype[btype(void)]],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(exp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(exp),ident(ex_nflavors)],exp:const:int(0)],statem(N/H),estmt(NONE)],for[exp[grammar(assign),simple_assi(=),exp:ident(f),exp[grammar(record_ptr),exp:ident(exp),ident(ex_flavors)]],exp[grammar(binary_logi),logiop(??),exp:ident(f),exp:ident(end)],exp:??(N/H),{}stmt[sel_if[exp[grammar(binary_logi),logiop(or),exp:ident(first),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(f),ident(flags)],exp:ident(lastflags)]],{}stmt[sel_if[exp:??(N/H),estmt[exp[grammar(call),exp:ident(show_secinfo_flags),exp:ident(m),exp:ident(lastflags)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(,sec=%d),exp[grammar(record_ptr),exp:ident(f),ident(pseudoflavor)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(lastflags),exp[grammar(record_ptr),exp:ident(f),ident(flags)]]]],{}stmt[estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(:%d),exp[grammar(record_ptr),exp:ident(f),ident(pseudoflavor)]]]]]]],estmt[exp[grammar(call),exp:ident(show_secinfo_flags),exp:ident(m),exp:ident(lastflags)]]]],def[fname(exp_flags),funtype[fulltype[ctype[btype(void)]],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(flag),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(fsid),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(anonu),fulltype[typec(N/H)]],param[reg(),name(anong),fulltype[typec(N/H)]],param[reg(),name(fsloc),fulltype[typec(N/H)]]],{}stmt[estmt[exp[grammar(call),exp:ident(show_expflags),exp:ident(m),exp:ident(flag),exp:ident(NFSEXP_ALLFLAGS)]],sel_if[exp[grammar(binary_arith),aop(&),exp:ident(flag),exp:ident(NFSEXP_FSID)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(,fsid=%d),exp:ident(fsid)]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp:ident(anonu),exp:??(N/H)],exp[grammar(binary_logi),logiop(??),exp:ident(anonu),exp[grammar(binary_arith),aop(-),exp:const:int(0x10000),exp:const:int(2)]]],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(,anonuid=%u),exp:ident(anonu)]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp:ident(anong),exp[grammar(binary_arith),aop(-),exp:ident(gid_t),exp:const:int(2)]],exp[grammar(binary_logi),logiop(??),exp:ident(anong),exp[grammar(binary_arith),aop(-),exp:const:int(0x10000),exp:const:int(2)]]],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(,anongid=%u),exp:ident(anong)]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(and),exp:ident(fsloc),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations_count)],exp:const:int(0)]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(,%s=),exp:ident(loctype)]],estmt[exp[grammar(call),exp:ident(seq_escape),exp:ident(m),exp[grammar(record_acc),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations)],exp:const:int(0)],ident(path)],exp:const:string(,;@ \t\n\\)]],estmt[exp[grammar(call),exp:ident(seq_putc),exp:ident(m),exp:const:other(N/H)]],estmt[exp[grammar(call),exp:ident(seq_escape),exp:ident(m),exp[grammar(record_acc),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations)],exp:const:int(0)],ident(hosts)],exp:const:string(,;@ \t\n\\)]],for[exp[grammar(assign),simple_assi(=),exp:ident(i),exp:const:int(1)],exp[grammar(binary_logi),logiop(??),exp:ident(i),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations_count)]],exp:??(N/H),{}stmt[estmt[exp[grammar(call),exp:ident(seq_putc),exp:ident(m),exp:const:other(N/H)]],estmt[exp[grammar(call),exp:ident(seq_escape),exp:ident(m),exp[grammar(record_acc),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations)],exp:ident(i)],ident(path)],exp:const:string(,;@ \t\n\\)]],estmt[exp[grammar(call),exp:ident(seq_putc),exp:ident(m),exp:const:other(N/H)]],estmt[exp[grammar(call),exp:ident(seq_escape),exp:ident(m),exp[grammar(record_acc),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations)],exp:ident(i)],ident(hosts)],exp:const:string(,;@ \t\n\\)]]]]],estmt(NONE)]]],def[fname(e_show),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(p),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(p),exp:ident(SEQ_START_TOKEN)],{}stmt[estmt[exp[grammar(call),exp:ident(seq_puts),exp:ident(m),exp:const:string(# Version 1.1\n)]],estmt[exp[grammar(call),exp:ident(seq_puts),exp:ident(m),exp:const:string(# Path Client(Flags) # IPs\n)]],st_return[exp:const:int(0)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(cache_get),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(exp),ident(h)]]],sel_if[exp[grammar(call),exp:ident(cache_check),exp:&ref:exp:ident(svc_export_cache),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(exp),ident(h)],exp:ident(NULL)],st_return[exp:const:int(0)],estmt(NONE)],estmt[exp[grammar(call),exp:ident(cache_put),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(exp),ident(h)],exp:&ref:exp:ident(svc_export_cache)]],st_return[exp[grammar(call),exp:ident(svc_export_show),exp:ident(m),exp:&ref:exp:ident(svc_export_cache),exp:ident(cp)]]]],decl(N/H),def[fname(exp_addclient),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(ncp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(ncp),ident(cl_naddr)],exp:ident(NFSCLNT_ADDRMAX)],statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(exp_writelock)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(dom),exp[grammar(call),exp:ident(unix_domain_find),exp[grammar(record_ptr),exp:ident(ncp),ident(cl_ident)]]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],for[exp[grammar(assign),simple_assi(=),exp:ident(i),exp:const:int(0)],exp[grammar(binary_logi),logiop(??),exp:ident(i),exp[grammar(record_ptr),exp:ident(ncp),ident(cl_naddr)]],exp:??(N/H),estmt[exp[grammar(call),exp:ident(auth_unix_add_addr),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(ncp),ident(cl_addrlist)],exp:ident(i)],exp:ident(dom)]]],estmt[exp[grammar(call),exp:ident(auth_unix_forget_old),exp:ident(dom)]],estmt[exp[grammar(call),exp:ident(auth_domain_put),exp:ident(dom)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:const:int(0)]],statem(N/H),statem(N/H)]],def[fname(exp_delclient),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(ncp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(exp_writelock)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(dom),exp[grammar(call),exp:ident(auth_domain_find),exp[grammar(record_ptr),exp:ident(ncp),ident(cl_ident)]]]],sel_if[exp:ident(dom),{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(auth_unix_forget_old),exp:ident(dom)]]],estmt[exp[grammar(call),exp:ident(auth_domain_put),exp:ident(dom)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(exp_writeunlock)]],statem(N/H)]],def[fname(exp_verify_string),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(cp),fulltype[typec(N/H)]],param[reg(),name(max),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[statem(N/H),for[exp[grammar(assign),simple_assi(=),exp:ident(i),exp:const:int(0)],exp[grammar(binary_logi),logiop(??),exp:ident(i),exp:ident(max)],exp:??(N/H),sel_if[exp:??(N/H),st_return[exp:ident(i)],estmt(NONE)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(array_acc),exp:ident(cp),exp:ident(i)],exp:const:int(0)]],estmt[exp[grammar(call),exp:ident(printk),exp:const:other(N/H),exp:ident(cp)]],st_return[exp:const:int(0)]]],def[fname(nfsd_export_init),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(),fulltype[ctype[btype(void)]]]],{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(dprintk),exp:const:string(nfsd: initializing export module.\n)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(rv),exp[grammar(call),exp:ident(cache_register),exp:&ref:exp:ident(svc_export_cache)]]],sel_if[exp:ident(rv),st_return[exp:ident(rv)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(rv),exp[grammar(call),exp:ident(cache_register),exp:&ref:exp:ident(svc_expkey_cache)]]],sel_if[exp:ident(rv),estmt[exp[grammar(call),exp:ident(cache_unregister),exp:&ref:exp:ident(svc_export_cache)]],estmt(NONE)],st_return[exp:ident(rv)]]],def[fname(nfsd_export_flush),funtype[fulltype[ctype[btype(void)]],param[reg(),name(),fulltype[ctype[btype(void)]]]],{}stmt[estmt[exp[grammar(call),exp:ident(exp_writelock)]],estmt[exp[grammar(call),exp:ident(cache_purge),exp:&ref:exp:ident(svc_expkey_cache)]],estmt[exp[grammar(call),exp:ident(cache_purge),exp:&ref:exp:ident(svc_export_cache)]],estmt[exp[grammar(call),exp:ident(exp_writeunlock)]]]],def[fname(nfsd_export_shutdown),funtype[fulltype[ctype[btype(void)]],param[reg(),name(),fulltype[ctype[btype(void)]]]],{}stmt[estmt[exp[grammar(call),exp:ident(dprintk),exp:const:string(nfsd: shutting down export module.\n)]],estmt[exp[grammar(call),exp:ident(exp_writelock)]],estmt[exp[grammar(call),exp:ident(cache_unregister),exp:&ref:exp:ident(svc_expkey_cache)]],estmt[exp[grammar(call),exp:ident(cache_unregister),exp:&ref:exp:ident(svc_export_cache)]],estmt[exp[grammar(call),exp:ident(svcauth_unix_purge)]],estmt[exp[grammar(call),exp:ident(exp_writeunlock)]],estmt[exp[grammar(call),exp:ident(dprintk),exp:const:string(nfsd: export shutdown complete.\n)]]]]]
[Main] terms that changed: 
[Diff] abstracting concrete update:exp[grammar(call),exp:ident(seq_path),exp:ident(m),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(exp),ident(ex_path)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(exp),ident(ex_path)],ident(dentry)],exp:const:string( \t\n\\)] ==> exp[grammar(call),exp:ident(seq_path),exp:ident(m),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(exp),ident(ex_path)],exp:const:string( \t\n\\)]
[Diff] resulting abstract updates: 16
[Diff] abstracting concrete update:estmt[exp[grammar(call),exp:ident(seq_path),exp:ident(m),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(exp),ident(ex_path)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(exp),ident(ex_path)],ident(dentry)],exp:const:string( \t\n\\)]] ==> estmt[exp[grammar(call),exp:ident(seq_path),exp:ident(m),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(exp),ident(ex_path)],exp:const:string( \t\n\\)]]
[Diff] resulting abstract updates: 1
[Diff] abstracting concrete update:{}stmt[statem(N/H),sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(h),exp:ident(NULL)],{}stmt[estmt[exp[grammar(call),exp:ident(seq_puts),exp:ident(m),exp:const:string(#path domain(flags)\n)]],st_return[exp:const:int(0)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(container_of),exp:ident(h),argtype(N/H),exp:ident(h)]]],estmt[exp[grammar(call),exp:ident(seq_path),exp:ident(m),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(exp),ident(ex_path)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(exp),ident(ex_path)],ident(dentry)],exp:const:string( \t\n\\)]],estmt[exp[grammar(call),exp:ident(seq_putc),exp:ident(m),exp:const:other(N/H)]],estmt[exp[grammar(call),exp:ident(seq_escape),exp:ident(m),exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(exp),ident(ex_client)],ident(name)],exp:const:string( \t\n\\)]],estmt[exp[grammar(call),exp:ident(seq_putc),exp:ident(m),exp:const:other(N/H)]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(call),exp:ident(test_bit),exp:ident(CACHE_VALID),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(h),ident(flags)]],exp:??(N/H)],{}stmt[estmt[exp[grammar(call),exp:ident(exp_flags),exp:ident(m),exp[grammar(record_ptr),exp:ident(exp),ident(ex_flags)],exp[grammar(record_ptr),exp:ident(exp),ident(ex_fsid)],exp[grammar(record_ptr),exp:ident(exp),ident(ex_anon_uid)],exp[grammar(record_ptr),exp:ident(exp),ident(ex_anon_gid)],exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(exp),ident(ex_fslocs)]]],sel_if[exp[grammar(record_ptr),exp:ident(exp),ident(ex_uuid)],{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(seq_puts),exp:ident(m),exp:const:string(,uuid=)]],for[exp[grammar(assign),simple_assi(=),exp:ident(i),exp:const:int(0)],exp[grammar(binary_logi),logiop(??),exp:ident(i),exp:const:int(16)],exp:??(N/H),{}stmt[sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(eq),exp[grammar(binary_arith),aop(&),exp:ident(i),exp:const:int(3)],exp:const:int(0)],exp:ident(i)],estmt[exp[grammar(call),exp:ident(seq_putc),exp:ident(m),exp:const:other(N/H)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(%02x),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(exp),ident(ex_uuid)],exp:ident(i)]]]]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(show_secinfo),exp:ident(m),exp:ident(exp)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(seq_puts),exp:ident(m),exp:const:string()\n)]],st_return[exp:const:int(0)]] ==> {}stmt[statem(N/H),sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(h),exp:ident(NULL)],{}stmt[estmt[exp[grammar(call),exp:ident(seq_puts),exp:ident(m),exp:const:string(#path domain(flags)\n)]],st_return[exp:const:int(0)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(container_of),exp:ident(h),argtype(N/H),exp:ident(h)]]],estmt[exp[grammar(call),exp:ident(seq_path),exp:ident(m),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(exp),ident(ex_path)],exp:const:string( \t\n\\)]],estmt[exp[grammar(call),exp:ident(seq_putc),exp:ident(m),exp:const:other(N/H)]],estmt[exp[grammar(call),exp:ident(seq_escape),exp:ident(m),exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(exp),ident(ex_client)],ident(name)],exp:const:string( \t\n\\)]],estmt[exp[grammar(call),exp:ident(seq_putc),exp:ident(m),exp:const:other(N/H)]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(call),exp:ident(test_bit),exp:ident(CACHE_VALID),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(h),ident(flags)]],exp:??(N/H)],{}stmt[estmt[exp[grammar(call),exp:ident(exp_flags),exp:ident(m),exp[grammar(record_ptr),exp:ident(exp),ident(ex_flags)],exp[grammar(record_ptr),exp:ident(exp),ident(ex_fsid)],exp[grammar(record_ptr),exp:ident(exp),ident(ex_anon_uid)],exp[grammar(record_ptr),exp:ident(exp),ident(ex_anon_gid)],exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(exp),ident(ex_fslocs)]]],sel_if[exp[grammar(record_ptr),exp:ident(exp),ident(ex_uuid)],{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(seq_puts),exp:ident(m),exp:const:string(,uuid=)]],for[exp[grammar(assign),simple_assi(=),exp:ident(i),exp:const:int(0)],exp[grammar(binary_logi),logiop(??),exp:ident(i),exp:const:int(16)],exp:??(N/H),{}stmt[sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(eq),exp[grammar(binary_arith),aop(&),exp:ident(i),exp:const:int(3)],exp:const:int(0)],exp:ident(i)],estmt[exp[grammar(call),exp:ident(seq_putc),exp:ident(m),exp:const:other(N/H)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(%02x),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(exp),ident(ex_uuid)],exp:ident(i)]]]]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(show_secinfo),exp:ident(m),exp:ident(exp)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(seq_puts),exp:ident(m),exp:const:string()\n)]],st_return[exp:const:int(0)]]
[Diff] resulting abstract updates: 1
[Diff] abstracting concrete update:def[fname(svc_export_show),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(cd),fulltype[typec(N/H)]],param[reg(),name(h),fulltype[typec(N/H)]]],{}stmt[statem(N/H),sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(h),exp:ident(NULL)],{}stmt[estmt[exp[grammar(call),exp:ident(seq_puts),exp:ident(m),exp:const:string(#path domain(flags)\n)]],st_return[exp:const:int(0)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(container_of),exp:ident(h),argtype(N/H),exp:ident(h)]]],estmt[exp[grammar(call),exp:ident(seq_path),exp:ident(m),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(exp),ident(ex_path)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(exp),ident(ex_path)],ident(dentry)],exp:const:string( \t\n\\)]],estmt[exp[grammar(call),exp:ident(seq_putc),exp:ident(m),exp:const:other(N/H)]],estmt[exp[grammar(call),exp:ident(seq_escape),exp:ident(m),exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(exp),ident(ex_client)],ident(name)],exp:const:string( \t\n\\)]],estmt[exp[grammar(call),exp:ident(seq_putc),exp:ident(m),exp:const:other(N/H)]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(call),exp:ident(test_bit),exp:ident(CACHE_VALID),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(h),ident(flags)]],exp:??(N/H)],{}stmt[estmt[exp[grammar(call),exp:ident(exp_flags),exp:ident(m),exp[grammar(record_ptr),exp:ident(exp),ident(ex_flags)],exp[grammar(record_ptr),exp:ident(exp),ident(ex_fsid)],exp[grammar(record_ptr),exp:ident(exp),ident(ex_anon_uid)],exp[grammar(record_ptr),exp:ident(exp),ident(ex_anon_gid)],exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(exp),ident(ex_fslocs)]]],sel_if[exp[grammar(record_ptr),exp:ident(exp),ident(ex_uuid)],{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(seq_puts),exp:ident(m),exp:const:string(,uuid=)]],for[exp[grammar(assign),simple_assi(=),exp:ident(i),exp:const:int(0)],exp[grammar(binary_logi),logiop(??),exp:ident(i),exp:const:int(16)],exp:??(N/H),{}stmt[sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(eq),exp[grammar(binary_arith),aop(&),exp:ident(i),exp:const:int(3)],exp:const:int(0)],exp:ident(i)],estmt[exp[grammar(call),exp:ident(seq_putc),exp:ident(m),exp:const:other(N/H)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(%02x),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(exp),ident(ex_uuid)],exp:ident(i)]]]]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(show_secinfo),exp:ident(m),exp:ident(exp)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(seq_puts),exp:ident(m),exp:const:string()\n)]],st_return[exp:const:int(0)]]] ==> def[fname(svc_export_show),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(cd),fulltype[typec(N/H)]],param[reg(),name(h),fulltype[typec(N/H)]]],{}stmt[statem(N/H),sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(h),exp:ident(NULL)],{}stmt[estmt[exp[grammar(call),exp:ident(seq_puts),exp:ident(m),exp:const:string(#path domain(flags)\n)]],st_return[exp:const:int(0)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(container_of),exp:ident(h),argtype(N/H),exp:ident(h)]]],estmt[exp[grammar(call),exp:ident(seq_path),exp:ident(m),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(exp),ident(ex_path)],exp:const:string( \t\n\\)]],estmt[exp[grammar(call),exp:ident(seq_putc),exp:ident(m),exp:const:other(N/H)]],estmt[exp[grammar(call),exp:ident(seq_escape),exp:ident(m),exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(exp),ident(ex_client)],ident(name)],exp:const:string( \t\n\\)]],estmt[exp[grammar(call),exp:ident(seq_putc),exp:ident(m),exp:const:other(N/H)]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(call),exp:ident(test_bit),exp:ident(CACHE_VALID),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(h),ident(flags)]],exp:??(N/H)],{}stmt[estmt[exp[grammar(call),exp:ident(exp_flags),exp:ident(m),exp[grammar(record_ptr),exp:ident(exp),ident(ex_flags)],exp[grammar(record_ptr),exp:ident(exp),ident(ex_fsid)],exp[grammar(record_ptr),exp:ident(exp),ident(ex_anon_uid)],exp[grammar(record_ptr),exp:ident(exp),ident(ex_anon_gid)],exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(exp),ident(ex_fslocs)]]],sel_if[exp[grammar(record_ptr),exp:ident(exp),ident(ex_uuid)],{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(seq_puts),exp:ident(m),exp:const:string(,uuid=)]],for[exp[grammar(assign),simple_assi(=),exp:ident(i),exp:const:int(0)],exp[grammar(binary_logi),logiop(??),exp:ident(i),exp:const:int(16)],exp:??(N/H),{}stmt[sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(eq),exp[grammar(binary_arith),aop(&),exp:ident(i),exp:const:int(3)],exp:const:int(0)],exp:ident(i)],estmt[exp[grammar(call),exp:ident(seq_putc),exp:ident(m),exp:const:other(N/H)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(%02x),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(exp),ident(ex_uuid)],exp:ident(i)]]]]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(show_secinfo),exp:ident(m),exp:ident(exp)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(seq_puts),exp:ident(m),exp:const:string()\n)]],st_return[exp:const:int(0)]]]
[Diff] resulting abstract updates: 1
[Diff] abstracting concrete update:exp[grammar(call),exp:ident(seq_path),exp:ident(m),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(ek),ident(ek_path)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(ek),ident(ek_path)],ident(dentry)],exp:const:string(\\ \t\n)] ==> exp[grammar(call),exp:ident(seq_path),exp:ident(m),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(ek),ident(ek_path)],exp:const:string(\\ \t\n)]
[Diff] resulting abstract updates: 16
[Diff] abstracting concrete update:estmt[exp[grammar(call),exp:ident(seq_path),exp:ident(m),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(ek),ident(ek_path)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(ek),ident(ek_path)],ident(dentry)],exp:const:string(\\ \t\n)]] ==> estmt[exp[grammar(call),exp:ident(seq_path),exp:ident(m),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(ek),ident(ek_path)],exp:const:string(\\ \t\n)]]
[Diff] resulting abstract updates: 1
[Diff] abstracting concrete update:{}stmt[estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( )]],estmt[exp[grammar(call),exp:ident(seq_path),exp:ident(m),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(ek),ident(ek_path)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(ek),ident(ek_path)],ident(dentry)],exp:const:string(\\ \t\n)]]] ==> {}stmt[estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( )]],estmt[exp[grammar(call),exp:ident(seq_path),exp:ident(m),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(ek),ident(ek_path)],exp:const:string(\\ \t\n)]]]
[Diff] resulting abstract updates: 1
[Diff] abstracting concrete update:sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(call),exp:ident(test_bit),exp:ident(CACHE_VALID),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(h),ident(flags)]],exp:??(N/H)],{}stmt[estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( )]],estmt[exp[grammar(call),exp:ident(seq_path),exp:ident(m),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(ek),ident(ek_path)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(ek),ident(ek_path)],ident(dentry)],exp:const:string(\\ \t\n)]]],estmt(NONE)] ==> sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(call),exp:ident(test_bit),exp:ident(CACHE_VALID),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(h),ident(flags)]],exp:??(N/H)],{}stmt[estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( )]],estmt[exp[grammar(call),exp:ident(seq_path),exp:ident(m),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(ek),ident(ek_path)],exp:const:string(\\ \t\n)]]],estmt(NONE)]
[Diff] resulting abstract updates: 1
[Diff] abstracting concrete update:{}stmt[statem(N/H),statem(N/H),sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(h),exp:ident(NULL)],{}stmt[estmt[exp[grammar(call),exp:ident(seq_puts),exp:ident(m),exp:const:string(#domain fsidtype fsid [path]\n)]],st_return[exp:const:int(0)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ek),exp[grammar(call),exp:ident(container_of),exp:ident(h),argtype(N/H),exp:ident(h)]]],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(%s %d 0x),exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(ek),ident(ek_client)],ident(name)],exp[grammar(record_ptr),exp:ident(ek),ident(ek_fsidtype)]]],for[exp[grammar(assign),simple_assi(=),exp:ident(i),exp:const:int(0)],exp[grammar(binary_logi),logiop(??),exp:ident(i),exp[grammar(binary_arith),aop(/),exp[grammar(call),exp:ident(key_len),exp[grammar(record_ptr),exp:ident(ek),ident(ek_fsidtype)]],exp:const:int(4)]],exp:??(N/H),estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(%08x),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(ek),ident(ek_fsid)],exp:ident(i)]]]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(call),exp:ident(test_bit),exp:ident(CACHE_VALID),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(h),ident(flags)]],exp:??(N/H)],{}stmt[estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( )]],estmt[exp[grammar(call),exp:ident(seq_path),exp:ident(m),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(ek),ident(ek_path)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(ek),ident(ek_path)],ident(dentry)],exp:const:string(\\ \t\n)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(\n)]],st_return[exp:const:int(0)]] ==> {}stmt[statem(N/H),statem(N/H),sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(h),exp:ident(NULL)],{}stmt[estmt[exp[grammar(call),exp:ident(seq_puts),exp:ident(m),exp:const:string(#domain fsidtype fsid [path]\n)]],st_return[exp:const:int(0)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ek),exp[grammar(call),exp:ident(container_of),exp:ident(h),argtype(N/H),exp:ident(h)]]],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(%s %d 0x),exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(ek),ident(ek_client)],ident(name)],exp[grammar(record_ptr),exp:ident(ek),ident(ek_fsidtype)]]],for[exp[grammar(assign),simple_assi(=),exp:ident(i),exp:const:int(0)],exp[grammar(binary_logi),logiop(??),exp:ident(i),exp[grammar(binary_arith),aop(/),exp[grammar(call),exp:ident(key_len),exp[grammar(record_ptr),exp:ident(ek),ident(ek_fsidtype)]],exp:const:int(4)]],exp:??(N/H),estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(%08x),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(ek),ident(ek_fsid)],exp:ident(i)]]]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(call),exp:ident(test_bit),exp:ident(CACHE_VALID),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(h),ident(flags)]],exp:??(N/H)],{}stmt[estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( )]],estmt[exp[grammar(call),exp:ident(seq_path),exp:ident(m),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(ek),ident(ek_path)],exp:const:string(\\ \t\n)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(\n)]],st_return[exp:const:int(0)]]
[Diff] resulting abstract updates: 1
[Diff] abstracting concrete update:def[fname(expkey_show),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(cd),fulltype[typec(N/H)]],param[reg(),name(h),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(h),exp:ident(NULL)],{}stmt[estmt[exp[grammar(call),exp:ident(seq_puts),exp:ident(m),exp:const:string(#domain fsidtype fsid [path]\n)]],st_return[exp:const:int(0)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ek),exp[grammar(call),exp:ident(container_of),exp:ident(h),argtype(N/H),exp:ident(h)]]],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(%s %d 0x),exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(ek),ident(ek_client)],ident(name)],exp[grammar(record_ptr),exp:ident(ek),ident(ek_fsidtype)]]],for[exp[grammar(assign),simple_assi(=),exp:ident(i),exp:const:int(0)],exp[grammar(binary_logi),logiop(??),exp:ident(i),exp[grammar(binary_arith),aop(/),exp[grammar(call),exp:ident(key_len),exp[grammar(record_ptr),exp:ident(ek),ident(ek_fsidtype)]],exp:const:int(4)]],exp:??(N/H),estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(%08x),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(ek),ident(ek_fsid)],exp:ident(i)]]]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(call),exp:ident(test_bit),exp:ident(CACHE_VALID),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(h),ident(flags)]],exp:??(N/H)],{}stmt[estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( )]],estmt[exp[grammar(call),exp:ident(seq_path),exp:ident(m),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(ek),ident(ek_path)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(ek),ident(ek_path)],ident(dentry)],exp:const:string(\\ \t\n)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(\n)]],st_return[exp:const:int(0)]]] ==> def[fname(expkey_show),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(cd),fulltype[typec(N/H)]],param[reg(),name(h),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(h),exp:ident(NULL)],{}stmt[estmt[exp[grammar(call),exp:ident(seq_puts),exp:ident(m),exp:const:string(#domain fsidtype fsid [path]\n)]],st_return[exp:const:int(0)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ek),exp[grammar(call),exp:ident(container_of),exp:ident(h),argtype(N/H),exp:ident(h)]]],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(%s %d 0x),exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(ek),ident(ek_client)],ident(name)],exp[grammar(record_ptr),exp:ident(ek),ident(ek_fsidtype)]]],for[exp[grammar(assign),simple_assi(=),exp:ident(i),exp:const:int(0)],exp[grammar(binary_logi),logiop(??),exp:ident(i),exp[grammar(binary_arith),aop(/),exp[grammar(call),exp:ident(key_len),exp[grammar(record_ptr),exp:ident(ek),ident(ek_fsidtype)]],exp:const:int(4)]],exp:??(N/H),estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(%08x),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(ek),ident(ek_fsid)],exp:ident(i)]]]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(call),exp:ident(test_bit),exp:ident(CACHE_VALID),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(h),ident(flags)]],exp:??(N/H)],{}stmt[estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( )]],estmt[exp[grammar(call),exp:ident(seq_path),exp:ident(m),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(ek),ident(ek_path)],exp:const:string(\\ \t\n)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(\n)]],st_return[exp:const:int(0)]]]
[Diff] resulting abstract updates: 1
[Diff] abstracting concrete update:prg2[define(N/H),includeN[inc_elem(linux),inc_elem(unistd.h)],includeN[inc_elem(linux),inc_elem(slab.h)],includeN[inc_elem(linux),inc_elem(stat.h)],includeN[inc_elem(linux),inc_elem(in.h)],includeN[inc_elem(linux),inc_elem(seq_file.h)],includeN[inc_elem(linux),inc_elem(syscalls.h)],includeN[inc_elem(linux),inc_elem(rwsem.h)],includeN[inc_elem(linux),inc_elem(dcache.h)],includeN[inc_elem(linux),inc_elem(namei.h)],includeN[inc_elem(linux),inc_elem(mount.h)],includeN[inc_elem(linux),inc_elem(hash.h)],includeN[inc_elem(linux),inc_elem(module.h)],includeN[inc_elem(linux),inc_elem(exportfs.h)],includeN[inc_elem(linux),inc_elem(sunrpc),inc_elem(svc.h)],includeN[inc_elem(linux),inc_elem(nfsd),inc_elem(nfsd.h)],includeN[inc_elem(linux),inc_elem(nfsd),inc_elem(nfsfh.h)],includeN[inc_elem(linux),inc_elem(nfsd),inc_elem(syscall.h)],includeN[inc_elem(linux),inc_elem(lockd),inc_elem(bind.h)],includeN[inc_elem(linux),inc_elem(sunrpc),inc_elem(msg_prot.h)],includeN[inc_elem(linux),inc_elem(sunrpc),inc_elem(gss_api.h)],define(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),define(N/H),define(N/H),define(N/H),decl(N/H),def[fname(expkey_put),funtype[fulltype[ctype[btype(void)]],param[reg(),name(ref),fulltype[typec(N/H)]]],{}stmt[statem(N/H),sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(call),exp:ident(test_bit),exp:ident(CACHE_VALID),exp[grammar(&ref),grammar(exp),grammar(record_acc),exp[grammar(record_ptr),exp:ident(key),ident(h)],ident(flags)]],exp:??(N/H)],estmt[exp[grammar(call),exp:ident(path_put),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(key),ident(ek_path)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(auth_domain_put),exp[grammar(record_ptr),exp:ident(key),ident(ek_client)]]],estmt[exp[grammar(call),exp:ident(kfree),exp:ident(key)]]]],def[fname(expkey_request),funtype[fulltype[ctype[btype(void)]],param[reg(),name(cd),fulltype[typec(N/H)]],param[reg(),name(h),fulltype[typec(N/H)]],param[reg(),name(bpp),fulltype[typec(N/H)]],param[reg(),name(blen),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(qword_add),exp:ident(bpp),exp:ident(blen),exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(ek),ident(ek_client)],ident(name)]]],estmt[exp[grammar(call),exp:ident(snprintf),exp:ident(type),exp:const:int(5),exp:const:string(%d),exp[grammar(record_ptr),exp:ident(ek),ident(ek_fsidtype)]]],estmt[exp[grammar(call),exp:ident(qword_add),exp:ident(bpp),exp:ident(blen),exp:ident(type)]],estmt[exp[grammar(call),exp:ident(qword_addhex),exp:ident(bpp),exp:ident(blen),exp:??(N/H),exp[grammar(call),exp:ident(key_len),exp[grammar(record_ptr),exp:ident(ek),ident(ek_fsidtype)]]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(array_acc),exp:*ref:exp:ident(bpp),exp:??(N/H)],exp:const:other(N/H)]]]],decl(N/H),decl(N/H),decl(N/H),def[fname(expkey_parse),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(cd),fulltype[typec(N/H)]],param[reg(),name(mesg),fulltype[typec(N/H)]],param[reg(),name(mlen),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(array_acc),exp:ident(mesg),exp[grammar(binary_arith),aop(-),exp:ident(mlen),exp:const:int(1)]],exp:const:other(N/H)],st_return[exp:??(N/H)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(array_acc),exp:ident(mesg),exp[grammar(binary_arith),aop(-),exp:ident(mlen),exp:const:int(1)]],exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(buf),exp[grammar(call),exp:ident(kmalloc),exp:ident(PAGE_SIZE),exp:ident(GFP_KERNEL)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(assign),simple_assi(=),exp:ident(len),exp[grammar(call),exp:ident(qword_get),exp:&ref:exp:ident(mesg),exp:ident(buf),exp:ident(PAGE_SIZE)]],exp:const:int(0)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(dom),exp[grammar(call),exp:ident(auth_domain_find),exp:ident(buf)]]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(dprintk),exp:const:string(found domain %s\n),exp:ident(buf)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(assign),simple_assi(=),exp:ident(len),exp[grammar(call),exp:ident(qword_get),exp:&ref:exp:ident(mesg),exp:ident(buf),exp:ident(PAGE_SIZE)]],exp:const:int(0)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(fsidtype),exp[grammar(call),exp:ident(simple_strtoul),exp:ident(buf),exp:&ref:exp:ident(ep),exp:const:int(10)]]],sel_if[exp:*ref:exp:ident(ep),statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(dprintk),exp:const:string(found fsidtype %d\n),exp:ident(fsidtype)]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(call),exp:ident(key_len),exp:ident(fsidtype)],exp:const:int(0)],statem(N/H),estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(assign),simple_assi(=),exp:ident(len),exp[grammar(call),exp:ident(qword_get),exp:&ref:exp:ident(mesg),exp:ident(buf),exp:ident(PAGE_SIZE)]],exp:const:int(0)],statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(dprintk),exp:const:string(found fsid length %d\n),exp:ident(len)]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(len),exp[grammar(call),exp:ident(key_len),exp:ident(fsidtype)]],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(key),ident(h)],ident(flags)],exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(key),ident(h)],ident(expiry_time)],exp[grammar(call),exp:ident(get_expiry),exp:&ref:exp:ident(mesg)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(key),ident(h)],ident(expiry_time)],exp:const:int(0)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(key),ident(ek_client)],exp:ident(dom)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(key),ident(ek_fsidtype)],exp:ident(fsidtype)]],estmt[exp[grammar(call),exp:ident(memcpy),exp[grammar(record_acc),exp:ident(key),ident(ek_fsid)],exp:ident(buf),exp:ident(len)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ek),exp[grammar(call),exp:ident(svc_expkey_lookup),exp:&ref:exp:ident(key)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(assign),simple_assi(=),exp:ident(len),exp[grammar(call),exp:ident(qword_get),exp:&ref:exp:ident(mesg),exp:ident(buf),exp:ident(PAGE_SIZE)]],exp:const:int(0)],statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(dprintk),exp:const:string(Path seems to be <%s>\n),exp:ident(buf)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:const:int(0)]],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(len),exp:const:int(0)],{}stmt[estmt[exp[grammar(call),exp:ident(set_bit),exp:ident(CACHE_NEGATIVE),exp[grammar(&ref),grammar(exp),grammar(record_acc),exp[grammar(record_acc),exp:ident(key),ident(h)],ident(flags)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ek),exp[grammar(call),exp:ident(svc_expkey_update),exp:&ref:exp:ident(key),exp:ident(ek)]]],sel_if[exp:ident(ek),estmt[exp[grammar(call),exp:ident(cache_put),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(ek),ident(h)],exp:&ref:exp:ident(svc_expkey_cache)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]]]],{}stmt[statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(path_lookup),exp:ident(buf),exp:const:int(0),exp:&ref:exp:ident(nd)]]],sel_if[exp:ident(err),statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(dprintk),exp:const:string(Found the path %s\n),exp:ident(buf)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(key),ident(ek_path)],exp[grammar(record_acc),exp:ident(nd),ident(path)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ek),exp[grammar(call),exp:ident(svc_expkey_update),exp:&ref:exp:ident(key),exp:ident(ek)]]],sel_if[exp:ident(ek),estmt[exp[grammar(call),exp:ident(cache_put),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(ek),ident(h)],exp:&ref:exp:ident(svc_expkey_cache)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]]],estmt[exp[grammar(call),exp:ident(path_put),exp[grammar(&ref),grammar(exp),grammar(record_acc),exp:ident(nd),ident(path)]]]]],estmt[exp[grammar(call),exp:ident(cache_flush)]],statem(N/H),estmt[exp[grammar(call),exp:ident(kfree),exp:ident(buf)]],st_return[exp:ident(err)]]],def[fname(expkey_show),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(cd),fulltype[typec(N/H)]],param[reg(),name(h),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(h),exp:ident(NULL)],{}stmt[estmt[exp[grammar(call),exp:ident(seq_puts),exp:ident(m),exp:const:string(#domain fsidtype fsid [path]\n)]],st_return[exp:const:int(0)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ek),exp[grammar(call),exp:ident(container_of),exp:ident(h),argtype(N/H),exp:ident(h)]]],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(%s %d 0x),exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(ek),ident(ek_client)],ident(name)],exp[grammar(record_ptr),exp:ident(ek),ident(ek_fsidtype)]]],for[exp[grammar(assign),simple_assi(=),exp:ident(i),exp:const:int(0)],exp[grammar(binary_logi),logiop(??),exp:ident(i),exp[grammar(binary_arith),aop(/),exp[grammar(call),exp:ident(key_len),exp[grammar(record_ptr),exp:ident(ek),ident(ek_fsidtype)]],exp:const:int(4)]],exp:??(N/H),estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(%08x),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(ek),ident(ek_fsid)],exp:ident(i)]]]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(call),exp:ident(test_bit),exp:ident(CACHE_VALID),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(h),ident(flags)]],exp:??(N/H)],{}stmt[estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( )]],estmt[exp[grammar(call),exp:ident(seq_path),exp:ident(m),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(ek),ident(ek_path)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(ek),ident(ek_path)],ident(dentry)],exp:const:string(\\ \t\n)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(\n)]],st_return[exp:const:int(0)]]],def[fname(expkey_match),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(a),fulltype[typec(N/H)]],param[reg(),name(b),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp[grammar(binary_logi),logiop(or),exp[grammar(binary_logi),logiop(or),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(orig),ident(ek_fsidtype)],exp[grammar(record_ptr),exp:ident(new),ident(ek_fsidtype)]],exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(orig),ident(ek_client)],exp[grammar(record_ptr),exp:ident(new),ident(ek_client)]]],exp[grammar(binary_logi),logiop(??),exp[grammar(call),exp:ident(memcmp),exp[grammar(record_ptr),exp:ident(orig),ident(ek_fsid)],exp[grammar(record_ptr),exp:ident(new),ident(ek_fsid)],exp[grammar(call),exp:ident(key_len),exp[grammar(record_ptr),exp:ident(orig),ident(ek_fsidtype)]]],exp:const:int(0)]],st_return[exp:const:int(0)],estmt(NONE)],st_return[exp:const:int(1)]]],def[fname(expkey_init),funtype[fulltype[ctype[btype(void)]],param[reg(),name(cnew),fulltype[typec(N/H)]],param[reg(),name(citem),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(kref_get),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp[grammar(record_ptr),exp:ident(item),ident(ek_client)],ident(ref)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(new),ident(ek_client)],exp[grammar(record_ptr),exp:ident(item),ident(ek_client)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(new),ident(ek_fsidtype)],exp[grammar(record_ptr),exp:ident(item),ident(ek_fsidtype)]]],estmt[exp[grammar(call),exp:ident(memcpy),exp[grammar(record_ptr),exp:ident(new),ident(ek_fsid)],exp[grammar(record_ptr),exp:ident(item),ident(ek_fsid)],exp[grammar(sizeof),grammar(exp),grammar(record_ptr),exp:ident(new),ident(ek_fsid)]]]]],def[fname(expkey_update),funtype[fulltype[ctype[btype(void)]],param[reg(),name(cnew),fulltype[typec(N/H)]],param[reg(),name(citem),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(new),ident(ek_path)],exp[grammar(record_ptr),exp:ident(item),ident(ek_path)]]],estmt[exp[grammar(call),exp:ident(path_get),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(item),ident(ek_path)]]]]],def[fname(expkey_alloc),funtype[fulltype[typec(N/H)],param[reg(),name(),fulltype[ctype[btype(void)]]]],{}stmt[statem(N/H),sel_if[exp:ident(i),st_return[exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(i),ident(h)]],st_return[exp:ident(NULL)]]]],decl(N/H),def[fname(svc_expkey_lookup),funtype[fulltype[typec(N/H)],param[reg(),name(item),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),op_assi(x=),exp:ident(hash),exp[grammar(call),exp:ident(hash_mem),exp:ident(cp),exp:ident(len),exp:ident(EXPKEY_HASHBITS)]]],estmt[exp[grammar(assign),op_assi(x=),exp:ident(hash),exp[grammar(call),exp:ident(hash_ptr),exp[grammar(record_ptr),exp:ident(item),ident(ek_client)],exp:ident(EXPKEY_HASHBITS)]]],estmt[exp[grammar(assign),op_assi(&=),exp:ident(hash),exp:ident(EXPKEY_HASHMASK)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ch),exp[grammar(call),exp:ident(sunrpc_cache_lookup),exp:&ref:exp:ident(svc_expkey_cache),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(item),ident(h)],exp:ident(hash)]]],sel_if[exp:ident(ch),st_return[exp[grammar(call),exp:ident(container_of),exp:ident(ch),argtype(N/H),exp:ident(h)]],st_return[exp:ident(NULL)]]]],def[fname(svc_expkey_update),funtype[fulltype[typec(N/H)],param[reg(),name(new),fulltype[typec(N/H)]],param[reg(),name(old),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),op_assi(x=),exp:ident(hash),exp[grammar(call),exp:ident(hash_mem),exp:ident(cp),exp:ident(len),exp:ident(EXPKEY_HASHBITS)]]],estmt[exp[grammar(assign),op_assi(x=),exp:ident(hash),exp[grammar(call),exp:ident(hash_ptr),exp[grammar(record_ptr),exp:ident(new),ident(ek_client)],exp:ident(EXPKEY_HASHBITS)]]],estmt[exp[grammar(assign),op_assi(&=),exp:ident(hash),exp:ident(EXPKEY_HASHMASK)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ch),exp[grammar(call),exp:ident(sunrpc_cache_update),exp:&ref:exp:ident(svc_expkey_cache),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(new),ident(h)],exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(old),ident(h)],exp:ident(hash)]]],sel_if[exp:ident(ch),st_return[exp[grammar(call),exp:ident(container_of),exp:ident(ch),argtype(N/H),exp:ident(h)]],st_return[exp:ident(NULL)]]]],define(N/H),define(N/H),define(N/H),decl(N/H),def[fname(nfsd4_fslocs_free),funtype[fulltype[ctype[btype(void)]],param[reg(),name(fsloc),fulltype[typec(N/H)]]],{}stmt[statem(N/H),for[exp[grammar(assign),simple_assi(=),exp:ident(i),exp:const:int(0)],exp[grammar(binary_logi),logiop(??),exp:ident(i),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations_count)]],exp:??(N/H),{}stmt[estmt[exp[grammar(call),exp:ident(kfree),exp[grammar(record_acc),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations)],exp:ident(i)],ident(path)]]],estmt[exp[grammar(call),exp:ident(kfree),exp[grammar(record_acc),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations)],exp:ident(i)],ident(hosts)]]]]],estmt[exp[grammar(call),exp:ident(kfree),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations)]]]]],def[fname(svc_export_put),funtype[fulltype[ctype[btype(void)]],param[reg(),name(ref),fulltype[typec(N/H)]]],{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(path_put),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(exp),ident(ex_path)]]],estmt[exp[grammar(call),exp:ident(auth_domain_put),exp[grammar(record_ptr),exp:ident(exp),ident(ex_client)]]],estmt[exp[grammar(call),exp:ident(kfree),exp[grammar(record_ptr),exp:ident(exp),ident(ex_pathname)]]],estmt[exp[grammar(call),exp:ident(nfsd4_fslocs_free),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(exp),ident(ex_fslocs)]]],estmt[exp[grammar(call),exp:ident(kfree),exp:ident(exp)]]]],def[fname(svc_export_request),funtype[fulltype[ctype[btype(void)]],param[reg(),name(cd),fulltype[typec(N/H)]],param[reg(),name(h),fulltype[typec(N/H)]],param[reg(),name(bpp),fulltype[typec(N/H)]],param[reg(),name(blen),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(qword_add),exp:ident(bpp),exp:ident(blen),exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(exp),ident(ex_client)],ident(name)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(pth),exp[grammar(call),exp:ident(d_path),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(exp),ident(ex_path)],ident(dentry)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(exp),ident(ex_path)],ident(mnt)],exp:*ref:exp:ident(bpp),exp:*ref:exp:ident(blen)]]],sel_if[exp[grammar(call),exp:ident(IS_ERR),exp:ident(pth)],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp[grammar(array_acc),exp:*ref:exp:ident(bpp),exp:const:int(0)],exp:const:other(N/H)]],statem(N/H)],estmt(NONE)],estmt[exp[grammar(call),exp:ident(qword_add),exp:ident(bpp),exp:ident(blen),exp:ident(pth)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(array_acc),exp:*ref:exp:ident(bpp),exp:??(N/H)],exp:const:other(N/H)]]]],decl(N/H),decl(N/H),def[fname(check_export),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(inode),fulltype[typec(N/H)]],param[reg(),name(flags),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(uuid),fulltype[typec(N/H)]]],{}stmt[sel_if[exp[grammar(binary_logi),logiop(and),exp:??(N/H),exp:??(N/H)],st_return[exp:??(N/H)],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(and),exp:??(N/H),exp:??(N/H)],exp[grammar(binary_logi),logiop(eq),exp:ident(uuid),exp:ident(NULL)]],{}stmt[estmt[exp[grammar(call),exp:ident(dprintk),exp:const:string(exp_export: export of non-dev fs without fsid\n)]],st_return[exp:??(N/H)]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(or),exp:??(N/H),exp:??(N/H)],{}stmt[estmt[exp[grammar(call),exp:ident(dprintk),exp:const:string(exp_export: export of invalid fs type.\n)]],st_return[exp:??(N/H)]],estmt(NONE)],st_return[exp:const:int(0)]]],def[fname(fsloc_parse),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(mesg),fulltype[typec(N/H)]],param[reg(),name(buf),fulltype[typec(N/H)]],param[reg(),name(fsloc),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(get_int),exp:ident(mesg),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(fsloc),ident(locations_count)]]]],sel_if[exp:ident(err),st_return[exp:ident(err)],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations_count)],exp:ident(MAX_FS_LOCATIONS)],st_return[exp:??(N/H)],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations_count)],exp:const:int(0)],st_return[exp:const:int(0)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations)],exp[grammar(call),exp:ident(kzalloc),exp[grammar(binary_arith),aop(*),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations_count)],exp[grammar(sizeoftype),grammar(fulltype),typec(N/H)]],exp:ident(GFP_KERNEL)]]],sel_if[exp:??(N/H),st_return[exp:??(N/H)],estmt(NONE)],for[exp[grammar(assign),simple_assi(=),exp:ident(i),exp:const:int(0)],exp[grammar(binary_logi),logiop(??),exp:ident(i),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations_count)]],exp:??(N/H),{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(len),exp[grammar(call),exp:ident(qword_get),exp:ident(mesg),exp:ident(buf),exp:ident(PAGE_SIZE)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(len),exp:const:int(0)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations)],exp:ident(i)],ident(hosts)],exp[grammar(call),exp:ident(kstrdup),exp:ident(buf),exp:ident(GFP_KERNEL)]]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(len),exp[grammar(call),exp:ident(qword_get),exp:ident(mesg),exp:ident(buf),exp:ident(PAGE_SIZE)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(len),exp:const:int(0)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations)],exp:ident(i)],ident(path)],exp[grammar(call),exp:ident(kstrdup),exp:ident(buf),exp:ident(GFP_KERNEL)]]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(get_int),exp:ident(mesg),exp:&ref:exp:ident(migrated)]]],sel_if[exp:ident(err),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],sel_if[exp[grammar(binary_logi),logiop(or),exp[grammar(binary_logi),logiop(??),exp:ident(migrated),exp:const:int(0)],exp[grammar(binary_logi),logiop(??),exp:ident(migrated),exp:const:int(1)]],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(fsloc),ident(migrated)],exp:ident(migrated)]],st_return[exp:const:int(0)],statem(N/H),st_return[exp:ident(err)]]],def[fname(secinfo_parse),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(mesg),fulltype[typec(N/H)]],param[reg(),name(buf),fulltype[typec(N/H)]],param[reg(),name(exp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(get_int),exp:ident(mesg),exp:&ref:exp:ident(listsize)]]],sel_if[exp:ident(err),st_return[exp:ident(err)],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(or),exp[grammar(binary_logi),logiop(??),exp:ident(listsize),exp:const:int(0)],exp[grammar(binary_logi),logiop(??),exp:ident(listsize),exp:ident(MAX_SECINFO_LIST)]],st_return[exp:??(N/H)],estmt(NONE)],for[exp[grammar(assign),simple_assi(=),exp:ident(f),exp[grammar(record_ptr),exp:ident(exp),ident(ex_flavors)]],exp[grammar(binary_logi),logiop(??),exp:ident(f),exp[grammar(binary_arith),aop(+),exp[grammar(record_ptr),exp:ident(exp),ident(ex_flavors)],exp:ident(listsize)]],exp:??(N/H),{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(get_int),exp:ident(mesg),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(f),ident(pseudoflavor)]]]],sel_if[exp:ident(err),st_return[exp:ident(err)],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(f),ident(pseudoflavor)],exp:const:int(0)],st_return[exp:??(N/H)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(get_int),exp:ident(mesg),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(f),ident(flags)]]]],sel_if[exp:ident(err),st_return[exp:ident(err)],estmt(NONE)],sel_if[exp[grammar(binary_arith),aop(&),exp:??(N/H),exp[grammar(binary_arith),aop(N/H),exp[grammar(record_ptr),exp:ident(f),ident(flags)],exp[grammar(record_ptr),exp:ident(exp),ident(ex_flags)]]],st_return[exp:??(N/H)],estmt(NONE)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(exp),ident(ex_nflavors)],exp:ident(listsize)]],st_return[exp:const:int(0)]]],def[fname(fsloc_parse),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(mesg),fulltype[typec(N/H)]],param[reg(),name(buf),fulltype[typec(N/H)]],param[reg(),name(fsloc),fulltype[typec(N/H)]]],{}stmt[st_return[exp:const:int(0)]]],def[fname(secinfo_parse),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(mesg),fulltype[typec(N/H)]],param[reg(),name(buf),fulltype[typec(N/H)]],param[reg(),name(exp),fulltype[typec(N/H)]]],{}stmt[st_return[exp:const:int(0)]]],def[fname(svc_export_parse),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(cd),fulltype[typec(N/H)]],param[reg(),name(mesg),fulltype[typec(N/H)]],param[reg(),name(mlen),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(dentry)],exp:ident(NULL)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(exp),ident(ex_pathname)],exp:ident(NULL)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(exp),ident(ex_fslocs)],ident(locations)],exp:ident(NULL)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(exp),ident(ex_fslocs)],ident(locations_count)],exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(exp),ident(ex_fslocs)],ident(migrated)],exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(exp),ident(ex_uuid)],exp:ident(NULL)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(exp),ident(ex_nflavors)],exp:const:int(0)]],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(array_acc),exp:ident(mesg),exp[grammar(binary_arith),aop(-),exp:ident(mlen),exp:const:int(1)]],exp:const:other(N/H)],st_return[exp:??(N/H)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(array_acc),exp:ident(mesg),exp[grammar(binary_arith),aop(-),exp:ident(mlen),exp:const:int(1)]],exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(buf),exp[grammar(call),exp:ident(kmalloc),exp:ident(PAGE_SIZE),exp:ident(GFP_KERNEL)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(len),exp[grammar(call),exp:ident(qword_get),exp:&ref:exp:ident(mesg),exp:ident(buf),exp:ident(PAGE_SIZE)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(len),exp:const:int(0)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(dom),exp[grammar(call),exp:ident(auth_domain_find),exp:ident(buf)]]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(assign),simple_assi(=),exp:ident(len),exp[grammar(call),exp:ident(qword_get),exp:&ref:exp:ident(mesg),exp:ident(buf),exp:ident(PAGE_SIZE)]],exp:const:int(0)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(path_lookup),exp:ident(buf),exp:const:int(0),exp:&ref:exp:ident(nd)]]],sel_if[exp:ident(err),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(exp),ident(h)],ident(flags)],exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(exp),ident(ex_client)],exp:ident(dom)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(exp),ident(ex_path)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(mnt)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(exp),ident(ex_path)],ident(dentry)],exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(dentry)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(exp),ident(ex_pathname)],exp[grammar(call),exp:ident(kstrdup),exp:ident(buf),exp:ident(GFP_KERNEL)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(exp),ident(h)],ident(expiry_time)],exp[grammar(call),exp:ident(get_expiry),exp:&ref:exp:ident(mesg)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(exp),ident(h)],ident(expiry_time)],exp:const:int(0)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(get_int),exp:&ref:exp:ident(mesg),exp:&ref:exp:ident(an_int)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(err),exp:??(N/H)],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:const:int(0)]],estmt[exp[grammar(call),exp:ident(set_bit),exp:ident(CACHE_NEGATIVE),exp[grammar(&ref),grammar(exp),grammar(record_acc),exp[grammar(record_acc),exp:ident(exp),ident(h)],ident(flags)]]]],{}stmt[sel_if[exp[grammar(binary_logi),logiop(or),exp:ident(err),exp[grammar(binary_logi),logiop(??),exp:ident(an_int),exp:const:int(0)]],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(exp),ident(ex_flags)],exp:ident(an_int)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(get_int),exp:&ref:exp:ident(mesg),exp:&ref:exp:ident(an_int)]]],sel_if[exp:ident(err),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(exp),ident(ex_anon_uid)],exp:ident(an_int)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(get_int),exp:&ref:exp:ident(mesg),exp:&ref:exp:ident(an_int)]]],sel_if[exp:ident(err),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(exp),ident(ex_anon_gid)],exp:ident(an_int)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(get_int),exp:&ref:exp:ident(mesg),exp:&ref:exp:ident(an_int)]]],sel_if[exp:ident(err),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(exp),ident(ex_fsid)],exp:ident(an_int)]],while[exp[grammar(binary_logi),logiop(??),exp[grammar(assign),simple_assi(=),exp:ident(len),exp[grammar(call),exp:ident(qword_get),exp:&ref:exp:ident(mesg),exp:ident(buf),exp:ident(PAGE_SIZE)]],exp:const:int(0)],{}stmt[sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(call),exp:ident(strcmp),exp:ident(buf),exp:const:string(fsloc)],exp:const:int(0)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(fsloc_parse),exp:&ref:exp:ident(mesg),exp:ident(buf),exp[grammar(&ref),grammar(exp),grammar(record_acc),exp:ident(exp),ident(ex_fslocs)]]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(call),exp:ident(strcmp),exp:ident(buf),exp:const:string(uuid)],exp:const:int(0)],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(len),exp[grammar(call),exp:ident(qword_get),exp:&ref:exp:ident(mesg),exp:ident(buf),exp:ident(PAGE_SIZE)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(len),exp:const:int(16)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(exp),ident(ex_uuid)],exp[grammar(call),exp:ident(kmemdup),exp:ident(buf),exp:const:int(16),exp:ident(GFP_KERNEL)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(record_acc),exp:ident(exp),ident(ex_uuid)],exp:ident(NULL)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],estmt(NONE)]]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(call),exp:ident(strcmp),exp:ident(buf),exp:const:string(secinfo)],exp:const:int(0)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(secinfo_parse),exp:&ref:exp:ident(mesg),exp:ident(buf),exp:&ref:exp:ident(exp)]]],statem(N/H)]]],sel_if[exp:ident(err),statem(N/H),estmt(NONE)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(check_export),exp[grammar(record_ptr),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(dentry)],ident(d_inode)],exp[grammar(record_acc),exp:ident(exp),ident(ex_flags)],exp[grammar(record_acc),exp:ident(exp),ident(ex_uuid)]]]],sel_if[exp:ident(err),statem(N/H),estmt(NONE)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(expp),exp[grammar(call),exp:ident(svc_export_lookup),exp:&ref:exp:ident(exp)]]],sel_if[exp:ident(expp),estmt[exp[grammar(assign),simple_assi(=),exp:ident(expp),exp[grammar(call),exp:ident(svc_export_update),exp:&ref:exp:ident(exp),exp:ident(expp)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]]],estmt[exp[grammar(call),exp:ident(cache_flush)]],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(expp),exp:ident(NULL)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],estmt[exp[grammar(call),exp:ident(exp_put),exp:ident(expp)]]],statem(N/H),estmt[exp[grammar(call),exp:ident(kfree),exp[grammar(record_acc),exp:ident(exp),ident(ex_uuid)]]],estmt[exp[grammar(call),exp:ident(kfree),exp[grammar(record_acc),exp:ident(exp),ident(ex_pathname)]]],sel_if[exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(dentry)],estmt[exp[grammar(call),exp:ident(path_put),exp[grammar(&ref),grammar(exp),grammar(record_acc),exp:ident(nd),ident(path)]]],estmt(NONE)],statem(N/H),estmt[exp[grammar(call),exp:ident(kfree),exp:ident(buf)]],st_return[exp:ident(err)]]],decl(N/H),decl(N/H),def[fname(svc_export_show),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(cd),fulltype[typec(N/H)]],param[reg(),name(h),fulltype[typec(N/H)]]],{}stmt[statem(N/H),sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(h),exp:ident(NULL)],{}stmt[estmt[exp[grammar(call),exp:ident(seq_puts),exp:ident(m),exp:const:string(#path domain(flags)\n)]],st_return[exp:const:int(0)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(container_of),exp:ident(h),argtype(N/H),exp:ident(h)]]],estmt[exp[grammar(call),exp:ident(seq_path),exp:ident(m),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(exp),ident(ex_path)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(exp),ident(ex_path)],ident(dentry)],exp:const:string( \t\n\\)]],estmt[exp[grammar(call),exp:ident(seq_putc),exp:ident(m),exp:const:other(N/H)]],estmt[exp[grammar(call),exp:ident(seq_escape),exp:ident(m),exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(exp),ident(ex_client)],ident(name)],exp:const:string( \t\n\\)]],estmt[exp[grammar(call),exp:ident(seq_putc),exp:ident(m),exp:const:other(N/H)]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(call),exp:ident(test_bit),exp:ident(CACHE_VALID),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(h),ident(flags)]],exp:??(N/H)],{}stmt[estmt[exp[grammar(call),exp:ident(exp_flags),exp:ident(m),exp[grammar(record_ptr),exp:ident(exp),ident(ex_flags)],exp[grammar(record_ptr),exp:ident(exp),ident(ex_fsid)],exp[grammar(record_ptr),exp:ident(exp),ident(ex_anon_uid)],exp[grammar(record_ptr),exp:ident(exp),ident(ex_anon_gid)],exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(exp),ident(ex_fslocs)]]],sel_if[exp[grammar(record_ptr),exp:ident(exp),ident(ex_uuid)],{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(seq_puts),exp:ident(m),exp:const:string(,uuid=)]],for[exp[grammar(assign),simple_assi(=),exp:ident(i),exp:const:int(0)],exp[grammar(binary_logi),logiop(??),exp:ident(i),exp:const:int(16)],exp:??(N/H),{}stmt[sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(eq),exp[grammar(binary_arith),aop(&),exp:ident(i),exp:const:int(3)],exp:const:int(0)],exp:ident(i)],estmt[exp[grammar(call),exp:ident(seq_putc),exp:ident(m),exp:const:other(N/H)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(%02x),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(exp),ident(ex_uuid)],exp:ident(i)]]]]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(show_secinfo),exp:ident(m),exp:ident(exp)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(seq_puts),exp:ident(m),exp:const:string()\n)]],st_return[exp:const:int(0)]]],def[fname(svc_export_match),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(a),fulltype[typec(N/H)]],param[reg(),name(b),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),st_return[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(orig),ident(ex_client)],exp[grammar(record_ptr),exp:ident(new),ident(ex_client)]],exp[grammar(binary_logi),logiop(eq),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(orig),ident(ex_path)],ident(dentry)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(new),ident(ex_path)],ident(dentry)]]],exp[grammar(binary_logi),logiop(eq),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(orig),ident(ex_path)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(new),ident(ex_path)],ident(mnt)]]]]]],def[fname(svc_export_init),funtype[fulltype[ctype[btype(void)]],param[reg(),name(cnew),fulltype[typec(N/H)]],param[reg(),name(citem),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(kref_get),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp[grammar(record_ptr),exp:ident(item),ident(ex_client)],ident(ref)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(new),ident(ex_client)],exp[grammar(record_ptr),exp:ident(item),ident(ex_client)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(new),ident(ex_path)],ident(dentry)],exp[grammar(call),exp:ident(dget),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(item),ident(ex_path)],ident(dentry)]]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(new),ident(ex_path)],ident(mnt)],exp[grammar(call),exp:ident(mntget),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(item),ident(ex_path)],ident(mnt)]]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(new),ident(ex_pathname)],exp:ident(NULL)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(new),ident(ex_fslocs)],ident(locations)],exp:ident(NULL)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(new),ident(ex_fslocs)],ident(locations_count)],exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(new),ident(ex_fslocs)],ident(migrated)],exp:const:int(0)]]]],def[fname(export_update),funtype[fulltype[ctype[btype(void)]],param[reg(),name(cnew),fulltype[typec(N/H)]],param[reg(),name(citem),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(new),ident(ex_flags)],exp[grammar(record_ptr),exp:ident(item),ident(ex_flags)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(new),ident(ex_anon_uid)],exp[grammar(record_ptr),exp:ident(item),ident(ex_anon_uid)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(new),ident(ex_anon_gid)],exp[grammar(record_ptr),exp:ident(item),ident(ex_anon_gid)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(new),ident(ex_fsid)],exp[grammar(record_ptr),exp:ident(item),ident(ex_fsid)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(new),ident(ex_uuid)],exp[grammar(record_ptr),exp:ident(item),ident(ex_uuid)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(item),ident(ex_uuid)],exp:ident(NULL)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(new),ident(ex_pathname)],exp[grammar(record_ptr),exp:ident(item),ident(ex_pathname)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(item),ident(ex_pathname)],exp:ident(NULL)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(new),ident(ex_fslocs)],ident(locations)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(item),ident(ex_fslocs)],ident(locations)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(item),ident(ex_fslocs)],ident(locations)],exp:ident(NULL)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(new),ident(ex_fslocs)],ident(locations_count)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(item),ident(ex_fslocs)],ident(locations_count)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(item),ident(ex_fslocs)],ident(locations_count)],exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(new),ident(ex_fslocs)],ident(migrated)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(item),ident(ex_fslocs)],ident(migrated)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(item),ident(ex_fslocs)],ident(migrated)],exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(new),ident(ex_nflavors)],exp[grammar(record_ptr),exp:ident(item),ident(ex_nflavors)]]],for[exp[grammar(assign),simple_assi(=),exp:ident(i),exp:const:int(0)],exp[grammar(binary_logi),logiop(??),exp:ident(i),exp:ident(MAX_SECINFO_LIST)],exp:??(N/H),{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(new),ident(ex_flavors)],exp:ident(i)],exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(item),ident(ex_flavors)],exp:ident(i)]]]]]]],def[fname(svc_export_alloc),funtype[fulltype[typec(N/H)],param[reg(),name(),fulltype[ctype[btype(void)]]]],{}stmt[statem(N/H),sel_if[exp:ident(i),st_return[exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(i),ident(h)]],st_return[exp:ident(NULL)]]]],decl(N/H),def[fname(svc_export_lookup),funtype[fulltype[typec(N/H)],param[reg(),name(exp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(hash),exp[grammar(call),exp:ident(hash_ptr),exp[grammar(record_ptr),exp:ident(exp),ident(ex_client)],exp:ident(EXPORT_HASHBITS)]]],estmt[exp[grammar(assign),op_assi(x=),exp:ident(hash),exp[grammar(call),exp:ident(hash_ptr),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(exp),ident(ex_path)],ident(dentry)],exp:ident(EXPORT_HASHBITS)]]],estmt[exp[grammar(assign),op_assi(x=),exp:ident(hash),exp[grammar(call),exp:ident(hash_ptr),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(exp),ident(ex_path)],ident(mnt)],exp:ident(EXPORT_HASHBITS)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ch),exp[grammar(call),exp:ident(sunrpc_cache_lookup),exp:&ref:exp:ident(svc_export_cache),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(exp),ident(h)],exp:ident(hash)]]],sel_if[exp:ident(ch),st_return[exp[grammar(call),exp:ident(container_of),exp:ident(ch),argtype(N/H),exp:ident(h)]],st_return[exp:ident(NULL)]]]],def[fname(svc_export_update),funtype[fulltype[typec(N/H)],param[reg(),name(new),fulltype[typec(N/H)]],param[reg(),name(old),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(hash),exp[grammar(call),exp:ident(hash_ptr),exp[grammar(record_ptr),exp:ident(old),ident(ex_client)],exp:ident(EXPORT_HASHBITS)]]],estmt[exp[grammar(assign),op_assi(x=),exp:ident(hash),exp[grammar(call),exp:ident(hash_ptr),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(old),ident(ex_path)],ident(dentry)],exp:ident(EXPORT_HASHBITS)]]],estmt[exp[grammar(assign),op_assi(x=),exp:ident(hash),exp[grammar(call),exp:ident(hash_ptr),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(old),ident(ex_path)],ident(mnt)],exp:ident(EXPORT_HASHBITS)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ch),exp[grammar(call),exp:ident(sunrpc_cache_update),exp:&ref:exp:ident(svc_export_cache),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(new),ident(h)],exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(old),ident(h)],exp:ident(hash)]]],sel_if[exp:ident(ch),st_return[exp[grammar(call),exp:ident(container_of),exp:ident(ch),argtype(N/H),exp:ident(h)]],st_return[exp:ident(NULL)]]]],def[fname(exp_find_key),funtype[fulltype[typec(N/H)],param[reg(),name(clp),fulltype[typec(N/H)]],param[reg(),name(fsid_type),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(fsidv),fulltype[typec(N/H)]],param[reg(),name(reqp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp:??(N/H),st_return[exp[grammar(call),exp:ident(ERR_PTR),exp:??(N/H)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(key),ident(ek_client)],exp:ident(clp)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(key),ident(ek_fsidtype)],exp:ident(fsid_type)]],estmt[exp[grammar(call),exp:ident(memcpy),exp[grammar(record_acc),exp:ident(key),ident(ek_fsid)],exp:ident(fsidv),exp[grammar(call),exp:ident(key_len),exp:ident(fsid_type)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ek),exp[grammar(call),exp:ident(svc_expkey_lookup),exp:&ref:exp:ident(key)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(ek),exp:ident(NULL)],st_return[exp[grammar(call),exp:ident(ERR_PTR),exp:??(N/H)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(cache_check),exp:&ref:exp:ident(svc_expkey_cache),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(ek),ident(h)],exp:ident(reqp)]]],sel_if[exp:ident(err),st_return[exp[grammar(call),exp:ident(ERR_PTR),exp:ident(err)]],estmt(NONE)],st_return[exp:ident(ek)]]],def[fname(exp_set_key),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(clp),fulltype[typec(N/H)]],param[reg(),name(fsid_type),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(fsidv),fulltype[typec(N/H)]],param[reg(),name(exp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(key),ident(ek_client)],exp:ident(clp)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(key),ident(ek_fsidtype)],exp:ident(fsid_type)]],estmt[exp[grammar(call),exp:ident(memcpy),exp[grammar(record_acc),exp:ident(key),ident(ek_fsid)],exp:ident(fsidv),exp[grammar(call),exp:ident(key_len),exp:ident(fsid_type)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(key),ident(ek_path)],exp[grammar(record_ptr),exp:ident(exp),ident(ex_path)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(key),ident(h)],ident(expiry_time)],exp:ident(NEVER)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(key),ident(h)],ident(flags)],exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ek),exp[grammar(call),exp:ident(svc_expkey_lookup),exp:&ref:exp:ident(key)]]],sel_if[exp:ident(ek),estmt[exp[grammar(assign),simple_assi(=),exp:ident(ek),exp[grammar(call),exp:ident(svc_expkey_update),exp:&ref:exp:ident(key),exp:ident(ek)]]],estmt(NONE)],sel_if[exp:ident(ek),{}stmt[estmt[exp[grammar(call),exp:ident(cache_put),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(ek),ident(h)],exp:&ref:exp:ident(svc_expkey_cache)]],st_return[exp:const:int(0)]],estmt(NONE)],st_return[exp:??(N/H)]]],def[fname(exp_get_key),funtype[fulltype[typec(N/H)],param[reg(),name(clp),fulltype[typec(N/H)]],param[reg(),name(dev),fulltype[typec(N/H)]],param[reg(),name(ino),fulltype[typec(N/H)]]],{}stmt[statem(N/H),sel_if[exp[grammar(call),exp:ident(old_valid_dev),exp:ident(dev)],{}stmt[estmt[exp[grammar(call),exp:ident(mk_fsid),exp:ident(FSID_DEV),exp:ident(fsidv),exp:ident(dev),exp:ident(ino),exp:const:int(0),exp:ident(NULL)]],st_return[exp[grammar(call),exp:ident(exp_find_key),exp:ident(clp),exp:ident(FSID_DEV),exp:ident(fsidv),exp:ident(NULL)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(mk_fsid),exp:ident(FSID_ENCODE_DEV),exp:ident(fsidv),exp:ident(dev),exp:ident(ino),exp:const:int(0),exp:ident(NULL)]],st_return[exp[grammar(call),exp:ident(exp_find_key),exp:ident(clp),exp:ident(FSID_ENCODE_DEV),exp:ident(fsidv),exp:ident(NULL)]]]],def[fname(exp_get_fsid_key),funtype[fulltype[typec(N/H)],param[reg(),name(clp),fulltype[typec(N/H)]],param[reg(),name(fsid),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(mk_fsid),exp:ident(FSID_NUM),exp:ident(fsidv),exp:const:int(0),exp:const:int(0),exp:ident(fsid),exp:ident(NULL)]],st_return[exp[grammar(call),exp:ident(exp_find_key),exp:ident(clp),exp:ident(FSID_NUM),exp:ident(fsidv),exp:ident(NULL)]]]],def[fname(exp_get_by_name),funtype[fulltype[typec(N/H)],param[reg(),name(clp),fulltype[typec(N/H)]],param[reg(),name(mnt),fulltype[typec(N/H)]],param[reg(),name(dentry),fulltype[typec(N/H)]],param[reg(),name(reqp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp:??(N/H),st_return[exp[grammar(call),exp:ident(ERR_PTR),exp:??(N/H)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(key),ident(ex_client)],exp:ident(clp)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(key),ident(ex_path)],ident(mnt)],exp:ident(mnt)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(key),ident(ex_path)],ident(dentry)],exp:ident(dentry)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(svc_export_lookup),exp:&ref:exp:ident(key)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(exp),exp:ident(NULL)],st_return[exp[grammar(call),exp:ident(ERR_PTR),exp:??(N/H)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(cache_check),exp:&ref:exp:ident(svc_export_cache),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(exp),ident(h)],exp:ident(reqp)]]],sel_if[exp:ident(err),st_return[exp[grammar(call),exp:ident(ERR_PTR),exp:ident(err)]],estmt(NONE)],st_return[exp:ident(exp)]]],def[fname(exp_parent),funtype[fulltype[typec(N/H)],param[reg(),name(clp),fulltype[typec(N/H)]],param[reg(),name(mnt),fulltype[typec(N/H)]],param[reg(),name(dentry),fulltype[typec(N/H)]],param[reg(),name(reqp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(dget),exp:ident(dentry)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(exp_get_by_name),exp:ident(clp),exp:ident(mnt),exp:ident(dentry),exp:ident(reqp)]]],while[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(eq),exp[grammar(call),exp:ident(PTR_ERR),exp:ident(exp)],exp:??(N/H)],exp:??(N/H)],{}stmt[statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(parent),exp[grammar(call),exp:ident(dget_parent),exp:ident(dentry)]]],estmt[exp[grammar(call),exp:ident(dput),exp:ident(dentry)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(dentry),exp:ident(parent)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(exp_get_by_name),exp:ident(clp),exp:ident(mnt),exp:ident(dentry),exp:ident(reqp)]]]]],estmt[exp[grammar(call),exp:ident(dput),exp:ident(dentry)]],st_return[exp:ident(exp)]]],decl(N/H),def[fname(exp_readlock),funtype[fulltype[ctype[btype(void)]],param[reg(),name(),fulltype[ctype[btype(void)]]]],{}stmt[estmt[exp[grammar(call),exp:ident(down_read),exp:&ref:exp:ident(hash_sem)]]]],def[fname(exp_writelock),funtype[fulltype[ctype[btype(void)]],param[reg(),name(),fulltype[ctype[btype(void)]]]],{}stmt[estmt[exp[grammar(call),exp:ident(down_write),exp:&ref:exp:ident(hash_sem)]]]],def[fname(exp_readunlock),funtype[fulltype[ctype[btype(void)]],param[reg(),name(),fulltype[ctype[btype(void)]]]],{}stmt[estmt[exp[grammar(call),exp:ident(up_read),exp:&ref:exp:ident(hash_sem)]]]],def[fname(exp_writeunlock),funtype[fulltype[ctype[btype(void)]],param[reg(),name(),fulltype[ctype[btype(void)]]]],{}stmt[estmt[exp[grammar(call),exp:ident(up_write),exp:&ref:exp:ident(hash_sem)]]]],def[fname(exp_fsid_unhash),funtype[fulltype[ctype[btype(void)]],param[reg(),name(exp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(binary_arith),aop(&),exp[grammar(record_ptr),exp:ident(exp),ident(ex_flags)],exp:ident(NFSEXP_FSID)],exp:const:int(0)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ek),exp[grammar(call),exp:ident(exp_get_fsid_key),exp[grammar(record_ptr),exp:ident(exp),ident(ex_client)],exp[grammar(record_ptr),exp:ident(exp),ident(ex_fsid)]]]],sel_if[exp:??(N/H),{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(ek),ident(h)],ident(expiry_time)],exp[grammar(binary_arith),aop(-),exp[grammar(call),exp:ident(get_seconds)],exp:const:int(1)]]],estmt[exp[grammar(call),exp:ident(cache_put),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(ek),ident(h)],exp:&ref:exp:ident(svc_expkey_cache)]]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(svc_expkey_cache),ident(nextcheck)],exp[grammar(call),exp:ident(get_seconds)]]]]],def[fname(exp_fsid_hash),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(clp),fulltype[typec(N/H)]],param[reg(),name(exp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(binary_arith),aop(&),exp[grammar(record_ptr),exp:ident(exp),ident(ex_flags)],exp:ident(NFSEXP_FSID)],exp:const:int(0)],st_return[exp:const:int(0)],estmt(NONE)],estmt[exp[grammar(call),exp:ident(mk_fsid),exp:ident(FSID_NUM),exp:ident(fsid),exp:const:int(0),exp:const:int(0),exp[grammar(record_ptr),exp:ident(exp),ident(ex_fsid)],exp:ident(NULL)]],st_return[exp[grammar(call),exp:ident(exp_set_key),exp:ident(clp),exp:ident(FSID_NUM),exp:ident(fsid),exp:ident(exp)]]]],def[fname(exp_hash),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(clp),fulltype[typec(N/H)]],param[reg(),name(exp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),sel_if[exp[grammar(call),exp:ident(old_valid_dev),exp:ident(dev)],{}stmt[estmt[exp[grammar(call),exp:ident(mk_fsid),exp:ident(FSID_DEV),exp:ident(fsid),exp:ident(dev),exp[grammar(record_ptr),exp:ident(inode),ident(i_ino)],exp:const:int(0),exp:ident(NULL)]],st_return[exp[grammar(call),exp:ident(exp_set_key),exp:ident(clp),exp:ident(FSID_DEV),exp:ident(fsid),exp:ident(exp)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(mk_fsid),exp:ident(FSID_ENCODE_DEV),exp:ident(fsid),exp:ident(dev),exp[grammar(record_ptr),exp:ident(inode),ident(i_ino)],exp:const:int(0),exp:ident(NULL)]],st_return[exp[grammar(call),exp:ident(exp_set_key),exp:ident(clp),exp:ident(FSID_ENCODE_DEV),exp:ident(fsid),exp:ident(exp)]]]],def[fname(exp_unhash),funtype[fulltype[ctype[btype(void)]],param[reg(),name(exp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(ek),exp[grammar(call),exp:ident(exp_get_key),exp[grammar(record_ptr),exp:ident(exp),ident(ex_client)],exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(inode),ident(i_sb)],ident(s_dev)],exp[grammar(record_ptr),exp:ident(inode),ident(i_ino)]]]],sel_if[exp:??(N/H),{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(ek),ident(h)],ident(expiry_time)],exp[grammar(binary_arith),aop(-),exp[grammar(call),exp:ident(get_seconds)],exp:const:int(1)]]],estmt[exp[grammar(call),exp:ident(cache_put),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(ek),ident(h)],exp:&ref:exp:ident(svc_expkey_cache)]]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(svc_expkey_cache),ident(nextcheck)],exp[grammar(call),exp:ident(get_seconds)]]]]],def[fname(exp_export),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(nxp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],sel_if[exp[grammar(binary_logi),logiop(or),exp:??(N/H),exp:??(N/H)],statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(dprintk),exp:const:string(exp_export called for %s:%s (%x/%ld fl %x).\n),exp[grammar(record_ptr),exp:ident(nxp),ident(ex_client)],exp[grammar(record_ptr),exp:ident(nxp),ident(ex_path)],exp:??(N/H),exp:??(N/H),exp[grammar(record_ptr),exp:ident(nxp),ident(ex_flags)]]],estmt[exp[grammar(call),exp:ident(exp_writelock)]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(path_lookup),exp[grammar(record_ptr),exp:ident(nxp),ident(ex_path)],exp:const:int(0),exp:&ref:exp:ident(nd)]]],sel_if[exp:ident(err),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(exp_get_by_name),exp:ident(clp),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(dentry)],exp:ident(NULL)]]],estmt[exp[grammar(call),exp:ident(memset),exp:&ref:exp:ident(new),exp:const:int(0),exp:sizeof:exp:ident(new)]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(and),exp[grammar(binary_arith),aop(&),exp[grammar(record_ptr),exp:ident(nxp),ident(ex_flags)],exp:ident(NFSEXP_FSID)],exp:??(N/H)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(fsid_key),ident(ek_path)],ident(mnt)]],exp[grammar(binary_logi),logiop(or),exp[grammar(binary_logi),logiop(??),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(fsid_key),ident(ek_path)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(mnt)]],exp[grammar(binary_logi),logiop(??),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(fsid_key),ident(ek_path)],ident(dentry)],exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(dentry)]]]],statem(N/H),estmt(NONE)],sel_if[exp:??(N/H),{}stmt[estmt[exp[grammar(call),exp:ident(exp_fsid_unhash),exp:ident(exp)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(exp),ident(ex_flags)],exp[grammar(record_ptr),exp:ident(nxp),ident(ex_flags)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(exp),ident(ex_anon_uid)],exp[grammar(record_ptr),exp:ident(nxp),ident(ex_anon_uid)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(exp),ident(ex_anon_gid)],exp[grammar(record_ptr),exp:ident(nxp),ident(ex_anon_gid)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(exp),ident(ex_fsid)],exp[grammar(record_ptr),exp:ident(nxp),ident(ex_dev)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(exp_fsid_hash),exp:ident(clp),exp:ident(exp)]]],statem(N/H)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(check_export),exp[grammar(record_ptr),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(dentry)],ident(d_inode)],exp[grammar(record_ptr),exp:ident(nxp),ident(ex_flags)],exp:ident(NULL)]]],sel_if[exp:ident(err),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],estmt[exp[grammar(call),exp:ident(dprintk),exp:const:string(nfsd: creating export entry %p for client %p\n),exp:ident(exp),exp:ident(clp)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(new),ident(h)],ident(expiry_time)],exp:ident(NEVER)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(new),ident(h)],ident(flags)],exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(new),ident(ex_pathname)],exp[grammar(call),exp:ident(kstrdup),exp[grammar(record_ptr),exp:ident(nxp),ident(ex_path)],exp:ident(GFP_KERNEL)]]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(new),ident(ex_client)],exp:ident(clp)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(new),ident(ex_path)],exp[grammar(record_acc),exp:ident(nd),ident(path)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(new),ident(ex_flags)],exp[grammar(record_ptr),exp:ident(nxp),ident(ex_flags)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(new),ident(ex_anon_uid)],exp[grammar(record_ptr),exp:ident(nxp),ident(ex_anon_uid)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(new),ident(ex_anon_gid)],exp[grammar(record_ptr),exp:ident(nxp),ident(ex_anon_gid)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(new),ident(ex_fsid)],exp[grammar(record_ptr),exp:ident(nxp),ident(ex_dev)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(svc_export_lookup),exp:&ref:exp:ident(new)]]],sel_if[exp:ident(exp),estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(svc_export_update),exp:&ref:exp:ident(new),exp:ident(exp)]]],estmt(NONE)],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(or),exp[grammar(call),exp:ident(exp_hash),exp:ident(clp),exp:ident(exp)],exp[grammar(call),exp:ident(exp_fsid_hash),exp:ident(clp),exp:ident(exp)]],{}stmt[estmt[exp[grammar(call),exp:ident(exp_do_unexport),exp:ident(exp)]],estmt[exp[grammar(call),exp:ident(cache_flush)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:const:int(0)]]],statem(N/H),sel_if[exp:ident(exp),estmt[exp[grammar(call),exp:ident(exp_put),exp:ident(exp)]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(and),exp:ident(fsid_key),exp:??(N/H)],estmt[exp[grammar(call),exp:ident(cache_put),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(fsid_key),ident(h)],exp:&ref:exp:ident(svc_expkey_cache)]],estmt(NONE)],sel_if[exp:ident(clp),estmt[exp[grammar(call),exp:ident(auth_domain_put),exp:ident(clp)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(path_put),exp[grammar(&ref),grammar(exp),grammar(record_acc),exp:ident(nd),ident(path)]]],statem(N/H),statem(N/H)]],def[fname(exp_do_unexport),funtype[fulltype[ctype[btype(void)]],param[reg(),name(unexp),fulltype[typec(N/H)]]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(unexp),ident(h)],ident(expiry_time)],exp[grammar(binary_arith),aop(-),exp[grammar(call),exp:ident(get_seconds)],exp:const:int(1)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(svc_export_cache),ident(nextcheck)],exp[grammar(call),exp:ident(get_seconds)]]],estmt[exp[grammar(call),exp:ident(exp_unhash),exp:ident(unexp)]],estmt[exp[grammar(call),exp:ident(exp_fsid_unhash),exp:ident(unexp)]]]],def[fname(exp_unexport),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(nxp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),sel_if[exp[grammar(binary_logi),logiop(or),exp:??(N/H),exp:??(N/H)],st_return[exp:??(N/H)],estmt(NONE)],estmt[exp[grammar(call),exp:ident(exp_writelock)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(dom),exp[grammar(call),exp:ident(auth_domain_find),exp[grammar(record_ptr),exp:ident(nxp),ident(ex_client)]]]],sel_if[exp:??(N/H),{}stmt[estmt[exp[grammar(call),exp:ident(dprintk),exp:const:string(nfsd: unexport couldn't find %s\n),exp[grammar(record_ptr),exp:ident(nxp),ident(ex_client)]]],statem(N/H)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(path_lookup),exp[grammar(record_ptr),exp:ident(nxp),ident(ex_path)],exp:const:int(0),exp:&ref:exp:ident(nd)]]],sel_if[exp:ident(err),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(exp_get_by_name),exp:ident(dom),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(dentry)],exp:ident(NULL)]]],estmt[exp[grammar(call),exp:ident(path_put),exp[grammar(&ref),grammar(exp),grammar(record_acc),exp:ident(nd),ident(path)]]],sel_if[exp[grammar(call),exp:ident(IS_ERR),exp:ident(exp)],statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(exp_do_unexport),exp:ident(exp)]],estmt[exp[grammar(call),exp:ident(exp_put),exp:ident(exp)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:const:int(0)]],statem(N/H),estmt[exp[grammar(call),exp:ident(cache_flush)]],statem(N/H),st_return[exp:ident(err)]]],def[fname(exp_rootfh),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(clp),fulltype[typec(N/H)]],param[reg(),name(path),fulltype[typec(N/H)]],param[reg(),name(f),fulltype[typec(N/H)]],param[reg(),name(maxsize),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],sel_if[exp[grammar(call),exp:ident(path_lookup),exp:ident(path),exp:const:int(0),exp:&ref:exp:ident(nd)],{}stmt[estmt[exp[grammar(call),exp:ident(printk),exp:const:string(nfsd: exp_rootfh path not found %s),exp:ident(path)]],st_return[exp:ident(err)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(inode),exp[grammar(record_ptr),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(dentry)],ident(d_inode)]]],estmt[exp[grammar(call),exp:ident(dprintk),exp:const:string(nfsd: exp_rootfh(%s [%p] %s:%s/%ld)\n),exp:ident(path),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(dentry)],exp[grammar(record_ptr),exp:ident(clp),ident(name)],exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(inode),ident(i_sb)],ident(s_id)],exp[grammar(record_ptr),exp:ident(inode),ident(i_ino)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(exp_parent),exp:ident(clp),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(dentry)],exp:ident(NULL)]]],sel_if[exp[grammar(call),exp:ident(IS_ERR),exp:ident(exp)],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(PTR_ERR),exp:ident(exp)]]],statem(N/H)],estmt(NONE)],estmt[exp[grammar(call),exp:ident(fh_init),exp:&ref:exp:ident(fh),exp:ident(maxsize)]],sel_if[exp[grammar(call),exp:ident(fh_compose),exp:&ref:exp:ident(fh),exp:ident(exp),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(dentry)],exp:ident(NULL)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:const:int(0)]]],estmt[exp[grammar(call),exp:ident(memcpy),exp:ident(f),exp[grammar(&ref),grammar(exp),grammar(record_acc),exp:ident(fh),ident(fh_handle)],exp[grammar(sizeoftype),grammar(fulltype),typec(N/H)]]],estmt[exp[grammar(call),exp:ident(fh_put),exp:&ref:exp:ident(fh)]],estmt[exp[grammar(call),exp:ident(exp_put),exp:ident(exp)]],statem(N/H),st_return[exp:ident(err)]]],def[fname(exp_find),funtype[fulltype[typec(N/H)],param[reg(),name(clp),fulltype[typec(N/H)]],param[reg(),name(fsid_type),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(fsidv),fulltype[typec(N/H)]],param[reg(),name(reqp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp[grammar(call),exp:ident(IS_ERR),exp:ident(ek)],st_return[exp[grammar(call),exp:ident(ERR_CAST),exp:ident(ek)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(exp_get_by_name),exp:ident(clp),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(ek),ident(ek_path)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(ek),ident(ek_path)],ident(dentry)],exp:ident(reqp)]]],estmt[exp[grammar(call),exp:ident(cache_put),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(ek),ident(h)],exp:&ref:exp:ident(svc_expkey_cache)]],sel_if[exp[grammar(call),exp:ident(IS_ERR),exp:ident(exp)],st_return[exp[grammar(call),exp:ident(ERR_CAST),exp:ident(exp)]],estmt(NONE)],st_return[exp:ident(exp)]]],def[fname(check_nfsd_access),funtype[fulltype[typec(N/H)],param[reg(),name(exp),fulltype[typec(N/H)]],param[reg(),name(rqstp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(exp),ident(ex_client)],exp[grammar(record_ptr),exp:ident(rqstp),ident(rq_gssclient)]],st_return[exp:const:int(0)],estmt(NONE)],for[exp[grammar(assign),simple_assi(=),exp:ident(f),exp[grammar(record_ptr),exp:ident(exp),ident(ex_flavors)]],exp[grammar(binary_logi),logiop(??),exp:ident(f),exp:ident(end)],exp:??(N/H),{}stmt[sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(f),ident(pseudoflavor)],exp[grammar(record_ptr),exp:ident(rqstp),ident(rq_flavor)]],st_return[exp:const:int(0)],estmt(NONE)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(exp),ident(ex_nflavors)],exp:const:int(0)],{}stmt[sel_if[exp[grammar(binary_logi),logiop(or),exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(rqstp),ident(rq_flavor)],exp:ident(RPC_AUTH_NULL)],exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(rqstp),ident(rq_flavor)],exp:ident(RPC_AUTH_UNIX)]],st_return[exp:const:int(0)],estmt(NONE)]],estmt(NONE)],st_return[exp:ident(nfserr_wrongsec)]]],def[fname(rqst_exp_get_by_name),funtype[fulltype[typec(N/H)],param[reg(),name(rqstp),fulltype[typec(N/H)]],param[reg(),name(mnt),fulltype[typec(N/H)]],param[reg(),name(dentry),fulltype[typec(N/H)]]],{}stmt[statem(N/H),sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(rqstp),ident(rq_client)],exp:ident(NULL)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(exp_get_by_name),exp[grammar(record_ptr),exp:ident(rqstp),ident(rq_client)],exp:ident(mnt),exp:ident(dentry),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(rqstp),ident(rq_chandle)]]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(call),exp:ident(PTR_ERR),exp:ident(exp)],exp:??(N/H)],statem(N/H),estmt(NONE)],sel_if[exp[grammar(call),exp:ident(IS_ERR),exp:ident(exp)],st_return[exp:ident(exp)],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(exp),ident(ex_nflavors)],exp:const:int(0)],st_return[exp:ident(exp)],estmt(NONE)],statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(gssexp),exp[grammar(call),exp:ident(exp_get_by_name),exp[grammar(record_ptr),exp:ident(rqstp),ident(rq_gssclient)],exp:ident(mnt),exp:ident(dentry),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(rqstp),ident(rq_chandle)]]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(call),exp:ident(PTR_ERR),exp:ident(gssexp)],exp:??(N/H)],st_return[exp:ident(exp)],estmt(NONE)],sel_if[exp:??(N/H),estmt[exp[grammar(call),exp:ident(exp_put),exp:ident(exp)]],estmt(NONE)],st_return[exp:ident(gssexp)]]],def[fname(rqst_exp_find),funtype[fulltype[typec(N/H)],param[reg(),name(rqstp),fulltype[typec(N/H)]],param[reg(),name(fsid_type),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(fsidv),fulltype[typec(N/H)]]],{}stmt[statem(N/H),sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(rqstp),ident(rq_client)],exp:ident(NULL)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(exp_find),exp[grammar(record_ptr),exp:ident(rqstp),ident(rq_client)],exp:ident(fsid_type),exp:ident(fsidv),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(rqstp),ident(rq_chandle)]]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(call),exp:ident(PTR_ERR),exp:ident(exp)],exp:??(N/H)],statem(N/H),estmt(NONE)],sel_if[exp[grammar(call),exp:ident(IS_ERR),exp:ident(exp)],st_return[exp:ident(exp)],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(exp),ident(ex_nflavors)],exp:const:int(0)],st_return[exp:ident(exp)],estmt(NONE)],statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(gssexp),exp[grammar(call),exp:ident(exp_find),exp[grammar(record_ptr),exp:ident(rqstp),ident(rq_gssclient)],exp:ident(fsid_type),exp:ident(fsidv),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(rqstp),ident(rq_chandle)]]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(call),exp:ident(PTR_ERR),exp:ident(gssexp)],exp:??(N/H)],st_return[exp:ident(exp)],estmt(NONE)],sel_if[exp:??(N/H),estmt[exp[grammar(call),exp:ident(exp_put),exp:ident(exp)]],estmt(NONE)],st_return[exp:ident(gssexp)]]],def[fname(rqst_exp_parent),funtype[fulltype[typec(N/H)],param[reg(),name(rqstp),fulltype[typec(N/H)]],param[reg(),name(mnt),fulltype[typec(N/H)]],param[reg(),name(dentry),fulltype[typec(N/H)]]],{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(dget),exp:ident(dentry)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(rqst_exp_get_by_name),exp:ident(rqstp),exp:ident(mnt),exp:ident(dentry)]]],while[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(eq),exp[grammar(call),exp:ident(PTR_ERR),exp:ident(exp)],exp:??(N/H)],exp:??(N/H)],{}stmt[statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(parent),exp[grammar(call),exp:ident(dget_parent),exp:ident(dentry)]]],estmt[exp[grammar(call),exp:ident(dput),exp:ident(dentry)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(dentry),exp:ident(parent)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(rqst_exp_get_by_name),exp:ident(rqstp),exp:ident(mnt),exp:ident(dentry)]]]]],estmt[exp[grammar(call),exp:ident(dput),exp:ident(dentry)]],st_return[exp:ident(exp)]]],def[fname(exp_pseudoroot),funtype[fulltype[typec(N/H)],param[reg(),name(rqstp),fulltype[typec(N/H)]],param[reg(),name(fhp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(mk_fsid),exp:ident(FSID_NUM),exp:ident(fsidv),exp:const:int(0),exp:const:int(0),exp:const:int(0),exp:ident(NULL)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(rqst_exp_find),exp:ident(rqstp),exp:ident(FSID_NUM),exp:ident(fsidv)]]],sel_if[exp[grammar(call),exp:ident(IS_ERR),exp:ident(exp)],st_return[exp[grammar(call),exp:ident(nfserrno),exp[grammar(call),exp:ident(PTR_ERR),exp:ident(exp)]]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(rv),exp[grammar(call),exp:ident(fh_compose),exp:ident(fhp),exp:ident(exp),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(exp),ident(ex_path)],ident(dentry)],exp:ident(NULL)]]],sel_if[exp:ident(rv),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(rv),exp[grammar(call),exp:ident(check_nfsd_access),exp:ident(exp),exp:ident(rqstp)]]],statem(N/H),st_return[exp:ident(rv)]]],NCP(N/H),def[fname(e_next),funtype[fulltype[typec(N/H)],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(p),fulltype[typec(N/H)]],param[reg(),name(pos),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(p),exp:ident(SEQ_START_TOKEN)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(hash),exp:const:int(0)]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(ch),ident(next)],exp:ident(NULL)],{}stmt[estmt[exp:??(N/H)],estmt[exp[grammar(assign),op_assi(+=),exp:*ref:exp:ident(pos),exp[grammar(binary_arith),aop(<<),exp:const:int(1LL),exp:const:int(32)]]]],{}stmt[estmt[exp:??(N/H)],st_return[exp[grammar(record_ptr),exp:ident(ch),ident(next)]]]]],estmt[exp[grammar(assign),op_assi(&=),exp:*ref:exp:ident(pos),exp:??(N/H)]],while[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp:ident(hash),exp:ident(EXPORT_HASHMAX)],exp[grammar(binary_logi),logiop(eq),exp[grammar(array_acc),exp:ident(export_table),exp:ident(hash)],exp:ident(NULL)]],{}stmt[estmt[exp:??(N/H)],estmt[exp[grammar(assign),op_assi(+=),exp:*ref:exp:ident(pos),exp[grammar(binary_arith),aop(<<),exp:const:int(1LL),exp:const:int(32)]]]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(hash),exp:ident(EXPORT_HASHMAX)],st_return[exp:ident(NULL)],estmt(NONE)],estmt[exp:??(N/H)],st_return[exp[grammar(array_acc),exp:ident(export_table),exp:ident(hash)]]]],NCP(N/H),decl(N/H),def[fname(show_expflags),funtype[fulltype[ctype[btype(void)]],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(flags),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(mask),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[statem(N/H),statem(N/H),for[exp[grammar(assign),simple_assi(=),exp:ident(flg),exp:ident(expflags)],exp[grammar(record_ptr),exp:ident(flg),ident(flag)],exp:??(N/H),{}stmt[sel_if[exp[grammar(binary_arith),aop(&),exp[grammar(record_ptr),exp:ident(flg),ident(flag)],exp:??(N/H)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(state),exp[grammar(cond3),exp[grammar(binary_arith),aop(&),exp[grammar(record_ptr),exp:ident(flg),ident(flag)],exp:ident(flags)],exp:const:int(0),exp:const:int(1)]]],sel_if[exp[grammar(*ref),grammar(exp),grammar(array_acc),exp[grammar(record_ptr),exp:ident(flg),ident(name)],exp:ident(state)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(%s%s),exp[grammar(cond3),exp:??(N/H),exp:const:string(,),exp:const:string()],exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(flg),ident(name)],exp:ident(state)]]],estmt(NONE)]]]]],def[fname(show_secinfo_flags),funtype[fulltype[ctype[btype(void)]],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(flags),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(,)]],estmt[exp[grammar(call),exp:ident(show_expflags),exp:ident(m),exp:ident(flags),exp:ident(NFSEXP_SECINFO_FLAGS)]]]],def[fname(show_secinfo),funtype[fulltype[ctype[btype(void)]],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(exp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(exp),ident(ex_nflavors)],exp:const:int(0)],statem(N/H),estmt(NONE)],for[exp[grammar(assign),simple_assi(=),exp:ident(f),exp[grammar(record_ptr),exp:ident(exp),ident(ex_flavors)]],exp[grammar(binary_logi),logiop(??),exp:ident(f),exp:ident(end)],exp:??(N/H),{}stmt[sel_if[exp[grammar(binary_logi),logiop(or),exp:ident(first),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(f),ident(flags)],exp:ident(lastflags)]],{}stmt[sel_if[exp:??(N/H),estmt[exp[grammar(call),exp:ident(show_secinfo_flags),exp:ident(m),exp:ident(lastflags)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(,sec=%d),exp[grammar(record_ptr),exp:ident(f),ident(pseudoflavor)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(lastflags),exp[grammar(record_ptr),exp:ident(f),ident(flags)]]]],{}stmt[estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(:%d),exp[grammar(record_ptr),exp:ident(f),ident(pseudoflavor)]]]]]]],estmt[exp[grammar(call),exp:ident(show_secinfo_flags),exp:ident(m),exp:ident(lastflags)]]]],def[fname(exp_flags),funtype[fulltype[ctype[btype(void)]],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(flag),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(fsid),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(anonu),fulltype[typec(N/H)]],param[reg(),name(anong),fulltype[typec(N/H)]],param[reg(),name(fsloc),fulltype[typec(N/H)]]],{}stmt[estmt[exp[grammar(call),exp:ident(show_expflags),exp:ident(m),exp:ident(flag),exp:ident(NFSEXP_ALLFLAGS)]],sel_if[exp[grammar(binary_arith),aop(&),exp:ident(flag),exp:ident(NFSEXP_FSID)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(,fsid=%d),exp:ident(fsid)]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp:ident(anonu),exp:??(N/H)],exp[grammar(binary_logi),logiop(??),exp:ident(anonu),exp[grammar(binary_arith),aop(-),exp:const:int(0x10000),exp:const:int(2)]]],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(,anonuid=%u),exp:ident(anonu)]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp:ident(anong),exp[grammar(binary_arith),aop(-),exp:ident(gid_t),exp:const:int(2)]],exp[grammar(binary_logi),logiop(??),exp:ident(anong),exp[grammar(binary_arith),aop(-),exp:const:int(0x10000),exp:const:int(2)]]],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(,anongid=%u),exp:ident(anong)]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(and),exp:ident(fsloc),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations_count)],exp:const:int(0)]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(,%s=),exp:ident(loctype)]],estmt[exp[grammar(call),exp:ident(seq_escape),exp:ident(m),exp[grammar(record_acc),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations)],exp:const:int(0)],ident(path)],exp:const:string(,;@ \t\n\\)]],estmt[exp[grammar(call),exp:ident(seq_putc),exp:ident(m),exp:const:other(N/H)]],estmt[exp[grammar(call),exp:ident(seq_escape),exp:ident(m),exp[grammar(record_acc),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations)],exp:const:int(0)],ident(hosts)],exp:const:string(,;@ \t\n\\)]],for[exp[grammar(assign),simple_assi(=),exp:ident(i),exp:const:int(1)],exp[grammar(binary_logi),logiop(??),exp:ident(i),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations_count)]],exp:??(N/H),{}stmt[estmt[exp[grammar(call),exp:ident(seq_putc),exp:ident(m),exp:const:other(N/H)]],estmt[exp[grammar(call),exp:ident(seq_escape),exp:ident(m),exp[grammar(record_acc),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations)],exp:ident(i)],ident(path)],exp:const:string(,;@ \t\n\\)]],estmt[exp[grammar(call),exp:ident(seq_putc),exp:ident(m),exp:const:other(N/H)]],estmt[exp[grammar(call),exp:ident(seq_escape),exp:ident(m),exp[grammar(record_acc),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations)],exp:ident(i)],ident(hosts)],exp:const:string(,;@ \t\n\\)]]]]],estmt(NONE)]]],def[fname(e_show),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(p),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(p),exp:ident(SEQ_START_TOKEN)],{}stmt[estmt[exp[grammar(call),exp:ident(seq_puts),exp:ident(m),exp:const:string(# Version 1.1\n)]],estmt[exp[grammar(call),exp:ident(seq_puts),exp:ident(m),exp:const:string(# Path Client(Flags) # IPs\n)]],st_return[exp:const:int(0)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(cache_get),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(exp),ident(h)]]],sel_if[exp[grammar(call),exp:ident(cache_check),exp:&ref:exp:ident(svc_export_cache),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(exp),ident(h)],exp:ident(NULL)],st_return[exp:const:int(0)],estmt(NONE)],estmt[exp[grammar(call),exp:ident(cache_put),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(exp),ident(h)],exp:&ref:exp:ident(svc_export_cache)]],st_return[exp[grammar(call),exp:ident(svc_export_show),exp:ident(m),exp:&ref:exp:ident(svc_export_cache),exp:ident(cp)]]]],decl(N/H),def[fname(exp_addclient),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(ncp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(ncp),ident(cl_naddr)],exp:ident(NFSCLNT_ADDRMAX)],statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(exp_writelock)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(dom),exp[grammar(call),exp:ident(unix_domain_find),exp[grammar(record_ptr),exp:ident(ncp),ident(cl_ident)]]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],for[exp[grammar(assign),simple_assi(=),exp:ident(i),exp:const:int(0)],exp[grammar(binary_logi),logiop(??),exp:ident(i),exp[grammar(record_ptr),exp:ident(ncp),ident(cl_naddr)]],exp:??(N/H),estmt[exp[grammar(call),exp:ident(auth_unix_add_addr),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(ncp),ident(cl_addrlist)],exp:ident(i)],exp:ident(dom)]]],estmt[exp[grammar(call),exp:ident(auth_unix_forget_old),exp:ident(dom)]],estmt[exp[grammar(call),exp:ident(auth_domain_put),exp:ident(dom)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:const:int(0)]],statem(N/H),statem(N/H)]],def[fname(exp_delclient),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(ncp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(exp_writelock)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(dom),exp[grammar(call),exp:ident(auth_domain_find),exp[grammar(record_ptr),exp:ident(ncp),ident(cl_ident)]]]],sel_if[exp:ident(dom),{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(auth_unix_forget_old),exp:ident(dom)]]],estmt[exp[grammar(call),exp:ident(auth_domain_put),exp:ident(dom)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(exp_writeunlock)]],statem(N/H)]],def[fname(exp_verify_string),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(cp),fulltype[typec(N/H)]],param[reg(),name(max),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[statem(N/H),for[exp[grammar(assign),simple_assi(=),exp:ident(i),exp:const:int(0)],exp[grammar(binary_logi),logiop(??),exp:ident(i),exp:ident(max)],exp:??(N/H),sel_if[exp:??(N/H),st_return[exp:ident(i)],estmt(NONE)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(array_acc),exp:ident(cp),exp:ident(i)],exp:const:int(0)]],estmt[exp[grammar(call),exp:ident(printk),exp:const:other(N/H),exp:ident(cp)]],st_return[exp:const:int(0)]]],def[fname(nfsd_export_init),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(),fulltype[ctype[btype(void)]]]],{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(dprintk),exp:const:string(nfsd: initializing export module.\n)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(rv),exp[grammar(call),exp:ident(cache_register),exp:&ref:exp:ident(svc_export_cache)]]],sel_if[exp:ident(rv),st_return[exp:ident(rv)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(rv),exp[grammar(call),exp:ident(cache_register),exp:&ref:exp:ident(svc_expkey_cache)]]],sel_if[exp:ident(rv),estmt[exp[grammar(call),exp:ident(cache_unregister),exp:&ref:exp:ident(svc_export_cache)]],estmt(NONE)],st_return[exp:ident(rv)]]],def[fname(nfsd_export_flush),funtype[fulltype[ctype[btype(void)]],param[reg(),name(),fulltype[ctype[btype(void)]]]],{}stmt[estmt[exp[grammar(call),exp:ident(exp_writelock)]],estmt[exp[grammar(call),exp:ident(cache_purge),exp:&ref:exp:ident(svc_expkey_cache)]],estmt[exp[grammar(call),exp:ident(cache_purge),exp:&ref:exp:ident(svc_export_cache)]],estmt[exp[grammar(call),exp:ident(exp_writeunlock)]]]],def[fname(nfsd_export_shutdown),funtype[fulltype[ctype[btype(void)]],param[reg(),name(),fulltype[ctype[btype(void)]]]],{}stmt[estmt[exp[grammar(call),exp:ident(dprintk),exp:const:string(nfsd: shutting down export module.\n)]],estmt[exp[grammar(call),exp:ident(exp_writelock)]],estmt[exp[grammar(call),exp:ident(cache_unregister),exp:&ref:exp:ident(svc_expkey_cache)]],estmt[exp[grammar(call),exp:ident(cache_unregister),exp:&ref:exp:ident(svc_export_cache)]],estmt[exp[grammar(call),exp:ident(svcauth_unix_purge)]],estmt[exp[grammar(call),exp:ident(exp_writeunlock)]],estmt[exp[grammar(call),exp:ident(dprintk),exp:const:string(nfsd: export shutdown complete.\n)]]]]] ==> prg2[define(N/H),includeN[inc_elem(linux),inc_elem(unistd.h)],includeN[inc_elem(linux),inc_elem(slab.h)],includeN[inc_elem(linux),inc_elem(stat.h)],includeN[inc_elem(linux),inc_elem(in.h)],includeN[inc_elem(linux),inc_elem(seq_file.h)],includeN[inc_elem(linux),inc_elem(syscalls.h)],includeN[inc_elem(linux),inc_elem(rwsem.h)],includeN[inc_elem(linux),inc_elem(dcache.h)],includeN[inc_elem(linux),inc_elem(namei.h)],includeN[inc_elem(linux),inc_elem(mount.h)],includeN[inc_elem(linux),inc_elem(hash.h)],includeN[inc_elem(linux),inc_elem(module.h)],includeN[inc_elem(linux),inc_elem(exportfs.h)],includeN[inc_elem(linux),inc_elem(sunrpc),inc_elem(svc.h)],includeN[inc_elem(linux),inc_elem(nfsd),inc_elem(nfsd.h)],includeN[inc_elem(linux),inc_elem(nfsd),inc_elem(nfsfh.h)],includeN[inc_elem(linux),inc_elem(nfsd),inc_elem(syscall.h)],includeN[inc_elem(linux),inc_elem(lockd),inc_elem(bind.h)],includeN[inc_elem(linux),inc_elem(sunrpc),inc_elem(msg_prot.h)],includeN[inc_elem(linux),inc_elem(sunrpc),inc_elem(gss_api.h)],define(N/H),decl(N/H),decl(N/H),decl(N/H),decl(N/H),define(N/H),define(N/H),define(N/H),decl(N/H),def[fname(expkey_put),funtype[fulltype[ctype[btype(void)]],param[reg(),name(ref),fulltype[typec(N/H)]]],{}stmt[statem(N/H),sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(call),exp:ident(test_bit),exp:ident(CACHE_VALID),exp[grammar(&ref),grammar(exp),grammar(record_acc),exp[grammar(record_ptr),exp:ident(key),ident(h)],ident(flags)]],exp:??(N/H)],estmt[exp[grammar(call),exp:ident(path_put),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(key),ident(ek_path)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(auth_domain_put),exp[grammar(record_ptr),exp:ident(key),ident(ek_client)]]],estmt[exp[grammar(call),exp:ident(kfree),exp:ident(key)]]]],def[fname(expkey_request),funtype[fulltype[ctype[btype(void)]],param[reg(),name(cd),fulltype[typec(N/H)]],param[reg(),name(h),fulltype[typec(N/H)]],param[reg(),name(bpp),fulltype[typec(N/H)]],param[reg(),name(blen),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(qword_add),exp:ident(bpp),exp:ident(blen),exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(ek),ident(ek_client)],ident(name)]]],estmt[exp[grammar(call),exp:ident(snprintf),exp:ident(type),exp:const:int(5),exp:const:string(%d),exp[grammar(record_ptr),exp:ident(ek),ident(ek_fsidtype)]]],estmt[exp[grammar(call),exp:ident(qword_add),exp:ident(bpp),exp:ident(blen),exp:ident(type)]],estmt[exp[grammar(call),exp:ident(qword_addhex),exp:ident(bpp),exp:ident(blen),exp:??(N/H),exp[grammar(call),exp:ident(key_len),exp[grammar(record_ptr),exp:ident(ek),ident(ek_fsidtype)]]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(array_acc),exp:*ref:exp:ident(bpp),exp:??(N/H)],exp:const:other(N/H)]]]],decl(N/H),decl(N/H),decl(N/H),def[fname(expkey_parse),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(cd),fulltype[typec(N/H)]],param[reg(),name(mesg),fulltype[typec(N/H)]],param[reg(),name(mlen),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(array_acc),exp:ident(mesg),exp[grammar(binary_arith),aop(-),exp:ident(mlen),exp:const:int(1)]],exp:const:other(N/H)],st_return[exp:??(N/H)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(array_acc),exp:ident(mesg),exp[grammar(binary_arith),aop(-),exp:ident(mlen),exp:const:int(1)]],exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(buf),exp[grammar(call),exp:ident(kmalloc),exp:ident(PAGE_SIZE),exp:ident(GFP_KERNEL)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(assign),simple_assi(=),exp:ident(len),exp[grammar(call),exp:ident(qword_get),exp:&ref:exp:ident(mesg),exp:ident(buf),exp:ident(PAGE_SIZE)]],exp:const:int(0)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(dom),exp[grammar(call),exp:ident(auth_domain_find),exp:ident(buf)]]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(dprintk),exp:const:string(found domain %s\n),exp:ident(buf)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(assign),simple_assi(=),exp:ident(len),exp[grammar(call),exp:ident(qword_get),exp:&ref:exp:ident(mesg),exp:ident(buf),exp:ident(PAGE_SIZE)]],exp:const:int(0)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(fsidtype),exp[grammar(call),exp:ident(simple_strtoul),exp:ident(buf),exp:&ref:exp:ident(ep),exp:const:int(10)]]],sel_if[exp:*ref:exp:ident(ep),statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(dprintk),exp:const:string(found fsidtype %d\n),exp:ident(fsidtype)]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(call),exp:ident(key_len),exp:ident(fsidtype)],exp:const:int(0)],statem(N/H),estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(assign),simple_assi(=),exp:ident(len),exp[grammar(call),exp:ident(qword_get),exp:&ref:exp:ident(mesg),exp:ident(buf),exp:ident(PAGE_SIZE)]],exp:const:int(0)],statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(dprintk),exp:const:string(found fsid length %d\n),exp:ident(len)]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(len),exp[grammar(call),exp:ident(key_len),exp:ident(fsidtype)]],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(key),ident(h)],ident(flags)],exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(key),ident(h)],ident(expiry_time)],exp[grammar(call),exp:ident(get_expiry),exp:&ref:exp:ident(mesg)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(key),ident(h)],ident(expiry_time)],exp:const:int(0)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(key),ident(ek_client)],exp:ident(dom)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(key),ident(ek_fsidtype)],exp:ident(fsidtype)]],estmt[exp[grammar(call),exp:ident(memcpy),exp[grammar(record_acc),exp:ident(key),ident(ek_fsid)],exp:ident(buf),exp:ident(len)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ek),exp[grammar(call),exp:ident(svc_expkey_lookup),exp:&ref:exp:ident(key)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(assign),simple_assi(=),exp:ident(len),exp[grammar(call),exp:ident(qword_get),exp:&ref:exp:ident(mesg),exp:ident(buf),exp:ident(PAGE_SIZE)]],exp:const:int(0)],statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(dprintk),exp:const:string(Path seems to be <%s>\n),exp:ident(buf)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:const:int(0)]],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(len),exp:const:int(0)],{}stmt[estmt[exp[grammar(call),exp:ident(set_bit),exp:ident(CACHE_NEGATIVE),exp[grammar(&ref),grammar(exp),grammar(record_acc),exp[grammar(record_acc),exp:ident(key),ident(h)],ident(flags)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ek),exp[grammar(call),exp:ident(svc_expkey_update),exp:&ref:exp:ident(key),exp:ident(ek)]]],sel_if[exp:ident(ek),estmt[exp[grammar(call),exp:ident(cache_put),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(ek),ident(h)],exp:&ref:exp:ident(svc_expkey_cache)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]]]],{}stmt[statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(path_lookup),exp:ident(buf),exp:const:int(0),exp:&ref:exp:ident(nd)]]],sel_if[exp:ident(err),statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(dprintk),exp:const:string(Found the path %s\n),exp:ident(buf)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(key),ident(ek_path)],exp[grammar(record_acc),exp:ident(nd),ident(path)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ek),exp[grammar(call),exp:ident(svc_expkey_update),exp:&ref:exp:ident(key),exp:ident(ek)]]],sel_if[exp:ident(ek),estmt[exp[grammar(call),exp:ident(cache_put),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(ek),ident(h)],exp:&ref:exp:ident(svc_expkey_cache)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]]],estmt[exp[grammar(call),exp:ident(path_put),exp[grammar(&ref),grammar(exp),grammar(record_acc),exp:ident(nd),ident(path)]]]]],estmt[exp[grammar(call),exp:ident(cache_flush)]],statem(N/H),estmt[exp[grammar(call),exp:ident(kfree),exp:ident(buf)]],st_return[exp:ident(err)]]],def[fname(expkey_show),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(cd),fulltype[typec(N/H)]],param[reg(),name(h),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(h),exp:ident(NULL)],{}stmt[estmt[exp[grammar(call),exp:ident(seq_puts),exp:ident(m),exp:const:string(#domain fsidtype fsid [path]\n)]],st_return[exp:const:int(0)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ek),exp[grammar(call),exp:ident(container_of),exp:ident(h),argtype(N/H),exp:ident(h)]]],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(%s %d 0x),exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(ek),ident(ek_client)],ident(name)],exp[grammar(record_ptr),exp:ident(ek),ident(ek_fsidtype)]]],for[exp[grammar(assign),simple_assi(=),exp:ident(i),exp:const:int(0)],exp[grammar(binary_logi),logiop(??),exp:ident(i),exp[grammar(binary_arith),aop(/),exp[grammar(call),exp:ident(key_len),exp[grammar(record_ptr),exp:ident(ek),ident(ek_fsidtype)]],exp:const:int(4)]],exp:??(N/H),estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(%08x),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(ek),ident(ek_fsid)],exp:ident(i)]]]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(call),exp:ident(test_bit),exp:ident(CACHE_VALID),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(h),ident(flags)]],exp:??(N/H)],{}stmt[estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string( )]],estmt[exp[grammar(call),exp:ident(seq_path),exp:ident(m),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(ek),ident(ek_path)],exp:const:string(\\ \t\n)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(\n)]],st_return[exp:const:int(0)]]],def[fname(expkey_match),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(a),fulltype[typec(N/H)]],param[reg(),name(b),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp[grammar(binary_logi),logiop(or),exp[grammar(binary_logi),logiop(or),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(orig),ident(ek_fsidtype)],exp[grammar(record_ptr),exp:ident(new),ident(ek_fsidtype)]],exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(orig),ident(ek_client)],exp[grammar(record_ptr),exp:ident(new),ident(ek_client)]]],exp[grammar(binary_logi),logiop(??),exp[grammar(call),exp:ident(memcmp),exp[grammar(record_ptr),exp:ident(orig),ident(ek_fsid)],exp[grammar(record_ptr),exp:ident(new),ident(ek_fsid)],exp[grammar(call),exp:ident(key_len),exp[grammar(record_ptr),exp:ident(orig),ident(ek_fsidtype)]]],exp:const:int(0)]],st_return[exp:const:int(0)],estmt(NONE)],st_return[exp:const:int(1)]]],def[fname(expkey_init),funtype[fulltype[ctype[btype(void)]],param[reg(),name(cnew),fulltype[typec(N/H)]],param[reg(),name(citem),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(kref_get),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp[grammar(record_ptr),exp:ident(item),ident(ek_client)],ident(ref)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(new),ident(ek_client)],exp[grammar(record_ptr),exp:ident(item),ident(ek_client)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(new),ident(ek_fsidtype)],exp[grammar(record_ptr),exp:ident(item),ident(ek_fsidtype)]]],estmt[exp[grammar(call),exp:ident(memcpy),exp[grammar(record_ptr),exp:ident(new),ident(ek_fsid)],exp[grammar(record_ptr),exp:ident(item),ident(ek_fsid)],exp[grammar(sizeof),grammar(exp),grammar(record_ptr),exp:ident(new),ident(ek_fsid)]]]]],def[fname(expkey_update),funtype[fulltype[ctype[btype(void)]],param[reg(),name(cnew),fulltype[typec(N/H)]],param[reg(),name(citem),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(new),ident(ek_path)],exp[grammar(record_ptr),exp:ident(item),ident(ek_path)]]],estmt[exp[grammar(call),exp:ident(path_get),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(item),ident(ek_path)]]]]],def[fname(expkey_alloc),funtype[fulltype[typec(N/H)],param[reg(),name(),fulltype[ctype[btype(void)]]]],{}stmt[statem(N/H),sel_if[exp:ident(i),st_return[exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(i),ident(h)]],st_return[exp:ident(NULL)]]]],decl(N/H),def[fname(svc_expkey_lookup),funtype[fulltype[typec(N/H)],param[reg(),name(item),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),op_assi(x=),exp:ident(hash),exp[grammar(call),exp:ident(hash_mem),exp:ident(cp),exp:ident(len),exp:ident(EXPKEY_HASHBITS)]]],estmt[exp[grammar(assign),op_assi(x=),exp:ident(hash),exp[grammar(call),exp:ident(hash_ptr),exp[grammar(record_ptr),exp:ident(item),ident(ek_client)],exp:ident(EXPKEY_HASHBITS)]]],estmt[exp[grammar(assign),op_assi(&=),exp:ident(hash),exp:ident(EXPKEY_HASHMASK)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ch),exp[grammar(call),exp:ident(sunrpc_cache_lookup),exp:&ref:exp:ident(svc_expkey_cache),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(item),ident(h)],exp:ident(hash)]]],sel_if[exp:ident(ch),st_return[exp[grammar(call),exp:ident(container_of),exp:ident(ch),argtype(N/H),exp:ident(h)]],st_return[exp:ident(NULL)]]]],def[fname(svc_expkey_update),funtype[fulltype[typec(N/H)],param[reg(),name(new),fulltype[typec(N/H)]],param[reg(),name(old),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),op_assi(x=),exp:ident(hash),exp[grammar(call),exp:ident(hash_mem),exp:ident(cp),exp:ident(len),exp:ident(EXPKEY_HASHBITS)]]],estmt[exp[grammar(assign),op_assi(x=),exp:ident(hash),exp[grammar(call),exp:ident(hash_ptr),exp[grammar(record_ptr),exp:ident(new),ident(ek_client)],exp:ident(EXPKEY_HASHBITS)]]],estmt[exp[grammar(assign),op_assi(&=),exp:ident(hash),exp:ident(EXPKEY_HASHMASK)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ch),exp[grammar(call),exp:ident(sunrpc_cache_update),exp:&ref:exp:ident(svc_expkey_cache),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(new),ident(h)],exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(old),ident(h)],exp:ident(hash)]]],sel_if[exp:ident(ch),st_return[exp[grammar(call),exp:ident(container_of),exp:ident(ch),argtype(N/H),exp:ident(h)]],st_return[exp:ident(NULL)]]]],define(N/H),define(N/H),define(N/H),decl(N/H),def[fname(nfsd4_fslocs_free),funtype[fulltype[ctype[btype(void)]],param[reg(),name(fsloc),fulltype[typec(N/H)]]],{}stmt[statem(N/H),for[exp[grammar(assign),simple_assi(=),exp:ident(i),exp:const:int(0)],exp[grammar(binary_logi),logiop(??),exp:ident(i),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations_count)]],exp:??(N/H),{}stmt[estmt[exp[grammar(call),exp:ident(kfree),exp[grammar(record_acc),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations)],exp:ident(i)],ident(path)]]],estmt[exp[grammar(call),exp:ident(kfree),exp[grammar(record_acc),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations)],exp:ident(i)],ident(hosts)]]]]],estmt[exp[grammar(call),exp:ident(kfree),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations)]]]]],def[fname(svc_export_put),funtype[fulltype[ctype[btype(void)]],param[reg(),name(ref),fulltype[typec(N/H)]]],{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(path_put),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(exp),ident(ex_path)]]],estmt[exp[grammar(call),exp:ident(auth_domain_put),exp[grammar(record_ptr),exp:ident(exp),ident(ex_client)]]],estmt[exp[grammar(call),exp:ident(kfree),exp[grammar(record_ptr),exp:ident(exp),ident(ex_pathname)]]],estmt[exp[grammar(call),exp:ident(nfsd4_fslocs_free),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(exp),ident(ex_fslocs)]]],estmt[exp[grammar(call),exp:ident(kfree),exp:ident(exp)]]]],def[fname(svc_export_request),funtype[fulltype[ctype[btype(void)]],param[reg(),name(cd),fulltype[typec(N/H)]],param[reg(),name(h),fulltype[typec(N/H)]],param[reg(),name(bpp),fulltype[typec(N/H)]],param[reg(),name(blen),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(qword_add),exp:ident(bpp),exp:ident(blen),exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(exp),ident(ex_client)],ident(name)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(pth),exp[grammar(call),exp:ident(d_path),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(exp),ident(ex_path)],ident(dentry)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(exp),ident(ex_path)],ident(mnt)],exp:*ref:exp:ident(bpp),exp:*ref:exp:ident(blen)]]],sel_if[exp[grammar(call),exp:ident(IS_ERR),exp:ident(pth)],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp[grammar(array_acc),exp:*ref:exp:ident(bpp),exp:const:int(0)],exp:const:other(N/H)]],statem(N/H)],estmt(NONE)],estmt[exp[grammar(call),exp:ident(qword_add),exp:ident(bpp),exp:ident(blen),exp:ident(pth)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(array_acc),exp:*ref:exp:ident(bpp),exp:??(N/H)],exp:const:other(N/H)]]]],decl(N/H),decl(N/H),def[fname(check_export),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(inode),fulltype[typec(N/H)]],param[reg(),name(flags),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(uuid),fulltype[typec(N/H)]]],{}stmt[sel_if[exp[grammar(binary_logi),logiop(and),exp:??(N/H),exp:??(N/H)],st_return[exp:??(N/H)],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(and),exp:??(N/H),exp:??(N/H)],exp[grammar(binary_logi),logiop(eq),exp:ident(uuid),exp:ident(NULL)]],{}stmt[estmt[exp[grammar(call),exp:ident(dprintk),exp:const:string(exp_export: export of non-dev fs without fsid\n)]],st_return[exp:??(N/H)]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(or),exp:??(N/H),exp:??(N/H)],{}stmt[estmt[exp[grammar(call),exp:ident(dprintk),exp:const:string(exp_export: export of invalid fs type.\n)]],st_return[exp:??(N/H)]],estmt(NONE)],st_return[exp:const:int(0)]]],def[fname(fsloc_parse),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(mesg),fulltype[typec(N/H)]],param[reg(),name(buf),fulltype[typec(N/H)]],param[reg(),name(fsloc),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(get_int),exp:ident(mesg),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(fsloc),ident(locations_count)]]]],sel_if[exp:ident(err),st_return[exp:ident(err)],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations_count)],exp:ident(MAX_FS_LOCATIONS)],st_return[exp:??(N/H)],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations_count)],exp:const:int(0)],st_return[exp:const:int(0)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations)],exp[grammar(call),exp:ident(kzalloc),exp[grammar(binary_arith),aop(*),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations_count)],exp[grammar(sizeoftype),grammar(fulltype),typec(N/H)]],exp:ident(GFP_KERNEL)]]],sel_if[exp:??(N/H),st_return[exp:??(N/H)],estmt(NONE)],for[exp[grammar(assign),simple_assi(=),exp:ident(i),exp:const:int(0)],exp[grammar(binary_logi),logiop(??),exp:ident(i),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations_count)]],exp:??(N/H),{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(len),exp[grammar(call),exp:ident(qword_get),exp:ident(mesg),exp:ident(buf),exp:ident(PAGE_SIZE)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(len),exp:const:int(0)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations)],exp:ident(i)],ident(hosts)],exp[grammar(call),exp:ident(kstrdup),exp:ident(buf),exp:ident(GFP_KERNEL)]]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(len),exp[grammar(call),exp:ident(qword_get),exp:ident(mesg),exp:ident(buf),exp:ident(PAGE_SIZE)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(len),exp:const:int(0)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations)],exp:ident(i)],ident(path)],exp[grammar(call),exp:ident(kstrdup),exp:ident(buf),exp:ident(GFP_KERNEL)]]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(get_int),exp:ident(mesg),exp:&ref:exp:ident(migrated)]]],sel_if[exp:ident(err),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],sel_if[exp[grammar(binary_logi),logiop(or),exp[grammar(binary_logi),logiop(??),exp:ident(migrated),exp:const:int(0)],exp[grammar(binary_logi),logiop(??),exp:ident(migrated),exp:const:int(1)]],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(fsloc),ident(migrated)],exp:ident(migrated)]],st_return[exp:const:int(0)],statem(N/H),st_return[exp:ident(err)]]],def[fname(secinfo_parse),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(mesg),fulltype[typec(N/H)]],param[reg(),name(buf),fulltype[typec(N/H)]],param[reg(),name(exp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(get_int),exp:ident(mesg),exp:&ref:exp:ident(listsize)]]],sel_if[exp:ident(err),st_return[exp:ident(err)],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(or),exp[grammar(binary_logi),logiop(??),exp:ident(listsize),exp:const:int(0)],exp[grammar(binary_logi),logiop(??),exp:ident(listsize),exp:ident(MAX_SECINFO_LIST)]],st_return[exp:??(N/H)],estmt(NONE)],for[exp[grammar(assign),simple_assi(=),exp:ident(f),exp[grammar(record_ptr),exp:ident(exp),ident(ex_flavors)]],exp[grammar(binary_logi),logiop(??),exp:ident(f),exp[grammar(binary_arith),aop(+),exp[grammar(record_ptr),exp:ident(exp),ident(ex_flavors)],exp:ident(listsize)]],exp:??(N/H),{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(get_int),exp:ident(mesg),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(f),ident(pseudoflavor)]]]],sel_if[exp:ident(err),st_return[exp:ident(err)],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(f),ident(pseudoflavor)],exp:const:int(0)],st_return[exp:??(N/H)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(get_int),exp:ident(mesg),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(f),ident(flags)]]]],sel_if[exp:ident(err),st_return[exp:ident(err)],estmt(NONE)],sel_if[exp[grammar(binary_arith),aop(&),exp:??(N/H),exp[grammar(binary_arith),aop(N/H),exp[grammar(record_ptr),exp:ident(f),ident(flags)],exp[grammar(record_ptr),exp:ident(exp),ident(ex_flags)]]],st_return[exp:??(N/H)],estmt(NONE)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(exp),ident(ex_nflavors)],exp:ident(listsize)]],st_return[exp:const:int(0)]]],def[fname(fsloc_parse),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(mesg),fulltype[typec(N/H)]],param[reg(),name(buf),fulltype[typec(N/H)]],param[reg(),name(fsloc),fulltype[typec(N/H)]]],{}stmt[st_return[exp:const:int(0)]]],def[fname(secinfo_parse),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(mesg),fulltype[typec(N/H)]],param[reg(),name(buf),fulltype[typec(N/H)]],param[reg(),name(exp),fulltype[typec(N/H)]]],{}stmt[st_return[exp:const:int(0)]]],def[fname(svc_export_parse),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(cd),fulltype[typec(N/H)]],param[reg(),name(mesg),fulltype[typec(N/H)]],param[reg(),name(mlen),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(dentry)],exp:ident(NULL)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(exp),ident(ex_pathname)],exp:ident(NULL)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(exp),ident(ex_fslocs)],ident(locations)],exp:ident(NULL)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(exp),ident(ex_fslocs)],ident(locations_count)],exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(exp),ident(ex_fslocs)],ident(migrated)],exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(exp),ident(ex_uuid)],exp:ident(NULL)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(exp),ident(ex_nflavors)],exp:const:int(0)]],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(array_acc),exp:ident(mesg),exp[grammar(binary_arith),aop(-),exp:ident(mlen),exp:const:int(1)]],exp:const:other(N/H)],st_return[exp:??(N/H)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(array_acc),exp:ident(mesg),exp[grammar(binary_arith),aop(-),exp:ident(mlen),exp:const:int(1)]],exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(buf),exp[grammar(call),exp:ident(kmalloc),exp:ident(PAGE_SIZE),exp:ident(GFP_KERNEL)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(len),exp[grammar(call),exp:ident(qword_get),exp:&ref:exp:ident(mesg),exp:ident(buf),exp:ident(PAGE_SIZE)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(len),exp:const:int(0)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(dom),exp[grammar(call),exp:ident(auth_domain_find),exp:ident(buf)]]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(assign),simple_assi(=),exp:ident(len),exp[grammar(call),exp:ident(qword_get),exp:&ref:exp:ident(mesg),exp:ident(buf),exp:ident(PAGE_SIZE)]],exp:const:int(0)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(path_lookup),exp:ident(buf),exp:const:int(0),exp:&ref:exp:ident(nd)]]],sel_if[exp:ident(err),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(exp),ident(h)],ident(flags)],exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(exp),ident(ex_client)],exp:ident(dom)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(exp),ident(ex_path)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(mnt)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(exp),ident(ex_path)],ident(dentry)],exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(dentry)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(exp),ident(ex_pathname)],exp[grammar(call),exp:ident(kstrdup),exp:ident(buf),exp:ident(GFP_KERNEL)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(exp),ident(h)],ident(expiry_time)],exp[grammar(call),exp:ident(get_expiry),exp:&ref:exp:ident(mesg)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(exp),ident(h)],ident(expiry_time)],exp:const:int(0)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(get_int),exp:&ref:exp:ident(mesg),exp:&ref:exp:ident(an_int)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(err),exp:??(N/H)],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:const:int(0)]],estmt[exp[grammar(call),exp:ident(set_bit),exp:ident(CACHE_NEGATIVE),exp[grammar(&ref),grammar(exp),grammar(record_acc),exp[grammar(record_acc),exp:ident(exp),ident(h)],ident(flags)]]]],{}stmt[sel_if[exp[grammar(binary_logi),logiop(or),exp:ident(err),exp[grammar(binary_logi),logiop(??),exp:ident(an_int),exp:const:int(0)]],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(exp),ident(ex_flags)],exp:ident(an_int)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(get_int),exp:&ref:exp:ident(mesg),exp:&ref:exp:ident(an_int)]]],sel_if[exp:ident(err),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(exp),ident(ex_anon_uid)],exp:ident(an_int)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(get_int),exp:&ref:exp:ident(mesg),exp:&ref:exp:ident(an_int)]]],sel_if[exp:ident(err),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(exp),ident(ex_anon_gid)],exp:ident(an_int)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(get_int),exp:&ref:exp:ident(mesg),exp:&ref:exp:ident(an_int)]]],sel_if[exp:ident(err),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(exp),ident(ex_fsid)],exp:ident(an_int)]],while[exp[grammar(binary_logi),logiop(??),exp[grammar(assign),simple_assi(=),exp:ident(len),exp[grammar(call),exp:ident(qword_get),exp:&ref:exp:ident(mesg),exp:ident(buf),exp:ident(PAGE_SIZE)]],exp:const:int(0)],{}stmt[sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(call),exp:ident(strcmp),exp:ident(buf),exp:const:string(fsloc)],exp:const:int(0)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(fsloc_parse),exp:&ref:exp:ident(mesg),exp:ident(buf),exp[grammar(&ref),grammar(exp),grammar(record_acc),exp:ident(exp),ident(ex_fslocs)]]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(call),exp:ident(strcmp),exp:ident(buf),exp:const:string(uuid)],exp:const:int(0)],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(len),exp[grammar(call),exp:ident(qword_get),exp:&ref:exp:ident(mesg),exp:ident(buf),exp:ident(PAGE_SIZE)]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(len),exp:const:int(16)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(exp),ident(ex_uuid)],exp[grammar(call),exp:ident(kmemdup),exp:ident(buf),exp:const:int(16),exp:ident(GFP_KERNEL)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(record_acc),exp:ident(exp),ident(ex_uuid)],exp:ident(NULL)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],estmt(NONE)]]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(call),exp:ident(strcmp),exp:ident(buf),exp:const:string(secinfo)],exp:const:int(0)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(secinfo_parse),exp:&ref:exp:ident(mesg),exp:ident(buf),exp:&ref:exp:ident(exp)]]],statem(N/H)]]],sel_if[exp:ident(err),statem(N/H),estmt(NONE)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(check_export),exp[grammar(record_ptr),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(dentry)],ident(d_inode)],exp[grammar(record_acc),exp:ident(exp),ident(ex_flags)],exp[grammar(record_acc),exp:ident(exp),ident(ex_uuid)]]]],sel_if[exp:ident(err),statem(N/H),estmt(NONE)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(expp),exp[grammar(call),exp:ident(svc_export_lookup),exp:&ref:exp:ident(exp)]]],sel_if[exp:ident(expp),estmt[exp[grammar(assign),simple_assi(=),exp:ident(expp),exp[grammar(call),exp:ident(svc_export_update),exp:&ref:exp:ident(exp),exp:ident(expp)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]]],estmt[exp[grammar(call),exp:ident(cache_flush)]],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(expp),exp:ident(NULL)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],estmt[exp[grammar(call),exp:ident(exp_put),exp:ident(expp)]]],statem(N/H),estmt[exp[grammar(call),exp:ident(kfree),exp[grammar(record_acc),exp:ident(exp),ident(ex_uuid)]]],estmt[exp[grammar(call),exp:ident(kfree),exp[grammar(record_acc),exp:ident(exp),ident(ex_pathname)]]],sel_if[exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(dentry)],estmt[exp[grammar(call),exp:ident(path_put),exp[grammar(&ref),grammar(exp),grammar(record_acc),exp:ident(nd),ident(path)]]],estmt(NONE)],statem(N/H),estmt[exp[grammar(call),exp:ident(kfree),exp:ident(buf)]],st_return[exp:ident(err)]]],decl(N/H),decl(N/H),def[fname(svc_export_show),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(cd),fulltype[typec(N/H)]],param[reg(),name(h),fulltype[typec(N/H)]]],{}stmt[statem(N/H),sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(h),exp:ident(NULL)],{}stmt[estmt[exp[grammar(call),exp:ident(seq_puts),exp:ident(m),exp:const:string(#path domain(flags)\n)]],st_return[exp:const:int(0)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(container_of),exp:ident(h),argtype(N/H),exp:ident(h)]]],estmt[exp[grammar(call),exp:ident(seq_path),exp:ident(m),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(exp),ident(ex_path)],exp:const:string( \t\n\\)]],estmt[exp[grammar(call),exp:ident(seq_putc),exp:ident(m),exp:const:other(N/H)]],estmt[exp[grammar(call),exp:ident(seq_escape),exp:ident(m),exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(exp),ident(ex_client)],ident(name)],exp:const:string( \t\n\\)]],estmt[exp[grammar(call),exp:ident(seq_putc),exp:ident(m),exp:const:other(N/H)]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(call),exp:ident(test_bit),exp:ident(CACHE_VALID),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(h),ident(flags)]],exp:??(N/H)],{}stmt[estmt[exp[grammar(call),exp:ident(exp_flags),exp:ident(m),exp[grammar(record_ptr),exp:ident(exp),ident(ex_flags)],exp[grammar(record_ptr),exp:ident(exp),ident(ex_fsid)],exp[grammar(record_ptr),exp:ident(exp),ident(ex_anon_uid)],exp[grammar(record_ptr),exp:ident(exp),ident(ex_anon_gid)],exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(exp),ident(ex_fslocs)]]],sel_if[exp[grammar(record_ptr),exp:ident(exp),ident(ex_uuid)],{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(seq_puts),exp:ident(m),exp:const:string(,uuid=)]],for[exp[grammar(assign),simple_assi(=),exp:ident(i),exp:const:int(0)],exp[grammar(binary_logi),logiop(??),exp:ident(i),exp:const:int(16)],exp:??(N/H),{}stmt[sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(eq),exp[grammar(binary_arith),aop(&),exp:ident(i),exp:const:int(3)],exp:const:int(0)],exp:ident(i)],estmt[exp[grammar(call),exp:ident(seq_putc),exp:ident(m),exp:const:other(N/H)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(%02x),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(exp),ident(ex_uuid)],exp:ident(i)]]]]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(show_secinfo),exp:ident(m),exp:ident(exp)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(seq_puts),exp:ident(m),exp:const:string()\n)]],st_return[exp:const:int(0)]]],def[fname(svc_export_match),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(a),fulltype[typec(N/H)]],param[reg(),name(b),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),st_return[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(orig),ident(ex_client)],exp[grammar(record_ptr),exp:ident(new),ident(ex_client)]],exp[grammar(binary_logi),logiop(eq),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(orig),ident(ex_path)],ident(dentry)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(new),ident(ex_path)],ident(dentry)]]],exp[grammar(binary_logi),logiop(eq),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(orig),ident(ex_path)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(new),ident(ex_path)],ident(mnt)]]]]]],def[fname(svc_export_init),funtype[fulltype[ctype[btype(void)]],param[reg(),name(cnew),fulltype[typec(N/H)]],param[reg(),name(citem),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(kref_get),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp[grammar(record_ptr),exp:ident(item),ident(ex_client)],ident(ref)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(new),ident(ex_client)],exp[grammar(record_ptr),exp:ident(item),ident(ex_client)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(new),ident(ex_path)],ident(dentry)],exp[grammar(call),exp:ident(dget),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(item),ident(ex_path)],ident(dentry)]]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(new),ident(ex_path)],ident(mnt)],exp[grammar(call),exp:ident(mntget),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(item),ident(ex_path)],ident(mnt)]]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(new),ident(ex_pathname)],exp:ident(NULL)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(new),ident(ex_fslocs)],ident(locations)],exp:ident(NULL)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(new),ident(ex_fslocs)],ident(locations_count)],exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(new),ident(ex_fslocs)],ident(migrated)],exp:const:int(0)]]]],def[fname(export_update),funtype[fulltype[ctype[btype(void)]],param[reg(),name(cnew),fulltype[typec(N/H)]],param[reg(),name(citem),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(new),ident(ex_flags)],exp[grammar(record_ptr),exp:ident(item),ident(ex_flags)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(new),ident(ex_anon_uid)],exp[grammar(record_ptr),exp:ident(item),ident(ex_anon_uid)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(new),ident(ex_anon_gid)],exp[grammar(record_ptr),exp:ident(item),ident(ex_anon_gid)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(new),ident(ex_fsid)],exp[grammar(record_ptr),exp:ident(item),ident(ex_fsid)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(new),ident(ex_uuid)],exp[grammar(record_ptr),exp:ident(item),ident(ex_uuid)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(item),ident(ex_uuid)],exp:ident(NULL)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(new),ident(ex_pathname)],exp[grammar(record_ptr),exp:ident(item),ident(ex_pathname)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(item),ident(ex_pathname)],exp:ident(NULL)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(new),ident(ex_fslocs)],ident(locations)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(item),ident(ex_fslocs)],ident(locations)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(item),ident(ex_fslocs)],ident(locations)],exp:ident(NULL)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(new),ident(ex_fslocs)],ident(locations_count)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(item),ident(ex_fslocs)],ident(locations_count)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(item),ident(ex_fslocs)],ident(locations_count)],exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(new),ident(ex_fslocs)],ident(migrated)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(item),ident(ex_fslocs)],ident(migrated)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(item),ident(ex_fslocs)],ident(migrated)],exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(new),ident(ex_nflavors)],exp[grammar(record_ptr),exp:ident(item),ident(ex_nflavors)]]],for[exp[grammar(assign),simple_assi(=),exp:ident(i),exp:const:int(0)],exp[grammar(binary_logi),logiop(??),exp:ident(i),exp:ident(MAX_SECINFO_LIST)],exp:??(N/H),{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(new),ident(ex_flavors)],exp:ident(i)],exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(item),ident(ex_flavors)],exp:ident(i)]]]]]]],def[fname(svc_export_alloc),funtype[fulltype[typec(N/H)],param[reg(),name(),fulltype[ctype[btype(void)]]]],{}stmt[statem(N/H),sel_if[exp:ident(i),st_return[exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(i),ident(h)]],st_return[exp:ident(NULL)]]]],decl(N/H),def[fname(svc_export_lookup),funtype[fulltype[typec(N/H)],param[reg(),name(exp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(hash),exp[grammar(call),exp:ident(hash_ptr),exp[grammar(record_ptr),exp:ident(exp),ident(ex_client)],exp:ident(EXPORT_HASHBITS)]]],estmt[exp[grammar(assign),op_assi(x=),exp:ident(hash),exp[grammar(call),exp:ident(hash_ptr),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(exp),ident(ex_path)],ident(dentry)],exp:ident(EXPORT_HASHBITS)]]],estmt[exp[grammar(assign),op_assi(x=),exp:ident(hash),exp[grammar(call),exp:ident(hash_ptr),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(exp),ident(ex_path)],ident(mnt)],exp:ident(EXPORT_HASHBITS)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ch),exp[grammar(call),exp:ident(sunrpc_cache_lookup),exp:&ref:exp:ident(svc_export_cache),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(exp),ident(h)],exp:ident(hash)]]],sel_if[exp:ident(ch),st_return[exp[grammar(call),exp:ident(container_of),exp:ident(ch),argtype(N/H),exp:ident(h)]],st_return[exp:ident(NULL)]]]],def[fname(svc_export_update),funtype[fulltype[typec(N/H)],param[reg(),name(new),fulltype[typec(N/H)]],param[reg(),name(old),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(hash),exp[grammar(call),exp:ident(hash_ptr),exp[grammar(record_ptr),exp:ident(old),ident(ex_client)],exp:ident(EXPORT_HASHBITS)]]],estmt[exp[grammar(assign),op_assi(x=),exp:ident(hash),exp[grammar(call),exp:ident(hash_ptr),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(old),ident(ex_path)],ident(dentry)],exp:ident(EXPORT_HASHBITS)]]],estmt[exp[grammar(assign),op_assi(x=),exp:ident(hash),exp[grammar(call),exp:ident(hash_ptr),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(old),ident(ex_path)],ident(mnt)],exp:ident(EXPORT_HASHBITS)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ch),exp[grammar(call),exp:ident(sunrpc_cache_update),exp:&ref:exp:ident(svc_export_cache),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(new),ident(h)],exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(old),ident(h)],exp:ident(hash)]]],sel_if[exp:ident(ch),st_return[exp[grammar(call),exp:ident(container_of),exp:ident(ch),argtype(N/H),exp:ident(h)]],st_return[exp:ident(NULL)]]]],def[fname(exp_find_key),funtype[fulltype[typec(N/H)],param[reg(),name(clp),fulltype[typec(N/H)]],param[reg(),name(fsid_type),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(fsidv),fulltype[typec(N/H)]],param[reg(),name(reqp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp:??(N/H),st_return[exp[grammar(call),exp:ident(ERR_PTR),exp:??(N/H)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(key),ident(ek_client)],exp:ident(clp)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(key),ident(ek_fsidtype)],exp:ident(fsid_type)]],estmt[exp[grammar(call),exp:ident(memcpy),exp[grammar(record_acc),exp:ident(key),ident(ek_fsid)],exp:ident(fsidv),exp[grammar(call),exp:ident(key_len),exp:ident(fsid_type)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ek),exp[grammar(call),exp:ident(svc_expkey_lookup),exp:&ref:exp:ident(key)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(ek),exp:ident(NULL)],st_return[exp[grammar(call),exp:ident(ERR_PTR),exp:??(N/H)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(cache_check),exp:&ref:exp:ident(svc_expkey_cache),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(ek),ident(h)],exp:ident(reqp)]]],sel_if[exp:ident(err),st_return[exp[grammar(call),exp:ident(ERR_PTR),exp:ident(err)]],estmt(NONE)],st_return[exp:ident(ek)]]],def[fname(exp_set_key),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(clp),fulltype[typec(N/H)]],param[reg(),name(fsid_type),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(fsidv),fulltype[typec(N/H)]],param[reg(),name(exp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(key),ident(ek_client)],exp:ident(clp)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(key),ident(ek_fsidtype)],exp:ident(fsid_type)]],estmt[exp[grammar(call),exp:ident(memcpy),exp[grammar(record_acc),exp:ident(key),ident(ek_fsid)],exp:ident(fsidv),exp[grammar(call),exp:ident(key_len),exp:ident(fsid_type)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(key),ident(ek_path)],exp[grammar(record_ptr),exp:ident(exp),ident(ex_path)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(key),ident(h)],ident(expiry_time)],exp:ident(NEVER)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(key),ident(h)],ident(flags)],exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ek),exp[grammar(call),exp:ident(svc_expkey_lookup),exp:&ref:exp:ident(key)]]],sel_if[exp:ident(ek),estmt[exp[grammar(assign),simple_assi(=),exp:ident(ek),exp[grammar(call),exp:ident(svc_expkey_update),exp:&ref:exp:ident(key),exp:ident(ek)]]],estmt(NONE)],sel_if[exp:ident(ek),{}stmt[estmt[exp[grammar(call),exp:ident(cache_put),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(ek),ident(h)],exp:&ref:exp:ident(svc_expkey_cache)]],st_return[exp:const:int(0)]],estmt(NONE)],st_return[exp:??(N/H)]]],def[fname(exp_get_key),funtype[fulltype[typec(N/H)],param[reg(),name(clp),fulltype[typec(N/H)]],param[reg(),name(dev),fulltype[typec(N/H)]],param[reg(),name(ino),fulltype[typec(N/H)]]],{}stmt[statem(N/H),sel_if[exp[grammar(call),exp:ident(old_valid_dev),exp:ident(dev)],{}stmt[estmt[exp[grammar(call),exp:ident(mk_fsid),exp:ident(FSID_DEV),exp:ident(fsidv),exp:ident(dev),exp:ident(ino),exp:const:int(0),exp:ident(NULL)]],st_return[exp[grammar(call),exp:ident(exp_find_key),exp:ident(clp),exp:ident(FSID_DEV),exp:ident(fsidv),exp:ident(NULL)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(mk_fsid),exp:ident(FSID_ENCODE_DEV),exp:ident(fsidv),exp:ident(dev),exp:ident(ino),exp:const:int(0),exp:ident(NULL)]],st_return[exp[grammar(call),exp:ident(exp_find_key),exp:ident(clp),exp:ident(FSID_ENCODE_DEV),exp:ident(fsidv),exp:ident(NULL)]]]],def[fname(exp_get_fsid_key),funtype[fulltype[typec(N/H)],param[reg(),name(clp),fulltype[typec(N/H)]],param[reg(),name(fsid),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(mk_fsid),exp:ident(FSID_NUM),exp:ident(fsidv),exp:const:int(0),exp:const:int(0),exp:ident(fsid),exp:ident(NULL)]],st_return[exp[grammar(call),exp:ident(exp_find_key),exp:ident(clp),exp:ident(FSID_NUM),exp:ident(fsidv),exp:ident(NULL)]]]],def[fname(exp_get_by_name),funtype[fulltype[typec(N/H)],param[reg(),name(clp),fulltype[typec(N/H)]],param[reg(),name(mnt),fulltype[typec(N/H)]],param[reg(),name(dentry),fulltype[typec(N/H)]],param[reg(),name(reqp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp:??(N/H),st_return[exp[grammar(call),exp:ident(ERR_PTR),exp:??(N/H)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(key),ident(ex_client)],exp:ident(clp)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(key),ident(ex_path)],ident(mnt)],exp:ident(mnt)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(key),ident(ex_path)],ident(dentry)],exp:ident(dentry)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(svc_export_lookup),exp:&ref:exp:ident(key)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(exp),exp:ident(NULL)],st_return[exp[grammar(call),exp:ident(ERR_PTR),exp:??(N/H)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(cache_check),exp:&ref:exp:ident(svc_export_cache),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(exp),ident(h)],exp:ident(reqp)]]],sel_if[exp:ident(err),st_return[exp[grammar(call),exp:ident(ERR_PTR),exp:ident(err)]],estmt(NONE)],st_return[exp:ident(exp)]]],def[fname(exp_parent),funtype[fulltype[typec(N/H)],param[reg(),name(clp),fulltype[typec(N/H)]],param[reg(),name(mnt),fulltype[typec(N/H)]],param[reg(),name(dentry),fulltype[typec(N/H)]],param[reg(),name(reqp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(dget),exp:ident(dentry)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(exp_get_by_name),exp:ident(clp),exp:ident(mnt),exp:ident(dentry),exp:ident(reqp)]]],while[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(eq),exp[grammar(call),exp:ident(PTR_ERR),exp:ident(exp)],exp:??(N/H)],exp:??(N/H)],{}stmt[statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(parent),exp[grammar(call),exp:ident(dget_parent),exp:ident(dentry)]]],estmt[exp[grammar(call),exp:ident(dput),exp:ident(dentry)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(dentry),exp:ident(parent)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(exp_get_by_name),exp:ident(clp),exp:ident(mnt),exp:ident(dentry),exp:ident(reqp)]]]]],estmt[exp[grammar(call),exp:ident(dput),exp:ident(dentry)]],st_return[exp:ident(exp)]]],decl(N/H),def[fname(exp_readlock),funtype[fulltype[ctype[btype(void)]],param[reg(),name(),fulltype[ctype[btype(void)]]]],{}stmt[estmt[exp[grammar(call),exp:ident(down_read),exp:&ref:exp:ident(hash_sem)]]]],def[fname(exp_writelock),funtype[fulltype[ctype[btype(void)]],param[reg(),name(),fulltype[ctype[btype(void)]]]],{}stmt[estmt[exp[grammar(call),exp:ident(down_write),exp:&ref:exp:ident(hash_sem)]]]],def[fname(exp_readunlock),funtype[fulltype[ctype[btype(void)]],param[reg(),name(),fulltype[ctype[btype(void)]]]],{}stmt[estmt[exp[grammar(call),exp:ident(up_read),exp:&ref:exp:ident(hash_sem)]]]],def[fname(exp_writeunlock),funtype[fulltype[ctype[btype(void)]],param[reg(),name(),fulltype[ctype[btype(void)]]]],{}stmt[estmt[exp[grammar(call),exp:ident(up_write),exp:&ref:exp:ident(hash_sem)]]]],def[fname(exp_fsid_unhash),funtype[fulltype[ctype[btype(void)]],param[reg(),name(exp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(binary_arith),aop(&),exp[grammar(record_ptr),exp:ident(exp),ident(ex_flags)],exp:ident(NFSEXP_FSID)],exp:const:int(0)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(ek),exp[grammar(call),exp:ident(exp_get_fsid_key),exp[grammar(record_ptr),exp:ident(exp),ident(ex_client)],exp[grammar(record_ptr),exp:ident(exp),ident(ex_fsid)]]]],sel_if[exp:??(N/H),{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(ek),ident(h)],ident(expiry_time)],exp[grammar(binary_arith),aop(-),exp[grammar(call),exp:ident(get_seconds)],exp:const:int(1)]]],estmt[exp[grammar(call),exp:ident(cache_put),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(ek),ident(h)],exp:&ref:exp:ident(svc_expkey_cache)]]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(svc_expkey_cache),ident(nextcheck)],exp[grammar(call),exp:ident(get_seconds)]]]]],def[fname(exp_fsid_hash),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(clp),fulltype[typec(N/H)]],param[reg(),name(exp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(binary_arith),aop(&),exp[grammar(record_ptr),exp:ident(exp),ident(ex_flags)],exp:ident(NFSEXP_FSID)],exp:const:int(0)],st_return[exp:const:int(0)],estmt(NONE)],estmt[exp[grammar(call),exp:ident(mk_fsid),exp:ident(FSID_NUM),exp:ident(fsid),exp:const:int(0),exp:const:int(0),exp[grammar(record_ptr),exp:ident(exp),ident(ex_fsid)],exp:ident(NULL)]],st_return[exp[grammar(call),exp:ident(exp_set_key),exp:ident(clp),exp:ident(FSID_NUM),exp:ident(fsid),exp:ident(exp)]]]],def[fname(exp_hash),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(clp),fulltype[typec(N/H)]],param[reg(),name(exp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),sel_if[exp[grammar(call),exp:ident(old_valid_dev),exp:ident(dev)],{}stmt[estmt[exp[grammar(call),exp:ident(mk_fsid),exp:ident(FSID_DEV),exp:ident(fsid),exp:ident(dev),exp[grammar(record_ptr),exp:ident(inode),ident(i_ino)],exp:const:int(0),exp:ident(NULL)]],st_return[exp[grammar(call),exp:ident(exp_set_key),exp:ident(clp),exp:ident(FSID_DEV),exp:ident(fsid),exp:ident(exp)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(mk_fsid),exp:ident(FSID_ENCODE_DEV),exp:ident(fsid),exp:ident(dev),exp[grammar(record_ptr),exp:ident(inode),ident(i_ino)],exp:const:int(0),exp:ident(NULL)]],st_return[exp[grammar(call),exp:ident(exp_set_key),exp:ident(clp),exp:ident(FSID_ENCODE_DEV),exp:ident(fsid),exp:ident(exp)]]]],def[fname(exp_unhash),funtype[fulltype[ctype[btype(void)]],param[reg(),name(exp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(ek),exp[grammar(call),exp:ident(exp_get_key),exp[grammar(record_ptr),exp:ident(exp),ident(ex_client)],exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(inode),ident(i_sb)],ident(s_dev)],exp[grammar(record_ptr),exp:ident(inode),ident(i_ino)]]]],sel_if[exp:??(N/H),{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(ek),ident(h)],ident(expiry_time)],exp[grammar(binary_arith),aop(-),exp[grammar(call),exp:ident(get_seconds)],exp:const:int(1)]]],estmt[exp[grammar(call),exp:ident(cache_put),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(ek),ident(h)],exp:&ref:exp:ident(svc_expkey_cache)]]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(svc_expkey_cache),ident(nextcheck)],exp[grammar(call),exp:ident(get_seconds)]]]]],def[fname(exp_export),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(nxp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],sel_if[exp[grammar(binary_logi),logiop(or),exp:??(N/H),exp:??(N/H)],statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(dprintk),exp:const:string(exp_export called for %s:%s (%x/%ld fl %x).\n),exp[grammar(record_ptr),exp:ident(nxp),ident(ex_client)],exp[grammar(record_ptr),exp:ident(nxp),ident(ex_path)],exp:??(N/H),exp:??(N/H),exp[grammar(record_ptr),exp:ident(nxp),ident(ex_flags)]]],estmt[exp[grammar(call),exp:ident(exp_writelock)]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(path_lookup),exp[grammar(record_ptr),exp:ident(nxp),ident(ex_path)],exp:const:int(0),exp:&ref:exp:ident(nd)]]],sel_if[exp:ident(err),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(exp_get_by_name),exp:ident(clp),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(dentry)],exp:ident(NULL)]]],estmt[exp[grammar(call),exp:ident(memset),exp:&ref:exp:ident(new),exp:const:int(0),exp:sizeof:exp:ident(new)]],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(and),exp[grammar(binary_arith),aop(&),exp[grammar(record_ptr),exp:ident(nxp),ident(ex_flags)],exp:ident(NFSEXP_FSID)],exp:??(N/H)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(fsid_key),ident(ek_path)],ident(mnt)]],exp[grammar(binary_logi),logiop(or),exp[grammar(binary_logi),logiop(??),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(fsid_key),ident(ek_path)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(mnt)]],exp[grammar(binary_logi),logiop(??),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(fsid_key),ident(ek_path)],ident(dentry)],exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(dentry)]]]],statem(N/H),estmt(NONE)],sel_if[exp:??(N/H),{}stmt[estmt[exp[grammar(call),exp:ident(exp_fsid_unhash),exp:ident(exp)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(exp),ident(ex_flags)],exp[grammar(record_ptr),exp:ident(nxp),ident(ex_flags)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(exp),ident(ex_anon_uid)],exp[grammar(record_ptr),exp:ident(nxp),ident(ex_anon_uid)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(exp),ident(ex_anon_gid)],exp[grammar(record_ptr),exp:ident(nxp),ident(ex_anon_gid)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_ptr),exp:ident(exp),ident(ex_fsid)],exp[grammar(record_ptr),exp:ident(nxp),ident(ex_dev)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(exp_fsid_hash),exp:ident(clp),exp:ident(exp)]]],statem(N/H)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(check_export),exp[grammar(record_ptr),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(dentry)],ident(d_inode)],exp[grammar(record_ptr),exp:ident(nxp),ident(ex_flags)],exp:ident(NULL)]]],sel_if[exp:ident(err),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],estmt[exp[grammar(call),exp:ident(dprintk),exp:const:string(nfsd: creating export entry %p for client %p\n),exp:ident(exp),exp:ident(clp)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(new),ident(h)],ident(expiry_time)],exp:ident(NEVER)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(new),ident(h)],ident(flags)],exp:const:int(0)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(new),ident(ex_pathname)],exp[grammar(call),exp:ident(kstrdup),exp[grammar(record_ptr),exp:ident(nxp),ident(ex_path)],exp:ident(GFP_KERNEL)]]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(new),ident(ex_client)],exp:ident(clp)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(new),ident(ex_path)],exp[grammar(record_acc),exp:ident(nd),ident(path)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(new),ident(ex_flags)],exp[grammar(record_ptr),exp:ident(nxp),ident(ex_flags)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(new),ident(ex_anon_uid)],exp[grammar(record_ptr),exp:ident(nxp),ident(ex_anon_uid)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(new),ident(ex_anon_gid)],exp[grammar(record_ptr),exp:ident(nxp),ident(ex_anon_gid)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(new),ident(ex_fsid)],exp[grammar(record_ptr),exp:ident(nxp),ident(ex_dev)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(svc_export_lookup),exp:&ref:exp:ident(new)]]],sel_if[exp:ident(exp),estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(svc_export_update),exp:&ref:exp:ident(new),exp:ident(exp)]]],estmt(NONE)],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(or),exp[grammar(call),exp:ident(exp_hash),exp:ident(clp),exp:ident(exp)],exp[grammar(call),exp:ident(exp_fsid_hash),exp:ident(clp),exp:ident(exp)]],{}stmt[estmt[exp[grammar(call),exp:ident(exp_do_unexport),exp:ident(exp)]],estmt[exp[grammar(call),exp:ident(cache_flush)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:const:int(0)]]],statem(N/H),sel_if[exp:ident(exp),estmt[exp[grammar(call),exp:ident(exp_put),exp:ident(exp)]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(and),exp:ident(fsid_key),exp:??(N/H)],estmt[exp[grammar(call),exp:ident(cache_put),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(fsid_key),ident(h)],exp:&ref:exp:ident(svc_expkey_cache)]],estmt(NONE)],sel_if[exp:ident(clp),estmt[exp[grammar(call),exp:ident(auth_domain_put),exp:ident(clp)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(path_put),exp[grammar(&ref),grammar(exp),grammar(record_acc),exp:ident(nd),ident(path)]]],statem(N/H),statem(N/H)]],def[fname(exp_do_unexport),funtype[fulltype[ctype[btype(void)]],param[reg(),name(unexp),fulltype[typec(N/H)]]],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(unexp),ident(h)],ident(expiry_time)],exp[grammar(binary_arith),aop(-),exp[grammar(call),exp:ident(get_seconds)],exp:const:int(1)]]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(record_acc),exp:ident(svc_export_cache),ident(nextcheck)],exp[grammar(call),exp:ident(get_seconds)]]],estmt[exp[grammar(call),exp:ident(exp_unhash),exp:ident(unexp)]],estmt[exp[grammar(call),exp:ident(exp_fsid_unhash),exp:ident(unexp)]]]],def[fname(exp_unexport),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(nxp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),sel_if[exp[grammar(binary_logi),logiop(or),exp:??(N/H),exp:??(N/H)],st_return[exp:??(N/H)],estmt(NONE)],estmt[exp[grammar(call),exp:ident(exp_writelock)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(dom),exp[grammar(call),exp:ident(auth_domain_find),exp[grammar(record_ptr),exp:ident(nxp),ident(ex_client)]]]],sel_if[exp:??(N/H),{}stmt[estmt[exp[grammar(call),exp:ident(dprintk),exp:const:string(nfsd: unexport couldn't find %s\n),exp[grammar(record_ptr),exp:ident(nxp),ident(ex_client)]]],statem(N/H)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(path_lookup),exp[grammar(record_ptr),exp:ident(nxp),ident(ex_path)],exp:const:int(0),exp:&ref:exp:ident(nd)]]],sel_if[exp:ident(err),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(exp_get_by_name),exp:ident(dom),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(dentry)],exp:ident(NULL)]]],estmt[exp[grammar(call),exp:ident(path_put),exp[grammar(&ref),grammar(exp),grammar(record_acc),exp:ident(nd),ident(path)]]],sel_if[exp[grammar(call),exp:ident(IS_ERR),exp:ident(exp)],statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(exp_do_unexport),exp:ident(exp)]],estmt[exp[grammar(call),exp:ident(exp_put),exp:ident(exp)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:const:int(0)]],statem(N/H),estmt[exp[grammar(call),exp:ident(cache_flush)]],statem(N/H),st_return[exp:ident(err)]]],def[fname(exp_rootfh),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(clp),fulltype[typec(N/H)]],param[reg(),name(path),fulltype[typec(N/H)]],param[reg(),name(f),fulltype[typec(N/H)]],param[reg(),name(maxsize),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],sel_if[exp[grammar(call),exp:ident(path_lookup),exp:ident(path),exp:const:int(0),exp:&ref:exp:ident(nd)],{}stmt[estmt[exp[grammar(call),exp:ident(printk),exp:const:string(nfsd: exp_rootfh path not found %s),exp:ident(path)]],st_return[exp:ident(err)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(inode),exp[grammar(record_ptr),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(dentry)],ident(d_inode)]]],estmt[exp[grammar(call),exp:ident(dprintk),exp:const:string(nfsd: exp_rootfh(%s [%p] %s:%s/%ld)\n),exp:ident(path),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(dentry)],exp[grammar(record_ptr),exp:ident(clp),ident(name)],exp[grammar(record_ptr),exp[grammar(record_ptr),exp:ident(inode),ident(i_sb)],ident(s_id)],exp[grammar(record_ptr),exp:ident(inode),ident(i_ino)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(exp_parent),exp:ident(clp),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(dentry)],exp:ident(NULL)]]],sel_if[exp[grammar(call),exp:ident(IS_ERR),exp:ident(exp)],{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(PTR_ERR),exp:ident(exp)]]],statem(N/H)],estmt(NONE)],estmt[exp[grammar(call),exp:ident(fh_init),exp:&ref:exp:ident(fh),exp:ident(maxsize)]],sel_if[exp[grammar(call),exp:ident(fh_compose),exp:&ref:exp:ident(fh),exp:ident(exp),exp[grammar(record_acc),exp[grammar(record_acc),exp:ident(nd),ident(path)],ident(dentry)],exp:ident(NULL)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:const:int(0)]]],estmt[exp[grammar(call),exp:ident(memcpy),exp:ident(f),exp[grammar(&ref),grammar(exp),grammar(record_acc),exp:ident(fh),ident(fh_handle)],exp[grammar(sizeoftype),grammar(fulltype),typec(N/H)]]],estmt[exp[grammar(call),exp:ident(fh_put),exp:&ref:exp:ident(fh)]],estmt[exp[grammar(call),exp:ident(exp_put),exp:ident(exp)]],statem(N/H),st_return[exp:ident(err)]]],def[fname(exp_find),funtype[fulltype[typec(N/H)],param[reg(),name(clp),fulltype[typec(N/H)]],param[reg(),name(fsid_type),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(fsidv),fulltype[typec(N/H)]],param[reg(),name(reqp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp[grammar(call),exp:ident(IS_ERR),exp:ident(ek)],st_return[exp[grammar(call),exp:ident(ERR_CAST),exp:ident(ek)]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(exp_get_by_name),exp:ident(clp),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(ek),ident(ek_path)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(ek),ident(ek_path)],ident(dentry)],exp:ident(reqp)]]],estmt[exp[grammar(call),exp:ident(cache_put),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(ek),ident(h)],exp:&ref:exp:ident(svc_expkey_cache)]],sel_if[exp[grammar(call),exp:ident(IS_ERR),exp:ident(exp)],st_return[exp[grammar(call),exp:ident(ERR_CAST),exp:ident(exp)]],estmt(NONE)],st_return[exp:ident(exp)]]],def[fname(check_nfsd_access),funtype[fulltype[typec(N/H)],param[reg(),name(exp),fulltype[typec(N/H)]],param[reg(),name(rqstp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(exp),ident(ex_client)],exp[grammar(record_ptr),exp:ident(rqstp),ident(rq_gssclient)]],st_return[exp:const:int(0)],estmt(NONE)],for[exp[grammar(assign),simple_assi(=),exp:ident(f),exp[grammar(record_ptr),exp:ident(exp),ident(ex_flavors)]],exp[grammar(binary_logi),logiop(??),exp:ident(f),exp:ident(end)],exp:??(N/H),{}stmt[sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(f),ident(pseudoflavor)],exp[grammar(record_ptr),exp:ident(rqstp),ident(rq_flavor)]],st_return[exp:const:int(0)],estmt(NONE)]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(exp),ident(ex_nflavors)],exp:const:int(0)],{}stmt[sel_if[exp[grammar(binary_logi),logiop(or),exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(rqstp),ident(rq_flavor)],exp:ident(RPC_AUTH_NULL)],exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(rqstp),ident(rq_flavor)],exp:ident(RPC_AUTH_UNIX)]],st_return[exp:const:int(0)],estmt(NONE)]],estmt(NONE)],st_return[exp:ident(nfserr_wrongsec)]]],def[fname(rqst_exp_get_by_name),funtype[fulltype[typec(N/H)],param[reg(),name(rqstp),fulltype[typec(N/H)]],param[reg(),name(mnt),fulltype[typec(N/H)]],param[reg(),name(dentry),fulltype[typec(N/H)]]],{}stmt[statem(N/H),sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(rqstp),ident(rq_client)],exp:ident(NULL)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(exp_get_by_name),exp[grammar(record_ptr),exp:ident(rqstp),ident(rq_client)],exp:ident(mnt),exp:ident(dentry),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(rqstp),ident(rq_chandle)]]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(call),exp:ident(PTR_ERR),exp:ident(exp)],exp:??(N/H)],statem(N/H),estmt(NONE)],sel_if[exp[grammar(call),exp:ident(IS_ERR),exp:ident(exp)],st_return[exp:ident(exp)],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(exp),ident(ex_nflavors)],exp:const:int(0)],st_return[exp:ident(exp)],estmt(NONE)],statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(gssexp),exp[grammar(call),exp:ident(exp_get_by_name),exp[grammar(record_ptr),exp:ident(rqstp),ident(rq_gssclient)],exp:ident(mnt),exp:ident(dentry),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(rqstp),ident(rq_chandle)]]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(call),exp:ident(PTR_ERR),exp:ident(gssexp)],exp:??(N/H)],st_return[exp:ident(exp)],estmt(NONE)],sel_if[exp:??(N/H),estmt[exp[grammar(call),exp:ident(exp_put),exp:ident(exp)]],estmt(NONE)],st_return[exp:ident(gssexp)]]],def[fname(rqst_exp_find),funtype[fulltype[typec(N/H)],param[reg(),name(rqstp),fulltype[typec(N/H)]],param[reg(),name(fsid_type),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(fsidv),fulltype[typec(N/H)]]],{}stmt[statem(N/H),sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(rqstp),ident(rq_client)],exp:ident(NULL)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(exp_find),exp[grammar(record_ptr),exp:ident(rqstp),ident(rq_client)],exp:ident(fsid_type),exp:ident(fsidv),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(rqstp),ident(rq_chandle)]]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(call),exp:ident(PTR_ERR),exp:ident(exp)],exp:??(N/H)],statem(N/H),estmt(NONE)],sel_if[exp[grammar(call),exp:ident(IS_ERR),exp:ident(exp)],st_return[exp:ident(exp)],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(exp),ident(ex_nflavors)],exp:const:int(0)],st_return[exp:ident(exp)],estmt(NONE)],statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(gssexp),exp[grammar(call),exp:ident(exp_find),exp[grammar(record_ptr),exp:ident(rqstp),ident(rq_gssclient)],exp:ident(fsid_type),exp:ident(fsidv),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(rqstp),ident(rq_chandle)]]]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(call),exp:ident(PTR_ERR),exp:ident(gssexp)],exp:??(N/H)],st_return[exp:ident(exp)],estmt(NONE)],sel_if[exp:??(N/H),estmt[exp[grammar(call),exp:ident(exp_put),exp:ident(exp)]],estmt(NONE)],st_return[exp:ident(gssexp)]]],def[fname(rqst_exp_parent),funtype[fulltype[typec(N/H)],param[reg(),name(rqstp),fulltype[typec(N/H)]],param[reg(),name(mnt),fulltype[typec(N/H)]],param[reg(),name(dentry),fulltype[typec(N/H)]]],{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(dget),exp:ident(dentry)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(rqst_exp_get_by_name),exp:ident(rqstp),exp:ident(mnt),exp:ident(dentry)]]],while[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(eq),exp[grammar(call),exp:ident(PTR_ERR),exp:ident(exp)],exp:??(N/H)],exp:??(N/H)],{}stmt[statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(parent),exp[grammar(call),exp:ident(dget_parent),exp:ident(dentry)]]],estmt[exp[grammar(call),exp:ident(dput),exp:ident(dentry)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(dentry),exp:ident(parent)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(rqst_exp_get_by_name),exp:ident(rqstp),exp:ident(mnt),exp:ident(dentry)]]]]],estmt[exp[grammar(call),exp:ident(dput),exp:ident(dentry)]],st_return[exp:ident(exp)]]],def[fname(exp_pseudoroot),funtype[fulltype[typec(N/H)],param[reg(),name(rqstp),fulltype[typec(N/H)]],param[reg(),name(fhp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(mk_fsid),exp:ident(FSID_NUM),exp:ident(fsidv),exp:const:int(0),exp:const:int(0),exp:const:int(0),exp:ident(NULL)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(exp),exp[grammar(call),exp:ident(rqst_exp_find),exp:ident(rqstp),exp:ident(FSID_NUM),exp:ident(fsidv)]]],sel_if[exp[grammar(call),exp:ident(IS_ERR),exp:ident(exp)],st_return[exp[grammar(call),exp:ident(nfserrno),exp[grammar(call),exp:ident(PTR_ERR),exp:ident(exp)]]],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(rv),exp[grammar(call),exp:ident(fh_compose),exp:ident(fhp),exp:ident(exp),exp[grammar(record_acc),exp[grammar(record_ptr),exp:ident(exp),ident(ex_path)],ident(dentry)],exp:ident(NULL)]]],sel_if[exp:ident(rv),statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(rv),exp[grammar(call),exp:ident(check_nfsd_access),exp:ident(exp),exp:ident(rqstp)]]],statem(N/H),st_return[exp:ident(rv)]]],NCP(N/H),def[fname(e_next),funtype[fulltype[typec(N/H)],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(p),fulltype[typec(N/H)]],param[reg(),name(pos),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(p),exp:ident(SEQ_START_TOKEN)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(hash),exp:const:int(0)]],sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(ch),ident(next)],exp:ident(NULL)],{}stmt[estmt[exp:??(N/H)],estmt[exp[grammar(assign),op_assi(+=),exp:*ref:exp:ident(pos),exp[grammar(binary_arith),aop(<<),exp:const:int(1LL),exp:const:int(32)]]]],{}stmt[estmt[exp:??(N/H)],st_return[exp[grammar(record_ptr),exp:ident(ch),ident(next)]]]]],estmt[exp[grammar(assign),op_assi(&=),exp:*ref:exp:ident(pos),exp:??(N/H)]],while[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp:ident(hash),exp:ident(EXPORT_HASHMAX)],exp[grammar(binary_logi),logiop(eq),exp[grammar(array_acc),exp:ident(export_table),exp:ident(hash)],exp:ident(NULL)]],{}stmt[estmt[exp:??(N/H)],estmt[exp[grammar(assign),op_assi(+=),exp:*ref:exp:ident(pos),exp[grammar(binary_arith),aop(<<),exp:const:int(1LL),exp:const:int(32)]]]]],sel_if[exp[grammar(binary_logi),logiop(??),exp:ident(hash),exp:ident(EXPORT_HASHMAX)],st_return[exp:ident(NULL)],estmt(NONE)],estmt[exp:??(N/H)],st_return[exp[grammar(array_acc),exp:ident(export_table),exp:ident(hash)]]]],NCP(N/H),decl(N/H),def[fname(show_expflags),funtype[fulltype[ctype[btype(void)]],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(flags),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(mask),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[statem(N/H),statem(N/H),for[exp[grammar(assign),simple_assi(=),exp:ident(flg),exp:ident(expflags)],exp[grammar(record_ptr),exp:ident(flg),ident(flag)],exp:??(N/H),{}stmt[sel_if[exp[grammar(binary_arith),aop(&),exp[grammar(record_ptr),exp:ident(flg),ident(flag)],exp:??(N/H)],statem(N/H),estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(state),exp[grammar(cond3),exp[grammar(binary_arith),aop(&),exp[grammar(record_ptr),exp:ident(flg),ident(flag)],exp:ident(flags)],exp:const:int(0),exp:const:int(1)]]],sel_if[exp[grammar(*ref),grammar(exp),grammar(array_acc),exp[grammar(record_ptr),exp:ident(flg),ident(name)],exp:ident(state)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(%s%s),exp[grammar(cond3),exp:??(N/H),exp:const:string(,),exp:const:string()],exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(flg),ident(name)],exp:ident(state)]]],estmt(NONE)]]]]],def[fname(show_secinfo_flags),funtype[fulltype[ctype[btype(void)]],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(flags),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(,)]],estmt[exp[grammar(call),exp:ident(show_expflags),exp:ident(m),exp:ident(flags),exp:ident(NFSEXP_SECINFO_FLAGS)]]]],def[fname(show_secinfo),funtype[fulltype[ctype[btype(void)]],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(exp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),statem(N/H),sel_if[exp[grammar(binary_logi),logiop(eq),exp[grammar(record_ptr),exp:ident(exp),ident(ex_nflavors)],exp:const:int(0)],statem(N/H),estmt(NONE)],for[exp[grammar(assign),simple_assi(=),exp:ident(f),exp[grammar(record_ptr),exp:ident(exp),ident(ex_flavors)]],exp[grammar(binary_logi),logiop(??),exp:ident(f),exp:ident(end)],exp:??(N/H),{}stmt[sel_if[exp[grammar(binary_logi),logiop(or),exp:ident(first),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(f),ident(flags)],exp:ident(lastflags)]],{}stmt[sel_if[exp:??(N/H),estmt[exp[grammar(call),exp:ident(show_secinfo_flags),exp:ident(m),exp:ident(lastflags)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(,sec=%d),exp[grammar(record_ptr),exp:ident(f),ident(pseudoflavor)]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(lastflags),exp[grammar(record_ptr),exp:ident(f),ident(flags)]]]],{}stmt[estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(:%d),exp[grammar(record_ptr),exp:ident(f),ident(pseudoflavor)]]]]]]],estmt[exp[grammar(call),exp:ident(show_secinfo_flags),exp:ident(m),exp:ident(lastflags)]]]],def[fname(exp_flags),funtype[fulltype[ctype[btype(void)]],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(flag),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(fsid),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]],param[reg(),name(anonu),fulltype[typec(N/H)]],param[reg(),name(anong),fulltype[typec(N/H)]],param[reg(),name(fsloc),fulltype[typec(N/H)]]],{}stmt[estmt[exp[grammar(call),exp:ident(show_expflags),exp:ident(m),exp:ident(flag),exp:ident(NFSEXP_ALLFLAGS)]],sel_if[exp[grammar(binary_arith),aop(&),exp:ident(flag),exp:ident(NFSEXP_FSID)],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(,fsid=%d),exp:ident(fsid)]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp:ident(anonu),exp:??(N/H)],exp[grammar(binary_logi),logiop(??),exp:ident(anonu),exp[grammar(binary_arith),aop(-),exp:const:int(0x10000),exp:const:int(2)]]],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(,anonuid=%u),exp:ident(anonu)]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(and),exp[grammar(binary_logi),logiop(??),exp:ident(anong),exp[grammar(binary_arith),aop(-),exp:ident(gid_t),exp:const:int(2)]],exp[grammar(binary_logi),logiop(??),exp:ident(anong),exp[grammar(binary_arith),aop(-),exp:const:int(0x10000),exp:const:int(2)]]],estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(,anongid=%u),exp:ident(anong)]],estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(and),exp:ident(fsloc),exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations_count)],exp:const:int(0)]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(call),exp:ident(seq_printf),exp:ident(m),exp:const:string(,%s=),exp:ident(loctype)]],estmt[exp[grammar(call),exp:ident(seq_escape),exp:ident(m),exp[grammar(record_acc),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations)],exp:const:int(0)],ident(path)],exp:const:string(,;@ \t\n\\)]],estmt[exp[grammar(call),exp:ident(seq_putc),exp:ident(m),exp:const:other(N/H)]],estmt[exp[grammar(call),exp:ident(seq_escape),exp:ident(m),exp[grammar(record_acc),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations)],exp:const:int(0)],ident(hosts)],exp:const:string(,;@ \t\n\\)]],for[exp[grammar(assign),simple_assi(=),exp:ident(i),exp:const:int(1)],exp[grammar(binary_logi),logiop(??),exp:ident(i),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations_count)]],exp:??(N/H),{}stmt[estmt[exp[grammar(call),exp:ident(seq_putc),exp:ident(m),exp:const:other(N/H)]],estmt[exp[grammar(call),exp:ident(seq_escape),exp:ident(m),exp[grammar(record_acc),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations)],exp:ident(i)],ident(path)],exp:const:string(,;@ \t\n\\)]],estmt[exp[grammar(call),exp:ident(seq_putc),exp:ident(m),exp:const:other(N/H)]],estmt[exp[grammar(call),exp:ident(seq_escape),exp:ident(m),exp[grammar(record_acc),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(fsloc),ident(locations)],exp:ident(i)],ident(hosts)],exp:const:string(,;@ \t\n\\)]]]]],estmt(NONE)]]],def[fname(e_show),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(m),fulltype[typec(N/H)]],param[reg(),name(p),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),sel_if[exp[grammar(binary_logi),logiop(eq),exp:ident(p),exp:ident(SEQ_START_TOKEN)],{}stmt[estmt[exp[grammar(call),exp:ident(seq_puts),exp:ident(m),exp:const:string(# Version 1.1\n)]],estmt[exp[grammar(call),exp:ident(seq_puts),exp:ident(m),exp:const:string(# Path Client(Flags) # IPs\n)]],st_return[exp:const:int(0)]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(cache_get),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(exp),ident(h)]]],sel_if[exp[grammar(call),exp:ident(cache_check),exp:&ref:exp:ident(svc_export_cache),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(exp),ident(h)],exp:ident(NULL)],st_return[exp:const:int(0)],estmt(NONE)],estmt[exp[grammar(call),exp:ident(cache_put),exp[grammar(&ref),grammar(exp),grammar(record_ptr),exp:ident(exp),ident(h)],exp:&ref:exp:ident(svc_export_cache)]],st_return[exp[grammar(call),exp:ident(svc_export_show),exp:ident(m),exp:&ref:exp:ident(svc_export_cache),exp:ident(cp)]]]],decl(N/H),def[fname(exp_addclient),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(ncp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],sel_if[exp[grammar(binary_logi),logiop(??),exp[grammar(record_ptr),exp:ident(ncp),ident(cl_naddr)],exp:ident(NFSCLNT_ADDRMAX)],statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(exp_writelock)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(dom),exp[grammar(call),exp:ident(unix_domain_find),exp[grammar(record_ptr),exp:ident(ncp),ident(cl_ident)]]]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],for[exp[grammar(assign),simple_assi(=),exp:ident(i),exp:const:int(0)],exp[grammar(binary_logi),logiop(??),exp:ident(i),exp[grammar(record_ptr),exp:ident(ncp),ident(cl_naddr)]],exp:??(N/H),estmt[exp[grammar(call),exp:ident(auth_unix_add_addr),exp[grammar(array_acc),exp[grammar(record_ptr),exp:ident(ncp),ident(cl_addrlist)],exp:ident(i)],exp:ident(dom)]]],estmt[exp[grammar(call),exp:ident(auth_unix_forget_old),exp:ident(dom)]],estmt[exp[grammar(call),exp:ident(auth_domain_put),exp:ident(dom)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:const:int(0)]],statem(N/H),statem(N/H)]],def[fname(exp_delclient),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(ncp),fulltype[typec(N/H)]]],{}stmt[statem(N/H),statem(N/H),estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp:??(N/H)]],sel_if[exp:??(N/H),statem(N/H),estmt(NONE)],estmt[exp[grammar(call),exp:ident(exp_writelock)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(dom),exp[grammar(call),exp:ident(auth_domain_find),exp[grammar(record_ptr),exp:ident(ncp),ident(cl_ident)]]]],sel_if[exp:ident(dom),{}stmt[estmt[exp[grammar(assign),simple_assi(=),exp:ident(err),exp[grammar(call),exp:ident(auth_unix_forget_old),exp:ident(dom)]]],estmt[exp[grammar(call),exp:ident(auth_domain_put),exp:ident(dom)]]],estmt(NONE)],estmt[exp[grammar(call),exp:ident(exp_writeunlock)]],statem(N/H)]],def[fname(exp_verify_string),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(cp),fulltype[typec(N/H)]],param[reg(),name(max),fulltype[ctype[btype[itype[sgn(signed),base(int)]]]]]],{}stmt[statem(N/H),for[exp[grammar(assign),simple_assi(=),exp:ident(i),exp:const:int(0)],exp[grammar(binary_logi),logiop(??),exp:ident(i),exp:ident(max)],exp:??(N/H),sel_if[exp:??(N/H),st_return[exp:ident(i)],estmt(NONE)]],estmt[exp[grammar(assign),simple_assi(=),exp[grammar(array_acc),exp:ident(cp),exp:ident(i)],exp:const:int(0)]],estmt[exp[grammar(call),exp:ident(printk),exp:const:other(N/H),exp:ident(cp)]],st_return[exp:const:int(0)]]],def[fname(nfsd_export_init),funtype[fulltype[ctype[btype[itype[sgn(signed),base(int)]]]],param[reg(),name(),fulltype[ctype[btype(void)]]]],{}stmt[statem(N/H),estmt[exp[grammar(call),exp:ident(dprintk),exp:const:string(nfsd: initializing export module.\n)]],estmt[exp[grammar(assign),simple_assi(=),exp:ident(rv),exp[grammar(call),exp:ident(cache_register),exp:&ref:exp:ident(svc_export_cache)]]],sel_if[exp:ident(rv),st_return[exp:ident(rv)],estmt(NONE)],estmt[exp[grammar(assign),simple_assi(=),exp:ident(rv),exp[grammar(call),exp:ident(cache_register),exp:&ref:exp:ident(svc_expkey_cache)]]],sel_if[exp:ident(rv),estmt[exp[grammar(call),exp:ident(cache_unregister),exp:&ref:exp:ident(svc_export_cache)]],estmt(NONE)],st_return[exp:ident(rv)]]],def[fname(nfsd_export_flush),funtype[fulltype[ctype[btype(void)]],param[reg(),name(),fulltype[ctype[btype(void)]]]],{}stmt[estmt[exp[grammar(call),exp:ident(exp_writelock)]],estmt[exp[grammar(call),exp:ident(cache_purge),exp:&ref:exp:ident(svc_expkey_cache)]],estmt[exp[grammar(call),exp:ident(cache_purge),exp:&ref:exp:ident(svc_export_cache)]],estmt[exp[grammar(call),exp:ident(exp_writeunlock)]]]],def[fname(nfsd_export_shutdown),funtype[fulltype[ctype[btype(void)]],param[reg(),name(),fulltype[ctype[btype(void)]]]],{}stmt[estmt[exp[grammar(call),exp:ident(dprintk),exp:const:string(nfsd: shutting down export module.\n)]],estmt[exp[grammar(call),exp:ident(exp_writelock)]],estmt[exp[grammar(call),exp:ident(cache_unregister),exp:&ref:exp:ident(svc_expkey_cache)]],estmt[exp[grammar(call),exp:ident(cache_unregister),exp:&ref:exp:ident(svc_export_cache)]],estmt[exp[grammar(call),exp:ident(svcauth_unix_purge)]],estmt[exp[grammar(call),exp:ident(exp_writeunlock)]],estmt[exp[grammar(call),exp:ident(dprintk),exp:const:string(nfsd: export shutdown complete.\n)]]]]]
[Diff] resulting abstract updates: 1
[Main] solution #1
{{{
	exp[grammar(call),exp:ident(seq_path),meta(X0),exp[grammar(record_acc),exp[grammar(record_ptr),meta(X1),meta(X2)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_ptr),meta(X1),meta(X2)],ident(dentry)],meta(X3)] ==> exp[grammar(call),exp:ident(seq_path),meta(X0),exp[grammar(&ref),grammar(exp),grammar(record_ptr),meta(X1),meta(X2)],meta(X3)]
}}}
[Main] solution #2
{{{
	exp[grammar(call),exp:ident(seq_path),meta(X0),exp[grammar(record_acc),exp[grammar(record_ptr),meta(X1),meta(X2)],ident(mnt)],exp[grammar(record_acc),exp[meta(X3),meta(X1),meta(X2)],ident(dentry)],meta(X4)] ==> exp[grammar(call),exp:ident(seq_path),meta(X0),exp[grammar(&ref),grammar(exp),meta(X3),meta(X1),meta(X2)],meta(X4)]
}}}
[Main] solution #3
{{{
	exp[grammar(call),exp:ident(seq_path),meta(X0),exp[grammar(record_acc),exp[meta(X1),meta(X2),meta(X3)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_ptr),meta(X2),meta(X3)],ident(dentry)],meta(X4)] ==> exp[grammar(call),exp:ident(seq_path),meta(X0),exp[grammar(&ref),grammar(exp),meta(X1),meta(X2),meta(X3)],meta(X4)]
}}}
[Main] solution #4
{{{
	exp[grammar(call),exp:ident(seq_path),meta(X0),exp[grammar(record_acc),exp[meta(X1),meta(X2),meta(X3)],ident(mnt)],exp[grammar(record_acc),exp[meta(X1),meta(X2),meta(X3)],ident(dentry)],meta(X4)] ==> exp[grammar(call),exp:ident(seq_path),meta(X0),exp[grammar(&ref),grammar(exp),meta(X1),meta(X2),meta(X3)],meta(X4)]
}}}
[Main] solution #5
{{{
	exp[meta(X0),exp:ident(seq_path),meta(X1),exp[grammar(record_acc),exp[grammar(record_ptr),meta(X2),meta(X3)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_ptr),meta(X2),meta(X3)],ident(dentry)],meta(X4)] ==> exp[meta(X0),exp:ident(seq_path),meta(X1),exp[grammar(&ref),grammar(exp),grammar(record_ptr),meta(X2),meta(X3)],meta(X4)]
}}}
[Main] solution #6
{{{
	exp[meta(X0),exp:ident(seq_path),meta(X1),exp[grammar(record_acc),exp[grammar(record_ptr),meta(X2),meta(X3)],ident(mnt)],exp[grammar(record_acc),exp[meta(X4),meta(X2),meta(X3)],ident(dentry)],meta(X5)] ==> exp[meta(X0),exp:ident(seq_path),meta(X1),exp[grammar(&ref),grammar(exp),meta(X4),meta(X2),meta(X3)],meta(X5)]
}}}
[Main] solution #7
{{{
	exp[meta(X0),exp:ident(seq_path),meta(X1),exp[grammar(record_acc),exp[meta(X2),meta(X3),meta(X4)],ident(mnt)],exp[grammar(record_acc),exp[grammar(record_ptr),meta(X3),meta(X4)],ident(dentry)],meta(X5)] ==> exp[meta(X0),exp:ident(seq_path),meta(X1),exp[grammar(&ref),grammar(exp),meta(X2),meta(X3),meta(X4)],meta(X5)]
}}}
[Main] solution #8
{{{
	exp[meta(X0),exp:ident(seq_path),meta(X1),exp[grammar(record_acc),exp[meta(X2),meta(X3),meta(X4)],ident(mnt)],exp[grammar(record_acc),exp[meta(X2),meta(X3),meta(X4)],ident(dentry)],meta(X5)] ==> exp[meta(X0),exp:ident(seq_path),meta(X1),exp[grammar(&ref),grammar(exp),meta(X2),meta(X3),meta(X4)],meta(X5)]
}}}

Spec. file is: specfile
Parsed two: inode.c.orig, inode.c.new
Parsed two: mconsole_kern.c.orig, mconsole_kern.c.new
Parsed two: dm-table.c.orig, dm-table.c.new
Parsed two: mtdsuper.c.orig, mtdsuper.c.new
Parsed two: mntpt.c.orig, mntpt.c.new
Parsed two: block_dev.c.orig, block_dev.c.new
Parsed two: cifs_dfs_ref.c.orig, cifs_dfs_ref.c.new
Parsed two: pioctl.c.orig, pioctl.c.new
Parsed two: compat.c.orig, compat.c.new
Parsed two: symlink.c.orig, symlink.c.new
Parsed two: dquot.c.orig, dquot.c.new
Parsed two: dentry.c.orig, dentry.c.new
Parsed two: inode.c.orig, inode.c.new
Parsed two: main.c.orig, main.c.new
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Comment
Reading file pair main.c.orig main.c.new
Reading file pair inode.c.orig inode.c.new
Reading file pair dentry.c.orig dentry.c.new
Reading file pair dquot.c.orig dquot.c.new
Reading file pair symlink.c.orig symlink.c.new
Reading file pair compat.c.orig compat.c.new
Reading file pair pioctl.c.orig pioctl.c.new
Reading file pair cifs_dfs_ref.c.orig cifs_dfs_ref.c.new
Reading file pair block_dev.c.orig block_dev.c.new
Reading file pair mntpt.c.orig mntpt.c.new
Reading file pair mtdsuper.c.orig mtdsuper.c.new
Reading file pair dm-table.c.orig dm-table.c.new
Reading file pair mconsole_kern.c.orig mconsole_kern.c.new
Reading file pair inode.c.orig inode.c.new
 no nosto storage[nosto,no] int signed int btype[int] int linux 
[Main] Constructing all safe parts for 14 term pairs
[Main] Making safe parts for pair 1
[Main] terms that changed: 
[Main] abstracted one pair
[Main] Making safe parts for pair 2
[Main] terms that changed: 
[Main] abstracted one pair
[Main] Making safe parts for pair 3
[Main] terms that changed: 
[Main] abstracted one pair
[Main] Making safe parts for pair 4
[Main] terms that changed: 
[Main] abstracted one pair
[Main] Making safe parts for pair 5
[Main] terms that changed: 
[Main] abstracted one pair
[Main] Making safe parts for pair 6
[Main] terms that changed: 
[Main] abstracted one pair
[Main] Making safe parts for pair 7
[Main] terms that changed: 
[Main] abstracted one pair
[Main] Making safe parts for pair 8
[Main] terms that changed: 
[Main] abstracted one pair
[Main] Making safe parts for pair 9
[Main] terms that changed: 
[Main] abstracted one pair
[Main] Making safe parts for pair 10
[Main] terms that changed: 
[Main] abstracted one pair
[Main] Making safe parts for pair 11
[Main] terms that changed: 
[Main] abstracted one pair
[Main] Making safe parts for pair 12
[Main] terms that changed: 
[Main] abstracted one pair
[Main] Making safe parts for pair 13
[Main] terms that changed: 
[Main] abstracted one pair
[Main] Making safe parts for pair 14
[Main] terms that changed: 
[Main] abstracted one pair
[Main] filtering all safe patches.
[Main] Finding unit patches with minimum support at least: 3
[Main] generating solutions...
[Main] min sup = 3
[Main] found 1 solutions
[Main] solution #1
{{{
	stmt[exprstmt[assign[=,(dentry_save:*struct dentry),record_ptr[(nd:*struct nameidata),dentry]]]] ==> stmt[exprstmt[assign[=,(dentry_save:*struct dentry),record_acc[record_ptr[(nd:*struct nameidata),path],dentry]]]]
	stmt[exprstmt[assign[=,(vfsmount_save:*struct vfsmount),record_ptr[(nd:*struct nameidata),mnt]]]] ==> stmt[exprstmt[assign[=,(vfsmount_save:*struct vfsmount),record_acc[record_ptr[(nd:*struct nameidata),path],mnt]]]]
	stmt[exprstmt[assign[=,record_ptr[(nd:*struct nameidata),dentry],(lower_dentry:*struct dentry)]]] ==> stmt[exprstmt[assign[=,record_acc[record_ptr[(nd:*struct nameidata),path],dentry],(lower_dentry:*struct dentry)]]]
	stmt[exprstmt[assign[=,record_ptr[(nd:*struct nameidata),mnt],(lower_mnt:*struct vfsmount)]]] ==> stmt[exprstmt[assign[=,record_acc[record_ptr[(nd:*struct nameidata),path],mnt],(lower_mnt:*struct vfsmount)]]]
	stmt[exprstmt[assign[=,record_ptr[(nd:*struct nameidata),dentry],(dentry_save:*struct dentry)]]] ==> stmt[exprstmt[assign[=,record_acc[record_ptr[(nd:*struct nameidata),path],dentry],(dentry_save:*struct dentry)]]]
	stmt[exprstmt[assign[=,record_ptr[(nd:*struct nameidata),mnt],(vfsmount_save:*struct vfsmount)]]] ==> stmt[exprstmt[assign[=,record_acc[record_ptr[(nd:*struct nameidata),path],mnt],(vfsmount_save:*struct vfsmount)]]]
}}}
